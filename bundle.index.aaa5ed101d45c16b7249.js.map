{"version":3,"file":"bundle.index.aaa5ed101d45c16b7249.js","mappings":"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","sources":["webpack://transformers/webpack/runtime/chunk loaded","webpack://transformers/webpack/runtime/create fake namespace object","webpack://transformers/webpack/runtime/load script","webpack://transformers/./src/App/PageHeader/PageHeader.js","webpack://transformers/./src/App/PageHeader/PageHeader.css?080f","webpack://transformers/./src/App/Dashboard/utils/getCurrentSearchParamsAsJson.js","webpack://transformers/./src/App/Dashboard/MainEditor/constOperations.js","webpack://transformers/./src/App/Dashboard/MainEditor/JotaiState.js","webpack://transformers/./src/utils/lazyLoadLibraries/lazyLoadLibraries.js","webpack://transformers/./src/App/Dashboard/MainEditor/modes/modeCss/configCssFormat.js","webpack://transformers/./src/App/Dashboard/MainEditor/modes/modeCss/configCssMinify.js","webpack://transformers/./src/App/Dashboard/MainEditor/modes/modeCss/configCssToScss.js","webpack://transformers/./src/App/Dashboard/MainEditor/modes/modeCss/index.js","webpack://transformers/./src/App/Dashboard/MainEditor/textUtils.js","webpack://transformers/./src/App/Dashboard/MainEditor/modes/modeCsv/configCsvRemoveFirstColumn.js","webpack://transformers/./src/App/Dashboard/MainEditor/modes/modeCsv/configCsvRemoveLastColumn.js","webpack://transformers/./src/App/Dashboard/MainEditor/modes/modeCsv/configCsvToJson.js","webpack://transformers/./src/App/Dashboard/MainEditor/modes/modeCsv/index.js","webpack://transformers/./src/App/Dashboard/MainEditor/modes/modeHtml/configHtmlFormat.js","webpack://transformers/./src/App/Dashboard/MainEditor/modes/modeHtml/index.js","webpack://transformers/./src/App/Dashboard/MainEditor/modes/modeJson/configJsonFormat.js","webpack://transformers/./src/App/Dashboard/MainEditor/modes/modeJson/configJsonMinify.js","webpack://transformers/./src/App/Dashboard/MainEditor/modes/modeJson/configJsonSort.js","webpack://transformers/./src/App/Dashboard/MainEditor/modes/modeJson/configJsonRemoveProperty.js","webpack://transformers/./src/App/Dashboard/MainEditor/modes/modeJson/configJsonArrayReverse.js","webpack://transformers/./src/App/Dashboard/MainEditor/modes/modeJson/configJsonArrayOfObjectsFlattenObjects.js","webpack://transformers/./src/App/Dashboard/MainEditor/modes/modeJson/configJsonArrayOfObjectsSortByProperty.js","webpack://transformers/./src/App/Dashboard/MainEditor/modes/modeJson/configJsonFixDataTypes.js","webpack://transformers/./src/App/Dashboard/MainEditor/modes/modeJson/configJsonToCsv.js","webpack://transformers/./src/App/Dashboard/MainEditor/modes/modeJson/configJsonToLines.js","webpack://transformers/./src/App/Dashboard/MainEditor/modes/modeJson/index.js","webpack://transformers/./src/App/Dashboard/MainEditor/modes/modeLess/configLessFormat.js","webpack://transformers/./src/App/Dashboard/MainEditor/modes/modeLess/configLessToCss.js","webpack://transformers/./src/App/Dashboard/MainEditor/modes/modeLess/index.js","webpack://transformers/./src/App/Dashboard/MainEditor/modes/modeText/configTextRemoveEmptyLines.js","webpack://transformers/./src/App/Dashboard/MainEditor/modes/modeText/configTextRemoveDuplicates.js","webpack://transformers/./src/App/Dashboard/MainEditor/modes/modeText/configTextSort.js","webpack://transformers/./src/App/Dashboard/MainEditor/modes/modeText/configTextSortCaseInsensitive.js","webpack://transformers/./src/App/Dashboard/MainEditor/modes/modeText/configTextSortNatural.js","webpack://transformers/./src/App/Dashboard/MainEditor/modes/modeText/configTextRandomize.js","webpack://transformers/./src/App/Dashboard/MainEditor/modes/modeText/configTextSortByLength.js","webpack://transformers/./src/App/Dashboard/MainEditor/modes/modeText/configTextReverse.js","webpack://transformers/./src/App/Dashboard/MainEditor/modes/modeText/configTextTrim.js","webpack://transformers/./src/App/Dashboard/MainEditor/modes/modeText/configTextTrimLeft.js","webpack://transformers/./src/App/Dashboard/MainEditor/modes/modeText/configTextTrimRight.js","webpack://transformers/./src/App/Dashboard/MainEditor/modes/modeText/configTextRemoveFirstFewCharacters.js","webpack://transformers/./src/App/Dashboard/MainEditor/modes/modeText/configTextRemoveLastFewCharacters.js","webpack://transformers/./src/App/Dashboard/MainEditor/modes/modeText/configTextRemoveCommaCharacterAtLineEnds.js","webpack://transformers/./src/App/Dashboard/MainEditor/modes/modeText/configTextRemoveQuoteAndApostropheCharacters.js","webpack://transformers/./src/App/Dashboard/MainEditor/modes/modeText/configTextGetStats.js","webpack://transformers/./src/App/Dashboard/MainEditor/modes/modeText/configTextPunycode.js","webpack://transformers/./src/App/Dashboard/MainEditor/modes/modeText/configTextLinesToJsonArray.js","webpack://transformers/./src/App/Dashboard/MainEditor/modes/modeText/index.js","webpack://transformers/./src/App/Dashboard/MainEditor/modes/index.js","webpack://transformers/./src/App/Dashboard/MainEditor/RecentOperations.js","webpack://transformers/./src/App/helperStyles.css?06d8","webpack://transformers/./src/App/Dashboard/MainEditor/MainEditor.css?5fab","webpack://transformers/./src/App/Dashboard/MainEditor/MainEditor.js","webpack://transformers/./src/App/Dashboard/TheEditors.css?b810","webpack://transformers/./src/App/Dashboard/SingleEditor/SingleEditor.js","webpack://transformers/./src/App/Dashboard/SingleEditor/SingleEditor.css?8ce8","webpack://transformers/./src/App/Dashboard/DoubleEditor/DoubleEditor.js","webpack://transformers/./src/App/Dashboard/DoubleEditor/DoubleEditor.css?d54a","webpack://transformers/./src/App/Dashboard/TripleEditor/TripleEditor.css?3bb2","webpack://transformers/./src/App/Dashboard/TripleEditor/TripleEditor.js","webpack://transformers/./src/App/Dashboard/ContentTabs/ContentTabs.js","webpack://transformers/./src/App/Dashboard/ContentTabs/ContentTabs.css?0743","webpack://transformers/./src/App/Dashboard/Dashboard.js","webpack://transformers/./src/App/Dashboard/Dashboard.css?d7b8","webpack://transformers/./src/App/PageFooter/PageFooter.css?9170","webpack://transformers/./src/App/PageFooter/PageFooter.js","webpack://transformers/./src/App/Dialogs/DialogCssContainerQueriesNotSupported.js","webpack://transformers/./src/App/AppDialogs/AppDialogs.js","webpack://transformers/./src/App/App.js","webpack://transformers/./src/App/App.css?43aa","webpack://transformers/./src/App/AppWrapper.js","webpack://transformers/./src/index.js","webpack://transformers/./src/utils/lazyLoadLibraries/before-loading-less.js","webpack://transformers/webpack/bootstrap","webpack://transformers/webpack/runtime/amd define","webpack://transformers/webpack/runtime/compat get default export","webpack://transformers/webpack/runtime/define property getters","webpack://transformers/webpack/runtime/ensure chunk","webpack://transformers/webpack/runtime/get javascript chunk filename","webpack://transformers/webpack/runtime/get mini-css chunk filename","webpack://transformers/webpack/runtime/global","webpack://transformers/webpack/runtime/hasOwnProperty shorthand","webpack://transformers/webpack/runtime/make namespace object","webpack://transformers/webpack/runtime/node module decorator","webpack://transformers/webpack/runtime/publicPath","webpack://transformers/webpack/runtime/jsonp chunk loading","webpack://transformers/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","var inProgress = {};\nvar dataWebpackPrefix = \"transformers:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","import React from 'react';\n\nimport * as styles from './PageHeader.css';\n\nconst PageHeader = function () {\n    return (\n        <div className={styles.PageHeader}>\n            <div\n                style={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'center',\n                    marginTop: 25\n                }}\n            >\n                <h1 style={{ margin: 0, textAlign: 'center' }}>\n                    <span style={{ fontVariant: 'small-caps' }}>\n                        <span style={{ letterSpacing: '0.05em', fontSize: '28px' }}>\n                            {'Transformers: '}\n                        </span>\n                    </span>\n                    <span style={{ fontVariant: 'small-caps' }}>\n                        <span style={{ letterSpacing: '0.05em' }}>\n                            Operations&nbsp;on&nbsp;the&nbsp;Text\n                        </span>\n                    </span>\n                </h1>\n                <h3 style={{ fontSize: 11, margin: '10px 0 0 0', color: '#555', textAlign: 'center' }}>\n                    Operations for Text, List, Set, CSV, JSON, etc\n                </h3>\n            </div>\n        </div>\n    );\n};\n\nexport { PageHeader };\n","// extracted by mini-css-extract-plugin\nvar _1 = \"PageHeader__PageHeader--AAWQ1\";\nexport { _1 as \"PageHeader\" }\n","const getCurrentSearchParamsAsJson = () => {\n    const params = new URLSearchParams(window.location.search);\n    const ob = {};\n    for (const param of params) {\n        ob[param[0]] = param[1];\n    }\n\n    return ob;\n};\n\nexport { getCurrentSearchParamsAsJson };\n","export { default as IconNotAvailable } from '@mui/icons-material/Circle';\n\nexport const\n    mode_css  = 'css',\n    mode_csv  = 'csv',\n    mode_html = 'html',\n    mode_json = 'json',\n    mode_less = 'less',\n    mode_text = 'text';\n\nexport const\n    modes = [\n        mode_css,\n        mode_csv,\n        mode_html,\n        mode_json,\n        mode_less,\n        mode_text\n    ];\n\nexport const defaultRecommendedOperations = [\n    'cssFormat',\n    'csvToJson',\n    'htmlFormat',\n    'jsonFormat',\n    'lessFormat',\n    'textSort'\n];\n\nexport const defaultSelectedOperations = {\n    [mode_css]: 'cssFormat',\n    [mode_csv]: 'csvToJson',\n    [mode_html]: 'htmlFormat',\n    [mode_json]: 'jsonFormat',\n    [mode_less]: 'lessFormat',\n    [mode_text]: 'textSort'\n};\n\n// const availableOperations = {};\n\n// const allOperationsById = {};\n// for (const mode in availableOperations) {\n//     const operationsForMode = availableOperations[mode];\n//     for (const operationId in operationsForMode) {\n//         allOperationsById[operationId] = operationsForMode[operationId];\n//     }\n// }\n\n// for (const mode in availableOperations) {\n//     const operationsForMode = availableOperations[mode];\n//     for (const operationId in operationsForMode) {\n//         operationsForMode[operationId].id = operationId;\n//     }\n// }\n\n// const allOperationIds = Object.keys(allOperationsById);\n\n// export {\n//     availableOperations,\n//     allOperationsById,\n//     allOperationIds\n// };\n","import { atom } from 'jotai';\n\nimport {\n    // allOperationIds,\n\n    defaultRecommendedOperations\n} from './constOperations.js';\n\nconst recentOperationsFromLocalStorage = localStorage.getItem('recentOperations');\n\nlet recentOperations = [];\ntry {\n    recentOperations = JSON.parse(recentOperationsFromLocalStorage);\n    if (!Array.isArray(recentOperations)) {\n        recentOperations = defaultRecommendedOperations;\n    }\n} catch (err) {\n    console.error(err);\n}\n\n// // Remove operations that are not available anymore with that name\n// recentOperations = recentOperations.filter(operation => {\n//     return allOperationIds.includes(operation);\n// });\n// console.log('TODO: FIXME: Bring back this commented out code');\n\nconst recentOperationsAtom = atom(recentOperations);\n\nexport { recentOperationsAtom };\n","import './before-loading-less.js';\n\nexport const lazyLoadLess = async () => {\n    const less = await import('less');\n    return { less };\n};\n\nexport const lazyLoadBeautifyCss = async () => {\n    const { beautifyCss } = await import('helpmate-css/dist/format/beautifyCss.js');\n    return { beautifyCss };\n};\n\nexport const lazyLoadMinifyCss = async () => {\n    const { minifyCss } = await import('helpmate-css/dist/format/minifyCss.js');\n    return { minifyCss };\n};\n\nexport const lazyLoadBeautifyCssAndLess = async () => {\n    const libs = await Promise.all([\n        import('helpmate-css/dist/format/beautifyCss.js'),\n        import('less')\n    ]);\n    const { beautifyCss } = libs[0];\n    const less = libs[1];\n    return {\n        beautifyCss,\n        less\n    };\n};\n\nexport const lazyLoadDifference = async () => {\n    // https://lodash.com/per-method-packages\n    const difference = await import('lodash/difference.js');\n    return { difference: difference.default };\n};\nexport const lazyLoadIntersection = async () => {\n    // https://lodash.com/per-method-packages\n    const intersection = await import('lodash/intersection.js');\n    return { intersection: intersection.default };\n};\nexport const lazyLoadUnion = async () => {\n    // https://lodash.com/per-method-packages\n    const union = await import('lodash/union.js');\n    return { union: union.default };\n};\n\nexport const lazyLoadCssToScss = async () => {\n    const { cssToScss } = await import('helpmate-css/dist/transform/cssToScss.js');\n    return { cssToScss };\n};\n\nexport const lazyLoadPrettierAndParserHtml = async () => {\n    const [\n        prettier,\n        parserHtml\n    ] = await Promise.all([\n        import('prettier'),\n        import('prettier/plugins/html.js')\n    ]);\n    return {\n        prettier,\n        parserHtml\n    };\n};\n","import MoodIcon from '@mui/icons-material/Mood';\n\nimport { lazyLoadBeautifyCss } from '../../../../../utils/lazyLoadLibraries/lazyLoadLibraries.js';\n\nconst configCssFormat = {\n    operationId: 'cssFormat',\n\n    label: 'Format CSS',\n    icon: MoodIcon,\n\n    snippets: [{\n        content: [\n            'body {background-color:#f0f0f0;}',\n            '',\n            'body h1 {color:#000000;}'\n        ].join('\\n')\n    }],\n\n    performOperation: async ({ inputText }) => {\n        const { beautifyCss } = await lazyLoadBeautifyCss();\n        const output = beautifyCss(inputText);\n        return [null, output];\n    },\n\n    extras: [\n        /*\n        // // Have a look at:\n        // //     * https://www.npmjs.com/package/@rjsf/core\n        // //     * https://www.npmjs.com/package/react-hook-form\n        //\n        // customizations: [\n        //     {\n        //         label: 'Indent Type',\n        //         type: 'select',\n        //         children: [\n        //             {\n        //                 type: 'checkbox',\n        //                 label: 'Try detecting first',\n        //                 value: 'detect'\n        //             },\n        //             {\n        //                 type: 'radio',\n        //                 defaultOption: 'space',\n        //                 options: [\n        //                     {\n        //                         label: 'Space',\n        //                         value: 'space',\n        //                         children: [\n        //                             {\n        //                                 label: 'Indent Size',\n        //                                 type: 'number',\n        //                                 defaultValue: 4,\n        //                                 min: 1,\n        //                                 max: 10,\n        //                                 step: 1\n        //                             }\n        //                         ]\n        //                     },\n        //                     {\n        //                         label: 'Tab',\n        //                         value: 'tab'\n        //                     }\n        //                 ]\n        //             }\n        //         ]\n        //     }\n        // ]\n        */\n    ]\n};\n\nexport { configCssFormat };\n","import CompressIcon from '@mui/icons-material/Compress';\n\nimport { lazyLoadMinifyCss } from '../../../../../utils/lazyLoadLibraries/lazyLoadLibraries.js';\n\nconst configCssMinify = {\n    operationId: 'cssMinify',\n\n    label: 'Minify CSS',\n    icon: CompressIcon,\n\n    snippets: [{\n        content: [\n            'body {',\n            '    background-color: #f0f0f0;',\n            '}',\n            '',\n            'body h1 {',\n            '    color: #000000;',\n            '}'\n        ].join('\\n')\n    }],\n\n    performOperation: async ({ inputText }) => {\n        const { minifyCss } = await lazyLoadMinifyCss();\n        const output = minifyCss(inputText);\n        return [null, output];\n    }\n};\n\nexport { configCssMinify };\n","import DataObjectIcon from '@mui/icons-material/DataObject';\n\nimport { lazyLoadCssToScss } from '../../../../../utils/lazyLoadLibraries/lazyLoadLibraries.js';\n\nconst configCssToScss = {\n    operationId: 'cssToScss',\n\n    label: 'CSS to SCSS',\n    icon: DataObjectIcon,\n\n    snippets: [{\n        content: [\n            'body {',\n            '    background-color: #f0f0f0;',\n            '}',\n            '',\n            'body h1 {',\n            '    color: #000000;',\n            '}'\n        ].join('\\n')\n    }],\n\n    performOperation: async ({ inputText }) => {\n        let output;\n        if (inputText.trim() === '') {\n            output = inputText;\n        } else {\n            const { cssToScss } = await lazyLoadCssToScss();\n            output = cssToScss(inputText);\n\n            // TODO: Identify and add note about in which case this might happen\n            if (output === 'Error: no source supplied to csspretty.') {\n                // eslint-disable-next-line no-alert\n                alert('Sorry! The CSS to SCSS conversion failed.\\n\\nPlease try again with some simpler syntax.');\n            }\n        }\n        return [null, output];\n    }\n};\n\nexport { configCssToScss };\n","import { configCssFormat } from './configCssFormat.js';\nimport { configCssMinify } from './configCssMinify.js';\n\nimport { configCssToScss } from './configCssToScss.js';\n\nconst modeCss = {\n    modeId: 'css',\n    modeNameForAceEditor: 'css',\n\n    title: 'CSS',\n\n    icon: null,\n\n    hasSyntaxHighlighting: true,\n\n    snippets: [{\n        content: [\n            'body {',\n            '    background-color: #f0f0f0;',\n            '}',\n            '',\n            'body h1 {',\n            '    color: #000000;',\n            '    font-size: 24px;',\n            '    font-weight: bold;',\n            '    text-align: center;',\n            '}'\n        ].join('\\n')\n    }],\n\n    operations: [\n        {\n            optgroupLabel: 'Format',\n            options: [\n                configCssFormat,\n                configCssMinify\n            ]\n        },\n        {\n            optgroupLabel: 'Convert',\n            options: [\n                configCssToScss\n            ]\n        }\n    ]\n};\n// eslint-disable-next-line unicorn/no-array-reduce\nmodeCss.arrOperations = modeCss.operations.reduce((acc, curr) => {\n    return acc.concat(curr.options);\n}, []);\n// eslint-disable-next-line unicorn/no-array-reduce\nmodeCss.obOperations = modeCss.arrOperations.reduce((acc, curr) => {\n    acc[curr.operationId] = curr;\n    return acc;\n}, {});\n\nexport { modeCss };\n","import { json2csv, csv2json } from 'json-2-csv';\n\nconst removeEmptyLines = function (lines) {\n    const output = lines.filter(Boolean);\n    return output;\n};\n\nconst removeDuplicates = function (lines) {\n    const output = [...new Set(lines)];\n    return output;\n};\n\nconst trimLines = function (lines) {\n    const output = lines.map((line) => {\n        return line.trim();\n    });\n    return output;\n};\nconst trimLinesLeft = function (lines) {\n    const output = lines.map((line) => {\n        return line.trimStart();\n    });\n    return output;\n};\nconst trimLinesRight = function (lines) {\n    const output = lines.map((line) => {\n        return line.trimEnd();\n    });\n    return output;\n};\n\nconst removeMatchingCharacterAtEndFromLine = function (line, char) {\n    if (line.at(-1) === char) {\n        // return line.substring(0, line.length - 1);\n        return line.slice(0, Math.max(0, line.length - 1));\n    }\n    return line;\n};\n\nconst removeCommaCharacterAtEndFromLine = function (line) {\n    return removeMatchingCharacterAtEndFromLine(line, ',');\n};\n\nconst removeCommaCharacterAtEndFromLines = function (lines) {\n    // eslint-disable-next-line unicorn/no-array-callback-reference\n    const output = lines.map(removeCommaCharacterAtEndFromLine);\n    return output;\n};\n\nconst removeQuoteAndApostropheCharactersFromLine = function (line) {\n    return (\n        line\n            .replaceAll('\"', '')\n            .replaceAll(\"'\", '')\n    );\n};\nconst removeQuoteAndApostropheCharactersFromLines = function (lines) {\n    // eslint-disable-next-line unicorn/no-array-callback-reference\n    const output = lines.map(removeQuoteAndApostropheCharactersFromLine);\n    return output;\n};\n\nconst removeLastColumnFromCsvLine = (line) => {\n    const columns = line.split(',');\n    columns.pop();\n    return columns.join(',');\n};\nconst removeLastColumnFromCsvLines = function (lines) {\n    // eslint-disable-next-line unicorn/no-array-callback-reference\n    const output = lines.map(removeLastColumnFromCsvLine);\n    return output;\n};\n\nconst removeFirstColumnFromCsvLine = (line) => {\n    const columns = line.split(',');\n    columns.shift();\n    const output = columns.join(',');\n    return output;\n};\nconst removeFirstColumnFromCsvLines = function (lines) {\n    // eslint-disable-next-line unicorn/no-array-callback-reference\n    const output = lines.map(removeFirstColumnFromCsvLine);\n    return output;\n};\n\nconst csvToJson = function (lines) {\n    const arrJson = csv2json(lines.join('\\n'));\n\n    let output = ['['];\n    for (const [index, obj] of arrJson.entries()) {\n        output.push('\\t' + JSON.stringify(obj) + (index === arrJson.length - 1 ? '' : ','));\n    }\n    output.push(']');\n\n    output = output.join('\\n');\n\n    return output;\n};\n\nconst traverseNode = function (root, transform) {\n    const output = transform(root);\n\n    if (typeof output === 'object') {\n        for (const key in output) {\n            output[key] = traverseNode(output[key], transform);\n        }\n    }\n\n    return output;\n};\n\nconst fixDataTypes = function (json) {\n    const output = traverseNode(json, function (node) {\n        if (typeof node === 'string') {\n            if (node === 'true') {\n                node = true;\n            } else if (node === 'false') {\n                node = false;\n            } else if (node === 'null') {\n                node = null;\n            } else if (String(Number(node)) === node) {\n                if (\n                    String(Number(node)) === 'Infinity' ||\n                    String(Number(node)) === '-Infinity' ||\n                    String(Number(node)) === 'NaN'\n                ) {\n                    // Do nothing\n                } else {\n                    node = Number(node);\n                }\n            }\n        } else if (Array.isArray(node)) {\n            node = node.map((item) => {\n                return fixDataTypes(item);\n            });\n        } else if (typeof node === 'object') {\n            for (const key in node) {\n                node[key] = fixDataTypes(node[key]);\n            }\n        }\n\n        return node;\n    });\n\n    return output;\n};\n\nconst jsonToCsv = async function (json) {\n    const csv = await json2csv(json);\n    return csv;\n};\n\nexport { default as jsonStableStringify } from 'json-stable-stringify';\n\nexport {\n    removeEmptyLines,\n    removeDuplicates,\n\n    trimLines,\n    trimLinesLeft,\n    trimLinesRight,\n    removeCommaCharacterAtEndFromLines,\n    removeQuoteAndApostropheCharactersFromLines,\n\n    removeFirstColumnFromCsvLines,\n    removeLastColumnFromCsvLines,\n\n    csvToJson,\n\n    fixDataTypes,\n    jsonToCsv\n};\n","import FirstPageIcon from '@mui/icons-material/FirstPage';\n\nimport { removeFirstColumnFromCsvLines } from '../../textUtils.js';\n\nconst configCsvRemoveFirstColumn = {\n    operationId: 'csvRemoveFirstColumn',\n\n    label: 'Remove first column',\n    icon: FirstPageIcon,\n\n    operationInputType: 'array-of-strings', // 'text' / 'json' / 'array-of-strings'\n    operationOutputType: 'array-of-strings', // 'text' / 'json' / 'array-of-strings'\n    performOperation: ({ inputArrayOfStrings }) => {\n        const outputText = removeFirstColumnFromCsvLines(inputArrayOfStrings);\n        return [null, outputText];\n    }\n};\n\nexport { configCsvRemoveFirstColumn };\n","import LastPageIcon from '@mui/icons-material/LastPage';\n\nimport { removeLastColumnFromCsvLines } from '../../textUtils.js';\n\nconst configCsvRemoveLastColumn = {\n    operationId: 'csvRemoveLastColumn',\n\n    label: 'Remove last column',\n    icon: LastPageIcon,\n\n    operationInputType: 'array-of-strings', // 'text' / 'json' / 'array-of-strings'\n    operationOutputType: 'array-of-strings', // 'text' / 'json' / 'array-of-strings'\n    performOperation: ({ inputArrayOfStrings }) => {\n        const outputText = removeLastColumnFromCsvLines(inputArrayOfStrings);\n        return [null, outputText];\n    }\n};\n\nexport { configCsvRemoveLastColumn };\n","import DataObjectIcon from '@mui/icons-material/DataObject';\n\nimport { csvToJson } from '../../textUtils.js';\n\nconst configCsvToJson = {\n    operationId: 'csvToJson',\n\n    label: 'CSV to JSON',\n    icon: DataObjectIcon,\n\n    operationInputType: 'array-of-strings', // 'text' / 'json' / 'array-of-strings'\n    operationOutputType: 'array-of-strings', // 'text' / 'json' / 'array-of-strings'\n    performOperation: ({ inputArrayOfStrings }) => {\n        const outputText = csvToJson(inputArrayOfStrings);\n        return [null, outputText];\n    }\n};\n\nexport { configCsvToJson };\n","import { configCsvRemoveFirstColumn } from './configCsvRemoveFirstColumn.js';\nimport { configCsvRemoveLastColumn } from './configCsvRemoveLastColumn.js';\n\nimport { configCsvToJson } from './configCsvToJson.js';\n\nconst modeCsv = {\n    modeId: 'csv',\n    modeNameForAceEditor: 'csv',\n\n    title: 'CSV',\n\n    icon: null,\n\n    hasSyntaxHighlighting: false,\n\n    snippets: [{\n        content: [\n            'name,age,height,course.field',\n            'Chelsea,22,1.85,Engineering',\n            'Bob,21,1.75,Medical',\n            'Alice,20,1.65,Engineering',\n            'David,23,1.95,Medical'\n        ].join('\\n')\n    }],\n\n    operations: [\n        {\n            optgroupLabel: 'Columns',\n            options: [\n                configCsvRemoveFirstColumn, // Remove first column from CSV\n                configCsvRemoveLastColumn   // Remove last column from CSV\n            ]\n        },\n        {\n            optgroupLabel: 'Convert',\n            options: [\n                configCsvToJson             // CSV to JSON\n            ]\n        }\n    ]\n};\n// eslint-disable-next-line unicorn/no-array-reduce\nmodeCsv.arrOperations = modeCsv.operations.reduce((acc, curr) => {\n    return acc.concat(curr.options);\n}, []);\n// eslint-disable-next-line unicorn/no-array-reduce\nmodeCsv.obOperations = modeCsv.arrOperations.reduce((acc, curr) => {\n    acc[curr.operationId] = curr;\n    return acc;\n}, {});\n\nexport { modeCsv };\n","import MoodIcon from '@mui/icons-material/Mood';\n\nimport { lazyLoadPrettierAndParserHtml } from '../../../../../utils/lazyLoadLibraries/lazyLoadLibraries.js';\n\nconst configHtmlFormat = {\n    operationId: 'htmlFormat',\n\n    label: 'Format HTML',\n    icon: MoodIcon,\n\n    snippets: [{\n        content: [\n            '<!DOCTYPE html>',\n            '<html>',\n            '<head>',\n            '    <title>Sample HTML</title>',\n            '  <meta charset=\"utf-8\">',\n            '  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">',\n            '    <link href=\"styles.css\" rel=\"stylesheet\">',\n            '</head>',\n            '<body>',\n            '<header>',\n            '<h1>Welcome to my website</h1>',\n            '<nav>',\n            '<ul>',\n            '<li><a href=\"#about\">About</a></li>',\n            '<li><a href=\"#services\">Services</a></li>',\n            '<li><a href=\"#contact\">Contact</a></li>',\n            '</ul>',\n            '</nav>',\n            '</header>',\n            '<main>',\n            '<section id=\"about\">',\n            '<h2>About Us</h2>',\n            '<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed imperdiet neque ac turpis posuere, quis pharetra lacus sagittis. Integer convallis vel est ac bibendum. Sed laoreet leo eget luctus ultricies.</p>',\n            '</section>',\n            '<section id=\"services\">',\n            '<h2>Our Services</h2>',\n            '<ul>',\n            '<li>Service 1</li>',\n            '<li>Service 2</li>',\n            '<li>Service 3</li>',\n            '</ul>',\n            '</section>',\n            '<section id=\"contact\">',\n            '<h2>Contact Us</h2>',\n            '<form>',\n            '<label for=\"name\">Name:</label>',\n            '<input type=\"text\" id=\"name\" name=\"name\"><br>',\n            '<label for=\"email\">Email:</label>',\n            '<input type=\"email\" id=\"email\" name=\"email\"><br>',\n            '<label for=\"message\">Message:</label>',\n            '<textarea id=\"message\" name=\"message\"></textarea><br>',\n            '<button type=\"submit\">Send</button>',\n            '</form>',\n            '</section>',\n            '</main>',\n            '<footer>',\n            '<p>&copy; MyWebsite.com. All rights reserved.</p>',\n            '</footer>',\n            '</body>',\n            '</html>'\n        ].join('\\n')\n    }],\n\n    performOperation: async ({ inputText }) => {\n        const { prettier, parserHtml } = await lazyLoadPrettierAndParserHtml();\n        const options = {\n            parser: 'html',\n\n            // Use spaces instead of tabs\n            tabWidth: 4,\n\n            plugins: [parserHtml]\n        };\n        const output = await prettier.format(inputText, options);\n        return [null, output];\n    }\n};\n\nexport { configHtmlFormat };\n","import { configHtmlFormat } from './configHtmlFormat.js';\n\nconst modeHtml = {\n    modeId: 'html',\n    modeNameForAceEditor: 'html',\n\n    title: 'HTML',\n\n    icon: null,\n\n    hasSyntaxHighlighting: true,\n\n    snippets: [{\n        content: [\n            '<!DOCTYPE html>',\n            '<html>',\n            '  <head>',\n            '    <title>My Website</title>',\n            '  </head>',\n            '  <body>',\n            '    <h1>Welcome to my website</h1>',\n            '    <p>This is a paragraph of text.</p>',\n            '  </body>',\n            '</html>'\n        ].join('\\n')\n    }],\n\n    operations: [\n        {\n            optgroupLabel: 'Format',\n            options: [\n                configHtmlFormat\n            ]\n        }\n    ]\n};\n// eslint-disable-next-line unicorn/no-array-reduce\nmodeHtml.arrOperations = modeHtml.operations.reduce((acc, curr) => {\n    return acc.concat(curr.options);\n}, []);\n// eslint-disable-next-line unicorn/no-array-reduce\nmodeHtml.obOperations = modeHtml.arrOperations.reduce((acc, curr) => {\n    acc[curr.operationId] = curr;\n    return acc;\n}, {});\n\nexport { modeHtml };\n","import MoodIcon from '@mui/icons-material/Mood';\n\nconst configJsonFormat = {\n    operationId: 'jsonFormat',\n\n    label: 'Format JSON',\n    icon: MoodIcon,\n\n    snippets: [{\n        content: [\n            '{',\n            '    \"data\": [',\n            '        { \"name\": \"Chelsea\", \"age\": 22, \"height\": 1.85 },',\n            '        { \"name\": \"Bob\",     \"age\": 21, \"height\": 1.75 },',\n            '        { \"name\": \"Alice\",   \"age\": 20, \"height\": 1.65 },',\n            '        { \"name\": \"David\",   \"age\": 23, \"height\": 1.95 }',\n            '    ]',\n            '}'\n        ].join('\\n')\n    }],\n\n    operationInputType: 'json', // 'text' / 'json' / 'array-of-strings'\n    performOperation: ({ inputJson }) => {\n        const output = JSON.stringify(inputJson, null, '\\t');\n        return [null, output];\n    }\n};\n\nexport { configJsonFormat };\n","import CompressIcon from '@mui/icons-material/Compress';\n\nconst configJsonMinify = {\n    operationId: 'jsonMinify',\n\n    label: 'Minify JSON',\n    icon: CompressIcon,\n\n    operationInputType: 'json', // 'text' / 'json' / 'array-of-strings'\n    performOperation: ({ inputJson }) => {\n        const output = JSON.stringify(inputJson);\n        return [null, output];\n    }\n};\n\nexport { configJsonMinify };\n","/* eslint-disable @stylistic/no-tabs */\n\nimport CategoryIcon from '@mui/icons-material/Category';\n\nimport { jsonStableStringify } from '../../textUtils.js';\n\nconst configJsonSort = {\n    operationId: 'jsonSort',\n\n    label: 'Sort JSON',\n    icon: CategoryIcon,\n\n    snippets: [{\n        content: [\n            '[',\n            '\t{',\n            '\t\t\"name\": \"Chelsea\",',\n            '\t\t\"age\": 22,',\n            '\t\t\"height\": 1.85',\n            '\t},',\n            '\t{',\n            '\t\t\"name\": \"Bob\",',\n            '\t\t\"age\": 21,',\n            '\t\t\"height\": 1.75',\n            '\t}',\n            ']'\n        ].join('\\n')\n    }],\n\n    operationInputType: 'json', // 'text' / 'json' / 'array-of-strings'\n    performOperation: ({ inputJson }) => {\n        const output = jsonStableStringify(inputJson, { space: '\\t' });\n        return [null, output];\n    }\n};\n\nexport { configJsonSort };\n","/* eslint-disable @stylistic/no-tabs */\n\nimport PlaylistRemoveIcon from '@mui/icons-material/PlaylistRemove';\n\n// Remove a property from a JSON object recursively\n// TODO: Optimize this function\n// TODO: Verify that this function works as expected for all cases\nconst removePropertyRecursively = (obj, propertyName) => {\n    // eslint-disable-next-line no-prototype-builtins\n    if (obj.hasOwnProperty(propertyName)) {\n        delete obj[propertyName];\n    } else {\n        for (const key of Object.keys(obj)) {\n            if (typeof obj[key] === 'object') {\n                removePropertyRecursively(obj[key], propertyName);\n            } else if (Array.isArray(obj[key])) {\n                for (const item of obj[key]) {\n                    if (typeof item === 'object') {\n                        removePropertyRecursively(item, propertyName);\n                    } else {\n                        // Do nothing\n                    }\n                }\n            } else {\n                // Do nothing\n            }\n        }\n    }\n};\n\nconst configJsonRemoveProperty = {\n    operationId: 'jsonRemoveProperty',\n\n    label: 'Remove property',\n    icon: PlaylistRemoveIcon,\n\n    snippets: [{\n        content: [\n            '[',\n            '\t{',\n            '\t\t\"name\": \"Chelsea\",',\n            '\t\t\"age\": 22,',\n            '\t\t\"height\": 1.85',\n            '\t},',\n            '\t{',\n            '\t\t\"name\": \"Bob\",',\n            '\t\t\"age\": 21,',\n            '\t\t\"height\": 1.75',\n            '\t}',\n            ']'\n        ].join('\\n')\n    }],\n\n    operationInputType: 'json', // 'text' / 'json' / 'array-of-strings'\n    operationOutputType: 'json', // 'text' / 'json' / 'array-of-strings'\n    performOperation: ({ inputJson }) => {\n        // eslint-disable-next-line no-alert\n        const propertyName = prompt('Please enter the name of the property to remove:');\n        if (propertyName) {\n            const output = inputJson;\n            removePropertyRecursively(output, propertyName);\n            return [null, output];\n        } else {\n            return [new Error('Please provide a property name.')];\n        }\n    }\n};\n\nexport { configJsonRemoveProperty };\n","/* eslint-disable @stylistic/no-tabs */\n\nimport SwapVertIcon from '@mui/icons-material/SwapVert';\n\nconst configJsonArrayReverse = {\n    operationId: 'jsonArrayReverse',\n\n    label: 'Reverse',\n    icon: SwapVertIcon,\n\n    snippets: [{\n        content: [\n            '[',\n            '\t{',\n            '\t\t\"name\": \"Alice\",',\n            '\t\t\"age\": 20',\n            '\t},',\n            '\t{',\n            '\t\t\"name\": \"Bob\",',\n            '\t\t\"age\": 21',\n            '\t},',\n            '\t{',\n            '\t\t\"name\": \"Chelsea\",',\n            '\t\t\"age\": 22',\n            '\t},',\n            '\t{',\n            '\t\t\"name\": \"David\",',\n            '\t\t\"age\": 23',\n            '\t}',\n            ']'\n        ].join('\\n')\n    }],\n\n    operationInputType: 'json', // 'text' / 'json' / 'array-of-strings'\n    operationOutputType: 'json', // 'text' / 'json' / 'array-of-strings'\n    performOperation: ({ inputJson }) => {\n        if (!Array.isArray(inputJson)) {\n            return [new Error('Please provide an array as the input.')];\n        }\n\n        const output = inputJson;\n        output.reverse();\n        return [null, output];\n    }\n};\n\nexport { configJsonArrayReverse };\n","import LinearScaleIcon from '@mui/icons-material/LinearScale';\n\n// Flatten an array of objects recursively\n/*\n    // Sample input:\n    [\n        {\n            \"propA\": \"a\",\n            \"propB\": {\n                \"propC\": \"c\",\n                \"propD\": {\n                    \"propE\": \"e\"\n                }\n            }\n        },\n        {\n            \"prop1\": 1,\n            \"prop2\": {\n                \"prop3\": 3,\n                \"prop4\": {\n                    \"prop5\": 5\n                }\n            }\n        }\n    ]\n\n    // Sample output:\n    [\n        {\n            \"propA\": \"a\",\n            \"propB.propC\": \"c\",\n            \"propB.propD.propE\": \"e\"\n        },\n        {\n            \"prop1\": 1,\n            \"prop2.prop3\": 3,\n            \"prop2.prop4.prop5\": 5\n        }\n    ]\n*/\nconst flattenObjectsRecursively = (obj, parentKey) => {\n    let output = {};\n\n    for (const key of Object.keys(obj)) {\n        const value = obj[key];\n        const newKey = parentKey ? `${parentKey}.${key}` : key;\n\n        if (typeof value === 'object') {\n            output = {\n                ...output,\n                ...flattenObjectsRecursively(value, newKey)\n            };\n        } else {\n            output[newKey] = value;\n        }\n    }\n\n    return output;\n};\n\nconst configJsonArrayOfObjectsFlattenObjects = {\n    operationId: 'jsonArrayOfObjectsFlattenObjects',\n\n    label: 'Flatten objects',\n    icon: LinearScaleIcon,\n\n    snippets: [{\n        content: [\n            '[',\n            '    {',\n            '        \"propA\": \"a\",',\n            '        \"propB\": {',\n            '            \"propC\": \"c\",',\n            '            \"propD\": {',\n            '                \"propE\": \"e\"',\n            '            }',\n            '        }',\n            '    },',\n            '    {',\n            '        \"prop1\": 1,',\n            '        \"prop2\": {',\n            '            \"prop3\": 3,',\n            '            \"prop4\": {',\n            '                \"prop5\": 5',\n            '            }',\n            '        }',\n            '    }',\n            ']'\n        ].join('\\n')\n    }],\n\n    operationInputType: 'json', // 'text' / 'json' / 'array-of-strings'\n    operationOutputType: 'json', // 'text' / 'json' / 'array-of-strings'\n    performOperation: ({ inputJson }) => {\n        if (!Array.isArray(inputJson)) {\n            return [new Error('Please provide an array of objects as the input.')];\n        }\n\n        const output = inputJson.map((item) => flattenObjectsRecursively(item));\n\n        return [null, output];\n    }\n};\n\nexport { configJsonArrayOfObjectsFlattenObjects };\n","/* eslint-disable @stylistic/no-tabs */\n\nimport CategoryIcon from '@mui/icons-material/Category';\n\nconst configJsonArrayOfObjectsSortByProperty = {\n    operationId: 'jsonArrayOfObjectsSortByProperty',\n\n    label: 'Sort by property',\n    icon: CategoryIcon,\n\n    snippets: [{\n        content: [\n            '[',\n            '\t{',\n            '\t\t\"name\": \"Chelsea\",',\n            '\t\t\"rank\": 2',\n            '\t},',\n            '\t{',\n            '\t\t\"name\": \"Bob\",',\n            '\t\t\"rank\": 3',\n            '\t},',\n            '\t{',\n            '\t\t\"name\": \"Alice\",',\n            '\t\t\"rank\": 4',\n            '\t},',\n            '\t{',\n            '\t\t\"name\": \"David\",',\n            '\t\t\"rank\": 1',\n            '\t}',\n            ']'\n        ].join('\\n')\n    }],\n\n    operationInputType: 'json', // 'text' / 'json' / 'array-of-strings'\n    operationOutputType: 'json', // 'text' / 'json' / 'array-of-strings'\n    performOperation: ({ inputJson }) => {\n        let output;\n\n        // Sort an array of objects by a property\n        // eslint-disable-next-line no-alert\n        const propertyName = prompt('Please enter the name of the property to be sorted by:');\n        if (propertyName) {\n            output = inputJson;\n            output.sort((a, b) => {\n                if (a[propertyName] < b[propertyName]) {\n                    return -1;\n                }\n                if (a[propertyName] > b[propertyName]) {\n                    return 1;\n                }\n                return 0;\n            });\n        } else {\n            return [new Error('Please provide a property name.')];\n        }\n\n        return [null, output];\n    }\n};\n\nexport { configJsonArrayOfObjectsSortByProperty };\n","/* eslint-disable @stylistic/no-tabs */\n\nimport BuildIcon from '@mui/icons-material/Build';\n\nimport { fixDataTypes } from '../../textUtils.js';\n\nconst configJsonFixDataTypes = {\n    operationId: 'jsonFixDataTypes',\n\n    label: 'Fix data types',\n    icon: BuildIcon,\n\n    snippets: [{\n        content: [\n            '{',\n            '\t\"profile\": {',\n            '\t\t\"name\": \"Alice\",',\n            '\t\t\"age\": \"20\",',\n            '\t\t\"height\": \"1.65\",',\n            '\t\t\"weight\": \"null\",',\n            '\t\t\"isStudent\": \"true\"',\n            '\t}',\n            '}'\n        ].join('\\n')\n    }],\n\n    operationInputType: 'json', // 'text' / 'json' / 'array-of-strings'\n    operationOutputType: 'json', // 'text' / 'json' / 'array-of-strings'\n    performOperation: ({ inputJson }) => {\n        const output = fixDataTypes(inputJson);\n        return [null, output];\n    }\n};\n\nexport { configJsonFixDataTypes };\n","import AppsIcon from '@mui/icons-material/Apps';\n\nimport { jsonToCsv } from '../../textUtils.js';\n\nconst configJsonToCsv = {\n    operationId: 'jsonToCsv',\n\n    label: 'JSON to CSV',\n    icon: AppsIcon,\n\n    snippets: [{\n        content: [\n            '[',\n            '    { \"name\": \"Chelsea\", \"age\": 22, \"height\": 1.85, \"course\": { \"field\": \"Engineering\" } },',\n            '    { \"name\": \"Bob\",     \"age\": 21, \"height\": 1.75, \"course\": { \"field\": \"Medical\"     } },',\n            '    { \"name\": \"Alice\",   \"age\": 20, \"height\": 1.65, \"course\": { \"field\": \"Engineering\" } },',\n            '    { \"name\": \"David\",   \"age\": 23, \"height\": 1.95, \"course\": { \"field\": \"Medical\"     } }',\n            ']'\n        ].join('\\n')\n    }],\n\n    operationInputType: 'json', // 'text' / 'json' / 'array-of-strings'\n    performOperation: async ({ inputJson }) => {\n        const output = await jsonToCsv(inputJson);\n        return [null, output];\n    }\n};\n\nexport { configJsonToCsv };\n","import ReorderIcon from '@mui/icons-material/Reorder';\n\nconst configJsonToLines = {\n    operationId: 'jsonToLines',\n\n    label: 'JSON to Lines',\n    icon: ReorderIcon,\n\n    snippets: [{\n        content: [\n            '[',\n            '    \"Alice\",',\n            '    \"Bob\",',\n            '    \"Chelsea\",',\n            '    \"David\"',\n            ']'\n        ].join('\\n')\n    }],\n\n    operationInputType: 'json', // 'text' / 'json' / 'array-of-strings'\n    performOperation: ({ inputJson }) => {\n        if (\n            Array.isArray(inputJson) &&\n            inputJson.every((item) => typeof item === 'string')\n        ) {\n            const output = inputJson.join('\\n');\n            return [null, output];\n        } else {\n            return [new Error('Please provide an Array of Strings as the input.')];\n        }\n    }\n};\n\nexport { configJsonToLines };\n","import { configJsonFormat } from './configJsonFormat.js';\nimport { configJsonMinify } from './configJsonMinify.js';\n\nimport { configJsonSort } from './configJsonSort.js';\n\nimport { configJsonRemoveProperty } from './configJsonRemoveProperty.js';\n\nimport { configJsonArrayReverse } from './configJsonArrayReverse.js';\n\nimport { configJsonArrayOfObjectsFlattenObjects } from './configJsonArrayOfObjectsFlattenObjects.js';\nimport { configJsonArrayOfObjectsSortByProperty } from './configJsonArrayOfObjectsSortByProperty.js';\n\nimport { configJsonFixDataTypes } from './configJsonFixDataTypes.js';\n\nimport { configJsonToCsv } from './configJsonToCsv.js';\nimport { configJsonToLines } from './configJsonToLines.js';\n\nconst modeJson = {\n    modeId: 'json',\n    modeNameForAceEditor: 'json',\n\n    title: 'JSON',\n\n    icon: null,\n\n    hasSyntaxHighlighting: true,\n\n    snippets: [{\n        content: [\n            '{',\n            '    \"data\": [',\n            '        { \"name\": \"Chelsea\", \"age\": 22, \"height\": 1.85 },',\n            '        { \"name\": \"Bob\",     \"age\": 21, \"height\": 1.75 },',\n            '        { \"name\": \"Alice\",   \"age\": 20, \"height\": 1.65 },',\n            '        { \"name\": \"David\",   \"age\": 23, \"height\": 1.95 }',\n            '    ]',\n            '}'\n        ].join('\\n')\n    }],\n\n    operations: [\n        {\n            optgroupLabel: 'Format',\n            options: [\n                configJsonFormat,\n                configJsonMinify\n            ]\n        },\n        {\n            optgroupLabel: 'Sort',\n            options: [\n                configJsonSort\n            ]\n        },\n        {\n            optgroupLabel: 'Edit',\n            options: [\n                configJsonRemoveProperty\n            ]\n        },\n        {\n            optgroupLabel: 'Array',\n            options: [\n                configJsonArrayReverse\n            ]\n        },\n        {\n            optgroupLabel: 'Array of objects',\n            options: [\n                configJsonArrayOfObjectsFlattenObjects,\n                configJsonArrayOfObjectsSortByProperty\n            ]\n        },\n        {\n            optgroupLabel: 'Fix',\n            options: [\n                configJsonFixDataTypes\n            ]\n        },\n        {\n            optgroupLabel: 'Convert',\n            options: [\n                configJsonToCsv,\n                configJsonToLines\n            ]\n        }\n    ]\n};\n// eslint-disable-next-line unicorn/no-array-reduce\nmodeJson.arrOperations = modeJson.operations.reduce((acc, curr) => {\n    return acc.concat(curr.options);\n}, []);\n// eslint-disable-next-line unicorn/no-array-reduce\nmodeJson.obOperations = modeJson.arrOperations.reduce((acc, curr) => {\n    acc[curr.operationId] = curr;\n    return acc;\n}, {});\n\nexport { modeJson };\n","import MoodIcon from '@mui/icons-material/Mood';\n\nimport { lazyLoadBeautifyCss } from '../../../../../utils/lazyLoadLibraries/lazyLoadLibraries.js';\n\nconst configLessFormat = {\n    operationId: 'lessFormat',\n\n    label: 'Format LESS',\n    icon: MoodIcon,\n\n    snippets: [{\n        content: [\n            '@color: #444;',\n            '@headingSize: 24px;',\n            '',\n            'body {',\n            '    color: @color;',\n            '',\n            '    a { color: @color; }',\n            '',\n            '    h1 { font-size: @headingSize; }',\n            '}'\n        ].join('\\n')\n    }],\n\n    performOperation: async ({ inputText }) => {\n        const { beautifyCss } = await lazyLoadBeautifyCss();\n\n        const output = beautifyCss(inputText);\n        return [null, output];\n    }\n};\n\nexport { configLessFormat };\n","import DataObjectIcon from '@mui/icons-material/DataObject';\n\nimport { lazyLoadBeautifyCssAndLess } from '../../../../../utils/lazyLoadLibraries/lazyLoadLibraries.js';\n\nconst configLessToCss = {\n    operationId: 'lessToCss',\n\n    label: 'LESS to CSS',\n    icon: DataObjectIcon,\n\n    snippets: [{\n        content: [\n            '@color: #444;',\n            '@headingSize: 24px;',\n            '',\n            'body {',\n            '    color: @color;',\n            '',\n            '    a {',\n            '        color: @color;',\n            '    }',\n            '',\n            '    h1 {',\n            '        font-size: @headingSize;',\n            '    }',\n            '}'\n        ].join('\\n')\n    }],\n\n    performOperation: async ({ inputText }) => {\n        let err = null;\n        let output;\n        const extraInfo = {};\n\n        if (inputText.trim() === '') {\n            output = inputText;\n        } else {\n            try {\n                const {\n                    beautifyCss,\n                    less\n                } = await lazyLoadBeautifyCssAndLess();\n\n                const renderedOutput = await less.render(inputText);\n                output = renderedOutput.css;\n\n                // By default, \"less.render()\" provides the output with indentation of 2 space characters\n                output = beautifyCss(output);\n            } catch (e) {\n                err = new Error(e.message + `\\n(Line ${e.line}, Column ${e.column}) / (Character ${e.index})`);\n                output = null;\n\n                const moveCursorTo = {\n                    row: e.line - 1,\n                    column: e.column,\n\n                    position: e.index\n                };\n                extraInfo.moveCursorTo = moveCursorTo;\n            }\n        }\n\n        return [err, output, extraInfo];\n    }\n};\n\nexport { configLessToCss };\n","import { configLessFormat } from './configLessFormat.js';\n\nimport { configLessToCss } from './configLessToCss.js';\n\nconst modeLess = {\n    modeId: 'less',\n    modeNameForAceEditor: 'less',\n\n    title: 'LESS',\n\n    icon: null,\n\n    hasSyntaxHighlighting: true,\n\n    snippets: [{\n        content: [\n            '@color: #444;',\n            '',\n            'body {',\n            '    color: @color;',\n            '',\n            '    a {',\n            '        color: @color;',\n            '    }',\n            '}'\n        ].join('\\n')\n    }],\n\n    operations: [\n        {\n            optgroupLabel: 'Format',\n            options: [\n                configLessFormat\n            ]\n        },\n        {\n            optgroupLabel: 'Convert',\n            options: [\n                configLessToCss\n            ]\n        }\n    ]\n};\n// eslint-disable-next-line unicorn/no-array-reduce\nmodeLess.arrOperations = modeLess.operations.reduce((acc, curr) => {\n    return acc.concat(curr.options);\n}, []);\n// eslint-disable-next-line unicorn/no-array-reduce\nmodeLess.obOperations = modeLess.arrOperations.reduce((acc, curr) => {\n    acc[curr.operationId] = curr;\n    return acc;\n}, {});\n\nexport { modeLess };\n","import SettingsEthernetIcon from '@mui/icons-material/SettingsEthernet';\n\nimport { removeEmptyLines } from '../../textUtils.js';\n\nconst configTextRemoveEmptyLines = {\n    operationId: 'textRemoveEmptyLines',\n\n    label: 'Remove empty lines',\n    icon: SettingsEthernetIcon,\n\n    snippets: [{\n        content: [\n            'Chelsea',\n            '',\n            'Bob',\n            '',\n            'Alice',\n            '',\n            'David'\n        ].join('\\n')\n    }],\n\n    operationInputType: 'array-of-strings', // 'text' / 'json' / 'array-of-strings'\n    operationOutputType: 'array-of-strings', // 'text' / 'json' / 'array-of-strings'\n    performOperation: ({ inputArrayOfStrings }) => {\n        const outputArrayOfStrings = removeEmptyLines(inputArrayOfStrings);\n        return [null, outputArrayOfStrings];\n    }\n};\n\nexport { configTextRemoveEmptyLines };\n","import CopyAllIcon from '@mui/icons-material/CopyAll';\n\nimport { removeDuplicates } from '../../textUtils.js';\n\nconst configTextRemoveDuplicates = {\n    operationId: 'textRemoveDuplicates',\n\n    label: 'Remove duplicates',\n    icon: CopyAllIcon,\n\n    snippets: [{\n        content: [\n            'Chelsea',\n            'Chelsea',\n            'Bob',\n            'Alice',\n            'David',\n            'Alice'\n        ].join('\\n')\n    }],\n\n    operationInputType: 'array-of-strings', // 'text' / 'json' / 'array-of-strings'\n    operationOutputType: 'array-of-strings', // 'text' / 'json' / 'array-of-strings'\n    performOperation: ({ inputArrayOfStrings }) => {\n        const outputArrayOfStrings = removeDuplicates(inputArrayOfStrings);\n        return [null, outputArrayOfStrings];\n    }\n};\n\nexport { configTextRemoveDuplicates };\n","import SortIcon from '@mui/icons-material/Sort';\n\nconst configTextSort = {\n    operationId: 'textSort',\n\n    label: 'Sort',\n    icon: SortIcon,\n\n    snippets: [{\n        content: [\n            'Chelsea',\n            'Bob',\n            'Alice',\n            'David'\n        ].join('\\n')\n    }],\n\n    operationInputType: 'array-of-strings', // 'text' / 'json' / 'array-of-strings'\n    operationOutputType: 'array-of-strings', // 'text' / 'json' / 'array-of-strings'\n    performOperation: ({ inputArrayOfStrings }) => {\n        const outputArrayOfStrings = inputArrayOfStrings;\n        outputArrayOfStrings.sort();\n        return [null, outputArrayOfStrings];\n    }\n};\n\nexport { configTextSort };\n","import AbcIcon from '@mui/icons-material/Abc';\n\nconst configTextSortCaseInsensitive = {\n    operationId: 'textSortCaseInsensitive',\n\n    label: 'Case-insensitive sort',\n    icon: AbcIcon,\n\n    snippets: [{\n        content: [\n            'Chelsea',\n            'dave',\n            'Bob',\n            'Alice',\n            'David',\n            'angel',\n            'alice'\n        ].join('\\n')\n    }],\n\n    operationInputType: 'array-of-strings', // 'text' / 'json' / 'array-of-strings'\n    operationOutputType: 'array-of-strings', // 'text' / 'json' / 'array-of-strings'\n    performOperation: ({ inputArrayOfStrings }) => {\n        const outputArrayOfStrings = inputArrayOfStrings;\n        outputArrayOfStrings.sort((a, b) => {\n            return a.toLowerCase().localeCompare(b.toLowerCase());\n        });\n\n        return [null, outputArrayOfStrings];\n    }\n};\n\nexport { configTextSortCaseInsensitive };\n","import ParkIcon from '@mui/icons-material/Park';\n\nconst configTextSortNatural = {\n    operationId: 'textSortNatural',\n\n    label: 'Natural sort',\n    icon: ParkIcon,\n\n    snippets: [{\n        content: [\n            '12 apples',\n            '10 bananas',\n            '7 cherries',\n            '5 dates'\n        ].join('\\n')\n    }],\n\n    operationInputType: 'array-of-strings', // 'text' / 'json' / 'array-of-strings'\n    operationOutputType: 'array-of-strings', // 'text' / 'json' / 'array-of-strings'\n    performOperation: ({ inputArrayOfStrings }) => {\n        const outputArrayOfStrings = inputArrayOfStrings;\n        outputArrayOfStrings.sort((a, b) => {\n            return a.localeCompare(b, undefined, { numeric: true });\n        });\n        return [null, outputArrayOfStrings];\n    }\n};\n\nexport { configTextSortNatural };\n","import ShuffleOnIcon from '@mui/icons-material/ShuffleOn';\n\nconst configTextRandomize = {\n    operationId: 'textRandomize',\n\n    label: 'Randomize',\n    icon: ShuffleOnIcon,\n\n    snippets: [{\n        content: [\n            'Alice',\n            'Bob',\n            'Chelsea',\n            'David'\n        ].join('\\n')\n    }],\n\n    operationInputType: 'array-of-strings', // 'text' / 'json' / 'array-of-strings'\n    operationOutputType: 'array-of-strings', // 'text' / 'json' / 'array-of-strings'\n    performOperation: ({ inputArrayOfStrings }) => {\n        const outputArrayOfStrings = inputArrayOfStrings;\n        outputArrayOfStrings.sort(() => Math.random() - 0.5);\n        return [null, outputArrayOfStrings];\n    }\n};\n\nexport { configTextRandomize };\n","import TextRotationAngledownIcon from '@mui/icons-material/TextRotationAngledown';\n\nconst configTextSortByLength = {\n    operationId: 'textSortByLength',\n\n    label: 'Sort by length',\n    icon: TextRotationAngledownIcon,\n\n    snippets: [{\n        content: [\n            'David',\n            'Bob',\n            'Chelsea',\n            'Alice'\n        ].join('\\n')\n    }],\n\n    operationInputType: 'array-of-strings', // 'text' / 'json' / 'array-of-strings'\n    operationOutputType: 'array-of-strings', // 'text' / 'json' / 'array-of-strings'\n    performOperation: ({ inputArrayOfStrings }) => {\n        const outputArrayOfStrings = inputArrayOfStrings;\n\n        // Sort by string length\n        outputArrayOfStrings.sort((a, b) => {\n            if (a.length === b.length) {\n                if (a < b) {\n                    return -1;\n                } else if (a > b) {\n                    return 1;\n                } else {\n                    return 0;\n                }\n            } else {\n                return a.length - b.length;\n            }\n        });\n\n        return [null, outputArrayOfStrings];\n    }\n};\n\nexport { configTextSortByLength };\n","import KeyboardDoubleArrowDownIcon from '@mui/icons-material/KeyboardDoubleArrowDown';\n\nconst configTextReverse = {\n    operationId: 'textReverse',\n\n    label: 'Reverse',\n    icon: KeyboardDoubleArrowDownIcon,\n\n    snippets: [{\n        content: [\n            'Alice',\n            'Bob',\n            'Chelsea',\n            'David'\n        ].join('\\n')\n    }],\n\n    operationInputType: 'array-of-strings', // 'text' / 'json' / 'array-of-strings'\n    operationOutputType: 'array-of-strings', // 'text' / 'json' / 'array-of-strings'\n    performOperation: ({ inputArrayOfStrings }) => {\n        const outputArrayOfStrings = inputArrayOfStrings;\n        outputArrayOfStrings.reverse();\n        return [null, outputArrayOfStrings];\n    }\n};\n\nexport { configTextReverse };\n","import MultipleStopIcon from '@mui/icons-material/MultipleStop';\n\nimport { trimLines } from '../../textUtils.js';\n\nconst configTextTrim = {\n    operationId: 'textTrim',\n\n    label: 'Trim lines',\n    icon: MultipleStopIcon,\n\n    snippets: [{\n        content: [\n            ' Alice ',\n            '    Bob  ',\n            'Chelsea    ',\n            '   David'\n        ].join('\\n')\n    }],\n\n    operationInputType: 'array-of-strings', // 'text' / 'json' / 'array-of-strings'\n    operationOutputType: 'array-of-strings', // 'text' / 'json' / 'array-of-strings'\n    performOperation: ({ inputArrayOfStrings }) => {\n        const outputArrayOfStrings = trimLines(inputArrayOfStrings);\n        return [null, outputArrayOfStrings];\n    }\n};\n\nexport { configTextTrim };\n","import ArrowBackIcon from '@mui/icons-material/ArrowBack';\n\nimport { trimLinesLeft } from '../../textUtils.js';\n\nconst configTextTrimLeft = {\n    operationId: 'textTrimLeft',\n\n    label: 'Trim lines from left',\n    icon: ArrowBackIcon,\n\n    snippets: [{\n        content: [\n            ' Alice ',\n            '    Bob  ',\n            'Chelsea    ',\n            '   David'\n        ].join('\\n')\n    }],\n\n    operationInputType: 'array-of-strings', // 'text' / 'json' / 'array-of-strings'\n    operationOutputType: 'array-of-strings', // 'text' / 'json' / 'array-of-strings'\n    performOperation: ({ inputArrayOfStrings }) => {\n        const outputArrayOfStrings = trimLinesLeft(inputArrayOfStrings);\n        return [null, outputArrayOfStrings];\n    }\n};\n\nexport { configTextTrimLeft };\n","import ArrowForwardIcon from '@mui/icons-material/ArrowForward';\n\nimport { trimLinesRight } from '../../textUtils.js';\n\nconst configTextTrimRight = {\n    operationId: 'textTrimRight',\n\n    label: 'Trim lines from right',\n    icon: ArrowForwardIcon,\n\n    snippets: [{\n        content: [\n            ' Alice ',\n            '    Bob  ',\n            'Chelsea    ',\n            '   David'\n        ].join('\\n')\n    }],\n\n    operationInputType: 'array-of-strings', // 'text' / 'json' / 'array-of-strings'\n    operationOutputType: 'array-of-strings', // 'text' / 'json' / 'array-of-strings'\n    performOperation: ({ inputArrayOfStrings }) => {\n        const outputArrayOfStrings = trimLinesRight(inputArrayOfStrings);\n        return [null, outputArrayOfStrings];\n    }\n};\n\nexport { configTextTrimRight };\n","import BackspaceIcon from '@mui/icons-material/Backspace';\n\nconst configTextRemoveFirstFewCharacters = {\n    operationId: 'textRemoveFirstFewCharacters',\n\n    label: 'Remove first few characters',\n    icon: BackspaceIcon,\n\n    snippets: [{\n        content: [\n            '1234567890-12345-54321-0987654321',\n            '1234567890             0987654321',\n            '           12345-54321',\n            '           abcde-edcba',\n            'abcdefghij             jihgfedcba',\n            'abcdefghij-abcde-edcba-jihgfedcba',\n            '',\n            '+1-1234567890',\n            '+1-9876543210',\n            '',\n            '123,000,000',\n            '987,000,000',\n            '000,000,123',\n            '000,000,987',\n            '',\n            'Mr. Smith',\n            'Ms. Smith',\n            'Mrs. Smith'\n        ].join('\\n')\n    }],\n\n    operationInputType: 'array-of-strings', // 'text' / 'json' / 'array-of-strings'\n    operationOutputType: 'array-of-strings', // 'text' / 'json' / 'array-of-strings'\n    performOperation: ({ inputArrayOfStrings }) => {\n        // eslint-disable-next-line no-alert\n        const numberOfCharsToRemove = prompt('Please enter the number of characters to remove from the beginning of each line:');\n\n        if (numberOfCharsToRemove === null) {\n            return [new Error('Please provide the number of characters to remove.')];\n        }\n\n        const n = Number.parseInt(numberOfCharsToRemove, 10);\n\n        if (Number.isNaN(n)) {\n            return [new Error('Please provide a valid number')];\n        } else if (!(n >= 1)) { // Deliberately utilizing \"!(n >= 1)\" (rather than \"n <= 0\") since this condition would work better if isNaN based check wasn't used\n            return [new Error('Please provide a number >= 1')];\n        }\n\n        const outputArrayOfStrings = inputArrayOfStrings.map((line) => {\n            if (line.length <= n) {\n                return '';\n            }\n            return line.slice(n);\n        });\n\n        return [null, outputArrayOfStrings];\n    }\n};\n\nexport { configTextRemoveFirstFewCharacters };\n","import BackspaceIcon from '@mui/icons-material/Backspace';\n\nconst configTextRemoveLastFewCharacters = {\n    operationId: 'textRemoveLastFewCharacters',\n\n    label: 'Remove last few characters',\n    icon: BackspaceIcon,\n\n    snippets: [{\n        content: [\n            '1234567890-12345-54321-0987654321',\n            '1234567890             0987654321',\n            '           12345-54321',\n            '           abcde-edcba',\n            'abcdefghij             jihgfedcba',\n            'abcdefghij-abcde-edcba-jihgfedcba',\n            '',\n            '+1-1234567890',\n            '+1-9876543210',\n            '',\n            '123,000,000',\n            '987,000,000',\n            '000,000,123',\n            '000,000,987',\n            '',\n            'Mr. Smith',\n            'Ms. Smith',\n            'Mrs. Smith'\n        ].join('\\n')\n    }],\n\n    operationInputType: 'array-of-strings', // 'text' / 'json' / 'array-of-strings'\n    operationOutputType: 'array-of-strings', // 'text' / 'json' / 'array-of-strings'\n    performOperation: ({ inputArrayOfStrings }) => {\n        // eslint-disable-next-line no-alert\n        const numberOfCharsToRemove = prompt('Please enter the number of characters to remove from the end of each line:');\n\n        if (numberOfCharsToRemove === null) {\n            return [new Error('Please provide the number of characters to remove.')];\n        }\n\n        const n = Number.parseInt(numberOfCharsToRemove, 10);\n\n        if (Number.isNaN(n)) {\n            return [new Error('Please provide a valid number')];\n        } else if (!(n >= 1)) { // Deliberately utilizing \"!(n >= 1)\" (rather than \"n <= 0\") since this condition would work better if isNaN based check wasn't used\n            return [new Error('Please provide a number >= 1')];\n        }\n\n        const outputArrayOfStrings = inputArrayOfStrings.map((line) => {\n            if (line.length <= n) {\n                return '';\n            }\n            return line.slice(0, -n);\n        });\n\n        return [null, outputArrayOfStrings];\n    }\n};\n\nexport { configTextRemoveLastFewCharacters };\n","import CleaningServicesIcon from '@mui/icons-material/CleaningServices';\n\nimport { removeCommaCharacterAtEndFromLines } from '../../textUtils.js';\n\nconst configTextRemoveCommaCharacterAtLineEnds = {\n    operationId: 'textRemoveCommaCharacterAtLineEnds',\n\n    label: 'Remove comma character at line ends',\n    icon: CleaningServicesIcon,\n\n    snippets: [{\n        content: [\n            'Alice,',\n            'Bob,',\n            'Chelsea,',\n            'David'\n        ].join('\\n')\n    }],\n\n    operationInputType: 'array-of-strings', // 'text' / 'json' / 'array-of-strings'\n    operationOutputType: 'array-of-strings', // 'text' / 'json' / 'array-of-strings'\n    performOperation: ({ inputArrayOfStrings }) => {\n        const outputArrayOfStrings = removeCommaCharacterAtEndFromLines(inputArrayOfStrings);\n        return [null, outputArrayOfStrings];\n    }\n};\n\nexport { configTextRemoveCommaCharacterAtLineEnds };\n","import FormatQuoteIcon from '@mui/icons-material/FormatQuote';\n\nimport { removeQuoteAndApostropheCharactersFromLines } from '../../textUtils.js';\n\nconst configTextRemoveQuoteAndApostropheCharacters = {\n    operationId: 'textRemoveQuoteAndApostropheCharacters',\n\n    label: 'Remove quote and apostrophe characters',\n    icon: FormatQuoteIcon,\n\n    snippets: [{\n        content: [\n            '\"Alice\",',\n            '\"Bob\",',\n            '\"Chelsea\",',\n            '\"David\"'\n        ].join('\\n')\n    }],\n\n    operationInputType: 'array-of-strings', // 'text' / 'json' / 'array-of-strings'\n    operationOutputType: 'array-of-strings', // 'text' / 'json' / 'array-of-strings'\n    performOperation: ({ inputArrayOfStrings }) => {\n        const outputArrayOfStrings = removeQuoteAndApostropheCharactersFromLines(inputArrayOfStrings);\n        return [null, outputArrayOfStrings];\n    }\n};\n\nexport { configTextRemoveQuoteAndApostropheCharacters };\n","import BarChartIcon from '@mui/icons-material/BarChart';\n\nconst configTextGetStats = {\n    operationId: 'textGetStats',\n\n    label: 'Get stats',\n    icon: BarChartIcon,\n\n    snippets: [{\n        content: [\n            'The quick brown fox jumps over the lazy dog.',\n            '',\n            'Sphinx of black quartz, judge my vow.',\n            '',\n            'Mr Jock, TV quiz PhD, bags few lynx.',\n            '',\n            'Cwm fjord bank glyphs vext quiz.'\n        ].join('\\n')\n    }],\n\n    performOperation: ({ inputText }) => {\n        const stats = {};\n\n        const input = inputText;\n        const lines = input.split('\\n');\n        stats.linesCount = lines.length;\n        stats.charactersCount = input.length;\n\n        // Replace all punctuation characters with a single space\n        const inputWithoutPunctuation = input.replaceAll(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g, ' '); // eslint-disable-line no-useless-escape\n\n        // Replace all continuous whitespace characters with a single space\n        const inputWithoutWhitespace = inputWithoutPunctuation.replaceAll(/\\s+/g, ' ');\n\n        const words = inputWithoutWhitespace.split(' ').filter((word) => word !== '');\n        stats.wordsCount = words.length; // Not a perfect way to count words, but it's good enough for now.\n\n        const lowerCaseWords = words.map((word) => word.toLowerCase());\n        stats.uniqueWordsCount = (new Set(lowerCaseWords)).size;\n\n        // eslint-disable-next-line no-alert\n        alert(JSON.stringify(stats, null, '    '));\n\n        return [null, null, { stats }];\n    }\n};\n\nexport { configTextGetStats };\n","// Ref: https://github.com/mathiasbynens/punycode.js/blob/9e1b2cda98d215d3a73fcbfe93c62e021f4ba768/README.md?plain=1#L29\n// * We are importing from 'punycode/' (notice the trailing slash) to avoid importing the native punycode module (which\n//   has been deprecated)\n// * Consider migrating to 'punycode.js' (https://www.npmjs.com/package/punycode.js /\n//   https://github.com/mathiasbynens/punycode.js/) which is actually the same project but with a non-conflicting name\nimport {\n    toASCII as unicodeToPunycode,\n    toUnicode as punycodeToUnicode\n} from 'punycode/';\n\nimport TranslateIcon from '@mui/icons-material/Translate';\nimport LanguageIcon from '@mui/icons-material/Language';\n\nconst configUnicodeToPunycode = {\n    operationId: 'unicodeToPunycode',\n\n    label: 'Unicode to Punycode',\n    icon: TranslateIcon,\n\n    snippets: [{\n        content: [\n            'i❤.ws',\n            'i❤tacos.ws',\n            'münchen.de',\n            '👓.ws',\n            'café.example.com'\n        ].join('\\n')\n    }],\n\n    operationInputType: 'array-of-strings', // 'text' / 'json' / 'array-of-strings'\n    operationOutputType: 'array-of-strings', // 'text' / 'json' / 'array-of-strings'\n    performOperation: ({ inputArrayOfStrings }) => {\n        try {\n            const outputArrayOfStrings = inputArrayOfStrings.map((line) => {\n                return unicodeToPunycode(line);\n            });\n            return [null, outputArrayOfStrings];\n        } catch (err) {\n            console.error(err);\n            return [new Error('Failed to convert from Unicode to Punycode!')];\n        }\n    }\n};\n\nconst configPunycodeToUnicode = {\n    operationId: 'punycodeToUnicode',\n\n    label: 'Punycode to Unicode',\n    icon: LanguageIcon,\n\n    snippets: [{\n        content: [\n            'xn--i-7iq.ws',           // i❤.ws\n            'xn--itacos-i50d.ws',     // i❤tacos.ws\n            'xn--mnchen-3ya.de',      // münchen.de\n            'xn--4p8h.ws',            // 👓.ws\n            'xn--caf-dma.example.com' // café.example.com\n        ].join('\\n')\n    }],\n\n    operationInputType: 'array-of-strings', // 'text' / 'json' / 'array-of-strings'\n    operationOutputType: 'array-of-strings', // 'text' / 'json' / 'array-of-strings'\n    performOperation: ({ inputArrayOfStrings }) => {\n        try {\n            const outputArrayOfStrings = inputArrayOfStrings.map((line) => {\n                return punycodeToUnicode(line);\n            });\n            return [null, outputArrayOfStrings];\n        } catch (err) {\n            console.error(err);\n            return [new Error('Failed to convert from Punycode to Unicode!')];\n        }\n    }\n};\n\nexport {\n    configUnicodeToPunycode,\n    configPunycodeToUnicode\n};\n","import DataObjectIcon from '@mui/icons-material/DataObject';\n\nconst configTextLinesToJsonArray = {\n    operationId: 'linesToJsonArray',\n\n    label: 'Lines to JSON Array',\n    icon: DataObjectIcon,\n\n    snippets: [{\n        content: [\n            'Alice',\n            'Bob',\n            'Chelsea',\n            'David'\n        ].join('\\n')\n    }],\n\n    operationOutputType: 'json', // 'text' / 'json' / 'array-of-strings'\n    performOperation: ({ inputText }) => {\n        const outputArray = inputText.split('\\n');\n        return [null, outputArray];\n    }\n};\n\nexport { configTextLinesToJsonArray };\n","import { configTextRemoveEmptyLines } from './configTextRemoveEmptyLines.js';\nimport { configTextRemoveDuplicates } from './configTextRemoveDuplicates.js';\n\nimport { configTextSort } from './configTextSort.js';\nimport { configTextSortCaseInsensitive } from './configTextSortCaseInsensitive.js';\nimport { configTextSortNatural } from './configTextSortNatural.js';\nimport { configTextRandomize } from './configTextRandomize.js';\nimport { configTextSortByLength } from './configTextSortByLength.js';\nimport { configTextReverse } from './configTextReverse.js';\n\nimport { configTextTrim } from './configTextTrim.js';\nimport { configTextTrimLeft } from './configTextTrimLeft.js';\nimport { configTextTrimRight } from './configTextTrimRight.js';\nimport { configTextRemoveFirstFewCharacters } from './configTextRemoveFirstFewCharacters.js';\nimport { configTextRemoveLastFewCharacters } from './configTextRemoveLastFewCharacters.js';\nimport { configTextRemoveCommaCharacterAtLineEnds } from './configTextRemoveCommaCharacterAtLineEnds.js';\nimport { configTextRemoveQuoteAndApostropheCharacters } from './configTextRemoveQuoteAndApostropheCharacters.js';\n\nimport { configTextGetStats } from './configTextGetStats.js';\n\nimport {\n    configUnicodeToPunycode,\n    configPunycodeToUnicode\n} from './configTextPunycode.js';\n\nimport { configTextLinesToJsonArray } from './configTextLinesToJsonArray.js';\n\nconst modeText = {\n    modeId: 'text',\n    modeNameForAceEditor: 'text',\n\n    title: 'Text',\n\n    icon: null,\n\n    hasSyntaxHighlighting: false,\n\n    snippets: [{\n        content: [\n            'Chelsea',\n            'Bob',\n            'Alice',\n            'David'\n        ].join('\\n')\n    }],\n\n    operations: [\n        {\n            optgroupLabel: 'Lines',\n            options: [\n                configTextRemoveEmptyLines, // Remove empty lines\n                configTextRemoveDuplicates  // Remove duplicates\n                // Remove beyond N lines\n            ]\n        },\n        {\n            optgroupLabel: 'Sort',\n            options: [\n                configTextSort,                // Sort\n                configTextSortCaseInsensitive, // Case-insensitive sort\n                configTextSortNatural,         // Natural sort\n                configTextRandomize,           // Randomize\n                configTextSortByLength,        // Sort by length\n                configTextReverse              // Reverse\n            ]\n        },\n        {\n            optgroupLabel: 'String',\n            options: [\n                configTextTrim,                              // Trim lines\n                configTextTrimLeft,                          // Trim lines from left\n                configTextTrimRight,                         // Trim lines from right\n                configTextRemoveFirstFewCharacters,          // Remove first few characters\n                configTextRemoveLastFewCharacters,           // Remove last few characters\n                configTextRemoveCommaCharacterAtLineEnds,    // Remove comma character at line ends\n                configTextRemoveQuoteAndApostropheCharacters // Remove \" and ' characters\n            ]\n        },\n        {\n            optgroupLabel: 'Stats',\n            options: [\n                configTextGetStats // Get statistics\n                // Count lines        // Icon: FormatListNumberedRtlIcon\n                // Count characters   // Icon: AbcIcon\n                // Count words        // Icon: SubtitlesIcon\n                // Count unique words // Icon: SubtitlesOutlinedIcon\n            ]\n        },\n        {\n            optgroupLabel: 'Encoding/Decoding',\n            options: [\n                configUnicodeToPunycode, // Unicode to Punycode\n                configPunycodeToUnicode  // Punycode to Unicode\n            ]\n        },\n        {\n            optgroupLabel: 'Convert',\n            options: [\n                configTextLinesToJsonArray // Lines to JSON array\n            ]\n        }\n    ]\n};\n// eslint-disable-next-line unicorn/no-array-reduce\nmodeText.arrOperations = modeText.operations.reduce((acc, curr) => {\n    return acc.concat(curr.options);\n}, []);\n// eslint-disable-next-line unicorn/no-array-reduce\nmodeText.obOperations = modeText.arrOperations.reduce((acc, curr) => {\n    acc[curr.operationId] = curr;\n    return acc;\n}, {});\n\nexport { modeText };\n","import { modeCss } from './modeCss/index.js';\nimport { modeCsv } from './modeCsv/index.js';\nimport { modeHtml } from './modeHtml/index.js';\nimport { modeJson } from './modeJson/index.js';\nimport { modeLess } from './modeLess/index.js';\nimport { modeText } from './modeText/index.js';\n\nconst arrModeConfigs = [\n    modeCss,\n    modeCsv,\n    modeHtml,\n    modeJson,\n    modeLess,\n    modeText\n];\n\nconst obModeConfigs = {};\n\nfor (const modeConfig of arrModeConfigs) {\n    obModeConfigs[modeConfig.modeId] = modeConfig;\n}\n\nexport {\n    arrModeConfigs,\n    obModeConfigs\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { useAtom } from 'jotai';\n\nimport { recentOperationsAtom } from './JotaiState.js';\n\nimport IconButton from '@mui/material/IconButton/index.js';\n\nimport { IconNotAvailable } from './constOperations.js';\n\nimport { obModeConfigs } from './modes/index.js';\n\nconst RecentOperations = function ({\n    mode,\n    onOperationClick\n}) {\n    // TODO: FIXME: Check if `setRecentOperations` is needed\n    // eslint-disable-next-line no-unused-vars\n    const [recentOperations, setRecentOperations] = useAtom(recentOperationsAtom);\n\n    const modeConfig = obModeConfigs[mode];\n    const operationsForMode = Object.keys(modeConfig.obOperations);\n\n    return (\n        <div\n            style={{\n                display: 'flex',\n                overflow: 'hidden',\n                paddingRight: 10,\n                marginLeft: 'auto',\n                flexDirection: 'row-reverse'\n            }}\n        >\n            {(() => {\n                let arr = recentOperations;\n                arr = arr.filter((operationId) => {\n                    if (operationsForMode.includes(operationId)) {\n                        return true;\n                    } else {\n                        return false;\n                    }\n                });\n\n                arr = arr.map((operationId, index) => {\n                    const operationForMode = modeConfig.obOperations[operationId];\n                    return (\n                        <div key={index}>\n                            <IconButton\n                                size=\"small\"\n                                title={(\n                                    operationForMode?.iconTooltip ||\n                                    operationForMode?.label\n                                )}\n                                onClick={async () => {\n                                    await onOperationClick(operationId);\n                                }}\n                            >\n                                {(() => {\n                                    let Icon = modeConfig.obOperations[operationId]?.icon;\n                                    if (!Icon) {\n                                        Icon = IconNotAvailable;\n                                    }\n                                    return <Icon style={{ fontSize: 16 }} />;\n                                })()}\n                            </IconButton>\n                        </div>\n                    );\n                });\n\n                return arr;\n            })()}\n        </div>\n    );\n};\nRecentOperations.propTypes = {\n    mode: PropTypes.string.isRequired,\n    onOperationClick: PropTypes.func.isRequired\n};\n\nexport { RecentOperations };\n","// extracted by mini-css-extract-plugin\nvar _1 = \"helperStyles__hideForContainerGE640--MOu7X\";\nvar _2 = \"helperStyles__hideForContainerLT640--Ow38P\";\nexport { _1 as \"hideForContainerGE640\", _2 as \"hideForContainerLT640\" }\n","// extracted by mini-css-extract-plugin\nvar _1 = \"MainEditor__MainEditor--Q_tBg\";\nvar _2 = \"MainEditor__SelectTheOperation--wnn3M\";\nvar _3 = \"MainEditor__translucentWithoutHover--GBmBJ\";\nexport { _1 as \"MainEditor\", _2 as \"SelectTheOperation\", _3 as \"translucentWithoutHover\" }\n","import React, { useEffect, useRef, useState, Suspense } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { useSearchParams } from 'react-router-dom';\n\nimport IconButton from '@mui/material/IconButton/index.js';\nimport Button from '@mui/material/Button/index.js';\n\nimport ScienceIcon from '@mui/icons-material/Science';\n\nimport BorderColorOutlinedIcon from '@mui/icons-material/BorderColorOutlined';\nimport BorderColorIcon from '@mui/icons-material/BorderColor';\n\nimport FileOpenIcon from '@mui/icons-material/FileOpen';\nimport ContentCutIcon from '@mui/icons-material/ContentCut';\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport BackspaceIcon from '@mui/icons-material/Backspace';\nimport UndoIcon from '@mui/icons-material/Undo';\nimport RedoIcon from '@mui/icons-material/Redo';\nimport WrapTextIcon from '@mui/icons-material/WrapText';\nimport SaveIcon from '@mui/icons-material/Save';\n\nimport Select from '@mui/material/Select/index.js';\n\nimport CheckIcon from '@mui/icons-material/Check';\n\nimport StarIcon from '@mui/icons-material/Star';\n\nimport { useAtom } from 'jotai';\n\nimport { useLocalStorage } from 'react-use';\n\nimport { useSnackbar } from 'notistack';\n\nimport { useDebouncedCallback } from 'use-debounce';\n\nimport { Loading } from 'Loading/Loading.js';\n\nimport { recentOperationsAtom } from './JotaiState.js';\n\nimport { getCurrentSearchParamsAsJson } from '../utils/getCurrentSearchParamsAsJson.js';\n\nimport {\n    arrModeConfigs,\n    obModeConfigs\n} from './modes/index.js';\n\nimport {\n    mode_css,\n    mode_csv,\n    mode_html,\n    mode_json,\n    mode_less,\n    mode_text,\n\n    modes,\n\n    defaultRecommendedOperations,\n\n    defaultSelectedOperations\n} from './constOperations.js';\n\nimport { RecentOperations } from './RecentOperations.js';\n\nimport * as helperStyles from '../../helperStyles.css';\nimport * as styles from './MainEditor.css';\n\nconst AceEditor = React.lazy(() => {\n    const comp = import('../../../utils/lazyLoadComponents/lazyLoadAceEditorComponent.js');\n    return comp;\n});\n\nconst copy = async function (simpleText) {\n    try {\n        await navigator.clipboard.writeText(simpleText);\n        return true;\n    } catch (e) { // eslint-disable-line no-unused-vars\n        return false;\n    }\n};\n\nconst generateTargetSearchParamsAsJson = ({ mode, operation, selectedOperations }) => {\n    const currentSearchParams = getCurrentSearchParamsAsJson();\n    const targetSearchParams = { ...currentSearchParams };\n\n    if (!targetSearchParams.mode) {\n        delete targetSearchParams.mode;\n    }\n    if (mode) {\n        targetSearchParams.mode = mode;\n    }\n\n    if (\n        !targetSearchParams.operation ||\n        !selectedOperations[mode] ||\n        operation === ''\n    ) {\n        delete targetSearchParams.operation;\n    }\n    if (operation) {\n        targetSearchParams.operation = operation;\n    }\n\n    return targetSearchParams;\n};\n\nconst getSanitizedModeWithStatus = (mode) => {\n    if (modes.includes(mode)) {\n        return {\n            wasAlreadyClean: true,\n            mode\n        };\n    } else {\n        return {\n            wasAlreadyClean: false,\n            mode: mode_text\n        };\n    }\n};\n\nconst getSanitizedOperationWithStatus = (mode, operation) => {\n    if (\n        obModeConfigs[mode] &&\n        obModeConfigs[mode].obOperations &&\n        obModeConfigs[mode].obOperations[operation]\n    ) {\n        return {\n            wasAlreadyClean: true,\n            operation\n        };\n    } else {\n        return {\n            wasAlreadyClean: false,\n            operation: obModeConfigs[mode].arrOperations[0] // TODO: FIXME: This is not always the first operation\n        };\n    }\n};\n\nconst readable = {\n    [mode_css]: 'CSS',\n    [mode_csv]: 'CSV',\n    [mode_html]: 'HTML',\n    [mode_json]: 'JSON',\n    [mode_less]: 'LESS',\n    [mode_text]: 'Text'\n};\n\nconst MainEditor = function ({\n    placeholder,\n    onLoad,\n    onValueUpdate,\n    allowFileInput,\n    style,\n    editorWidth,\n    editorHeight,\n    autoApply,\n    onComputeOutput,\n    hideOperations\n}) {\n    const { enqueueSnackbar } = useSnackbar();\n\n    const [storedMode, setStoredMode] = useLocalStorage('mode', mode_text, { raw: true });\n    const [mode, setMode] = useState(\n        getSanitizedModeWithStatus(storedMode).mode\n    );\n\n    const [searchParams, setSearchParams] = useSearchParams();\n    useEffect(\n        () => {\n            const modeFromSearchParams = searchParams.get('mode');\n            const sanitizedModeWithStatus = getSanitizedModeWithStatus(modeFromSearchParams);\n\n            if (sanitizedModeWithStatus.wasAlreadyClean) {\n                setStoredMode(modeFromSearchParams);\n                setMode(modeFromSearchParams);\n            }\n        },\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [] // This useEffect() should run only once (at the time of mounting)\n    );\n\n    const [storedOperations, setStoredOperations] = useLocalStorage(\n        'selectedOperations',\n        structuredClone(defaultSelectedOperations)\n    );\n\n    const selectedOperations = (() => {\n        if (storedOperations) {\n            return storedOperations;\n        } else {\n            return structuredClone(defaultSelectedOperations);\n        }\n    })();\n    const modeFromSearchParams = searchParams.get('mode');\n    const operationFromSearchParams = searchParams.get('operation');\n\n    const sanitizedMode = getSanitizedModeWithStatus(modeFromSearchParams).mode;\n    const sanitizedOperation = (\n        getSanitizedOperationWithStatus(\n            sanitizedMode,\n            operationFromSearchParams || selectedOperations[sanitizedMode]\n        ).operation\n    );\n    selectedOperations[sanitizedMode] = sanitizedOperation;\n\n    const operation = selectedOperations[mode];\n\n    const [flagSyntaxHighlighting, setFlagSyntaxHighlighting] = useLocalStorage('flagSyntaxHighlighting', 'yes', { raw: true });\n\n    const [recentOperations, setRecentOperations] = useAtom(recentOperationsAtom);\n\n    const [flagLineWrap, setFlagLineWrap] = useLocalStorage('flagLineWrap', 'yes', { raw: true });\n\n    const [refreshUndoRedo, setRefreshUndoRedo] = useState(Date.now());\n\n    const modeForSyntaxHighlighting = (() => {\n        if (flagSyntaxHighlighting === 'yes') {\n            switch (mode) {\n                case mode_css: {\n                    return 'css';\n                }\n                case mode_csv: {\n                    return 'text';\n                }\n                case mode_html: {\n                    return 'html';\n                }\n                case mode_json: {\n                    return 'json';\n                }\n                case mode_less: {\n                    return 'less';\n                }\n                case mode_text: {\n                    return 'text';\n                }\n                default: {\n                    return 'text';\n                }\n            }\n        } else {\n            return 'text';\n        }\n    })();\n\n    // Save \"editor\" reference for later usage.\n    const editorRef = useRef(null);\n\n    // The \"onChange\" event may get called twice because of the auto-format functionality. Hence, using this \"debounced\"\n    // function to avoid multiple calls (notifications).\n    const debouncedEnqueueSnackbar = useDebouncedCallback(\n        (errMessage) => {\n            enqueueSnackbar(errMessage);\n        },\n        32\n    );\n\n    const debouncedOnChange = useDebouncedCallback(\n        // eslint-disable-next-line no-unused-vars\n        async (val, delta) => {\n            setRefreshUndoRedo(Date.now());\n\n            if (autoApply) {\n                if (operation) { // Operation might be empty (if the user has not selected any operation)\n                    await applyTheOperation();\n                }\n            }\n        },\n        750\n    );\n\n    const applyTheOperation = async (passedOperation) => {\n        const operationToApply = passedOperation || operation;\n        const operationsByUser = [\n            operationToApply,\n            ...recentOperations\n        ];\n        // Remove duplicate operations (keep the first occurrence)\n        const uniqueOperationsByUser = operationsByUser.filter((operation, index) => {\n            return operationsByUser.indexOf(operation) === index;\n        });\n        setRecentOperations(uniqueOperationsByUser);\n        localStorage.setItem('recentOperations', JSON.stringify(uniqueOperationsByUser));\n\n        // DUPLICATE: Some piece of this code is duplicated elsewhere in this project\n        const getInputValue = () => {\n            const value = (\n                editorRef.current ?\n                    editorRef.current.getValue() :\n                    ''\n            );\n            return value;\n        };\n\n        const modeConfig = obModeConfigs[mode];\n        const operationId = operationToApply;\n        const operationConfig = modeConfig.obOperations[operationId];\n\n        const inputValue = getInputValue();\n\n        if (inputValue === '') {\n            // TODO: FIXME: This code is duplicated elsewhere in this project\n            const output = inputValue;\n            if (typeof onComputeOutput === 'function') {\n                onComputeOutput({\n                    operation: operationToApply,\n                    output\n                });\n            } else {\n                editorRef.current.setValue(output);\n            }\n            if (typeof onValueUpdate === 'function') {\n                onValueUpdate(output);\n            }\n            return;\n        }\n\n        let\n            err,\n            output,\n            extraInfo;\n\n        try {\n            const parameters = {};\n\n            switch (operationConfig.operationInputType) {\n                case 'json': {\n                    const inputJson = JSON.parse(inputValue);\n                    parameters.inputJson = inputJson;\n                    break;\n                }\n                case 'array-of-strings': {\n                    const inputArrayOfStrings = inputValue.split('\\n');\n                    parameters.inputArrayOfStrings = inputArrayOfStrings;\n                    break;\n                }\n                // eslint-disable-next-line unicorn/no-useless-switch-case\n                case 'text':\n                default: {\n                    const inputText = inputValue;\n                    parameters.inputText = inputText;\n                    break;\n                }\n            }\n\n            [err, output, extraInfo] = await operationConfig.performOperation(parameters);\n        } catch (e) {\n            err = e;\n        }\n\n        if (!err) {\n            switch (operationConfig.operationOutputType) {\n                case 'json': {\n                    output = JSON.stringify(output, null, '\\t');\n                    break;\n                }\n                case 'array-of-strings': {\n                    if (Array.isArray(output)) {\n                        output = output.join('\\n');\n                    }\n                    break;\n                }\n                // eslint-disable-next-line unicorn/no-useless-switch-case\n                case 'text':\n                default: {\n                    // Do nothing\n                    break;\n                }\n            }\n        }\n\n        if (err) {\n            console.error(err);\n            debouncedEnqueueSnackbar(err.message);\n\n            if (extraInfo && extraInfo.moveCursorTo) {\n                // editorRef.current.moveCursorTo(\n                //     extraInfo.moveCursorTo.row,\n                //     extraInfo.moveCursorTo.column\n                // );\n                editorRef.current.moveCursorToPosition({\n                    row: extraInfo.moveCursorTo.row,\n                    column: extraInfo.moveCursorTo.column\n                });\n\n                editorRef.current.focus();\n            }\n        } else {\n            if (output === null) {\n                if (extraInfo && extraInfo.stats) {\n                    // Do nothing (for now)\n                } else {\n                    const extraInfoString = JSON.stringify(extraInfo, null, '\\t');\n                    console.error(extraInfoString);\n                    debouncedEnqueueSnackbar(extraInfoString);\n                }\n            } else {\n                if (typeof onComputeOutput === 'function') {\n                    onComputeOutput({\n                        operation: operationToApply,\n                        output\n                    });\n                } else {\n                    editorRef.current.setValue(output);\n                }\n                if (typeof onValueUpdate === 'function') {\n                    onValueUpdate(output);\n                }\n            }\n        }\n    };\n\n    useEffect(() => {\n        // Operation might be empty (at the time of mounting this component)\n        if (autoApply && operation) {\n            (async () => {\n                await applyTheOperation();\n            })();\n        }\n    }, [autoApply, operation]); // eslint-disable-line react-hooks/exhaustive-deps\n\n    return (\n        <div style={style} className={styles.MainEditor}>\n            <div style={{ marginTop: 10 }}>\n                <div\n                    style={{ marginTop: 20 }}\n                    className={styles.translucentWithoutHover}\n                >\n                    <div>\n                        <div\n                            style={{\n                                display: 'flex',\n                                alignItems: 'center',\n                                justifyContent: 'space-between',\n                                containerType: 'inline-size'\n                            }}\n                        >\n                            {\n                                hideOperations &&\n                                <div>&nbsp;</div>\n                            }\n                            <div style={{ display: 'flex' }}>\n                                <div>\n                                    <Select\n                                        native\n                                        value={mode}\n                                        style={{\n                                            width: 75,\n                                            height: 24,\n                                            fontSize: 11\n                                        }}\n                                        onChange={(e) => {\n                                            const mode = e.target.value;\n                                            setMode(mode);\n                                            setStoredMode(mode);\n\n                                            const searchParamsToApply = generateTargetSearchParamsAsJson({\n                                                mode,\n                                                operation: selectedOperations[mode],\n                                                selectedOperations\n                                            });\n                                            setSearchParams(searchParamsToApply);\n                                        }}\n                                    >\n                                        {\n                                            arrModeConfigs.map((modeConfig) => {\n                                                return (\n                                                    <option\n                                                        key={modeConfig.modeId}\n                                                        value={modeConfig.modeId}\n                                                    >\n                                                        {modeConfig.title}\n                                                    </option>\n                                                );\n                                            })\n                                        }\n                                    </Select>\n                                </div>\n                                <div style={{ marginLeft: 5 }}>\n                                    {(() => {\n                                        const disabled = (() => {\n                                            const modeConfig = obModeConfigs[mode];\n                                            if (modeConfig.hasSyntaxHighlighting) {\n                                                return false;\n                                            } else {\n                                                return true;\n                                            }\n                                        })();\n                                        let title;\n                                        if (disabled) {\n                                            title = 'Syntax highlighting not available for this mode';\n                                        } else {\n                                            if (flagSyntaxHighlighting === 'yes') {\n                                                title = 'Disable syntax highlighting';\n                                            } else {\n                                                title = 'Enable syntax highlighting';\n                                            }\n                                        }\n\n                                        return (\n                                            <IconButton\n                                                size=\"small\"\n                                                title={title}\n                                                onClick={() => {\n                                                    if (disabled) {\n                                                        // TODO: Show a tooltip message\n                                                    } else {\n                                                        setFlagSyntaxHighlighting(\n                                                            flagSyntaxHighlighting === 'yes' ? 'no' : 'yes'\n                                                        );\n                                                    }\n                                                }}\n                                            >\n                                                {(() => {\n                                                    let Icon;\n                                                    if (flagSyntaxHighlighting === 'yes') {\n                                                        Icon = BorderColorIcon;\n                                                    } else {\n                                                        Icon = BorderColorOutlinedIcon;\n                                                    }\n\n                                                    let color;\n                                                    if (disabled) {\n                                                        color = '#ccc';\n                                                    } else {\n                                                        if (flagSyntaxHighlighting === 'yes') {\n                                                            color = '#1976d2';\n                                                        } else {\n                                                            color = undefined;\n                                                        }\n                                                    }\n\n                                                    return <Icon style={{ fontSize: 16, color }} />;\n                                                })()}\n                                            </IconButton>\n                                        );\n                                    })()}\n                                </div>\n                            </div>\n                            <div\n                                style={{\n                                    // TODO: Use a better way to \"right-align\" the content (probably via appropriate \"prop\")\n                                    display: hideOperations ? 'none' : 'flex'\n                                }}\n                            >\n                                <div style={{ marginLeft: 5 }}>\n                                    <Select\n                                        native\n                                        className={styles.SelectTheOperation}\n                                        style={{\n                                            height: 24,\n                                            fontSize: 11,\n                                            border: (\n                                                selectedOperations[mode] === '' ?\n                                                    '1px dashed orange' :\n                                                    undefined\n                                            )\n                                        }}\n                                        value={selectedOperations[mode]}\n                                        onChange={(e) => {\n                                            const selectedOperation = e.target.value;\n\n                                            const json = structuredClone(selectedOperations);\n                                            json[mode] = selectedOperation;\n\n                                            setStoredOperations(json);\n\n                                            const searchParamsToApply = generateTargetSearchParamsAsJson({\n                                                mode,\n                                                operation: selectedOperation,\n                                                selectedOperations\n                                            });\n                                            setSearchParams(searchParamsToApply);\n                                        }}\n                                    >\n                                        <option\n                                            value=\"\"\n                                            style={{ color: '#777' }}\n                                        >\n                                            -- Operations --\n                                        </option>\n\n                                        {(() => {\n                                            const modeConfig = obModeConfigs[mode];\n\n                                            const { operations } = modeConfig;\n\n                                            // It has \"optgroup\" and there are \"options\" under each \"optgroup\"\n                                            return operations.map((operation) => {\n                                                return (\n                                                    <optgroup\n                                                        key={operation.optgroupLabel}\n                                                        label={operation.optgroupLabel}\n                                                    >\n                                                        {\n                                                            operation.options.map((option) => {\n                                                                return (\n                                                                    <option\n                                                                        key={option.operationId}\n                                                                        value={option.operationId}\n                                                                    >\n                                                                        {option.label}\n                                                                    </option>\n                                                                );\n                                                            })\n                                                        }\n                                                    </optgroup>\n                                                );\n                                            });\n                                        })()}\n                                    </Select>\n                                </div>\n\n                                <div style={{ marginLeft: 5 }}>\n                                    <IconButton\n                                        size=\"small\"\n                                        title=\"Insert sample value\"\n                                        onClick={() => {\n                                            const editor = editorRef.current;\n\n                                            const modeConfig = obModeConfigs[mode];\n                                            const selectedOperationId = selectedOperations[mode];\n                                            const operation = modeConfig.obOperations[selectedOperationId];\n\n                                            const sample = (\n                                                (\n                                                    operation &&\n                                                    operation.snippets &&\n                                                    operation.snippets[0] &&\n                                                    operation.snippets[0].content\n                                                ) ||\n                                                (\n                                                    modeConfig.snippets &&\n                                                    modeConfig.snippets[0] &&\n                                                    modeConfig.snippets[0].content\n                                                ) ||\n                                                (\n                                                    'Please provide content here'\n                                                )\n                                            );\n\n                                            editor.setValue(sample);\n                                            editor.focus();\n                                        }}\n                                    >\n                                        <ScienceIcon style={{ fontSize: 16 }} />\n                                    </IconButton>\n                                </div>\n\n                                <div style={{ marginLeft: 5 }}>\n                                    <IconButton\n                                        size=\"small\"\n                                        className={helperStyles.hideForContainerGE640}\n                                        style={{\n                                            backgroundColor: '#1976d2'\n                                        }}\n                                        onClick={async () => {\n                                            await applyTheOperation();\n                                        }}\n                                    >\n                                        <CheckIcon\n                                            style={{\n                                                fontSize: 14,\n                                                color: '#fff'\n                                            }}\n                                        />\n                                    </IconButton>\n                                    <Button\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        size=\"small\"\n                                        startIcon={<CheckIcon />}\n                                        disabled={operation === ''}\n                                        className={helperStyles.hideForContainerLT640}\n                                        onClick={async () => {\n                                            await applyTheOperation();\n                                        }}\n                                        style={{ height: 24 }}\n                                    >\n                                        Apply\n                                    </Button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    {\n                        recentOperations.length > 0 &&\n                        <div\n                            style={{\n                                marginTop: 10,\n                                visibility: hideOperations ? 'hidden' : 'visible'\n                            }}\n                        >\n                            <div\n                                style={{\n                                    display: 'flex',\n                                    flexDirection: 'row-reverse',\n                                    backgroundColor: '#f5f5f5',\n                                    border: '1px solid #e0e0e0',\n                                    borderRadius: 999\n                                }}\n                            >\n                                <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'center', fontSize: 12 }}>\n                                    <IconButton\n                                        size=\"small\"\n                                        title=\"Reset suggested operations\"\n                                        onClick={() => {\n                                            setRecentOperations(defaultRecommendedOperations);\n                                            localStorage.setItem('recentOperations', JSON.stringify([]));\n                                        }}\n                                    >\n                                        <StarIcon style={{ fontSize: 16 }} />\n                                    </IconButton>\n                                </div>\n                                <div\n                                    style={{\n                                        borderRight: '1px solid #e0e0e0'\n                                    }}\n                                />\n                                <div\n                                    style={{\n                                        backgroundColor: '#fff',\n                                        width: '100%',\n                                        borderTopLeftRadius: 999,\n                                        borderBottomLeftRadius: 999\n                                    }}\n                                >\n                                    <RecentOperations\n                                        mode={mode}\n                                        onOperationClick={async (operationId) => {\n                                            await applyTheOperation(operationId);\n                                        }}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    }\n                </div>\n            </div>\n\n            <div style={{ marginTop: 10 }}>\n                <div>\n                    <Suspense fallback={<Loading type=\"line-scale\" />}>\n                        <AceEditor\n                            placeholder={\n                                placeholder ||\n                                `Provide ${readable[mode]} here`\n                            }\n                            setOptions={{\n                                // useWorker: false,\n                                // enableBasicAutocompletion: true,\n                                // enableLiveAutocompletion: true,\n                                // enableSnippets: true,\n                                // showLineNumbers: true,\n                                // tabSize: 4,\n                                // useSoftTabs: true,\n\n                                wrap: flagLineWrap === 'yes' ? true : false\n                            }}\n                            mode={modeForSyntaxHighlighting}\n                            theme=\"github\"\n                            onLoad={(editor) => {\n                                editorRef.current = editor;\n                                if (typeof onLoad === 'function') {\n                                    onLoad(editor);\n                                }\n                            }}\n                            onChange={(val, delta) => {\n                                (async () => {\n                                    await debouncedOnChange(val, delta);\n                                })();\n                            }}\n                            editorProps={{ $blockScrolling: true }}\n                            width={editorWidth}\n                            height={editorHeight}\n                            style={{\n                                minHeight: '65vh'\n                            }}\n                        />\n                    </Suspense>\n                </div>\n            </div>\n            <div style={{ marginTop: 10 }}>\n                <div\n                    className={styles.translucentWithoutHover}\n                    style={{ display: 'flex', justifyContent: 'space-between' }}\n                >\n                    <div style={{ display: 'flex' }}>\n                        {\n                            allowFileInput &&\n                            <IconButton\n                                title=\"Load from file\"\n                                size=\"small\"\n                                component=\"label\"\n                            >\n                                <FileOpenIcon style={{ fontSize: 16 }} />\n                                <input\n                                    type=\"file\"\n                                    style={{ display: 'none' }}\n                                    onChange={async (e) => {\n                                        const file = e.target.files[0];\n                                        if (file) {\n                                            const fileContent = await file.text();\n                                            const editor = editorRef.current;\n                                            if (editor) {\n                                                editor.setValue(fileContent);\n                                            }\n                                        }\n\n                                        // Reset the file input value so that the same file can also be loaded again\n                                        e.target.value = null;\n                                    }}\n                                />\n                            </IconButton>\n                        }\n\n                        {/* Cut button */}\n                        <IconButton\n                            title=\"Cut\"\n                            size=\"small\"\n                            onClick={async () => {\n                                const editor = editorRef.current;\n                                if (editor) {\n                                    // Check if there is any selected text\n                                    let selectedText = editor.getSelectedText();\n\n                                    if (!selectedText) {\n                                        // If there is no selected text, then select all text.\n                                        editor.selectAll();\n                                        selectedText = editor.getSelectedText();\n                                    }\n\n                                    // Copy selected contents to clipboard\n                                    await copy(selectedText);\n\n                                    // Perform cut operation\n                                    editor.execCommand('cut');\n                                }\n                            }}\n                        >\n                            <ContentCutIcon style={{ fontSize: 16 }} />\n                        </IconButton>\n\n                        {/* Copy button */}\n                        <IconButton\n                            title=\"Copy\"\n                            size=\"small\"\n                            onClick={async () => {\n                                const editor = editorRef.current;\n                                if (editor) {\n                                    // Check if there is any selected text\n                                    let selectedText = editor.getSelectedText();\n\n                                    if (!selectedText) {\n                                        // If there is no selected text, then select all text.\n                                        editor.selectAll();\n                                        selectedText = editor.getSelectedText();\n                                    }\n\n                                    // Copy selected contents to clipboard\n                                    await copy(selectedText);\n\n                                    // Perform copy operation\n                                    editor.execCommand('copy');\n                                }\n                            }}\n                        >\n                            <ContentCopyIcon style={{ fontSize: 16 }} />\n                        </IconButton>\n\n                        {/* Clear button */}\n                        <IconButton\n                            title=\"Clear\"\n                            size=\"small\"\n                            onClick={() => {\n                                const editor = editorRef.current;\n                                if (editor) {\n                                    // Check if there is any selected text\n                                    const selectedText = editor.getSelectedText();\n\n                                    if (selectedText) {\n                                        // If there is selected text, then clear only the selected text.\n                                        editor.execCommand('inserttext', { text: '' });\n                                    } else {\n                                        editor.setValue('');\n                                    }\n                                }\n                            }}\n                        >\n                            <BackspaceIcon style={{ fontSize: 16 }} />\n                        </IconButton>\n\n                        {/* Undo button */}\n                        <IconButton\n                            title=\"Undo\"\n                            size=\"small\"\n                            disabled={refreshUndoRedo && (() => {\n                                if (\n                                    editorRef.current &&\n                                    editorRef.current.getSession().getUndoManager().hasUndo()\n                                ) {\n                                    return false;\n                                } else {\n                                    return true;\n                                }\n                            })()}\n                            onClick={() => {\n                                const editor = editorRef.current;\n                                if (editor) {\n                                    editor.execCommand('undo');\n                                }\n                            }}\n                        >\n                            <UndoIcon style={{ fontSize: 16 }} />\n                        </IconButton>\n\n                        {/* Redo button */}\n                        <IconButton\n                            title=\"Redo\"\n                            size=\"small\"\n                            disabled={refreshUndoRedo && (() => {\n                                if (\n                                    editorRef.current &&\n                                    editorRef.current.getSession().getUndoManager().hasRedo()\n                                ) {\n                                    return false;\n                                } else {\n                                    return true;\n                                }\n                            })()}\n                            onClick={() => {\n                                const editor = editorRef.current;\n                                if (editor) {\n                                    editor.execCommand('redo');\n                                }\n                            }}\n                        >\n                            <RedoIcon style={{ fontSize: 16 }} />\n                        </IconButton>\n\n                        {/* Line wrap button */}\n                        <IconButton\n                            title=\"Toggle line wrap\"\n                            size=\"small\"\n                            onClick={() => {\n                                // Raw code for toggling line wrap:\n                                //     editor.getSession().setUseWrapMode(!editor.getSession().getUseWrapMode());\n                                setFlagLineWrap(flagLineWrap === 'yes' ? 'no' : 'yes');\n                            }}\n                        >\n                            <WrapTextIcon\n                                style={{\n                                    fontSize: 16,\n                                    color: flagLineWrap === 'yes' ? '#1976d2' : undefined\n                                }}\n                            />\n                        </IconButton>\n\n                        {/* TODO: Full screen button */}\n\n                        {/* Save button */}\n                        <IconButton\n                            title=\"Save\"\n                            size=\"small\"\n                            onClick={() => {\n                                const editor = editorRef.current;\n                                if (editor) {\n                                    const input = editor.getValue();\n                                    const blob = new Blob([input], { type: 'text/plain' });\n                                    const a = document.createElement('a');\n                                    a.href = URL.createObjectURL(blob);\n                                    let extension;\n                                    switch (mode) {\n                                        case mode_css: {\n                                            extension = 'css';\n                                            break;\n                                        }\n                                        case mode_csv: {\n                                            extension = 'csv';\n                                            break;\n                                        }\n                                        case mode_json: {\n                                            extension = 'json';\n                                            break;\n                                        }\n                                        case mode_less: {\n                                            extension = 'less';\n                                            break;\n                                        }\n                                        default: {\n                                            extension = 'txt';\n                                        }\n                                    }\n                                    const localTime = (new Date(Date.now() - (new Date()).getTimezoneOffset() * 60 * 1000)).toISOString().slice(0, 19).replace('T', ' ');\n                                    const localTimeAsPartOfFilename = localTime.replace(' ', '_').replaceAll(':', '-');\n                                    a.download = `output-${localTimeAsPartOfFilename}.${extension}`;\n                                    a.click();\n                                }\n                            }}\n                        >\n                            <SaveIcon style={{ fontSize: 16 }} />\n                        </IconButton>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\nMainEditor.propTypes = {\n    placeholder: PropTypes.string,\n    onLoad: PropTypes.func,\n    onValueUpdate: PropTypes.func,\n    allowFileInput: PropTypes.bool,\n    style: PropTypes.object,\n    editorWidth: PropTypes.string,\n    editorHeight: PropTypes.string,\n    autoApply: PropTypes.bool,\n    onComputeOutput: PropTypes.func,\n    hideOperations: PropTypes.bool\n};\n\nexport { MainEditor };\n","// extracted by mini-css-extract-plugin\nvar _1 = \"TheEditors__TransformersStyleHeading--bRtat\";\nexport { _1 as \"TransformersStyleHeading\" }\n","import React, { useRef } from 'react';\n\nimport { MainEditor } from '../MainEditor/MainEditor.js';\n\nimport * as theEditorsStyles from '../TheEditors.css';\nimport * as styles from './SingleEditor.css';\n\nconst SingleEditor = () => {\n    const editorRef = useRef(null);\n    return (\n        <div className={styles.SingleEditor}>\n            <div className={theEditorsStyles.TransformersStyleHeading}>\n                I<span style={{ fontSize: 14 }}>nput</span>\n                {' / '}\n                O<span style={{ fontSize: 14 }}>utput</span>\n            </div>\n            <div>\n                <MainEditor\n                    onLoad={(editor) => {\n                        editorRef.current = editor;\n                    }}\n                    style={{ marginTop: 5 }}\n                    editorWidth=\"100%\"\n                    editorHeight=\"100%\"\n                    allowFileInput\n                />\n            </div>\n        </div>\n    );\n};\n\nexport { SingleEditor };\n","// extracted by mini-css-extract-plugin\nvar _1 = \"SingleEditor__SingleEditor--kv3Xy\";\nexport { _1 as \"SingleEditor\" }\n","import React, { useRef } from 'react';\n\nimport IconButton from '@mui/material/IconButton/index.js';\nimport SwapHorizontalCircleRoundedIcon from '@mui/icons-material/SwapHorizontalCircleRounded';\n\nimport Checkbox from '@mui/material/Checkbox/index.js';\nimport FormControlLabel from '@mui/material/FormControlLabel/index.js';\n\nimport { MainEditor } from '../MainEditor/MainEditor.js';\n\nimport * as theEditorsStyles from '../TheEditors.css';\nimport * as styles from './DoubleEditor.css';\n\nconst DoubleEditor = () => {\n    const editorARef = useRef(null);\n    const editorBRef = useRef(null);\n\n    const [autoApply, setAutoApply] = React.useState(true);\n\n    return (\n        <div className={styles.DoubleEditor}>\n            <div className={styles.DoubleEditorContainer}>\n                <div>\n                    <div className={theEditorsStyles.TransformersStyleHeading}>\n                        I<span style={{ fontSize: 14 }}>nput</span>\n                    </div>\n                    <div>\n                        <MainEditor\n                            onLoad={(editor) => {\n                                editorARef.current = editor;\n                            }}\n                            style={{ marginTop: 5 }}\n                            editorWidth=\"100%\"\n                            editorHeight=\"300px\"\n                            allowFileInput\n                            autoApply={autoApply}\n                            onComputeOutput={\n                                // eslint-disable-next-line no-unused-vars\n                                ({ operation, output }) => {\n                                    if (editorBRef.current) {\n                                        editorBRef.current.setValue(output);\n                                    }\n                                }\n                            }\n                        />\n                    </div>\n                </div>\n                <div>\n                    <div className={styles.Combinator}>\n                        <FormControlLabel\n                            control={\n                                <Checkbox\n                                    checked={autoApply}\n                                    size=\"small\"\n                                    onChange={(event) => {\n                                        const flagAutoApply = event.target.checked;\n                                        setAutoApply(flagAutoApply);\n                                    }}\n                                />\n                            }\n                            label={\n                                <div style={{ marginLeft: 1 }}>\n                                    <span style={{ fontSize: 12 }}>Auto-apply</span>\n                                </div>\n                            }\n                            style={{\n                                // Seems that Material UI is introducing some margin, so, overriding that\n                                marginLeft: 0,\n                                marginRight: 0\n                            }}\n                        />\n                    </div>\n                    <div className={styles.Swap}>\n                        <div\n                            style={{\n                                marginLeft: 'auto',\n                                marginRight: 'auto'\n                            }}\n                        >\n                            <IconButton\n                                variant=\"filled\"\n                                color=\"primary\"\n                                size=\"small\"\n                                className={styles.SwapButton}\n                                onClick={() => {\n                                    const valueA = editorARef.current.getValue();\n                                    const valueB = editorBRef.current.getValue();\n\n                                    // Swap values\n                                    editorARef.current.setValue(valueB);\n                                    editorBRef.current.setValue(valueA);\n                                }}\n                            >\n                                <SwapHorizontalCircleRoundedIcon />\n                            </IconButton>\n                        </div>\n                    </div>\n                </div>\n                <div>\n                    <div className={theEditorsStyles.TransformersStyleHeading}>\n                        O<span style={{ fontSize: 14 }}>utput</span>\n                    </div>\n                    <div>\n                        <MainEditor\n                            placeholder=\"Result of the operation will be available here\"\n                            onLoad={(editor) => {\n                                editorBRef.current = editor;\n                            }}\n                            style={{ marginTop: 5 }}\n                            editorWidth=\"100%\"\n                            editorHeight=\"300px\"\n                            hideOperations\n                        />\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport { DoubleEditor };\n","// extracted by mini-css-extract-plugin\nvar _1 = \"DoubleEditor__Combinator--BS6ym\";\nvar _2 = \"DoubleEditor__DoubleEditor--molkI\";\nvar _3 = \"DoubleEditor__DoubleEditorContainer--QjHrA\";\nvar _4 = \"DoubleEditor__Swap--KQmx6\";\nvar _5 = \"DoubleEditor__SwapButton--nb6q9\";\nexport { _1 as \"Combinator\", _2 as \"DoubleEditor\", _3 as \"DoubleEditorContainer\", _4 as \"Swap\", _5 as \"SwapButton\" }\n","// extracted by mini-css-extract-plugin\nvar _1 = \"TripleEditor__Combinator--dMGvj\";\nvar _2 = \"TripleEditor__CombinatorAB--SQ7s9\";\nvar _3 = \"TripleEditor__CombinatorFinalOperations--DN7fl\";\nvar _4 = \"TripleEditor__OperationsButtons--iMigy\";\nvar _5 = \"TripleEditor__SwapButton--l0CD9\";\nvar _6 = \"TripleEditor__TripleEditor--CeiGf\";\nvar _7 = \"TripleEditor__TripleEditorContainer--FIE3s\";\nexport { _1 as \"Combinator\", _2 as \"CombinatorAB\", _3 as \"CombinatorFinalOperations\", _4 as \"OperationsButtons\", _5 as \"SwapButton\", _6 as \"TripleEditor\", _7 as \"TripleEditorContainer\" }\n","import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n    lazyLoadDifference,\n    lazyLoadIntersection,\n    lazyLoadUnion\n} from '../../../utils/lazyLoadLibraries/lazyLoadLibraries.js';\n\nimport IconButton from '@mui/material/IconButton/index.js';\nimport SwapHorizontalCircleRoundedIcon from '@mui/icons-material/SwapHorizontalCircleRounded';\n\nimport Button from '@mui/material/Button/index.js';\n\nimport { MainEditor } from '../MainEditor/MainEditor.js';\n\nimport * as theEditorsStyles from '../TheEditors.css';\nimport * as styles from './TripleEditor.css';\n\nconst performABToC = async ({\n    editorARef,\n    editorBRef,\n    editorCRef,\n    operation\n}) => {\n    const valueA = editorARef.current.getValue();\n    const valueB = editorBRef.current.getValue();\n\n    const a = valueA.split('\\n');\n    const b = valueB.split('\\n');\n\n    let c = '';\n\n    if (operation === 'append') {\n        c = [...a, ...b];\n    } else if (operation === 'difference') {\n        const { difference } = await lazyLoadDifference();\n        c = difference(a, b);\n    } else if (operation === 'intersection') {\n        const { intersection } = await lazyLoadIntersection();\n        c = intersection(a, b);\n    } else if (operation === 'union') {\n        const { union } = await lazyLoadUnion();\n        c = union(a, b);\n    }\n\n    const valueC = c.join('\\n');\n\n    // Update C\n    editorCRef.current.setValue(valueC);\n};\n\nconst TransformersFont = ({ children }) => {\n    return (\n        <div style={{ fontFamily: 'Transformers, sans-serif' }}>\n            {children}\n        </div>\n    );\n};\nTransformersFont.propTypes = {\n    children: PropTypes.node.isRequired\n};\n\nconst TripleEditor = function () {\n    const editorARef = useRef(null);\n    const editorBRef = useRef(null);\n    const editorCRef = useRef(null);\n\n    return (\n        <div className={styles.TripleEditor}>\n            <div className={styles.TripleEditorContainer}>\n                <div>\n                    <div className={theEditorsStyles.TransformersStyleHeading}>\n                        A\n                    </div>\n                    <div>\n                        <MainEditor\n                            onLoad={(editor) => {\n                                editorARef.current = editor;\n                            }}\n                            style={{ marginTop: 5 }}\n                            editorWidth=\"100%\"\n                            editorHeight=\"300px\"\n                            allowFileInput\n                        />\n                    </div>\n                </div>\n                <div\n                    className={\n                        styles.Combinator + ' ' +\n                        styles.CombinatorAB\n                    }\n                >\n                    <div\n                        style={{\n                            display: 'flex',\n                            flexDirection: 'column'\n                        }}\n                    >\n                        <IconButton\n                            variant=\"filled\"\n                            color=\"primary\"\n                            size=\"small\"\n                            className={styles.SwapButton}\n                            onClick={() => {\n                                const valueA = editorARef.current.getValue();\n                                const valueB = editorBRef.current.getValue();\n\n                                // Swap values\n                                editorARef.current.setValue(valueB);\n                                editorBRef.current.setValue(valueA);\n                            }}\n                        >\n                            <SwapHorizontalCircleRoundedIcon />\n                        </IconButton>\n                    </div>\n                </div>\n                <div>\n                    <div className={theEditorsStyles.TransformersStyleHeading}>\n                        B\n                    </div>\n                    <div>\n                        <MainEditor\n                            onLoad={(editor) => {\n                                editorBRef.current = editor;\n                            }}\n                            style={{ marginTop: 5 }}\n                            editorWidth=\"100%\"\n                            editorHeight=\"300px\"\n                            allowFileInput\n                        />\n                    </div>\n                </div>\n                <div\n                    className={\n                        styles.Combinator + ' ' +\n                        styles.CombinatorFinalOperations\n                    }\n                >\n                    <div className={styles.OperationsButtons}>\n                        <Button\n                            variant=\"contained\"\n                            size=\"small\"\n                            type=\"button\"\n                            style={{ display: 'block' }}\n                            onClick={async () => {\n                                await performABToC({\n                                    editorARef,\n                                    editorBRef,\n                                    editorCRef,\n                                    operation: 'union'\n                                });\n                            }}\n                        >\n                            <div style={{ display: 'flex', justifyContent: 'center' }}>\n                                <TransformersFont>A</TransformersFont>\n                                <div style={{ marginTop: -2, marginLeft: 4, marginRight: 4 }}> ∪ </div>\n                                <TransformersFont>B</TransformersFont>\n                            </div>\n                        </Button>\n\n                        <Button\n                            variant=\"contained\"\n                            size=\"small\"\n                            type=\"button\"\n                            style={{ display: 'block' }}\n                            onClick={async () => {\n                                await performABToC({\n                                    editorARef,\n                                    editorBRef,\n                                    editorCRef,\n                                    operation: 'intersection'\n                                });\n                            }}\n                        >\n                            <div style={{ display: 'flex', justifyContent: 'center' }}>\n                                <TransformersFont>A</TransformersFont>\n                                <div style={{ marginTop: -2, marginLeft: 4, marginRight: 4 }}> ∩ </div>\n                                <TransformersFont>B</TransformersFont>\n                            </div>\n                        </Button>\n\n                        <Button\n                            variant=\"contained\"\n                            size=\"small\"\n                            type=\"button\"\n                            style={{ display: 'block' }}\n                            onClick={async () => {\n                                await performABToC({\n                                    editorARef,\n                                    editorBRef,\n                                    editorCRef,\n                                    operation: 'append'\n                                });\n                            }}\n                        >\n                            <div style={{ display: 'flex', justifyContent: 'center' }}>\n                                <TransformersFont>A</TransformersFont>\n                                <div style={{ marginTop: -2, marginLeft: 4, marginRight: 4 }}> + </div>\n                                <TransformersFont>B</TransformersFont>\n                            </div>\n                        </Button>\n\n                        <Button\n                            variant=\"contained\"\n                            size=\"small\"\n                            type=\"button\"\n                            style={{ display: 'block' }}\n                            onClick={async () => {\n                                await performABToC({\n                                    editorARef,\n                                    editorBRef,\n                                    editorCRef,\n                                    operation: 'difference'\n                                });\n                            }}\n                        >\n                            <div style={{ display: 'flex', justifyContent: 'center' }}>\n                                <TransformersFont>A</TransformersFont>\n                                <div style={{ marginTop: -2, marginLeft: 4, marginRight: 4 }}> - </div>\n                                <TransformersFont>B</TransformersFont>\n                            </div>\n                        </Button>\n                    </div>\n                </div>\n                <div>\n                    <div className={theEditorsStyles.TransformersStyleHeading}>\n                        C\n                    </div>\n                    <div>\n                        <MainEditor\n                            placeholder=\"Result of the operation will be available here\"\n                            onLoad={(editor) => {\n                                editorCRef.current = editor;\n                            }}\n                            style={{ marginTop: 5 }}\n                            editorWidth=\"100%\"\n                            editorHeight=\"300px\"\n                            hideOperations\n                        />\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport { TripleEditor };\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Tabs from '@mui/material/Tabs/index.js';\nimport Tab from '@mui/material/Tab/index.js';\n\nimport { useLocalStorage } from 'react-use';\nimport { useSearchParams  } from 'react-router-dom';\n\nimport { getCurrentSearchParamsAsJson } from '../utils/getCurrentSearchParamsAsJson.js';\n\nimport { SingleEditor } from '../SingleEditor/SingleEditor.js';\nimport { DoubleEditor } from '../DoubleEditor/DoubleEditor.js';\nimport { TripleEditor } from '../TripleEditor/TripleEditor.js';\n\nimport * as helperStyles from '../../helperStyles.css';\nimport * as styles from './ContentTabs.css';\n\nconst TabPanel = function (props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            hidden={value !== index}\n            {...other}\n        >\n            <div>\n                {children}\n            </div>\n\n            {/*\n                // If we wish to unmount the tab content when it is not selected\n                {\n                    value === index &&\n                    (\n                        <div>\n                            {children}\n                        </div>\n                    )\n                }\n            */}\n        </div>\n    );\n};\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.number.isRequired,\n    value: PropTypes.number.isRequired\n};\n\nconst getSanitizedTransformersWithStatus = (transformers) => {\n    if (\n        transformers === '1' ||\n        transformers === '2' ||\n        transformers === '3'\n    ) {\n        return {\n            wasAlreadyClean: true,\n            transformers\n        };\n    } else {\n        return {\n            wasAlreadyClean: false,\n            transformers: '2'\n        };\n    }\n};\n\nconst ContentTabs = () => {\n    const [storedTransformers, setStoredTransformers] = useLocalStorage('transformers', '2', { raw: true });\n\n    const transformers = getSanitizedTransformersWithStatus(storedTransformers).transformers;\n    const transformersAsInt = Number.parseInt(transformers, 10);\n    const [selectedTabIndex, setSelectedTabIndex] = useState(transformersAsInt - 1);\n\n    const [firstTabInitialized, setFirstTabInitialized] = useState(false);\n    const [secondTabInitialized, setSecondTabInitialized] = useState(false);\n    const [thirdTabInitialized, setThirdTabInitialized] = useState(false);\n\n    const [searchParams, setSearchParams] = useSearchParams();\n    useEffect(\n        () => {\n            const transformersFromSearchParams = searchParams.get('transformers');\n            const sanitizedTransformersWithStatus = getSanitizedTransformersWithStatus(transformersFromSearchParams);\n\n            let transformerBeingMounted = transformersAsInt;\n\n            if (sanitizedTransformersWithStatus.wasAlreadyClean) {\n                setStoredTransformers(transformersFromSearchParams);\n                setSelectedTabIndex(\n                    Number.parseInt(sanitizedTransformersWithStatus.transformers, 10) - 1\n                );\n\n                transformerBeingMounted = Number.parseInt(sanitizedTransformersWithStatus.transformers, 10);\n            }\n\n            if (transformerBeingMounted === 1 && !firstTabInitialized) {\n                setFirstTabInitialized(true);\n            } else if (transformerBeingMounted === 2 && !secondTabInitialized) {\n                setSecondTabInitialized(true);\n            } else if (transformerBeingMounted === 3 && !thirdTabInitialized) {\n                setThirdTabInitialized(true);\n            }\n        },\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [] // This useEffect() should run only once (at the time of mounting)\n    );\n\n    if (transformersAsInt === 1 && !firstTabInitialized) {\n        setFirstTabInitialized(true);\n    } else if (transformersAsInt === 2 && !secondTabInitialized) {\n        setSecondTabInitialized(true);\n    } else if (transformersAsInt === 3 && !thirdTabInitialized) {\n        setThirdTabInitialized(true);\n    }\n\n    const handleChange = (event, newValue) => {\n        setSelectedTabIndex(newValue);\n\n        const transformers = '' + (newValue + 1);\n\n        setStoredTransformers(transformers);\n\n        const currentSearchParams = getCurrentSearchParamsAsJson();\n        const targetSearchParams = { ...currentSearchParams };\n        targetSearchParams.transformers = transformers;\n        setSearchParams(targetSearchParams);\n    };\n\n    return (\n        <div className={styles.ContentTabs}>\n            <div\n                style={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    containerType: 'inline-size'\n                }}\n            >\n                <Tabs value={selectedTabIndex} onChange={handleChange}>\n                    <Tab\n                        label={\n                            <div\n                                style={{\n                                    fontFamily: '\"Transformers\", sans-serif',\n                                    fontVariant: 'small-caps',\n                                    textTransform: 'none',\n                                    fontSize: 18\n                                }}\n                            >\n                                <span className={helperStyles.hideForContainerLT640}>\n                                    Transformers{' '}\n                                </span>\n                                I\n                            </div>\n                        }\n                    />\n                    <Tab\n                        label={\n                            <div\n                                style={{\n                                    fontFamily: '\"Transformers\", sans-serif',\n                                    fontVariant: 'small-caps',\n                                    textTransform: 'none',\n                                    fontSize: 18\n                                }}\n                            >\n                                <span className={helperStyles.hideForContainerLT640}>\n                                    Transformers{' '}\n                                </span>\n                                II\n                            </div>\n                        }\n                    />\n                    <Tab\n                        label={\n                            <div\n                                style={{\n                                    fontFamily: '\"Transformers\", sans-serif',\n                                    fontVariant: 'small-caps',\n                                    textTransform: 'none',\n                                    fontSize: 18\n                                }}\n                            >\n                                <span className={helperStyles.hideForContainerLT640}>\n                                    Transformers{' '}\n                                </span>\n                                III\n                            </div>\n                        }\n                    />\n                </Tabs>\n            </div>\n            <div style={{ marginTop: 40 }}>\n                <TabPanel value={selectedTabIndex} index={0}>\n                    <div>\n                        { firstTabInitialized ? <SingleEditor /> : null }\n                    </div>\n                </TabPanel>\n                <TabPanel value={selectedTabIndex} index={1}>\n                    <div>\n                        { secondTabInitialized ? <DoubleEditor /> : null }\n                    </div>\n                </TabPanel>\n                <TabPanel value={selectedTabIndex} index={2}>\n                    <div>\n                        { thirdTabInitialized ? <TripleEditor /> : null }\n                    </div>\n                </TabPanel>\n            </div>\n        </div>\n    );\n};\n\nexport { ContentTabs };\n","// extracted by mini-css-extract-plugin\nvar _1 = \"ContentTabs__ContentTabs--fG_XB\";\nexport { _1 as \"ContentTabs\" }\n","import React from 'react';\n\nimport { ContentTabs } from './ContentTabs/ContentTabs.js';\n\nimport * as styles from './Dashboard.css';\n\nconst Dashboard = () => {\n    return (\n        <div\n            className={styles.Dashboard}\n            style={{ marginTop: 35 }}\n        >\n            <ContentTabs />\n        </div>\n    );\n};\n\nexport { Dashboard };\n","// extracted by mini-css-extract-plugin\nvar _1 = \"Dashboard__Dashboard--d2pNX\";\nexport { _1 as \"Dashboard\" }\n","// extracted by mini-css-extract-plugin\nvar _1 = \"PageFooter__PageFooter--yI25Y\";\nexport { _1 as \"PageFooter\" }\n","import React from 'react';\n\nimport * as styles from './PageFooter.css';\n\nimport { CreatedByMessage } from 'generic-components/CreatedByMessage/CreatedByMessage.js';\n\nconst PageFooter = function () {\n    return (\n        <div className={styles.PageFooter}>\n            <div\n                style={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    marginTop: 45,\n                    marginBottom: 20\n                }}\n            >\n                <CreatedByMessage />\n            </div>\n        </div>\n    );\n};\n\nexport { PageFooter };\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from '@mui/material/Button/index.js';\nimport Dialog from '@mui/material/Dialog/index.js';\nimport DialogActions from '@mui/material/DialogActions/index.js';\nimport DialogContent from '@mui/material/DialogContent/index.js';\nimport DialogTitle from '@mui/material/DialogTitle/index.js';\n\nconst DialogCssContainerQueriesNotSupported = function ({\n    onClose\n}) {\n    return (\n        <Dialog\n            open={true}\n            onClose={onClose}\n        >\n            <DialogTitle>\n                {'Browser upgrade required!'}\n            </DialogTitle>\n            <DialogContent>\n                <div style={{ fontSize: 12 }}>\n                    <div>\n                        {'It seems that you are using an old browser which does not support \"CSS container queries\".'}\n                    </div>\n                    <div style={{ marginTop: 20 }}>\n                        {'Since this tool is oriented for users with modern browsers, the older versions of browsers are not well-supported and will experience a poor user interface.'}\n                    </div>\n                    <div style={{ marginTop: 20 }}>\n                        {'We recommend you to upgrade to the latest version of a modern browser such as Brave / Chrome / Edge / Firefox / Opera / Safari.'}\n                    </div>\n                </div>\n            </DialogContent>\n            <DialogActions>\n                <div\n                    style={{\n                        marginRight: 16,\n                        marginBottom: 8,\n                        marginLeft: 16\n                    }}\n                >\n                    <Button\n                        variant=\"contained\"\n                        onClick={onClose}\n                        style={{\n                            textTransform: 'unset'\n                        }}\n                    >\n                        I understand\n                    </Button>\n                </div>\n            </DialogActions>\n        </Dialog>\n    );\n};\n\nDialogCssContainerQueriesNotSupported.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n\nexport { DialogCssContainerQueriesNotSupported };\n","import React, { useEffect } from 'react';\n\nimport { DialogCssContainerQueriesNotSupported } from '../Dialogs/DialogCssContainerQueriesNotSupported.js';\n\nconst AppDialogs = function () {\n    const [openCssContainerQueriesDialog, setOpenCssContainerQueriesDialog] = React.useState(false);\n\n    useEffect(() => {\n        const supportsContainerQueries = 'container' in document.documentElement.style;\n\n        if (!supportsContainerQueries) {\n            setOpenCssContainerQueriesDialog(true);\n        }\n    }, []);\n    return (\n        <React.Fragment>\n            {\n                openCssContainerQueriesDialog &&\n                <DialogCssContainerQueriesNotSupported\n                    onClose={() => {\n                        setOpenCssContainerQueriesDialog(false);\n                    }}\n                />\n            }\n        </React.Fragment>\n    );\n};\n\nexport { AppDialogs };\n","import React from 'react';\n\nimport './styles-reset.css';\n\nimport * as styles from './App.css';\n\nimport { PageHeader } from './PageHeader/PageHeader.js';\nimport { Dashboard } from './Dashboard/Dashboard.js';\nimport { PageFooter } from './PageFooter/PageFooter.js';\n\nimport { AppDialogs } from './AppDialogs/AppDialogs.js';\n\nconst App = function () {\n    return (\n        <div className={styles.App}>\n            <PageHeader />\n            <div className={styles.ContentWide}>\n                <Dashboard />\n            </div>\n            <PageFooter />\n\n            <AppDialogs />\n        </div>\n    );\n};\n\nexport { App };\n","// extracted by mini-css-extract-plugin\nvar _1 = \"App__App--TxRw8\";\nvar _2 = \"App__ContentWide--Llj80\";\nexport { _1 as \"App\", _2 as \"ContentWide\" }\n","import React from 'react';\n\nimport {\n    createBrowserRouter,\n    RouterProvider\n} from 'react-router-dom';\n\nimport { SnackbarProvider } from 'notistack';\n\nimport { App } from './App.js';\n\nconst router = createBrowserRouter([\n    {\n        // Currently, using it as SPA with query parameters, so all routes are the same. In local development, the path\n        // is `/`, but in GitHub Pages, the path is `/transformers/` (https://webextensions.github.io/transformers/),\n        // so, `window.location.pathname` matches that in the URL.\n        path: window.location.pathname,\n\n        element: (\n            <App />\n        )\n    }\n]);\n\nconst AppWrapper = function () {\n    return (\n        <SnackbarProvider\n            anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'right'\n            }}\n            maxSnack={3}\n            dense\n            preventDuplicate\n            autoHideDuration={3000}\n        >\n            <RouterProvider router={router} />\n        </SnackbarProvider>\n    );\n};\n\nexport { AppWrapper };\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\n\nimport './index.css';\n\nimport { AppWrapper } from './App/AppWrapper.js';\n\nconst container = document.getElementById('root');\nconst root = createRoot(container);\nroot.render(<AppWrapper />);\n","window.less = {\n    // To disable any attempt to transpile LESS to CSS from style tags with rel=\"stylesheet/less\" since that would\n    // lead to an unwanted console message saying: \"Less has finished and no sheets were loaded.\"\n    onReady: false\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdD = function () {\n\tthrow new Error('define cannot be used indirect');\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"chunk.\" + (chunkId === 549 ? \"lessNpmPackage\" : chunkId) + \".\" + {\"133\":\"ad6cb72d43e2f1f8f46a\",\"245\":\"57f51ca7c5645e553199\",\"287\":\"f801aa4f916aa7ab50f0\",\"299\":\"958a98c1dcb50cf77f50\",\"380\":\"a94a696d4b0a39c8b1be\",\"463\":\"bf699492c87539651e46\",\"480\":\"949ed50d5f4b52319dc8\",\"494\":\"32aeb4ca174328e3c824\",\"549\":\"c4c3aaae535dfbb78b97\",\"609\":\"4fe0e1e0c0a4e120f642\",\"837\":\"2926f15d2a1fad161c73\"}[chunkId] + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t57: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunktransformers\"] = self[\"webpackChunktransformers\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [96], () => (__webpack_require__(52494)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","leafPrototypes","getProto","inProgress","dataWebpackPrefix","PageHeader","React","className","style","display","flexDirection","alignItems","marginTop","margin","textAlign","fontVariant","letterSpacing","fontSize","color","getCurrentSearchParamsAsJson","params","URLSearchParams","window","location","search","ob","param","mode_css","mode_csv","mode_html","mode_json","mode_less","mode_text","modes","defaultRecommendedOperations","defaultSelectedOperations","recentOperationsFromLocalStorage","localStorage","getItem","recentOperations","JSON","parse","Array","isArray","err","console","error","recentOperationsAtom","atom","lazyLoadBeautifyCss","async","beautifyCss","configCssFormat","operationId","label","icon","MoodIcon","snippets","content","join","performOperation","inputText","extras","configCssMinify","CompressIcon","minifyCss","lazyLoadMinifyCss","configCssToScss","DataObjectIcon","output","trim","cssToScss","lazyLoadCssToScss","alert","modeCss","modeId","modeNameForAceEditor","title","hasSyntaxHighlighting","operations","optgroupLabel","options","arrOperations","reduce","acc","curr","concat","obOperations","removeCommaCharacterAtEndFromLine","line","at","slice","Math","max","length","removeMatchingCharacterAtEndFromLine","removeQuoteAndApostropheCharactersFromLine","replaceAll","removeLastColumnFromCsvLine","columns","split","pop","removeFirstColumnFromCsvLine","shift","traverseNode","root","transform","key","fixDataTypes","json","node","String","Number","map","item","configCsvRemoveFirstColumn","FirstPageIcon","operationInputType","operationOutputType","inputArrayOfStrings","configCsvRemoveLastColumn","LastPageIcon","configCsvToJson","lines","arrJson","csv2json","index","obj","entries","push","stringify","csvToJson","modeCsv","configHtmlFormat","prettier","parserHtml","Promise","all","lazyLoadPrettierAndParserHtml","parser","tabWidth","plugins","format","modeHtml","configJsonFormat","inputJson","configJsonMinify","configJsonSort","CategoryIcon","jsonStableStringify","space","removePropertyRecursively","propertyName","hasOwnProperty","Object","keys","configJsonRemoveProperty","PlaylistRemoveIcon","prompt","Error","configJsonArrayReverse","SwapVertIcon","reverse","flattenObjectsRecursively","parentKey","value","newKey","configJsonArrayOfObjectsFlattenObjects","LinearScaleIcon","configJsonArrayOfObjectsSortByProperty","sort","a","b","configJsonFixDataTypes","BuildIcon","configJsonToCsv","AppsIcon","json2csv","jsonToCsv","configJsonToLines","ReorderIcon","every","modeJson","configLessFormat","configLessToCss","extraInfo","less","libs","lazyLoadBeautifyCssAndLess","render","css","e","message","column","moveCursorTo","row","position","modeLess","configTextRemoveEmptyLines","SettingsEthernetIcon","filter","Boolean","configTextRemoveDuplicates","CopyAllIcon","Set","configTextSort","SortIcon","outputArrayOfStrings","configTextSortCaseInsensitive","AbcIcon","toLowerCase","localeCompare","configTextSortNatural","ParkIcon","undefined","numeric","configTextRandomize","ShuffleOnIcon","random","configTextSortByLength","TextRotationAngledownIcon","configTextReverse","KeyboardDoubleArrowDownIcon","configTextTrim","MultipleStopIcon","configTextTrimLeft","ArrowBackIcon","trimStart","configTextTrimRight","ArrowForwardIcon","trimEnd","configTextRemoveFirstFewCharacters","BackspaceIcon","numberOfCharsToRemove","n","parseInt","isNaN","configTextRemoveLastFewCharacters","configTextRemoveCommaCharacterAtLineEnds","CleaningServicesIcon","configTextRemoveQuoteAndApostropheCharacters","FormatQuoteIcon","configTextGetStats","BarChartIcon","stats","input","linesCount","charactersCount","words","word","wordsCount","lowerCaseWords","uniqueWordsCount","size","configUnicodeToPunycode","TranslateIcon","unicodeToPunycode","configPunycodeToUnicode","LanguageIcon","punycodeToUnicode","configTextLinesToJsonArray","modeText","arrModeConfigs","obModeConfigs","modeConfig","RecentOperations","mode","onOperationClick","setRecentOperations","useAtom","operationsForMode","overflow","paddingRight","marginLeft","arr","includes","operationForMode","IconButton","iconTooltip","onClick","_modeConfig$obOperati","Icon","IconNotAvailable","propTypes","PropTypes","isRequired","_3","AceEditor","copy","simpleText","navigator","clipboard","writeText","generateTargetSearchParamsAsJson","operation","selectedOperations","targetSearchParams","getSanitizedModeWithStatus","wasAlreadyClean","readable","MainEditor","placeholder","onLoad","onValueUpdate","allowFileInput","editorWidth","editorHeight","autoApply","onComputeOutput","hideOperations","enqueueSnackbar","useSnackbar","storedMode","setStoredMode","useLocalStorage","raw","setMode","useState","searchParams","setSearchParams","useSearchParams","useEffect","modeFromSearchParams","get","storedOperations","setStoredOperations","structuredClone","operationFromSearchParams","sanitizedMode","sanitizedOperation","getSanitizedOperationWithStatus","flagSyntaxHighlighting","setFlagSyntaxHighlighting","flagLineWrap","setFlagLineWrap","refreshUndoRedo","setRefreshUndoRedo","Date","now","modeForSyntaxHighlighting","editorRef","useRef","debouncedEnqueueSnackbar","useDebouncedCallback","errMessage","debouncedOnChange","val","delta","applyTheOperation","operationToApply","passedOperation","operationsByUser","uniqueOperationsByUser","indexOf","setItem","operationConfig","inputValue","current","getValue","setValue","parameters","moveCursorToPosition","focus","extraInfoString","styles","justifyContent","containerType","Select","native","width","height","onChange","target","searchParamsToApply","disabled","BorderColorIcon","BorderColorOutlinedIcon","border","selectedOperation","option","editor","selectedOperationId","sample","ScienceIcon","backgroundColor","CheckIcon","Button","variant","startIcon","helperStyles","visibility","borderRadius","StarIcon","borderRight","borderTopLeftRadius","borderBottomLeftRadius","Suspense","fallback","Loading","type","setOptions","wrap","theme","editorProps","$blockScrolling","minHeight","component","FileOpenIcon","file","files","fileContent","text","selectedText","getSelectedText","selectAll","execCommand","ContentCutIcon","ContentCopyIcon","getSession","getUndoManager","hasUndo","UndoIcon","hasRedo","RedoIcon","WrapTextIcon","blob","Blob","document","createElement","extension","href","URL","createObjectURL","localTimeAsPartOfFilename","getTimezoneOffset","toISOString","replace","download","click","SaveIcon","SingleEditor","theEditorsStyles","DoubleEditor","editorARef","editorBRef","setAutoApply","FormControlLabel","control","Checkbox","checked","event","flagAutoApply","marginRight","valueA","valueB","SwapHorizontalCircleRoundedIcon","performABToC","editorCRef","c","difference","default","lazyLoadDifference","intersection","lazyLoadIntersection","union","lazyLoadUnion","valueC","TransformersFont","children","fontFamily","TripleEditor","TabPanel","props","other","_extends","hidden","getSanitizedTransformersWithStatus","transformers","ContentTabs","storedTransformers","setStoredTransformers","transformersAsInt","selectedTabIndex","setSelectedTabIndex","firstTabInitialized","setFirstTabInitialized","secondTabInitialized","setSecondTabInitialized","thirdTabInitialized","setThirdTabInitialized","transformersFromSearchParams","sanitizedTransformersWithStatus","transformerBeingMounted","Tabs","handleChange","newValue","Tab","textTransform","Dashboard","PageFooter","marginBottom","CreatedByMessage","DialogCssContainerQueriesNotSupported","onClose","Dialog","open","DialogTitle","DialogContent","DialogActions","AppDialogs","openCssContainerQueriesDialog","setOpenCssContainerQueriesDialog","documentElement","App","router","createBrowserRouter","path","pathname","element","AppWrapper","SnackbarProvider","anchorOrigin","vertical","horizontal","maxSnack","dense","preventDuplicate","autoHideDuration","RouterProvider","container","getElementById","createRoot","onReady","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","id","loaded","__webpack_modules__","call","m","amdD","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","splice","r","getter","__esModule","d","getPrototypeOf","t","this","then","ns","create","def","getOwnPropertyNames","forEach","definition","o","defineProperty","enumerable","f","chunkId","promises","u","miniCssF","g","globalThis","Function","prop","prototype","l","url","done","script","needAttach","scripts","getElementsByTagName","s","getAttribute","charset","timeout","nc","setAttribute","src","onScriptComplete","prev","onerror","onload","clearTimeout","doneFns","parentNode","removeChild","setTimeout","bind","head","appendChild","Symbol","toStringTag","nmd","paths","scriptUrl","importScripts","currentScript","tagName","toUpperCase","test","p","installedChunks","installedChunkData","promise","resolve","reject","errorType","realSrc","name","request","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","some","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}
{"version":3,"file":"bundle.index.164358374e60db34cebc.js","mappings":"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","sources":["webpack://transformers/webpack/runtime/chunk loaded","webpack://transformers/webpack/runtime/create fake namespace object","webpack://transformers/webpack/runtime/load script","webpack://transformers/./src/App/App.css?43aa","webpack://transformers/./src/App/PageHeader/PageHeader.js","webpack://transformers/./src/App/PageHeader/PageHeader.css?080f","webpack://transformers/./src/App/Dashboard/utils/getCurrentSearchParamsAsJson.js","webpack://transformers/./src/App/Dashboard/MainEditor/constOperations.js","webpack://transformers/./src/App/Dashboard/MainEditor/JotaiState.js","webpack://transformers/./src/utils/lazyLoadLibraries/lazyLoadLibraries.js","webpack://transformers/./src/App/Dashboard/MainEditor/modes/modeCss/configCssFormat.js","webpack://transformers/./src/App/Dashboard/MainEditor/modes/modeCss/configCssMinify.js","webpack://transformers/./src/App/Dashboard/MainEditor/modes/modeCss/configCssToScss.js","webpack://transformers/./src/App/Dashboard/MainEditor/modes/modeCss/index.js","webpack://transformers/./src/App/Dashboard/MainEditor/textUtils.js","webpack://transformers/./src/App/Dashboard/MainEditor/modes/modeCsv/configCsvRemoveFirstColumn.js","webpack://transformers/./src/App/Dashboard/MainEditor/modes/modeCsv/configCsvRemoveLastColumn.js","webpack://transformers/./src/App/Dashboard/MainEditor/modes/modeCsv/configCsvToJson.js","webpack://transformers/./src/App/Dashboard/MainEditor/modes/modeCsv/index.js","webpack://transformers/./src/App/Dashboard/MainEditor/modes/modeHtml/configHtmlFormat.js","webpack://transformers/./src/App/Dashboard/MainEditor/modes/modeHtml/index.js","webpack://transformers/./src/App/Dashboard/MainEditor/modes/modeJson/configJsonFormat.js","webpack://transformers/./src/App/Dashboard/MainEditor/modes/modeJson/configJsonMinify.js","webpack://transformers/./src/App/Dashboard/MainEditor/modes/modeJson/configJsonSort.js","webpack://transformers/./src/App/Dashboard/MainEditor/modes/modeJson/configJsonRemoveProperty.js","webpack://transformers/./src/App/Dashboard/MainEditor/modes/modeJson/configJsonArrayReverse.js","webpack://transformers/./src/App/Dashboard/MainEditor/modes/modeJson/configJsonArrayOfObjectsFlattenObjects.js","webpack://transformers/./src/App/Dashboard/MainEditor/modes/modeJson/configJsonArrayOfObjectsSortByProperty.js","webpack://transformers/./src/App/Dashboard/MainEditor/modes/modeJson/configJsonFixDataTypes.js","webpack://transformers/./src/App/Dashboard/MainEditor/modes/modeJson/configJsonToCsv.js","webpack://transformers/./src/App/Dashboard/MainEditor/modes/modeJson/configJsonToLines.js","webpack://transformers/./src/App/Dashboard/MainEditor/modes/modeJson/index.js","webpack://transformers/./src/App/Dashboard/MainEditor/modes/modeLess/configLessFormat.js","webpack://transformers/./src/App/Dashboard/MainEditor/modes/modeLess/configLessToCss.js","webpack://transformers/./src/App/Dashboard/MainEditor/modes/modeLess/index.js","webpack://transformers/./src/App/Dashboard/MainEditor/modes/modeText/configTextRemoveEmptyLines.js","webpack://transformers/./src/App/Dashboard/MainEditor/modes/modeText/configTextRemoveDuplicates.js","webpack://transformers/./src/App/Dashboard/MainEditor/modes/modeText/configTextSort.js","webpack://transformers/./src/App/Dashboard/MainEditor/modes/modeText/configTextSortCaseInsensitive.js","webpack://transformers/./src/App/Dashboard/MainEditor/modes/modeText/configTextSortNatural.js","webpack://transformers/./src/App/Dashboard/MainEditor/modes/modeText/configTextRandomize.js","webpack://transformers/./src/App/Dashboard/MainEditor/modes/modeText/configTextReverse.js","webpack://transformers/./src/App/Dashboard/MainEditor/modes/modeText/configTextTrim.js","webpack://transformers/./src/App/Dashboard/MainEditor/modes/modeText/configTextTrimLeft.js","webpack://transformers/./src/App/Dashboard/MainEditor/modes/modeText/configTextTrimRight.js","webpack://transformers/./src/App/Dashboard/MainEditor/modes/modeText/configTextRemoveCommaCharacterAtLineEnds.js","webpack://transformers/./src/App/Dashboard/MainEditor/modes/modeText/configTextRemoveQuoteAndApostropheCharacters.js","webpack://transformers/./src/App/Dashboard/MainEditor/modes/modeText/configTextGetStats.js","webpack://transformers/./src/App/Dashboard/MainEditor/modes/modeText/configTextLinesToJsonArray.js","webpack://transformers/./src/App/Dashboard/MainEditor/modes/modeText/index.js","webpack://transformers/./src/App/Dashboard/MainEditor/modes/index.js","webpack://transformers/./src/App/Dashboard/MainEditor/RecentOperations.js","webpack://transformers/./src/App/helperStyles.css?06d8","webpack://transformers/./src/App/Dashboard/MainEditor/MainEditor.css?5fab","webpack://transformers/./src/App/Dashboard/MainEditor/MainEditor.js","webpack://transformers/./src/App/Dashboard/TheEditors.css?b810","webpack://transformers/./src/App/Dashboard/SingleEditor/SingleEditor.js","webpack://transformers/./src/App/Dashboard/SingleEditor/SingleEditor.css?8ce8","webpack://transformers/./src/App/Dashboard/DoubleEditor/DoubleEditor.css?d54a","webpack://transformers/./src/App/Dashboard/DoubleEditor/DoubleEditor.js","webpack://transformers/./src/App/Dashboard/TripleEditor/TripleEditor.css?3bb2","webpack://transformers/./src/App/Dashboard/TripleEditor/TripleEditor.js","webpack://transformers/./src/App/Dashboard/ContentTabs/ContentTabs.js","webpack://transformers/./src/App/Dashboard/ContentTabs/ContentTabs.css?0743","webpack://transformers/./src/App/Dashboard/Dashboard.js","webpack://transformers/./src/App/Dashboard/Dashboard.css?d7b8","webpack://transformers/./src/App/PageFooter/PageFooter.js","webpack://transformers/./src/App/PageFooter/PageFooter.css?9170","webpack://transformers/./src/App/Dialogs/DialogCssContainerQueriesNotSupported.js","webpack://transformers/./src/App/AppDialogs/AppDialogs.js","webpack://transformers/./src/App/App.js","webpack://transformers/./src/App/AppWrapper.js","webpack://transformers/./src/index.js","webpack://transformers/./src/utils/lazyLoadLibraries/before-loading-less.js","webpack://transformers/webpack/bootstrap","webpack://transformers/webpack/runtime/amd define","webpack://transformers/webpack/runtime/compat get default export","webpack://transformers/webpack/runtime/define property getters","webpack://transformers/webpack/runtime/ensure chunk","webpack://transformers/webpack/runtime/get javascript chunk filename","webpack://transformers/webpack/runtime/get mini-css chunk filename","webpack://transformers/webpack/runtime/global","webpack://transformers/webpack/runtime/hasOwnProperty shorthand","webpack://transformers/webpack/runtime/make namespace object","webpack://transformers/webpack/runtime/node module decorator","webpack://transformers/webpack/runtime/publicPath","webpack://transformers/webpack/runtime/jsonp chunk loading","webpack://transformers/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","var inProgress = {};\nvar dataWebpackPrefix = \"transformers:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t};\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// extracted by mini-css-extract-plugin\nexport default {\"ContentWide\":\"App__ContentWide--Llj80\"};","import React from 'react';\n\nimport styles from './PageHeader.css';\n\nconst PageHeader = function () {\n    return (\n        <div className={styles.PageHeader}>\n            <div\n                style={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'center',\n                    marginTop: 25\n                }}\n            >\n                <h1 style={{ margin: 0, textAlign: 'center' }}>\n                    <span style={{ fontVariant: 'small-caps' }}>\n                        <span style={{ letterSpacing: '0.05em', fontSize: '28px' }}>\n                            {'Transformers: '}\n                        </span>\n                    </span>\n                    <span style={{ fontVariant: 'small-caps' }}>\n                        <span style={{ letterSpacing: '0.05em' }}>\n                            Operations&nbsp;on&nbsp;the&nbsp;Text\n                        </span>\n                    </span>\n                </h1>\n                <h3 style={{ fontSize: 11, margin: '10px 0 0 0', color: '#555', textAlign: 'center' }}>\n                    Operations for Text, List, Set, CSV, JSON, etc\n                </h3>\n            </div>\n        </div>\n    );\n};\n\nexport { PageHeader };\n","// extracted by mini-css-extract-plugin\nexport default {\"PageHeader\":\"PageHeader__PageHeader--AAWQ1\"};","const getCurrentSearchParamsAsJson = () => {\n    const params = new URLSearchParams(window.location.search);\n    const ob = {};\n    for (const param of params) {\n        ob[param[0]] = param[1];\n    }\n\n    return ob;\n};\n\nexport { getCurrentSearchParamsAsJson };\n","import CircleIcon from '@mui/icons-material/Circle.js';\n\nexport const\n    mode_css  = 'css',\n    mode_csv  = 'csv',\n    mode_html = 'html',\n    mode_json = 'json',\n    mode_less = 'less',\n    mode_text = 'text';\n\nexport const\n    modes = [\n        mode_css,\n        mode_csv,\n        mode_html,\n        mode_json,\n        mode_less,\n        mode_text\n    ];\n\nexport const defaultRecommendedOperations = [\n    'cssFormat',\n    'csvToJson',\n    'htmlFormat',\n    'jsonFormat',\n    'lessFormat',\n    'textSort'\n];\n\nexport const defaultSelectedOperations = {\n    [mode_css]: 'cssFormat',\n    [mode_csv]: 'csvToJson',\n    [mode_html]: 'htmlFormat',\n    [mode_json]: 'jsonFormat',\n    [mode_less]: 'lessFormat',\n    [mode_text]: 'textSort'\n};\n\nexport const IconNotAvailable = CircleIcon;\n\n// const availableOperations = {};\n\n// const allOperationsById = {};\n// for (const mode in availableOperations) {\n//     const operationsForMode = availableOperations[mode];\n//     for (const operationId in operationsForMode) {\n//         allOperationsById[operationId] = operationsForMode[operationId];\n//     }\n// }\n\n// for (const mode in availableOperations) {\n//     const operationsForMode = availableOperations[mode];\n//     for (const operationId in operationsForMode) {\n//         operationsForMode[operationId].id = operationId;\n//     }\n// }\n\n// const allOperationIds = Object.keys(allOperationsById);\n\n// export {\n//     availableOperations,\n//     allOperationsById,\n//     allOperationIds\n// };\n","import { atom } from 'jotai';\n\nimport {\n    // allOperationIds,\n\n    defaultRecommendedOperations\n} from './constOperations.js';\n\nconst recentOperationsFromLocalStorage = localStorage.getItem('recentOperations');\n\nlet recentOperations = [];\ntry {\n    recentOperations = JSON.parse(recentOperationsFromLocalStorage);\n    if (!Array.isArray(recentOperations)) {\n        recentOperations = defaultRecommendedOperations;\n    }\n} catch (err) {\n    console.error(err);\n}\n\n// // Remove operations that are not available anymore with that name\n// recentOperations = recentOperations.filter(operation => {\n//     return allOperationIds.includes(operation);\n// });\n// console.log('TODO: FIXME: Bring back this commented out code');\n\nconst recentOperationsAtom = atom(recentOperations);\n\nexport { recentOperationsAtom };\n","import './before-loading-less.js';\n\nexport const lazyLoadLess = async () => {\n    const less = await import('less');\n    return { less };\n};\n\nexport const lazyLoadBeautifyCss = async () => {\n    const { beautifyCss } = await import('helpmate-css/dist/index.js');\n    return { beautifyCss };\n};\n\nexport const lazyLoadMinifyCss = async () => {\n    const { minifyCss } = await import('helpmate-css/dist/index.js');\n    return { minifyCss };\n};\n\nexport const lazyLoadBeautifyCssAndLess = async () => {\n    const libs = await Promise.all([\n        import('helpmate-css/dist/index.js'),\n        import('less')\n    ]);\n    const { beautifyCss } = libs[0];\n    const less = libs[1];\n    return {\n        beautifyCss,\n        less\n    };\n};\n\nexport const lazyLoadDifference = async () => {\n    // https://lodash.com/per-method-packages\n    const difference = await import('lodash/difference.js');\n    return { difference: difference.default };\n};\nexport const lazyLoadIntersection = async () => {\n    // https://lodash.com/per-method-packages\n    const intersection = await import('lodash/intersection.js');\n    return { intersection: intersection.default };\n};\nexport const lazyLoadUnion = async () => {\n    // https://lodash.com/per-method-packages\n    const union = await import('lodash/union.js');\n    return { union: union.default };\n};\n\nexport const lazyLoadCssToScss = async () => {\n    const { cssToScss } = await import('helpmate-css/dist/index.js');\n    return { cssToScss };\n};\n\nexport const lazyLoadPrettierAndParserHtml = async () => {\n    const [prettier, parserHtml] = await Promise.all([\n        import('prettier'),\n        import('prettier/parser-html.js')\n    ]);\n    return {\n        prettier,\n        parserHtml\n    };\n};\n","import MoodIcon from '@mui/icons-material/Mood.js';\n\nimport { lazyLoadBeautifyCss } from '../../../../../utils/lazyLoadLibraries/lazyLoadLibraries.js';\n\nconst configCssFormat = {\n    operationId: 'cssFormat',\n\n    label: 'Format CSS',\n    icon: MoodIcon,\n\n    snippets: [{\n        content: [\n            'body {background-color:#f0f0f0;}',\n            '',\n            'body h1 {color:#000000;}'\n        ].join('\\n')\n    }],\n\n    performOperation: async ({ inputText }) => {\n        const { beautifyCss } = await lazyLoadBeautifyCss();\n        const output = beautifyCss(inputText);\n        return [null, output];\n    },\n\n    extras: [\n        /*\n        // // Have a look at:\n        // //     * https://www.npmjs.com/package/@rjsf/core\n        // //     * https://www.npmjs.com/package/react-hook-form\n        //\n        // customizations: [\n        //     {\n        //         label: 'Indent Type',\n        //         type: 'select',\n        //         children: [\n        //             {\n        //                 type: 'checkbox',\n        //                 label: 'Try detecting first',\n        //                 value: 'detect'\n        //             },\n        //             {\n        //                 type: 'radio',\n        //                 defaultOption: 'space',\n        //                 options: [\n        //                     {\n        //                         label: 'Space',\n        //                         value: 'space',\n        //                         children: [\n        //                             {\n        //                                 label: 'Indent Size',\n        //                                 type: 'number',\n        //                                 defaultValue: 4,\n        //                                 min: 1,\n        //                                 max: 10,\n        //                                 step: 1\n        //                             }\n        //                         ]\n        //                     },\n        //                     {\n        //                         label: 'Tab',\n        //                         value: 'tab'\n        //                     }\n        //                 ]\n        //             }\n        //         ]\n        //     }\n        // ]\n        */\n    ]\n};\n\nexport { configCssFormat };\n","import CompressIcon from '@mui/icons-material/Compress.js';\n\nimport { lazyLoadMinifyCss } from '../../../../../utils/lazyLoadLibraries/lazyLoadLibraries.js';\n\nconst configCssMinify = {\n    operationId: 'cssMinify',\n\n    label: 'Minify CSS',\n    icon: CompressIcon,\n\n    snippets: [{\n        content: [\n            'body {',\n            '    background-color: #f0f0f0;',\n            '}',\n            '',\n            'body h1 {',\n            '    color: #000000;',\n            '}'\n        ].join('\\n')\n    }],\n\n    performOperation: async ({ inputText }) => {\n        const { minifyCss } = await lazyLoadMinifyCss();\n        const output = minifyCss(inputText);\n        return [null, output];\n    }\n};\n\nexport { configCssMinify };\n","import DataObjectIcon from '@mui/icons-material/DataObject.js';\n\nimport { lazyLoadCssToScss } from '../../../../../utils/lazyLoadLibraries/lazyLoadLibraries.js';\n\nconst configCssToScss = {\n    operationId: 'cssToScss',\n\n    label: 'CSS to SCSS',\n    icon: DataObjectIcon,\n\n    snippets: [{\n        content: [\n            'body {',\n            '    background-color: #f0f0f0;',\n            '}',\n            '',\n            'body h1 {',\n            '    color: #000000;',\n            '}'\n        ].join('\\n')\n    }],\n\n    performOperation: async ({ inputText }) => {\n        let output;\n        if (inputText.trim() === '') {\n            output = inputText;\n        } else {\n            const { cssToScss } = await lazyLoadCssToScss();\n            output = cssToScss(inputText);\n\n            // TODO: Identify and add note about in which case this might happen\n            if (output === 'Error: no source supplied to csspretty.') {\n                // eslint-disable-next-line no-alert\n                alert('Sorry! The CSS to SCSS conversion failed.\\n\\nPlease try again with some simpler syntax.');\n            }\n        }\n        return [null, output];\n    }\n};\n\nexport { configCssToScss };\n","/* eslint-disable filenames/no-index */\n\nimport { configCssFormat } from './configCssFormat.js';\nimport { configCssMinify } from './configCssMinify.js';\n\nimport { configCssToScss } from './configCssToScss.js';\n\nconst modeCss = {\n    modeId: 'css',\n    modeNameForAceEditor: 'css',\n\n    title: 'CSS',\n\n    icon: null,\n\n    hasSyntaxHighlighting: true,\n\n    snippets: [{\n        content: [\n            'body {',\n            '    background-color: #f0f0f0;',\n            '}',\n            '',\n            'body h1 {',\n            '    color: #000000;',\n            '    font-size: 24px;',\n            '    font-weight: bold;',\n            '    text-align: center;',\n            '}'\n        ].join('\\n')\n    }],\n\n    operations: [\n        {\n            optgroupLabel: 'Format',\n            options: [\n                configCssFormat,\n                configCssMinify\n            ]\n        },\n        {\n            optgroupLabel: 'Convert',\n            options: [\n                configCssToScss\n            ]\n        }\n    ]\n};\nmodeCss.arrOperations = modeCss.operations.reduce((acc, curr) => {\n    return acc.concat(curr.options);\n}, []);\nmodeCss.obOperations = modeCss.arrOperations.reduce((acc, curr) => {\n    acc[curr.operationId] = curr;\n    return acc;\n}, {});\n\nexport { modeCss };\n","import jsonStableStringify from 'json-stable-stringify';\n\nconst removeEmptyLines = function (lines) {\n    const output = lines.filter((x) => {\n        return x;\n    });\n    return output;\n};\n\nconst removeDuplicates = function (lines) {\n    const output = [...new Set(lines)];\n    return output;\n};\n\nconst trimLines = function (lines) {\n    const output = lines.map((line) => {\n        return line.trim();\n    });\n    return output;\n};\nconst trimLinesLeft = function (lines) {\n    const output = lines.map((line) => {\n        return line.trimLeft();\n    });\n    return output;\n};\nconst trimLinesRight = function (lines) {\n    const output = lines.map((line) => {\n        return line.trimRight();\n    });\n    return output;\n};\n\nconst removeMatchingCharacterAtEndFromLine = function (line, char) {\n    if (line[line.length - 1] === char) {\n        return line.substring(0, line.length - 1);\n    }\n    return line;\n};\n\nconst removeCommaCharacterAtEndFromLine = function (line) {\n    return removeMatchingCharacterAtEndFromLine(line, ',');\n};\n\nconst removeCommaCharacterAtEndFromLines = function (lines) {\n    const output = lines.map(removeCommaCharacterAtEndFromLine);\n    return output;\n};\n\nconst removeQuoteAndApostropheCharactersFromLine = function (line) {\n    return (\n        line\n            .replaceAll('\"', '')\n            .replaceAll(\"'\", '')\n    );\n};\nconst removeQuoteAndApostropheCharactersFromLines = function (lines) {\n    const output = lines.map(removeQuoteAndApostropheCharactersFromLine);\n    return output;\n};\n\nconst removeLastColumnFromCsvLine = (line) => {\n    const columns = line.split(',');\n    columns.pop();\n    return columns.join(',');\n};\nconst removeLastColumnFromCsvLines = function (lines) {\n    const output = lines.map(removeLastColumnFromCsvLine);\n    return output;\n};\n\nconst removeFirstColumnFromCsvLine = (line) => {\n    const columns = line.split(',');\n    columns.shift();\n    const output = columns.join(',');\n    return output;\n};\nconst removeFirstColumnFromCsvLines = function (lines) {\n    const output = lines.map(removeFirstColumnFromCsvLine);\n    return output;\n};\n\nconst csvToJson = function (lines) {\n    const output = ['['];\n    const headers = lines[0].split(',');\n    for (let i = 1; i < lines.length; i++) {\n        const line = lines[i];\n        const columns = line.split(',');\n        const obj = {};\n\n        // eslint-disable-next-line unicorn/no-for-loop\n        for (let j = 0; j < columns.length; j++) {\n            const column = columns[j];\n            const header = headers[j];\n            obj[header] = column;\n        }\n        if (i < lines.length - 1) {\n            output.push('\\t' + JSON.stringify(obj) + ',');\n        } else {\n            output.push('\\t' + JSON.stringify(obj));\n        }\n    }\n    output.push(']');\n    return output;\n};\n\nconst traverseNode = function (root, transform) {\n    const output = transform(root);\n\n    if (typeof output === 'object') {\n        for (const key in output) {\n            output[key] = traverseNode(output[key], transform);\n        }\n    }\n\n    return output;\n};\n\nconst fixDataTypes = function (json) {\n    const output = traverseNode(json, function (node) {\n        if (typeof node === 'string') {\n            if (node === 'true') {\n                node = true;\n            } else if (node === 'false') {\n                node = false;\n            } else if (node === 'null') {\n                node = null;\n            } else if (String(Number(node)) === node) {\n                if (\n                    String(Number(node)) === 'Infinity' ||\n                    String(Number(node)) === '-Infinity' ||\n                    String(Number(node)) === 'NaN'\n                ) {\n                    // Do nothing\n                } else {\n                    node = Number(node);\n                }\n            }\n        } else if (Array.isArray(node)) {\n            node = node.map(item => {\n                return fixDataTypes(item);\n            });\n        } else if (typeof node === 'object') {\n            for (const key in node) {\n                node[key] = fixDataTypes(node[key]);\n            }\n        }\n\n        return node;\n    });\n\n    return output;\n};\n\nconst jsonToCsv = function (json) {\n    const line = [];\n    const output = [];\n\n    const keys = Object.keys(json[0]);\n    for (const key of keys) {\n        line.push(key);\n    }\n    output.push(line.join(','));\n\n    for (const ob of json) {\n        const line = [];\n        for (const key of keys) {\n            line.push(ob[key]);\n        }\n        output.push(line.join(','));\n    }\n\n    return output.join('\\n');\n};\n\nexport {\n    removeEmptyLines,\n    removeDuplicates,\n\n    trimLines,\n    trimLinesLeft,\n    trimLinesRight,\n    removeCommaCharacterAtEndFromLines,\n    removeQuoteAndApostropheCharactersFromLines,\n\n    removeFirstColumnFromCsvLines,\n    removeLastColumnFromCsvLines,\n\n    csvToJson,\n\n    fixDataTypes,\n    jsonStableStringify,\n    jsonToCsv\n};\n","import FirstPageIcon from '@mui/icons-material/FirstPage.js';\n\nimport { removeFirstColumnFromCsvLines } from '../../textUtils.js';\n\nconst configCsvRemoveFirstColumn = {\n    operationId: 'csvRemoveFirstColumn',\n\n    label: 'Remove first column',\n    icon: FirstPageIcon,\n\n    operationInputType: 'array-of-strings', // 'text' / 'json' / 'array-of-strings'\n    operationOutputType: 'array-of-strings', // 'text' / 'json' / 'array-of-strings'\n    performOperation: ({ inputArrayOfStrings }) => {\n        const outputText = removeFirstColumnFromCsvLines(inputArrayOfStrings);\n        return [null, outputText];\n    }\n};\n\nexport { configCsvRemoveFirstColumn };\n","import LastPageIcon from '@mui/icons-material/LastPage.js';\n\nimport { removeLastColumnFromCsvLines } from '../../textUtils.js';\n\nconst configCsvRemoveLastColumn = {\n    operationId: 'csvRemoveLastColumn',\n\n    label: 'Remove last column',\n    icon: LastPageIcon,\n\n    operationInputType: 'array-of-strings', // 'text' / 'json' / 'array-of-strings'\n    operationOutputType: 'array-of-strings', // 'text' / 'json' / 'array-of-strings'\n    performOperation: ({ inputArrayOfStrings }) => {\n        const outputText = removeLastColumnFromCsvLines(inputArrayOfStrings);\n        return [null, outputText];\n    }\n};\n\nexport { configCsvRemoveLastColumn };\n","import DataObjectIcon from '@mui/icons-material/DataObject.js';\n\nimport { csvToJson } from '../../textUtils.js';\n\nconst configCsvToJson = {\n    operationId: 'csvToJson',\n\n    label: 'CSV to JSON',\n    icon: DataObjectIcon,\n\n    operationInputType: 'array-of-strings', // 'text' / 'json' / 'array-of-strings'\n    operationOutputType: 'array-of-strings', // 'text' / 'json' / 'array-of-strings'\n    performOperation: ({ inputArrayOfStrings }) => {\n        const outputText = csvToJson(inputArrayOfStrings);\n        return [null, outputText];\n    }\n};\n\nexport { configCsvToJson };\n","/* eslint-disable filenames/no-index */\n\nimport { configCsvRemoveFirstColumn } from './configCsvRemoveFirstColumn.js';\nimport { configCsvRemoveLastColumn } from './configCsvRemoveLastColumn.js';\n\nimport { configCsvToJson } from './configCsvToJson.js';\n\nconst modeCsv = {\n    modeId: 'csv',\n    modeNameForAceEditor: 'csv',\n\n    title: 'CSV',\n\n    icon: null,\n\n    hasSyntaxHighlighting: false,\n\n    snippets: [{\n        content: [\n            'Name,Age,Height',\n            'Chelsea,22,1.85',\n            'Bob,21,1.75',\n            'Alice,20,1.65',\n            'David,23,1.95'\n        ].join('\\n')\n    }],\n\n    operations: [\n        {\n            optgroupLabel: 'Columns',\n            options: [\n                configCsvRemoveFirstColumn, // Remove first column from CSV\n                configCsvRemoveLastColumn   // Remove last column from CSV\n            ]\n        },\n        {\n            optgroupLabel: 'Convert',\n            options: [\n                configCsvToJson             // CSV to JSON\n            ]\n        }\n    ]\n};\nmodeCsv.arrOperations = modeCsv.operations.reduce((acc, curr) => {\n    return acc.concat(curr.options);\n}, []);\nmodeCsv.obOperations = modeCsv.arrOperations.reduce((acc, curr) => {\n    acc[curr.operationId] = curr;\n    return acc;\n}, {});\n\nexport { modeCsv };\n","import MoodIcon from '@mui/icons-material/Mood.js';\n\nimport { lazyLoadPrettierAndParserHtml } from '../../../../../utils/lazyLoadLibraries/lazyLoadLibraries.js';\n\nconst configHtmlFormat = {\n    operationId: 'htmlFormat',\n\n    label: 'Format HTML',\n    icon: MoodIcon,\n\n    snippets: [{\n        content: [\n            '<!DOCTYPE html>',\n            '<html>',\n            '<head>',\n            '    <title>Sample HTML</title>',\n            '  <meta charset=\"utf-8\">',\n            '  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">',\n            '    <link href=\"styles.css\" rel=\"stylesheet\">',\n            '</head>',\n            '<body>',\n            '<header>',\n            '<h1>Welcome to my website</h1>',\n            '<nav>',\n            '<ul>',\n            '<li><a href=\"#about\">About</a></li>',\n            '<li><a href=\"#services\">Services</a></li>',\n            '<li><a href=\"#contact\">Contact</a></li>',\n            '</ul>',\n            '</nav>',\n            '</header>',\n            '<main>',\n            '<section id=\"about\">',\n            '<h2>About Us</h2>',\n            '<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed imperdiet neque ac turpis posuere, quis pharetra lacus sagittis. Integer convallis vel est ac bibendum. Sed laoreet leo eget luctus ultricies.</p>',\n            '</section>',\n            '<section id=\"services\">',\n            '<h2>Our Services</h2>',\n            '<ul>',\n            '<li>Service 1</li>',\n            '<li>Service 2</li>',\n            '<li>Service 3</li>',\n            '</ul>',\n            '</section>',\n            '<section id=\"contact\">',\n            '<h2>Contact Us</h2>',\n            '<form>',\n            '<label for=\"name\">Name:</label>',\n            '<input type=\"text\" id=\"name\" name=\"name\"><br>',\n            '<label for=\"email\">Email:</label>',\n            '<input type=\"email\" id=\"email\" name=\"email\"><br>',\n            '<label for=\"message\">Message:</label>',\n            '<textarea id=\"message\" name=\"message\"></textarea><br>',\n            '<button type=\"submit\">Send</button>',\n            '</form>',\n            '</section>',\n            '</main>',\n            '<footer>',\n            '<p>&copy; MyWebsite.com. All rights reserved.</p>',\n            '</footer>',\n            '</body>',\n            '</html>'\n        ].join('\\n')\n    }],\n\n    performOperation: async ({ inputText }) => {\n        const { prettier, parserHtml } = await lazyLoadPrettierAndParserHtml();\n        const options = {\n            parser: 'html',\n\n            // Use spaces instead of tabs\n            tabWidth: 4,\n\n            plugins: [parserHtml]\n        };\n        const output = prettier.format(inputText, options);\n        return [null, output];\n    }\n};\n\nexport { configHtmlFormat };\n","/* eslint-disable filenames/no-index */\n\nimport { configHtmlFormat } from './configHtmlFormat.js';\n\nconst modeHtml = {\n    modeId: 'html',\n    modeNameForAceEditor: 'html',\n\n    title: 'HTML',\n\n    icon: null,\n\n    hasSyntaxHighlighting: true,\n\n    snippets: [{\n        content: [\n            '<!DOCTYPE html>',\n            '<html>',\n            '  <head>',\n            '    <title>My Website</title>',\n            '  </head>',\n            '  <body>',\n            '    <h1>Welcome to my website</h1>',\n            '    <p>This is a paragraph of text.</p>',\n            '  </body>',\n            '</html>'\n        ].join('\\n')\n    }],\n\n    operations: [\n        {\n            optgroupLabel: 'Format',\n            options: [\n                configHtmlFormat\n            ]\n        }\n    ]\n};\nmodeHtml.arrOperations = modeHtml.operations.reduce((acc, curr) => {\n    return acc.concat(curr.options);\n}, []);\nmodeHtml.obOperations = modeHtml.arrOperations.reduce((acc, curr) => {\n    acc[curr.operationId] = curr;\n    return acc;\n}, {});\n\nexport { modeHtml };\n","import MoodIcon from '@mui/icons-material/Mood.js';\n\nconst configJsonFormat = {\n    operationId: 'jsonFormat',\n\n    label: 'Format JSON',\n    icon: MoodIcon,\n\n    snippets: [{\n        content: [\n            '{',\n            '    \"data\": [',\n            '        { \"name\": \"Chelsea\", \"age\": 22, \"height\": 1.85 },',\n            '        { \"name\": \"Bob\",     \"age\": 21, \"height\": 1.75 },',\n            '        { \"name\": \"Alice\",   \"age\": 20, \"height\": 1.65 },',\n            '        { \"name\": \"David\",   \"age\": 23, \"height\": 1.95 }',\n            '    ]',\n            '}'\n        ].join('\\n')\n    }],\n\n    operationInputType: 'json', // 'text' / 'json' / 'array-of-strings'\n    performOperation: ({ inputJson }) => {\n        const output = JSON.stringify(inputJson, null, '\\t');\n        return [null, output];\n    }\n};\n\nexport { configJsonFormat };\n","import CompressIcon from '@mui/icons-material/Compress.js';\n\nconst configJsonMinify = {\n    operationId: 'jsonMinify',\n\n    label: 'Minify JSON',\n    icon: CompressIcon,\n\n    operationInputType: 'json', // 'text' / 'json' / 'array-of-strings'\n    performOperation: ({ inputJson }) => {\n        const output = JSON.stringify(inputJson);\n        return [null, output];\n    }\n};\n\nexport { configJsonMinify };\n","import CategoryIcon from '@mui/icons-material/Category.js';\n\nimport { jsonStableStringify } from '../../textUtils.js';\n\nconst configJsonSort = {\n    operationId: 'jsonSort',\n\n    label: 'Sort JSON',\n    icon: CategoryIcon,\n\n    snippets: [{\n        content: [\n            '[',\n            '\t{',\n            '\t\t\"name\": \"Chelsea\",',\n            '\t\t\"age\": 22,',\n            '\t\t\"height\": 1.85',\n            '\t},',\n            '\t{',\n            '\t\t\"name\": \"Bob\",',\n            '\t\t\"age\": 21,',\n            '\t\t\"height\": 1.75',\n            '\t}',\n            ']'\n        ].join('\\n')\n    }],\n\n    operationInputType: 'json', // 'text' / 'json' / 'array-of-strings'\n    performOperation: ({ inputJson }) => {\n        const output = jsonStableStringify(inputJson, { space: '\\t' });\n        return [null, output];\n    }\n};\n\nexport { configJsonSort };\n","import PlaylistRemoveIcon from '@mui/icons-material/PlaylistRemove.js';\n\n// Remove a property from a JSON object recursively\n// TODO: Optimize this function\n// TODO: Verify that this function works as expected for all cases\nconst removePropertyRecursively = (obj, propertyName) => {\n    // eslint-disable-next-line no-prototype-builtins\n    if (obj.hasOwnProperty(propertyName)) {\n        delete obj[propertyName];\n    } else {\n        Object.keys(obj).forEach(key => {\n            if (typeof obj[key] === 'object') {\n                removePropertyRecursively(obj[key], propertyName);\n            } else if (Array.isArray(obj[key])) {\n                obj[key].forEach(item => {\n                    if (typeof item === 'object') {\n                        removePropertyRecursively(item, propertyName);\n                    } else {\n                        // Do nothing\n                    }\n                });\n            } else {\n                // Do nothing\n            }\n        });\n    }\n};\n\nconst configJsonRemoveProperty = {\n    operationId: 'jsonRemoveProperty',\n\n    label: 'Remove property',\n    icon: PlaylistRemoveIcon,\n\n    snippets: [{\n        content: [\n            '[',\n            '\t{',\n            '\t\t\"name\": \"Chelsea\",',\n            '\t\t\"age\": 22,',\n            '\t\t\"height\": 1.85',\n            '\t},',\n            '\t{',\n            '\t\t\"name\": \"Bob\",',\n            '\t\t\"age\": 21,',\n            '\t\t\"height\": 1.75',\n            '\t}',\n            ']'\n        ].join('\\n')\n    }],\n\n    operationInputType: 'json', // 'text' / 'json' / 'array-of-strings'\n    operationOutputType: 'json', // 'text' / 'json' / 'array-of-strings'\n    performOperation: ({ inputJson }) => {\n        // eslint-disable-next-line no-alert\n        const propertyName = prompt('Please enter the name of the property to remove:');\n        if (propertyName) {\n            const output = inputJson;\n            removePropertyRecursively(output, propertyName);\n            return [null, output];\n        } else {\n            return [new Error('Please provide a property name.')];\n        }\n    }\n};\n\nexport { configJsonRemoveProperty };\n","import SwapVertIcon from '@mui/icons-material/SwapVert.js';\n\nconst configJsonArrayReverse = {\n    operationId: 'jsonArrayReverse',\n\n    label: 'Reverse',\n    icon: SwapVertIcon,\n\n    snippets: [{\n        content: [\n            '[',\n            '\t{',\n            '\t\t\"name\": \"Alice\",',\n            '\t\t\"age\": 20',\n            '\t},',\n            '\t{',\n            '\t\t\"name\": \"Bob\",',\n            '\t\t\"age\": 21',\n            '\t},',\n            '\t{',\n            '\t\t\"name\": \"Chelsea\",',\n            '\t\t\"age\": 22',\n            '\t},',\n            '\t{',\n            '\t\t\"name\": \"David\",',\n            '\t\t\"age\": 23',\n            '\t}',\n            ']'\n        ].join('\\n')\n    }],\n\n    operationInputType: 'json', // 'text' / 'json' / 'array-of-strings'\n    operationOutputType: 'json', // 'text' / 'json' / 'array-of-strings'\n    performOperation: ({ inputJson }) => {\n        if (!Array.isArray(inputJson)) {\n            return [new Error('Please provide an array as the input.')];\n        }\n\n        const output = inputJson;\n        output.reverse();\n        return [null, output];\n    }\n};\n\nexport { configJsonArrayReverse };\n","import LinearScaleIcon from '@mui/icons-material/LinearScale.js';\n\n// Flatten an array of objects recursively\n/*\n    // Sample input:\n    [\n        {\n            \"propA\": \"a\",\n            \"propB\": {\n                \"propC\": \"c\",\n                \"propD\": {\n                    \"propE\": \"e\"\n                }\n            }\n        },\n        {\n            \"prop1\": 1,\n            \"prop2\": {\n                \"prop3\": 3,\n                \"prop4\": {\n                    \"prop5\": 5\n                }\n            }\n        }\n    ]\n\n    // Sample output:\n    [\n        {\n            \"propA\": \"a\",\n            \"propB.propC\": \"c\",\n            \"propB.propD.propE\": \"e\"\n        },\n        {\n            \"prop1\": 1,\n            \"prop2.prop3\": 3,\n            \"prop2.prop4.prop5\": 5\n        }\n    ]\n*/\nconst flattenObjectsRecursively = (obj, parentKey) => {\n    let output = {};\n\n    Object.keys(obj).forEach(key => {\n        const value = obj[key];\n        const newKey = parentKey ? `${parentKey}.${key}` : key;\n\n        if (typeof value === 'object') {\n            output = {\n                ...output,\n                ...flattenObjectsRecursively(value, newKey)\n            };\n        } else {\n            output[newKey] = value;\n        }\n    });\n\n    return output;\n};\n\nconst configJsonArrayOfObjectsFlattenObjects = {\n    operationId: 'jsonArrayOfObjectsFlattenObjects',\n\n    label: 'Flatten objects',\n    icon: LinearScaleIcon,\n\n    snippets: [{\n        content: [\n            '[',\n            '    {',\n            '        \"propA\": \"a\",',\n            '        \"propB\": {',\n            '            \"propC\": \"c\",',\n            '            \"propD\": {',\n            '                \"propE\": \"e\"',\n            '            }',\n            '        }',\n            '    },',\n            '    {',\n            '        \"prop1\": 1,',\n            '        \"prop2\": {',\n            '            \"prop3\": 3,',\n            '            \"prop4\": {',\n            '                \"prop5\": 5',\n            '            }',\n            '        }',\n            '    }',\n            ']'\n        ].join('\\n')\n    }],\n\n    operationInputType: 'json', // 'text' / 'json' / 'array-of-strings'\n    operationOutputType: 'json', // 'text' / 'json' / 'array-of-strings'\n    performOperation: ({ inputJson }) => {\n        if (!Array.isArray(inputJson)) {\n            return [new Error('Please provide an array of objects as the input.')];\n        }\n\n        const output = inputJson.map(item => flattenObjectsRecursively(item));\n\n        return [null, output];\n    }\n};\n\nexport { configJsonArrayOfObjectsFlattenObjects };\n","import CategoryIcon from '@mui/icons-material/Category.js';\n\nconst configJsonArrayOfObjectsSortByProperty = {\n    operationId: 'jsonArrayOfObjectsSortByProperty',\n\n    label: 'Sort by property',\n    icon: CategoryIcon,\n\n    snippets: [{\n        content: [\n            '[',\n            '\t{',\n            '\t\t\"name\": \"Chelsea\",',\n            '\t\t\"rank\": 2',\n            '\t},',\n            '\t{',\n            '\t\t\"name\": \"Bob\",',\n            '\t\t\"rank\": 3',\n            '\t},',\n            '\t{',\n            '\t\t\"name\": \"Alice\",',\n            '\t\t\"rank\": 4',\n            '\t},',\n            '\t{',\n            '\t\t\"name\": \"David\",',\n            '\t\t\"rank\": 1',\n            '\t}',\n            ']'\n        ].join('\\n')\n    }],\n\n    operationInputType: 'json', // 'text' / 'json' / 'array-of-strings'\n    operationOutputType: 'json', // 'text' / 'json' / 'array-of-strings'\n    performOperation: ({ inputJson }) => {\n        let output;\n\n        // Sort an array of objects by a property\n        // eslint-disable-next-line no-alert\n        const propertyName = prompt('Please enter the name of the property to be sorted by:');\n        if (propertyName) {\n            output = inputJson;\n            output.sort((a, b) => {\n                if (a[propertyName] < b[propertyName]) {\n                    return -1;\n                }\n                if (a[propertyName] > b[propertyName]) {\n                    return 1;\n                }\n                return 0;\n            });\n        } else {\n            return [new Error('Please provide a property name.')];\n        }\n\n        return [null, output];\n    }\n};\n\nexport { configJsonArrayOfObjectsSortByProperty };\n","import BuildIcon from '@mui/icons-material/Build.js';\n\nimport { fixDataTypes } from '../../textUtils.js';\n\nconst configJsonFixDataTypes = {\n    operationId: 'jsonFixDataTypes',\n\n    label: 'Fix data types',\n    icon: BuildIcon,\n\n    snippets: [{\n        content: [\n            '{',\n            '\t\"profile\": {',\n            '\t\t\"name\": \"Alice\",',\n            '\t\t\"age\": \"20\",',\n            '\t\t\"height\": \"1.65\",',\n            '\t\t\"weight\": \"null\",',\n            '\t\t\"isStudent\": \"true\"',\n            '\t}',\n            '}'\n        ].join('\\n')\n    }],\n\n    operationInputType: 'json', // 'text' / 'json' / 'array-of-strings'\n    operationOutputType: 'json', // 'text' / 'json' / 'array-of-strings'\n    performOperation: ({ inputJson }) => {\n        const output = fixDataTypes(inputJson);\n        return [null, output];\n    }\n};\n\nexport { configJsonFixDataTypes };\n","import AppsIcon from '@mui/icons-material/Apps.js';\n\nimport { jsonToCsv } from '../../textUtils.js';\n\nconst configJsonToCsv = {\n    operationId: 'jsonToCsv',\n\n    label: 'JSON to CSV',\n    icon: AppsIcon,\n\n    snippets: [{\n        content: [\n            '[',\n            '    { \"name\": \"Chelsea\", \"age\": 22, \"height\": 1.85 },',\n            '    { \"name\": \"Bob\",     \"age\": 21, \"height\": 1.75 },',\n            '    { \"name\": \"Alice\",   \"age\": 20, \"height\": 1.65 },',\n            '    { \"name\": \"David\",   \"age\": 23, \"height\": 1.95 }',\n            ']'\n        ].join('\\n')\n    }],\n\n    operationInputType: 'json', // 'text' / 'json' / 'array-of-strings'\n    performOperation: ({ inputJson }) => {\n        const output = jsonToCsv(inputJson);\n        return [null, output];\n    }\n};\n\nexport { configJsonToCsv };\n","import ReorderIcon from '@mui/icons-material/Reorder.js';\n\nconst configJsonToLines = {\n    operationId: 'jsonToLines',\n\n    label: 'JSON to Lines',\n    icon: ReorderIcon,\n\n    snippets: [{\n        content: [\n            '[',\n            '    \"Alice\",',\n            '    \"Bob\",',\n            '    \"Chelsea\",',\n            '    \"David\"',\n            ']'\n        ].join('\\n')\n    }],\n\n    operationInputType: 'json', // 'text' / 'json' / 'array-of-strings'\n    performOperation: ({ inputJson }) => {\n        if (\n            Array.isArray(inputJson) &&\n            inputJson.every(item => typeof item === 'string')\n        ) {\n            const output = inputJson.join('\\n');\n            return [null, output];\n        } else {\n            return [new Error('Please provide an Array of Strings as the input.')];\n        }\n    }\n};\n\nexport { configJsonToLines };\n","/* eslint-disable filenames/no-index */\n\nimport { configJsonFormat } from './configJsonFormat.js';\nimport { configJsonMinify } from './configJsonMinify.js';\n\nimport { configJsonSort } from './configJsonSort.js';\n\nimport { configJsonRemoveProperty } from './configJsonRemoveProperty.js';\n\nimport { configJsonArrayReverse } from './configJsonArrayReverse.js';\n\nimport { configJsonArrayOfObjectsFlattenObjects } from './configJsonArrayOfObjectsFlattenObjects.js';\nimport { configJsonArrayOfObjectsSortByProperty } from './configJsonArrayOfObjectsSortByProperty.js';\n\nimport { configJsonFixDataTypes } from './configJsonFixDataTypes.js';\n\nimport { configJsonToCsv } from './configJsonToCsv.js';\nimport { configJsonToLines } from './configJsonToLines.js';\n\nconst modeJson = {\n    modeId: 'json',\n    modeNameForAceEditor: 'json',\n\n    title: 'JSON',\n\n    icon: null,\n\n    hasSyntaxHighlighting: true,\n\n    snippets: [{\n        content: [\n            '{',\n            '    \"data\": [',\n            '        { \"name\": \"Chelsea\", \"age\": 22, \"height\": 1.85 },',\n            '        { \"name\": \"Bob\",     \"age\": 21, \"height\": 1.75 },',\n            '        { \"name\": \"Alice\",   \"age\": 20, \"height\": 1.65 },',\n            '        { \"name\": \"David\",   \"age\": 23, \"height\": 1.95 }',\n            '    ]',\n            '}'\n        ].join('\\n')\n    }],\n\n    operations: [\n        {\n            optgroupLabel: 'Format',\n            options: [\n                configJsonFormat,\n                configJsonMinify\n            ]\n        },\n        {\n            optgroupLabel: 'Sort',\n            options: [\n                configJsonSort\n            ]\n        },\n        {\n            optgroupLabel: 'Edit',\n            options: [\n                configJsonRemoveProperty\n            ]\n        },\n        {\n            optgroupLabel: 'Array',\n            options: [\n                configJsonArrayReverse\n            ]\n        },\n        {\n            optgroupLabel: 'Array of objects',\n            options: [\n                configJsonArrayOfObjectsFlattenObjects,\n                configJsonArrayOfObjectsSortByProperty\n            ]\n        },\n        {\n            optgroupLabel: 'Fix',\n            options: [\n                configJsonFixDataTypes\n            ]\n        },\n        {\n            optgroupLabel: 'Convert',\n            options: [\n                configJsonToCsv,\n                configJsonToLines\n            ]\n        }\n    ]\n};\nmodeJson.arrOperations = modeJson.operations.reduce((acc, curr) => {\n    return acc.concat(curr.options);\n}, []);\nmodeJson.obOperations = modeJson.arrOperations.reduce((acc, curr) => {\n    acc[curr.operationId] = curr;\n    return acc;\n}, {});\n\nexport { modeJson };\n","import MoodIcon from '@mui/icons-material/Mood.js';\n\nimport { lazyLoadBeautifyCss } from '../../../../../utils/lazyLoadLibraries/lazyLoadLibraries.js';\n\nconst configLessFormat = {\n    operationId: 'lessFormat',\n\n    label: 'Format LESS',\n    icon: MoodIcon,\n\n    snippets: [{\n        content: [\n            '@color: #444;',\n            '@headingSize: 24px;',\n            '',\n            'body {',\n            '    color: @color;',\n            '',\n            '    a { color: @color; }',\n            '',\n            '    h1 { font-size: @headingSize; }',\n            '}'\n        ].join('\\n')\n    }],\n\n    performOperation: async ({ inputText }) => {\n        const { beautifyCss } = await lazyLoadBeautifyCss();\n\n        const output = beautifyCss(inputText);\n        return [null, output];\n    }\n};\n\nexport { configLessFormat };\n","import DataObjectIcon from '@mui/icons-material/DataObject.js';\n\nimport { lazyLoadBeautifyCssAndLess } from '../../../../../utils/lazyLoadLibraries/lazyLoadLibraries.js';\n\nconst configLessToCss = {\n    operationId: 'lessToCss',\n\n    label: 'LESS to CSS',\n    icon: DataObjectIcon,\n\n    snippets: [{\n        content: [\n            '@color: #444;',\n            '@headingSize: 24px;',\n            '',\n            'body {',\n            '    color: @color;',\n            '',\n            '    a {',\n            '        color: @color;',\n            '    }',\n            '',\n            '    h1 {',\n            '        font-size: @headingSize;',\n            '    }',\n            '}'\n        ].join('\\n')\n    }],\n\n    performOperation: async ({ inputText }) => {\n        let err = null;\n        let output;\n        const extraInfo = {};\n\n        if (inputText.trim() === '') {\n            output = inputText;\n        } else {\n            try {\n                const {\n                    beautifyCss,\n                    less\n                } = await lazyLoadBeautifyCssAndLess();\n\n                const renderedOutput = await less.render(inputText);\n                output = renderedOutput.css;\n\n                // By default, \"less.render()\" provides the output with indentation of 2 space characters\n                output = beautifyCss(output);\n            } catch (e) {\n                err = new Error(e.message + `\\n(Line ${e.line}, Column ${e.column}) / (Character ${e.index})`);\n                output = null;\n\n                const moveCursorTo = {\n                    row: e.line - 1,\n                    column: e.column,\n\n                    position: e.index\n                };\n                extraInfo.moveCursorTo = moveCursorTo;\n            }\n        }\n\n        return [err, output, extraInfo];\n    }\n};\n\nexport { configLessToCss };\n","/* eslint-disable filenames/no-index */\n\nimport { configLessFormat } from './configLessFormat.js';\n\nimport { configLessToCss } from './configLessToCss.js';\n\nconst modeLess = {\n    modeId: 'less',\n    modeNameForAceEditor: 'less',\n\n    title: 'LESS',\n\n    icon: null,\n\n    hasSyntaxHighlighting: true,\n\n    snippets: [{\n        content: [\n            '@color: #444;',\n            '',\n            'body {',\n            '    color: @color;',\n            '',\n            '    a {',\n            '        color: @color;',\n            '    }',\n            '}'\n        ].join('\\n')\n    }],\n\n    operations: [\n        {\n            optgroupLabel: 'Format',\n            options: [\n                configLessFormat\n            ]\n        },\n        {\n            optgroupLabel: 'Convert',\n            options: [\n                configLessToCss\n            ]\n        }\n    ]\n};\nmodeLess.arrOperations = modeLess.operations.reduce((acc, curr) => {\n    return acc.concat(curr.options);\n}, []);\nmodeLess.obOperations = modeLess.arrOperations.reduce((acc, curr) => {\n    acc[curr.operationId] = curr;\n    return acc;\n}, {});\n\nexport { modeLess };\n","import SettingsEthernetIcon from '@mui/icons-material/SettingsEthernet.js';\n\nimport { removeEmptyLines } from '../../textUtils.js';\n\nconst configTextRemoveEmptyLines = {\n    operationId: 'textRemoveEmptyLines',\n\n    label: 'Remove empty lines',\n    icon: SettingsEthernetIcon,\n\n    snippets: [{\n        content: [\n            'Chelsea',\n            '',\n            'Bob',\n            '',\n            'Alice',\n            '',\n            'David'\n        ].join('\\n')\n    }],\n\n    operationInputType: 'array-of-strings', // 'text' / 'json' / 'array-of-strings'\n    operationOutputType: 'array-of-strings', // 'text' / 'json' / 'array-of-strings'\n    performOperation: ({ inputArrayOfStrings }) => {\n        const outputArrayOfStrings = removeEmptyLines(inputArrayOfStrings);\n        return [null, outputArrayOfStrings];\n    }\n};\n\nexport { configTextRemoveEmptyLines };\n","import CopyAllIcon from '@mui/icons-material/CopyAll.js';\n\nimport { removeDuplicates } from '../../textUtils.js';\n\nconst configTextRemoveDuplicates = {\n    operationId: 'textRemoveDuplicates',\n\n    label: 'Remove duplicates',\n    icon: CopyAllIcon,\n\n    snippets: [{\n        content: [\n            'Chelsea',\n            'Chelsea',\n            'Bob',\n            'Alice',\n            'David',\n            'Alice'\n        ].join('\\n')\n    }],\n\n    operationInputType: 'array-of-strings', // 'text' / 'json' / 'array-of-strings'\n    operationOutputType: 'array-of-strings', // 'text' / 'json' / 'array-of-strings'\n    performOperation: ({ inputArrayOfStrings }) => {\n        const outputArrayOfStrings = removeDuplicates(inputArrayOfStrings);\n        return [null, outputArrayOfStrings];\n    }\n};\n\nexport { configTextRemoveDuplicates };\n","import SortIcon from '@mui/icons-material/Sort.js';\n\nconst configTextSort = {\n    operationId: 'textSort',\n\n    label: 'Sort',\n    icon: SortIcon,\n\n    snippets: [{\n        content: [\n            'Chelsea',\n            'Bob',\n            'Alice',\n            'David'\n        ].join('\\n')\n    }],\n\n    operationInputType: 'array-of-strings', // 'text' / 'json' / 'array-of-strings'\n    operationOutputType: 'array-of-strings', // 'text' / 'json' / 'array-of-strings'\n    performOperation: ({ inputArrayOfStrings }) => {\n        const outputArrayOfStrings = inputArrayOfStrings;\n        outputArrayOfStrings.sort();\n        return [null, outputArrayOfStrings];\n    }\n};\n\nexport { configTextSort };\n","import AbcIcon from '@mui/icons-material/Abc.js';\n\nconst configTextSortCaseInsensitive = {\n    operationId: 'textSortCaseInsensitive',\n\n    label: 'Case-insensitive sort',\n    icon: AbcIcon,\n\n    snippets: [{\n        content: [\n            'Chelsea',\n            'dave',\n            'Bob',\n            'Alice',\n            'David',\n            'angel',\n            'alice'\n        ].join('\\n')\n    }],\n\n    operationInputType: 'array-of-strings', // 'text' / 'json' / 'array-of-strings'\n    operationOutputType: 'array-of-strings', // 'text' / 'json' / 'array-of-strings'\n    performOperation: ({ inputArrayOfStrings }) => {\n        const outputArrayOfStrings = inputArrayOfStrings;\n        outputArrayOfStrings.sort((a, b) => {\n            return a.toLowerCase().localeCompare(b.toLowerCase());\n        });\n\n        return [null, outputArrayOfStrings];\n    }\n};\n\nexport { configTextSortCaseInsensitive };\n","import ParkIcon from '@mui/icons-material/Park.js';\n\nconst configTextSortNatural = {\n    operationId: 'textSortNatural',\n\n    label: 'Natural sort',\n    icon: ParkIcon,\n\n    snippets: [{\n        content: [\n            '12 apples',\n            '10 bananas',\n            '7 cherries',\n            '5 dates'\n        ].join('\\n')\n    }],\n\n    operationInputType: 'array-of-strings', // 'text' / 'json' / 'array-of-strings'\n    operationOutputType: 'array-of-strings', // 'text' / 'json' / 'array-of-strings'\n    performOperation: ({ inputArrayOfStrings }) => {\n        const outputArrayOfStrings = inputArrayOfStrings;\n        outputArrayOfStrings.sort((a, b) => {\n            return a.localeCompare(b, undefined, { numeric: true });\n        });\n        return [null, outputArrayOfStrings];\n    }\n};\n\nexport { configTextSortNatural };\n","import ShuffleOnIcon from '@mui/icons-material/ShuffleOn.js';\n\nconst configTextRandomize = {\n    operationId: 'textRandomize',\n\n    label: 'Randomize',\n    icon: ShuffleOnIcon,\n\n    snippets: [{\n        content: [\n            'Alice',\n            'Bob',\n            'Chelsea',\n            'David'\n        ].join('\\n')\n    }],\n\n    operationInputType: 'array-of-strings', // 'text' / 'json' / 'array-of-strings'\n    operationOutputType: 'array-of-strings', // 'text' / 'json' / 'array-of-strings'\n    performOperation: ({ inputArrayOfStrings }) => {\n        const outputArrayOfStrings = inputArrayOfStrings;\n        outputArrayOfStrings.sort(() => Math.random() - 0.5);\n        return [null, outputArrayOfStrings];\n    }\n};\n\nexport { configTextRandomize };\n","import KeyboardDoubleArrowDownIcon from '@mui/icons-material/KeyboardDoubleArrowDown.js';\n\nconst configTextReverse = {\n    operationId: 'textReverse',\n\n    label: 'Reverse',\n    icon: KeyboardDoubleArrowDownIcon,\n\n    snippets: [{\n        content: [\n            'Alice',\n            'Bob',\n            'Chelsea',\n            'David'\n        ].join('\\n')\n    }],\n\n    operationInputType: 'array-of-strings', // 'text' / 'json' / 'array-of-strings'\n    operationOutputType: 'array-of-strings', // 'text' / 'json' / 'array-of-strings'\n    performOperation: ({ inputArrayOfStrings }) => {\n        const outputArrayOfStrings = inputArrayOfStrings;\n        outputArrayOfStrings.reverse();\n        return [null, outputArrayOfStrings];\n    }\n};\n\nexport { configTextReverse };\n","import MultipleStopIcon from '@mui/icons-material/MultipleStop.js';\n\nimport { trimLines } from '../../textUtils.js';\n\nconst configTextTrim = {\n    operationId: 'textTrim',\n\n    label: 'Trim lines',\n    icon: MultipleStopIcon,\n\n    snippets: [{\n        content: [\n            ' Alice ',\n            '    Bob  ',\n            'Chelsea    ',\n            '   David'\n        ].join('\\n')\n    }],\n\n    operationInputType: 'array-of-strings', // 'text' / 'json' / 'array-of-strings'\n    operationOutputType: 'array-of-strings', // 'text' / 'json' / 'array-of-strings'\n    performOperation: ({ inputArrayOfStrings }) => {\n        const outputArrayOfStrings = trimLines(inputArrayOfStrings);\n        return [null, outputArrayOfStrings];\n    }\n};\n\nexport { configTextTrim };\n","import ArrowBackIcon from '@mui/icons-material/ArrowBack.js';\n\nimport { trimLinesLeft } from '../../textUtils.js';\n\nconst configTextTrimLeft = {\n    operationId: 'textTrimLeft',\n\n    label: 'Trim lines from left',\n    icon: ArrowBackIcon,\n\n    snippets: [{\n        content: [\n            ' Alice ',\n            '    Bob  ',\n            'Chelsea    ',\n            '   David'\n        ].join('\\n')\n    }],\n\n    operationInputType: 'array-of-strings', // 'text' / 'json' / 'array-of-strings'\n    operationOutputType: 'array-of-strings', // 'text' / 'json' / 'array-of-strings'\n    performOperation: ({ inputArrayOfStrings }) => {\n        const outputArrayOfStrings = trimLinesLeft(inputArrayOfStrings);\n        return [null, outputArrayOfStrings];\n    }\n};\n\nexport { configTextTrimLeft };\n","import ArrowForwardIcon from '@mui/icons-material/ArrowForward.js';\n\nimport { trimLinesRight } from '../../textUtils.js';\n\nconst configTextTrimRight = {\n    operationId: 'textTrimRight',\n\n    label: 'Trim lines from right',\n    icon: ArrowForwardIcon,\n\n    snippets: [{\n        content: [\n            ' Alice ',\n            '    Bob  ',\n            'Chelsea    ',\n            '   David'\n        ].join('\\n')\n    }],\n\n    operationInputType: 'array-of-strings', // 'text' / 'json' / 'array-of-strings'\n    operationOutputType: 'array-of-strings', // 'text' / 'json' / 'array-of-strings'\n    performOperation: ({ inputArrayOfStrings }) => {\n        const outputArrayOfStrings = trimLinesRight(inputArrayOfStrings);\n        return [null, outputArrayOfStrings];\n    }\n};\n\nexport { configTextTrimRight };\n","import CleaningServicesIcon from '@mui/icons-material/CleaningServices.js';\n\nimport { removeCommaCharacterAtEndFromLines } from '../../textUtils.js';\n\nconst configTextRemoveCommaCharacterAtLineEnds = {\n    operationId: 'textRemoveCommaCharacterAtLineEnds',\n\n    label: 'Remove comma character at line ends',\n    icon: CleaningServicesIcon,\n\n    snippets: [{\n        content: [\n            'Alice,',\n            'Bob,',\n            'Chelsea,',\n            'David'\n        ].join('\\n')\n    }],\n\n    operationInputType: 'array-of-strings', // 'text' / 'json' / 'array-of-strings'\n    operationOutputType: 'array-of-strings', // 'text' / 'json' / 'array-of-strings'\n    performOperation: ({ inputArrayOfStrings }) => {\n        const outputArrayOfStrings = removeCommaCharacterAtEndFromLines(inputArrayOfStrings);\n        return [null, outputArrayOfStrings];\n    }\n};\n\nexport { configTextRemoveCommaCharacterAtLineEnds };\n","import FormatQuoteIcon from '@mui/icons-material/FormatQuote.js';\n\nimport { removeQuoteAndApostropheCharactersFromLines } from '../../textUtils.js';\n\nconst configTextRemoveQuoteAndApostropheCharacters = {\n    operationId: 'textRemoveQuoteAndApostropheCharacters',\n\n    label: 'Remove quote and apostrophe characters',\n    icon: FormatQuoteIcon,\n\n    snippets: [{\n        content: [\n            '\"Alice\",',\n            '\"Bob\",',\n            '\"Chelsea\",',\n            '\"David\"'\n        ].join('\\n')\n    }],\n\n    operationInputType: 'array-of-strings', // 'text' / 'json' / 'array-of-strings'\n    operationOutputType: 'array-of-strings', // 'text' / 'json' / 'array-of-strings'\n    performOperation: ({ inputArrayOfStrings }) => {\n        const outputArrayOfStrings = removeQuoteAndApostropheCharactersFromLines(inputArrayOfStrings);\n        return [null, outputArrayOfStrings];\n    }\n};\n\nexport { configTextRemoveQuoteAndApostropheCharacters };\n","import BarChartIcon from '@mui/icons-material/BarChart.js';\n\nconst configTextGetStats = {\n    operationId: 'textGetStats',\n\n    label: 'Get stats',\n    icon: BarChartIcon,\n\n    snippets: [{\n        content: [\n            'The quick brown fox jumps over the lazy dog.',\n            '',\n            'Sphinx of black quartz, judge my vow.',\n            '',\n            'Mr Jock, TV quiz PhD, bags few lynx.',\n            '',\n            'Cwm fjord bank glyphs vext quiz.'\n        ].join('\\n')\n    }],\n\n    performOperation: ({ inputText }) => {\n        const stats = {};\n\n        const input = inputText;\n        const lines = input.split('\\n');\n        stats.linesCount = lines.length;\n        stats.charactersCount = input.length;\n\n        // Replace all punctuation characters with a single space\n        const inputWithoutPunctuation = input.replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g, ' '); // eslint-disable-line no-useless-escape\n\n        // Replace all continuous whitespace characters with a single space\n        const inputWithoutWhitespace = inputWithoutPunctuation.replace(/\\s+/g, ' ');\n\n        const words = inputWithoutWhitespace.split(' ').filter((word) => word !== '');\n        stats.wordsCount = words.length; // Not a perfect way to count words, but it's good enough for now.\n\n        const lowerCaseWords = words.map((word) => word.toLowerCase());\n        stats.uniqueWordsCount = (new Set(lowerCaseWords)).size;\n\n        // eslint-disable-next-line no-alert\n        alert(JSON.stringify(stats, null, '    '));\n\n        return [null, null, { stats }];\n    }\n};\n\nexport { configTextGetStats };\n","import DataObjectIcon from '@mui/icons-material/DataObject.js';\n\nconst configTextLinesToJsonArray = {\n    operationId: 'linesToJsonArray',\n\n    label: 'Lines to JSON Array',\n    icon: DataObjectIcon,\n\n    snippets: [{\n        content: [\n            'Alice',\n            'Bob',\n            'Chelsea',\n            'David'\n        ].join('\\n')\n    }],\n\n    operationOutputType: 'json', // 'text' / 'json' / 'array-of-strings'\n    performOperation: ({ inputText }) => {\n        const outputArray = inputText.split('\\n');\n        return [null, outputArray];\n    }\n};\n\nexport { configTextLinesToJsonArray };\n","/* eslint-disable filenames/no-index */\n\nimport { configTextRemoveEmptyLines } from './configTextRemoveEmptyLines.js';\nimport { configTextRemoveDuplicates } from './configTextRemoveDuplicates.js';\n\nimport { configTextSort } from './configTextSort.js';\nimport { configTextSortCaseInsensitive } from './configTextSortCaseInsensitive.js';\nimport { configTextSortNatural } from './configTextSortNatural.js';\nimport { configTextRandomize } from './configTextRandomize.js';\nimport { configTextReverse } from './configTextReverse.js';\n\nimport { configTextTrim } from './configTextTrim.js';\nimport { configTextTrimLeft } from './configTextTrimLeft.js';\nimport { configTextTrimRight } from './configTextTrimRight.js';\nimport { configTextRemoveCommaCharacterAtLineEnds } from './configTextRemoveCommaCharacterAtLineEnds.js';\nimport { configTextRemoveQuoteAndApostropheCharacters } from './configTextRemoveQuoteAndApostropheCharacters.js';\n\nimport { configTextGetStats } from './configTextGetStats.js';\n\nimport { configTextLinesToJsonArray } from './configTextLinesToJsonArray.js';\n\nconst modeText = {\n    modeId: 'text',\n    modeNameForAceEditor: 'text',\n\n    title: 'Text',\n\n    icon: null,\n\n    hasSyntaxHighlighting: false,\n\n    snippets: [{\n        content: [\n            'Chelsea',\n            'Bob',\n            'Alice',\n            'David'\n        ].join('\\n')\n    }],\n\n    operations: [\n        {\n            optgroupLabel: 'Lines',\n            options: [\n                configTextRemoveEmptyLines, // Remove empty lines\n                configTextRemoveDuplicates  // Remove duplicates\n                // Remove beyond N lines\n            ]\n        },\n        {\n            optgroupLabel: 'Sort',\n            options: [\n                configTextSort,                // Sort\n                configTextSortCaseInsensitive, // Case-insensitive sort\n                configTextSortNatural,         // Natural sort\n                configTextRandomize,           // Randomize\n                configTextReverse              // Reverse\n            ]\n        },\n        {\n            optgroupLabel: 'String',\n            options: [\n                configTextTrim,                              // Trim lines\n                configTextTrimLeft,                          // Trim lines from left\n                configTextTrimRight,                         // Trim lines from right\n                configTextRemoveCommaCharacterAtLineEnds,    // Remove comma character at line ends\n                configTextRemoveQuoteAndApostropheCharacters // Remove \" and ' characters\n            ]\n        },\n        {\n            optgroupLabel: 'Stats',\n            options: [\n                configTextGetStats // Get statistics\n                // Count lines        // Icon: FormatListNumberedRtlIcon\n                // Count characters   // Icon: AbcIcon\n                // Count words        // Icon: SubtitlesIcon\n                // Count unique words // Icon: SubtitlesOutlinedIcon\n            ]\n        },\n        {\n            optgroupLabel: 'Convert',\n            options: [\n                configTextLinesToJsonArray // Lines to JSON array\n            ]\n        }\n    ]\n};\nmodeText.arrOperations = modeText.operations.reduce((acc, curr) => {\n    return acc.concat(curr.options);\n}, []);\nmodeText.obOperations = modeText.arrOperations.reduce((acc, curr) => {\n    acc[curr.operationId] = curr;\n    return acc;\n}, {});\n\nexport { modeText };\n","/* eslint-disable filenames/no-index */\n\nimport { modeCss } from './modeCss/index.js';\nimport { modeCsv } from './modeCsv/index.js';\nimport { modeHtml } from './modeHtml/index.js';\nimport { modeJson } from './modeJson/index.js';\nimport { modeLess } from './modeLess/index.js';\nimport { modeText } from './modeText/index.js';\n\nconst arrModeConfigs = [\n    modeCss,\n    modeCsv,\n    modeHtml,\n    modeJson,\n    modeLess,\n    modeText\n];\n\nconst obModeConfigs = {};\n\nfor (const modeConfig of arrModeConfigs) {\n    obModeConfigs[modeConfig.modeId] = modeConfig;\n}\n\nexport {\n    arrModeConfigs,\n    obModeConfigs\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { useAtom } from 'jotai';\n\nimport { recentOperationsAtom } from './JotaiState.js';\n\nimport IconButton from '@mui/material/IconButton/index.js';\n\nimport { IconNotAvailable } from './constOperations.js';\n\nimport { obModeConfigs } from './modes/index.js';\n\nconst RecentOperations = function ({\n    mode,\n    onOperationClick\n}) {\n    // TODO: FIXME: Check if `setRecentOperations` is needed\n    // eslint-disable-next-line no-unused-vars\n    const [recentOperations, setRecentOperations] = useAtom(recentOperationsAtom);\n\n    const modeConfig = obModeConfigs[mode];\n    const operationsForMode = Object.keys(modeConfig.obOperations);\n\n    return (\n        <div\n            style={{\n                display: 'flex',\n                overflow: 'hidden',\n                paddingRight: 10,\n                marginLeft: 'auto',\n                flexDirection: 'row-reverse'\n            }}\n        >\n            {(() => {\n                let arr = recentOperations;\n                arr = arr.filter(operationId => {\n                    if (operationsForMode.includes(operationId)) {\n                        return true;\n                    } else {\n                        return false;\n                    }\n                });\n\n                arr = arr.map((operationId, index) => {\n                    const operationForMode = modeConfig.obOperations[operationId];\n                    return (\n                        <div key={index}>\n                            <IconButton\n                                size=\"small\"\n                                title={(\n                                    operationForMode?.iconTooltip ||\n                                    operationForMode?.label\n                                )}\n                                onClick={async () => {\n                                    await onOperationClick(operationId);\n                                }}\n                            >\n                                {(() => {\n                                    let Icon = modeConfig.obOperations[operationId]?.icon;\n                                    if (!Icon) {\n                                        Icon = IconNotAvailable;\n                                    }\n                                    return <Icon style={{ fontSize: 16 }} />;\n                                })()}\n                            </IconButton>\n                        </div>\n                    );\n                });\n\n                return arr;\n            })()}\n        </div>\n    );\n};\nRecentOperations.propTypes = {\n    mode: PropTypes.string.isRequired,\n    onOperationClick: PropTypes.func.isRequired\n};\n\nexport { RecentOperations };\n","// extracted by mini-css-extract-plugin\nexport default {\"hideForContainerGE640\":\"helperStyles__hideForContainerGE640--MOu7X\",\"hideForContainerLT640\":\"helperStyles__hideForContainerLT640--Ow38P\"};","// extracted by mini-css-extract-plugin\nexport default {\"MainEditor\":\"MainEditor__MainEditor--Q_tBg\",\"translucentWithoutHover\":\"MainEditor__translucentWithoutHover--GBmBJ\",\"SelectTheOperation\":\"MainEditor__SelectTheOperation--wnn3M\"};","import React, { useEffect, useRef, useState, Suspense } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { useSearchParams } from 'react-router-dom';\n\nimport IconButton from '@mui/material/IconButton/index.js';\nimport Button from '@mui/material/Button/index.js';\n\nimport ScienceIcon from '@mui/icons-material/Science.js';\n\nimport BorderColorOutlinedIcon from '@mui/icons-material/BorderColorOutlined.js';\nimport BorderColorIcon from '@mui/icons-material/BorderColor.js';\n\nimport FileOpenIcon from '@mui/icons-material/FileOpen.js';\nimport ContentCutIcon from '@mui/icons-material/ContentCut.js';\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy.js';\nimport BackspaceIcon from '@mui/icons-material/Backspace.js';\nimport UndoIcon from '@mui/icons-material/Undo.js';\nimport RedoIcon from '@mui/icons-material/Redo.js';\nimport WrapTextIcon from '@mui/icons-material/WrapText.js';\nimport SaveIcon from '@mui/icons-material/Save.js';\n\nimport Select from '@mui/material/Select/index.js';\n\nimport CheckIcon from '@mui/icons-material/Check.js';\n\nimport StarIcon from '@mui/icons-material/Star.js';\n\nimport { useAtom } from 'jotai';\n\nimport { useLocalStorage } from 'react-use';\n\nimport { useSnackbar } from 'notistack';\n\nimport { useDebouncedCallback } from 'use-debounce';\n\nimport { Loading } from 'Loading/Loading.js';\n\nimport { recentOperationsAtom } from './JotaiState.js';\n\nimport { getCurrentSearchParamsAsJson } from '../utils/getCurrentSearchParamsAsJson.js';\n\nimport {\n    arrModeConfigs,\n    obModeConfigs\n} from './modes/index.js';\n\nimport {\n    mode_css,\n    mode_csv,\n    mode_html,\n    mode_json,\n    mode_less,\n    mode_text,\n\n    modes,\n\n    defaultRecommendedOperations,\n\n    defaultSelectedOperations\n} from './constOperations.js';\n\nimport { RecentOperations } from './RecentOperations.js';\n\nimport helperStyles from '../../helperStyles.css';\nimport styles from './MainEditor.css';\n\nconst AceEditor = React.lazy(() => {\n    const comp = import('../../../utils/lazyLoadComponents/lazyLoadAceEditorComponent.js');\n    return comp;\n});\n\nconst copy = async function (simpleText) {\n    try {\n        await navigator.clipboard.writeText(simpleText);\n        return true;\n    } catch (e) {\n        return false;\n    }\n};\n\nconst generateTargetSearchParamsAsJson = ({ mode, operation, selectedOperations }) => {\n    const currentSearchParams = getCurrentSearchParamsAsJson();\n    const targetSearchParams = { ...currentSearchParams };\n\n    if (!targetSearchParams.mode) {\n        delete targetSearchParams.mode;\n    }\n    if (mode) {\n        targetSearchParams.mode = mode;\n    }\n\n    if (\n        !targetSearchParams.operation ||\n        !selectedOperations[mode] ||\n        operation === ''\n    ) {\n        delete targetSearchParams.operation;\n    }\n    if (operation) {\n        targetSearchParams.operation = operation;\n    }\n\n    return targetSearchParams;\n};\n\nconst getSanitizedModeWithStatus = (mode) => {\n    if (modes.indexOf(mode) >= 0) {\n        return {\n            wasAlreadyClean: true,\n            mode\n        };\n    } else {\n        return {\n            wasAlreadyClean: false,\n            mode: mode_text\n        };\n    }\n};\n\nconst getSanitizedOperationWithStatus = (mode, operation) => {\n    if (\n        obModeConfigs[mode] &&\n        obModeConfigs[mode].obOperations &&\n        obModeConfigs[mode].obOperations[operation]\n    ) {\n        return {\n            wasAlreadyClean: true,\n            operation\n        };\n    } else {\n        return {\n            wasAlreadyClean: false,\n            operation: obModeConfigs[mode].arrOperations[0] // TODO: FIXME: This is not always the first operation\n        };\n    }\n};\n\nconst readable = {\n    [mode_css]: 'CSS',\n    [mode_csv]: 'CSV',\n    [mode_html]: 'HTML',\n    [mode_json]: 'JSON',\n    [mode_less]: 'LESS',\n    [mode_text]: 'Text'\n};\n\nconst MainEditor = function ({\n    placeholder,\n    onLoad,\n    onValueUpdate,\n    allowFileInput,\n    style,\n    editorWidth,\n    editorHeight,\n    autoApply,\n    onComputeOutput,\n    hideOperations\n}) {\n    const { enqueueSnackbar } = useSnackbar();\n\n    const [storedMode, setStoredMode] = useLocalStorage('mode', mode_text, { raw: true });\n    const [mode, setMode] = useState(\n        getSanitizedModeWithStatus(storedMode).mode\n    );\n\n    const [searchParams, setSearchParams] = useSearchParams();\n    useEffect(\n        () => {\n            const modeFromSearchParams = searchParams.get('mode');\n            const sanitizedModeWithStatus = getSanitizedModeWithStatus(modeFromSearchParams);\n\n            if (sanitizedModeWithStatus.wasAlreadyClean) {\n                setStoredMode(modeFromSearchParams);\n                setMode(modeFromSearchParams);\n            }\n        },\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [] // This useEffect() should run only once (at the time of mounting)\n    );\n\n    const [storedOperations, setStoredOperations] = useLocalStorage(\n        'selectedOperations',\n        JSON.parse(JSON.stringify(defaultSelectedOperations))\n    );\n\n    const selectedOperations = (() => {\n        if (storedOperations) {\n            return storedOperations;\n        } else {\n            return JSON.parse(JSON.stringify(defaultSelectedOperations));\n        }\n    })();\n    const modeFromSearchParams = searchParams.get('mode');\n    const operationFromSearchParams = searchParams.get('operation');\n\n    const sanitizedMode = getSanitizedModeWithStatus(modeFromSearchParams).mode;\n    const sanitizedOperation = (\n        getSanitizedOperationWithStatus(\n            sanitizedMode,\n            operationFromSearchParams || selectedOperations[sanitizedMode]\n        ).operation\n    );\n    selectedOperations[sanitizedMode] = sanitizedOperation;\n\n    const operation = selectedOperations[mode];\n\n    const [flagSyntaxHighlighting, setFlagSyntaxHighlighting] = useLocalStorage('flagSyntaxHighlighting', 'yes', { raw: true });\n\n    const [recentOperations, setRecentOperations] = useAtom(recentOperationsAtom);\n\n    const [flagLineWrap, setFlagLineWrap] = useLocalStorage('flagLineWrap', 'yes', { raw: true });\n\n    const [refreshUndoRedo, setRefreshUndoRedo] = useState(Date.now());\n\n    const modeForSyntaxHighlighting = (() => {\n        if (flagSyntaxHighlighting === 'yes') {\n            switch (mode) {\n                case mode_css:\n                    return 'css';\n                case mode_csv:\n                    return 'text';\n                case mode_html:\n                    return 'html';\n                case mode_json:\n                    return 'json';\n                case mode_less:\n                    return 'less';\n                case mode_text:\n                    return 'text';\n                default:\n                    return 'text';\n            }\n        } else {\n            return 'text';\n        }\n    })();\n\n    // Save \"editor\" reference for later usage.\n    const editorRef = useRef(null);\n\n    // The \"onChange\" event may get called twice because of the auto-format functionality. Hence, using this \"debounced\"\n    // function to avoid multiple calls (notifications).\n    const debouncedEnqueueSnackbar = useDebouncedCallback(\n        (errMessage) => {\n            enqueueSnackbar(errMessage);\n        },\n        32\n    );\n\n    const debouncedOnChange = useDebouncedCallback(\n        // eslint-disable-next-line no-unused-vars\n        async (val, delta) => {\n            setRefreshUndoRedo(Date.now());\n\n            if (autoApply) {\n                if (operation) { // Operation might be empty (if the user has not selected any operation)\n                    await applyTheOperation();\n                }\n            }\n        },\n        750\n    );\n\n    const applyTheOperation = async (passedOperation) => {\n        const operationToApply = passedOperation || operation;\n        const operationsByUser = [\n            operationToApply,\n            ...recentOperations\n        ];\n        // Remove duplicate operations (keep the first occurrence)\n        const uniqueOperationsByUser = operationsByUser.filter((operation, index) => {\n            return operationsByUser.indexOf(operation) === index;\n        });\n        setRecentOperations(uniqueOperationsByUser);\n        localStorage.setItem('recentOperations', JSON.stringify(uniqueOperationsByUser));\n\n        // DUPLICATE: Some piece of this code is duplicated elsewhere in this project\n        const getInputValue = () => {\n            const value = (\n                editorRef.current ?\n                    editorRef.current.getValue() :\n                    ''\n            );\n            return value;\n        };\n\n        const modeConfig = obModeConfigs[mode];\n        const operationId = operationToApply;\n        const operationConfig = modeConfig.obOperations[operationId];\n\n        const inputValue = getInputValue();\n\n        if (inputValue === '') {\n            // TODO: FIXME: This code is duplicated elsewhere in this project\n            const output = inputValue;\n            if (typeof onComputeOutput === 'function') {\n                onComputeOutput({\n                    operation: operationToApply,\n                    output\n                });\n            } else {\n                editorRef.current.setValue(output);\n            }\n            if (typeof onValueUpdate === 'function') {\n                onValueUpdate(output);\n            }\n            return;\n        }\n\n        let\n            err,\n            output,\n            extraInfo;\n\n        try {\n            const parameters = {};\n\n            switch (operationConfig.operationInputType) {\n                case 'json': {\n                    const inputJson = JSON.parse(inputValue);\n                    parameters.inputJson = inputJson;\n                    break;\n                }\n                case 'array-of-strings': {\n                    const inputArrayOfStrings = inputValue.split('\\n');\n                    parameters.inputArrayOfStrings = inputArrayOfStrings;\n                    break;\n                }\n                case 'text':\n                default: {\n                    const inputText = inputValue;\n                    parameters.inputText = inputText;\n                    break;\n                }\n            }\n\n            [err, output, extraInfo] = await operationConfig.performOperation(parameters);\n        } catch (e) {\n            err = e;\n        }\n\n        if (!err) {\n            switch (operationConfig.operationOutputType) {\n                case 'json': {\n                    output = JSON.stringify(output, null, '\\t');\n                    break;\n                }\n                case 'array-of-strings': {\n                    if (Array.isArray(output)) {\n                        output = output.join('\\n');\n                    }\n                    break;\n                }\n                case 'text':\n                default: {\n                    // Do nothing\n                    break;\n                }\n            }\n        }\n\n        if (err) {\n            console.error(err);\n            debouncedEnqueueSnackbar(err.message);\n\n            if (extraInfo && extraInfo.moveCursorTo) {\n                // editorRef.current.moveCursorTo(\n                //     extraInfo.moveCursorTo.row,\n                //     extraInfo.moveCursorTo.column\n                // );\n                editorRef.current.moveCursorToPosition({\n                    row: extraInfo.moveCursorTo.row,\n                    column: extraInfo.moveCursorTo.column\n                });\n\n                editorRef.current.focus();\n            }\n        } else {\n            if (output === null) {\n                if (extraInfo && extraInfo.stats) {\n                    // Do nothing (for now)\n                } else {\n                    const extraInfoString = JSON.stringify(extraInfo, null, '\\t');\n                    console.error(extraInfoString);\n                    debouncedEnqueueSnackbar(extraInfoString);\n                }\n            } else {\n                if (typeof onComputeOutput === 'function') {\n                    onComputeOutput({\n                        operation: operationToApply,\n                        output\n                    });\n                } else {\n                    editorRef.current.setValue(output);\n                }\n                if (typeof onValueUpdate === 'function') {\n                    onValueUpdate(output);\n                }\n            }\n        }\n    };\n\n    useEffect(() => {\n        // Operation might be empty (at the time of mounting this component)\n        if (autoApply && operation) {\n            (async () => {\n                await applyTheOperation();\n            })();\n        }\n    }, [autoApply, operation]); // eslint-disable-line react-hooks/exhaustive-deps\n\n    return (\n        <div style={style} className={styles.MainEditor}>\n            <div style={{ marginTop: 10 }}>\n                <div\n                    style={{ marginTop: 20 }}\n                    className={styles.translucentWithoutHover}\n                >\n                    <div>\n                        <div\n                            style={{\n                                display: 'flex',\n                                alignItems: 'center',\n                                justifyContent: 'space-between',\n                                containerType: 'inline-size'\n                            }}\n                        >\n                            {\n                                hideOperations &&\n                                <div>&nbsp;</div>\n                            }\n                            <div style={{ display: 'flex' }}>\n                                <div>\n                                    <Select\n                                        native\n                                        value={mode}\n                                        style={{\n                                            width: 75,\n                                            height: 24,\n                                            fontSize: 11\n                                        }}\n                                        onChange={(e) => {\n                                            const mode = e.target.value;\n                                            setMode(mode);\n                                            setStoredMode(mode);\n\n                                            const searchParamsToApply = generateTargetSearchParamsAsJson({\n                                                mode,\n                                                operation: selectedOperations[mode],\n                                                selectedOperations\n                                            });\n                                            setSearchParams(searchParamsToApply);\n                                        }}\n                                    >\n                                        {\n                                            arrModeConfigs.map((modeConfig) => {\n                                                return (\n                                                    <option\n                                                        key={modeConfig.modeId}\n                                                        value={modeConfig.modeId}\n                                                    >\n                                                        {modeConfig.title}\n                                                    </option>\n                                                );\n                                            })\n                                        }\n                                    </Select>\n                                </div>\n                                <div style={{ marginLeft: 5 }}>\n                                    {(() => {\n                                        const disabled = (() => {\n                                            const modeConfig = obModeConfigs[mode];\n                                            if (modeConfig.hasSyntaxHighlighting) {\n                                                return false;\n                                            } else {\n                                                return true;\n                                            }\n                                        })();\n                                        let title;\n                                        if (disabled) {\n                                            title = 'Syntax highlighting not available for this mode';\n                                        } else {\n                                            if (flagSyntaxHighlighting === 'yes') {\n                                                title = 'Disable syntax highlighting';\n                                            } else {\n                                                title = 'Enable syntax highlighting';\n                                            }\n                                        }\n\n                                        return (\n                                            <IconButton\n                                                size=\"small\"\n                                                title={title}\n                                                onClick={() => {\n                                                    if (disabled) {\n                                                        // TODO: Show a tooltip message\n                                                    } else {\n                                                        setFlagSyntaxHighlighting(\n                                                            flagSyntaxHighlighting === 'yes' ? 'no' : 'yes'\n                                                        );\n                                                    }\n                                                }}\n                                            >\n                                                {(() => {\n                                                    let Icon;\n                                                    if (flagSyntaxHighlighting === 'yes') {\n                                                        Icon = BorderColorIcon;\n                                                    } else {\n                                                        Icon = BorderColorOutlinedIcon;\n                                                    }\n\n                                                    let color;\n                                                    if (disabled) {\n                                                        color = '#ccc';\n                                                    } else {\n                                                        if (flagSyntaxHighlighting === 'yes') {\n                                                            color = '#1976d2';\n                                                        } else {\n                                                            color = undefined;\n                                                        }\n                                                    }\n\n                                                    return <Icon style={{ fontSize: 16, color }} />;\n                                                })()}\n                                            </IconButton>\n                                        );\n                                    })()}\n                                </div>\n                            </div>\n                            <div\n                                style={{\n                                    // TODO: Use a better way to \"right-align\" the content (probably via appropriate \"prop\")\n                                    display: hideOperations ? 'none' : 'flex'\n                                }}\n                            >\n                                <div style={{ marginLeft: 5 }}>\n                                    <Select\n                                        native\n                                        className={styles.SelectTheOperation}\n                                        style={{\n                                            height: 24,\n                                            fontSize: 11,\n                                            border: (\n                                                selectedOperations[mode] === '' ?\n                                                    '1px dashed orange' :\n                                                    undefined\n                                            )\n                                        }}\n                                        value={selectedOperations[mode]}\n                                        onChange={(e) => {\n                                            const selectedOperation = e.target.value;\n\n                                            const json = JSON.parse(JSON.stringify(selectedOperations));\n                                            json[mode] = selectedOperation;\n\n                                            setStoredOperations(json);\n\n                                            const searchParamsToApply = generateTargetSearchParamsAsJson({\n                                                mode,\n                                                operation: selectedOperation,\n                                                selectedOperations\n                                            });\n                                            setSearchParams(searchParamsToApply);\n                                        }}\n                                    >\n                                        <option\n                                            value=\"\"\n                                            style={{ color: '#777' }}\n                                        >\n                                            -- Operations --\n                                        </option>\n\n                                        {(() => {\n                                            const modeConfig = obModeConfigs[mode];\n\n                                            const { operations } = modeConfig;\n\n                                            // It has \"optgroup\" and there are \"options\" under each \"optgroup\"\n                                            return operations.map((operation) => {\n                                                return (\n                                                    <optgroup\n                                                        key={operation.optgroupLabel}\n                                                        label={operation.optgroupLabel}\n                                                    >\n                                                        {\n                                                            operation.options.map((option) => {\n                                                                return (\n                                                                    <option\n                                                                        key={option.operationId}\n                                                                        value={option.operationId}\n                                                                    >\n                                                                        {option.label}\n                                                                    </option>\n                                                                );\n                                                            })\n                                                        }\n                                                    </optgroup>\n                                                );\n                                            });\n                                        })()}\n                                    </Select>\n                                </div>\n\n                                <div style={{ marginLeft: 5 }}>\n                                    <IconButton\n                                        size=\"small\"\n                                        title=\"Insert sample value\"\n                                        onClick={() => {\n                                            const editor = editorRef.current;\n\n                                            const modeConfig = obModeConfigs[mode];\n                                            const selectedOperationId = selectedOperations[mode];\n                                            const operation = modeConfig.obOperations[selectedOperationId];\n\n                                            const sample = (\n                                                (\n                                                    operation &&\n                                                    operation.snippets &&\n                                                    operation.snippets[0] &&\n                                                    operation.snippets[0].content\n                                                ) ||\n                                                (\n                                                    modeConfig.snippets &&\n                                                    modeConfig.snippets[0] &&\n                                                    modeConfig.snippets[0].content\n                                                ) ||\n                                                (\n                                                    'Please provide content here'\n                                                )\n                                            );\n\n                                            editor.setValue(sample);\n                                            editor.focus();\n                                        }}\n                                    >\n                                        <ScienceIcon style={{ fontSize: 16 }} />\n                                    </IconButton>\n                                </div>\n\n                                <div style={{ marginLeft: 5 }}>\n                                    <IconButton\n                                        size=\"small\"\n                                        className={helperStyles.hideForContainerGE640}\n                                        style={{\n                                            backgroundColor: '#1976d2'\n                                        }}\n                                        onClick={async () => {\n                                            await applyTheOperation();\n                                        }}\n                                    >\n                                        <CheckIcon\n                                            style={{\n                                                fontSize: 14,\n                                                color: '#fff'\n                                            }}\n                                        />\n                                    </IconButton>\n                                    <Button\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        size=\"small\"\n                                        startIcon={<CheckIcon />}\n                                        disabled={operation === ''}\n                                        className={helperStyles.hideForContainerLT640}\n                                        onClick={async () => {\n                                            await applyTheOperation();\n                                        }}\n                                        style={{ height: 24 }}\n                                    >\n                                        Apply\n                                    </Button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    {\n                        recentOperations.length > 0 &&\n                        <div\n                            style={{\n                                marginTop: 10,\n                                visibility: hideOperations ? 'hidden' : 'visible'\n                            }}\n                        >\n                            <div\n                                style={{\n                                    display: 'flex',\n                                    flexDirection: 'row-reverse',\n                                    backgroundColor: '#f5f5f5',\n                                    border: '1px solid #e0e0e0',\n                                    borderRadius: 999\n                                }}\n                            >\n                                <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'center', fontSize: 12 }}>\n                                    <IconButton\n                                        size=\"small\"\n                                        title=\"Reset suggested operations\"\n                                        onClick={() => {\n                                            setRecentOperations(defaultRecommendedOperations);\n                                            localStorage.setItem('recentOperations', JSON.stringify([]));\n                                        }}\n                                    >\n                                        <StarIcon style={{ fontSize: 16 }} />\n                                    </IconButton>\n                                </div>\n                                <div\n                                    style={{\n                                        borderRight: '1px solid #e0e0e0'\n                                    }}\n                                ></div>\n                                <div\n                                    style={{\n                                        backgroundColor: '#fff',\n                                        width: '100%',\n                                        borderTopLeftRadius: 999,\n                                        borderBottomLeftRadius: 999\n                                    }}\n                                >\n                                    <RecentOperations\n                                        mode={mode}\n                                        onOperationClick={async (operationId) => {\n                                            await applyTheOperation(operationId);\n                                        }}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    }\n                </div>\n            </div>\n\n            <div style={{ marginTop: 10 }}>\n                <div>\n                    <Suspense fallback={<Loading type=\"line-scale\" />}>\n                        <AceEditor\n                            placeholder={\n                                placeholder ||\n                                `Provide ${readable[mode]} here`\n                            }\n                            setOptions={{\n                                // useWorker: false,\n                                // enableBasicAutocompletion: true,\n                                // enableLiveAutocompletion: true,\n                                // enableSnippets: true,\n                                // showLineNumbers: true,\n                                // tabSize: 4,\n                                // useSoftTabs: true,\n\n                                wrap: flagLineWrap === 'yes' ? true : false\n                            }}\n                            mode={modeForSyntaxHighlighting}\n                            theme=\"github\"\n                            onLoad={(editor) => {\n                                editorRef.current = editor;\n                                if (typeof onLoad === 'function') {\n                                    onLoad(editor);\n                                }\n                            }}\n                            onChange={(val, delta) => {\n                                (async () => {\n                                    await debouncedOnChange(val, delta);\n                                })();\n                            }}\n                            editorProps={{ $blockScrolling: true }}\n                            width={editorWidth}\n                            height={editorHeight}\n                            style={{\n                                minHeight: '65vh'\n                            }}\n                        />\n                    </Suspense>\n                </div>\n            </div>\n            <div style={{ marginTop: 10 }}>\n                <div\n                    className={styles.translucentWithoutHover}\n                    style={{ display: 'flex', justifyContent: 'space-between' }}\n                >\n                    <div style={{ display: 'flex' }}>\n                        {\n                            allowFileInput &&\n                            <IconButton\n                                title=\"Load from file\"\n                                size=\"small\"\n                                component=\"label\"\n                            >\n                                <FileOpenIcon style={{ fontSize: 16 }} />\n                                <input\n                                    type=\"file\"\n                                    style={{ display: 'none' }}\n                                    onChange={async (e) => {\n                                        const file = e.target.files[0];\n                                        if (file) {\n                                            const fileContent = await file.text();\n                                            const editor = editorRef.current;\n                                            if (editor) {\n                                                editor.setValue(fileContent);\n                                            }\n                                        }\n\n                                        // Reset the file input value so that the same file can also be loaded again\n                                        e.target.value = null;\n                                    }}\n                                />\n                            </IconButton>\n                        }\n\n                        {/* Cut button */}\n                        <IconButton\n                            title=\"Cut\"\n                            size=\"small\"\n                            onClick={async () => {\n                                const editor = editorRef.current;\n                                if (editor) {\n                                    // Check if there is any selected text\n                                    let selectedText = editor.getSelectedText();\n\n                                    if (!selectedText) {\n                                        // If there is no selected text, then select all text.\n                                        editor.selectAll();\n                                        selectedText = editor.getSelectedText();\n                                    }\n\n                                    // Copy selected contents to clipboard\n                                    await copy(selectedText);\n\n                                    // Perform cut operation\n                                    editor.execCommand('cut');\n                                }\n                            }}\n                        >\n                            <ContentCutIcon style={{ fontSize: 16 }} />\n                        </IconButton>\n\n                        {/* Copy button */}\n                        <IconButton\n                            title=\"Copy\"\n                            size=\"small\"\n                            onClick={async () => {\n                                const editor = editorRef.current;\n                                if (editor) {\n                                    // Check if there is any selected text\n                                    let selectedText = editor.getSelectedText();\n\n                                    if (!selectedText) {\n                                        // If there is no selected text, then select all text.\n                                        editor.selectAll();\n                                        selectedText = editor.getSelectedText();\n                                    }\n\n                                    // Copy selected contents to clipboard\n                                    await copy(selectedText);\n\n                                    // Perform copy operation\n                                    editor.execCommand('copy');\n                                }\n                            }}\n                        >\n                            <ContentCopyIcon style={{ fontSize: 16 }} />\n                        </IconButton>\n\n                        {/* Clear button */}\n                        <IconButton\n                            title=\"Clear\"\n                            size=\"small\"\n                            onClick={() => {\n                                const editor = editorRef.current;\n                                if (editor) {\n                                    // Check if there is any selected text\n                                    const selectedText = editor.getSelectedText();\n\n                                    if (selectedText) {\n                                        // If there is selected text, then clear only the selected text.\n                                        editor.execCommand('inserttext', { text: '' });\n                                    } else {\n                                        editor.setValue('');\n                                    }\n                                }\n                            }}\n                        >\n                            <BackspaceIcon style={{ fontSize: 16 }} />\n                        </IconButton>\n\n                        {/* Undo button */}\n                        <IconButton\n                            title=\"Undo\"\n                            size=\"small\"\n                            disabled={refreshUndoRedo && (() => {\n                                if (\n                                    editorRef.current &&\n                                    editorRef.current.getSession().getUndoManager().hasUndo()\n                                ) {\n                                    return false;\n                                } else {\n                                    return true;\n                                }\n                            })()}\n                            onClick={() => {\n                                const editor = editorRef.current;\n                                if (editor) {\n                                    editor.execCommand('undo');\n                                }\n                            }}\n                        >\n                            <UndoIcon style={{ fontSize: 16 }} />\n                        </IconButton>\n\n                        {/* Redo button */}\n                        <IconButton\n                            title=\"Redo\"\n                            size=\"small\"\n                            disabled={refreshUndoRedo && (() => {\n                                if (\n                                    editorRef.current &&\n                                    editorRef.current.getSession().getUndoManager().hasRedo()\n                                ) {\n                                    return false;\n                                } else {\n                                    return true;\n                                }\n                            })()}\n                            onClick={() => {\n                                const editor = editorRef.current;\n                                if (editor) {\n                                    editor.execCommand('redo');\n                                }\n                            }}\n                        >\n                            <RedoIcon style={{ fontSize: 16 }} />\n                        </IconButton>\n\n                        {/* Line wrap button */}\n                        <IconButton\n                            title=\"Toggle line wrap\"\n                            size=\"small\"\n                            onClick={() => {\n                                // Raw code for toggling line wrap:\n                                //     editor.getSession().setUseWrapMode(!editor.getSession().getUseWrapMode());\n                                setFlagLineWrap(flagLineWrap === 'yes' ? 'no' : 'yes');\n                            }}\n                        >\n                            <WrapTextIcon\n                                style={{\n                                    fontSize: 16,\n                                    color: flagLineWrap === 'yes' ? '#1976d2' : undefined\n                                }}\n                            />\n                        </IconButton>\n\n                        {/* TODO: Full screen button */}\n\n                        {/* Save button */}\n                        <IconButton\n                            title=\"Save\"\n                            size=\"small\"\n                            onClick={() => {\n                                const editor = editorRef.current;\n                                if (editor) {\n                                    const input = editor.getValue();\n                                    const blob = new Blob([input], { type: 'text/plain' });\n                                    const a = document.createElement('a');\n                                    a.href = URL.createObjectURL(blob);\n                                    let extension;\n                                    switch (mode) {\n                                        case mode_css:\n                                            extension = 'css';\n                                            break;\n                                        case mode_csv:\n                                            extension = 'csv';\n                                            break;\n                                        case mode_json:\n                                            extension = 'json';\n                                            break;\n                                        case mode_less:\n                                            extension = 'less';\n                                            break;\n                                        default:\n                                            extension = 'txt';\n                                    }\n                                    const localTime = (new Date(Date.now() - (new Date()).getTimezoneOffset() * 60 * 1000)).toISOString().substring(0, 19).replace('T', ' ');\n                                    const localTimeAsPartOfFilename = localTime.replace(' ', '_').replace(/:/g, '-');\n                                    a.download = `output-${localTimeAsPartOfFilename}.${extension}`;\n                                    a.click();\n                                }\n                            }}\n                        >\n                            <SaveIcon style={{ fontSize: 16 }} />\n                        </IconButton>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\nMainEditor.propTypes = {\n    placeholder: PropTypes.string,\n    onLoad: PropTypes.func,\n    onValueUpdate: PropTypes.func,\n    allowFileInput: PropTypes.bool,\n    style: PropTypes.object,\n    editorWidth: PropTypes.string,\n    editorHeight: PropTypes.string,\n    autoApply: PropTypes.bool,\n    onComputeOutput: PropTypes.func,\n    hideOperations: PropTypes.bool\n};\n\nexport { MainEditor };\n","// extracted by mini-css-extract-plugin\nexport default {\"TransformersStyleHeading\":\"TheEditors__TransformersStyleHeading--bRtat\"};","import React, { useRef } from 'react';\n\nimport { MainEditor } from '../MainEditor/MainEditor.js';\n\nimport theEditorsStyles from '../TheEditors.css';\nimport styles from './SingleEditor.css';\n\nconst SingleEditor = () => {\n    const editorRef = useRef(null);\n    return (\n        <div className={styles.SingleEditor}>\n            <div className={theEditorsStyles.TransformersStyleHeading}>\n                I<span style={{ fontSize: 14 }}>nput</span>\n                {' / '}\n                O<span style={{ fontSize: 14 }}>utput</span>\n            </div>\n            <div>\n                <MainEditor\n                    onLoad={(editor) => {\n                        editorRef.current = editor;\n                    }}\n                    style={{ marginTop: 5 }}\n                    editorWidth=\"100%\"\n                    editorHeight=\"100%\"\n                    allowFileInput\n                />\n            </div>\n        </div>\n    );\n};\n\nexport { SingleEditor };\n","// extracted by mini-css-extract-plugin\nexport default {\"SingleEditor\":\"SingleEditor__SingleEditor--kv3Xy\"};","// extracted by mini-css-extract-plugin\nexport default {\"DoubleEditor\":\"DoubleEditor__DoubleEditor--molkI\",\"DoubleEditorContainer\":\"DoubleEditor__DoubleEditorContainer--QjHrA\",\"Combinator\":\"DoubleEditor__Combinator--BS6ym\",\"Swap\":\"DoubleEditor__Swap--KQmx6\",\"SwapButton\":\"DoubleEditor__SwapButton--nb6q9\"};","import React, { useRef } from 'react';\n\nimport IconButton from '@mui/material/IconButton/index.js';\nimport SwapHorizontalCircleRoundedIcon from '@mui/icons-material/SwapHorizontalCircleRounded.js';\n\nimport Checkbox from '@mui/material/Checkbox/index.js';\nimport FormControlLabel from '@mui/material/FormControlLabel/index.js';\n\nimport { MainEditor } from '../MainEditor/MainEditor.js';\n\nimport theEditorsStyles from '../TheEditors.css';\nimport styles from './DoubleEditor.css';\n\nconst DoubleEditor = () => {\n    const editorARef = useRef(null);\n    const editorBRef = useRef(null);\n\n    const [autoApply, setAutoApply] = React.useState(true);\n\n    return (\n        <div className={styles.DoubleEditor}>\n            <div className={styles.DoubleEditorContainer}>\n                <div>\n                    <div className={theEditorsStyles.TransformersStyleHeading}>\n                        I<span style={{ fontSize: 14 }}>nput</span>\n                    </div>\n                    <div>\n                        <MainEditor\n                            onLoad={(editor) => {\n                                editorARef.current = editor;\n                            }}\n                            style={{ marginTop: 5 }}\n                            editorWidth=\"100%\"\n                            editorHeight=\"300px\"\n                            allowFileInput\n                            autoApply={autoApply}\n                            onComputeOutput={\n                                // eslint-disable-next-line no-unused-vars\n                                ({ operation, output }) => {\n                                    if (editorBRef.current) {\n                                        editorBRef.current.setValue(output);\n                                    }\n                                }\n                            }\n                        />\n                    </div>\n                </div>\n                <div>\n                    <div className={styles.Combinator}>\n                        <FormControlLabel\n                            control={\n                                <Checkbox\n                                    checked={autoApply}\n                                    size=\"small\"\n                                    onChange={(event) => {\n                                        const flagAutoApply = event.target.checked;\n                                        setAutoApply(flagAutoApply);\n                                    }}\n                                />\n                            }\n                            label={\n                                <div style={{ marginLeft: 1 }}>\n                                    <span style={{ fontSize: 12 }}>Auto-apply</span>\n                                </div>\n                            }\n                            style={{\n                                // Seems that Material UI is introducing some margin, so, overriding that\n                                marginLeft: 0,\n                                marginRight: 0\n                            }}\n                        />\n                    </div>\n                    <div className={styles.Swap}>\n                        <div\n                            style={{\n                                marginLeft: 'auto',\n                                marginRight: 'auto'\n                            }}\n                        >\n                            <IconButton\n                                variant=\"filled\"\n                                color=\"primary\"\n                                size=\"small\"\n                                className={styles.SwapButton}\n                                onClick={() => {\n                                    const valueA = editorARef.current.getValue();\n                                    const valueB = editorBRef.current.getValue();\n\n                                    // Swap values\n                                    editorARef.current.setValue(valueB);\n                                    editorBRef.current.setValue(valueA);\n                                }}\n                            >\n                                <SwapHorizontalCircleRoundedIcon />\n                            </IconButton>\n                        </div>\n                    </div>\n                </div>\n                <div>\n                    <div className={theEditorsStyles.TransformersStyleHeading}>\n                        O<span style={{ fontSize: 14 }}>utput</span>\n                    </div>\n                    <div>\n                        <MainEditor\n                            placeholder=\"Result of the operation will be available here\"\n                            onLoad={(editor) => {\n                                editorBRef.current = editor;\n                            }}\n                            style={{ marginTop: 5 }}\n                            editorWidth=\"100%\"\n                            editorHeight=\"300px\"\n                            hideOperations\n                        />\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport { DoubleEditor };\n","// extracted by mini-css-extract-plugin\nexport default {\"TripleEditor\":\"TripleEditor__TripleEditor--CeiGf\",\"TripleEditorContainer\":\"TripleEditor__TripleEditorContainer--FIE3s\",\"Combinator\":\"TripleEditor__Combinator--dMGvj\",\"CombinatorAB\":\"TripleEditor__CombinatorAB--SQ7s9\",\"CombinatorFinalOperations\":\"TripleEditor__CombinatorFinalOperations--DN7fl\",\"OperationsButtons\":\"TripleEditor__OperationsButtons--iMigy\",\"SwapButton\":\"TripleEditor__SwapButton--l0CD9\"};","import React, { useRef } from 'react';\n\nimport {\n    lazyLoadDifference,\n    lazyLoadIntersection,\n    lazyLoadUnion\n} from '../../../utils/lazyLoadLibraries/lazyLoadLibraries.js';\n\nimport IconButton from '@mui/material/IconButton/index.js';\nimport SwapHorizontalCircleRoundedIcon from '@mui/icons-material/SwapHorizontalCircleRounded.js';\n\nimport Button from '@mui/material/Button/index.js';\n\nimport { MainEditor } from '../MainEditor/MainEditor.js';\n\nimport theEditorsStyles from '../TheEditors.css';\nimport styles from './TripleEditor.css';\n\nconst performABToC = async ({\n    editorARef,\n    editorBRef,\n    editorCRef,\n    operation\n}) => {\n    const valueA = editorARef.current.getValue();\n    const valueB = editorBRef.current.getValue();\n\n    const a = valueA.split('\\n');\n    const b = valueB.split('\\n');\n\n    let c = '';\n\n    if (operation === 'append') {\n        c = [...a, ...b];\n    } else if (operation === 'difference') {\n        const { difference } = await lazyLoadDifference();\n        c = difference(a, b);\n    } else if (operation === 'intersection') {\n        const { intersection } = await lazyLoadIntersection();\n        c = intersection(a, b);\n    } else if (operation === 'union') {\n        const { union } = await lazyLoadUnion();\n        c = union(a, b);\n    }\n\n    const valueC = c.join('\\n');\n\n    // Update C\n    editorCRef.current.setValue(valueC);\n};\n\nconst TripleEditor = function () {\n    const editorARef = useRef(null);\n    const editorBRef = useRef(null);\n    const editorCRef = useRef(null);\n\n    return (\n        <div className={styles.TripleEditor}>\n            <div className={styles.TripleEditorContainer}>\n                <div>\n                    <div className={theEditorsStyles.TransformersStyleHeading}>\n                        A\n                    </div>\n                    <div>\n                        <MainEditor\n                            onLoad={(editor) => {\n                                editorARef.current = editor;\n                            }}\n                            style={{ marginTop: 5 }}\n                            editorWidth=\"100%\"\n                            editorHeight=\"300px\"\n                            allowFileInput\n                        />\n                    </div>\n                </div>\n                <div\n                    className={\n                        styles.Combinator + ' ' +\n                        styles.CombinatorAB\n                    }\n                >\n                    <div\n                        style={{\n                            display: 'flex',\n                            flexDirection: 'column'\n                        }}\n                    >\n                        <IconButton\n                            variant=\"filled\"\n                            color=\"primary\"\n                            size=\"small\"\n                            className={styles.SwapButton}\n                            onClick={() => {\n                                const valueA = editorARef.current.getValue();\n                                const valueB = editorBRef.current.getValue();\n\n                                // Swap values\n                                editorARef.current.setValue(valueB);\n                                editorBRef.current.setValue(valueA);\n                            }}\n                        >\n                            <SwapHorizontalCircleRoundedIcon />\n                        </IconButton>\n                    </div>\n                </div>\n                <div>\n                    <div className={theEditorsStyles.TransformersStyleHeading}>\n                        B\n                    </div>\n                    <div>\n                        <MainEditor\n                            onLoad={(editor) => {\n                                editorBRef.current = editor;\n                            }}\n                            style={{ marginTop: 5 }}\n                            editorWidth=\"100%\"\n                            editorHeight=\"300px\"\n                            allowFileInput\n                        />\n                    </div>\n                </div>\n                <div\n                    className={\n                        styles.Combinator + ' ' +\n                        styles.CombinatorFinalOperations\n                    }\n                >\n                    <div className={styles.OperationsButtons}>\n                        <Button\n                            variant=\"contained\"\n                            size=\"small\"\n                            type=\"button\"\n                            style={{ display: 'block' }}\n                            onClick={async () => {\n                                await performABToC({\n                                    editorARef,\n                                    editorBRef,\n                                    editorCRef,\n                                    operation: 'union'\n                                });\n                            }}\n                        >\n                            A ∪ B\n                        </Button>\n\n                        <Button\n                            variant=\"contained\"\n                            size=\"small\"\n                            type=\"button\"\n                            style={{ display: 'block' }}\n                            onClick={async () => {\n                                await performABToC({\n                                    editorARef,\n                                    editorBRef,\n                                    editorCRef,\n                                    operation: 'intersection'\n                                });\n                            }}\n                        >\n                            A ∩ B\n                        </Button>\n\n                        <Button\n                            variant=\"contained\"\n                            size=\"small\"\n                            type=\"button\"\n                            style={{ display: 'block' }}\n                            onClick={async () => {\n                                await performABToC({\n                                    editorARef,\n                                    editorBRef,\n                                    editorCRef,\n                                    operation: 'append'\n                                });\n                            }}\n                        >\n                            A + B\n                        </Button>\n\n                        <Button\n                            variant=\"contained\"\n                            size=\"small\"\n                            type=\"button\"\n                            style={{ display: 'block' }}\n                            onClick={async () => {\n                                await performABToC({\n                                    editorARef,\n                                    editorBRef,\n                                    editorCRef,\n                                    operation: 'difference'\n                                });\n                            }}\n                        >\n                            A − B\n                        </Button>\n                    </div>\n                </div>\n                <div>\n                    <div className={theEditorsStyles.TransformersStyleHeading}>\n                        C\n                    </div>\n                    <div>\n                        <MainEditor\n                            placeholder=\"Result of the operation will be available here\"\n                            onLoad={(editor) => {\n                                editorCRef.current = editor;\n                            }}\n                            style={{ marginTop: 5 }}\n                            editorWidth=\"100%\"\n                            editorHeight=\"300px\"\n                            // hideOperations\n                        />\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport { TripleEditor };\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Tabs from '@mui/material/Tabs/index.js';\nimport Tab from '@mui/material/Tab/index.js';\n\nimport { useLocalStorage } from 'react-use';\nimport { useSearchParams  } from 'react-router-dom';\n\nimport { getCurrentSearchParamsAsJson } from '../utils/getCurrentSearchParamsAsJson.js';\n\nimport { SingleEditor } from '../SingleEditor/SingleEditor.js';\nimport { DoubleEditor } from '../DoubleEditor/DoubleEditor.js';\nimport { TripleEditor } from '../TripleEditor/TripleEditor.js';\n\nimport helperStyles from '../../helperStyles.css';\nimport styles from './ContentTabs.css';\n\nconst TabPanel = function (props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            hidden={value !== index}\n            {...other}\n        >\n            <div>\n                {children}\n            </div>\n\n            {/*\n                // If we wish to unmount the tab content when it is not selected\n                {\n                    value === index &&\n                    (\n                        <div>\n                            {children}\n                        </div>\n                    )\n                }\n            */}\n        </div>\n    );\n};\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.number.isRequired,\n    value: PropTypes.number.isRequired\n};\n\nconst getSanitizedTransformersWithStatus = (transformers) => {\n    if (\n        transformers === '1' ||\n        transformers === '2' ||\n        transformers === '3'\n    ) {\n        return {\n            wasAlreadyClean: true,\n            transformers\n        };\n    } else {\n        return {\n            wasAlreadyClean: false,\n            transformers: '2'\n        };\n    }\n};\n\nconst ContentTabs = () => {\n    const [storedTransformers, setStoredTransformers] = useLocalStorage('transformers', '2', { raw: true });\n\n    const transformers = getSanitizedTransformersWithStatus(storedTransformers).transformers;\n    const transformersAsInt = parseInt(transformers, 10);\n    const [selectedTabIndex, setSelectedTabIndex] = useState(transformersAsInt - 1);\n\n    const [firstTabInitialized, setFirstTabInitialized] = useState(false);\n    const [secondTabInitialized, setSecondTabInitialized] = useState(false);\n    const [thirdTabInitialized, setThirdTabInitialized] = useState(false);\n\n    const [searchParams, setSearchParams] = useSearchParams();\n    useEffect(\n        () => {\n            const transformersFromSearchParams = searchParams.get('transformers');\n            const sanitizedTransformersWithStatus = getSanitizedTransformersWithStatus(transformersFromSearchParams);\n\n            let transformerBeingMounted = transformersAsInt;\n\n            if (sanitizedTransformersWithStatus.wasAlreadyClean) {\n                setStoredTransformers(transformersFromSearchParams);\n                setSelectedTabIndex(\n                    parseInt(sanitizedTransformersWithStatus.transformers, 10) - 1\n                );\n\n                transformerBeingMounted = parseInt(sanitizedTransformersWithStatus.transformers, 10);\n            }\n\n            if (transformerBeingMounted === 1 && !firstTabInitialized) {\n                setFirstTabInitialized(true);\n            } else if (transformerBeingMounted === 2 && !secondTabInitialized) {\n                setSecondTabInitialized(true);\n            } else if (transformerBeingMounted === 3 && !thirdTabInitialized) {\n                setThirdTabInitialized(true);\n            }\n        },\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [] // This useEffect() should run only once (at the time of mounting)\n    );\n\n    if (transformersAsInt === 1 && !firstTabInitialized) {\n        setFirstTabInitialized(true);\n    } else if (transformersAsInt === 2 && !secondTabInitialized) {\n        setSecondTabInitialized(true);\n    } else if (transformersAsInt === 3 && !thirdTabInitialized) {\n        setThirdTabInitialized(true);\n    }\n\n    const handleChange = (event, newValue) => {\n        setSelectedTabIndex(newValue);\n\n        const transformers = '' + (newValue + 1);\n\n        setStoredTransformers(transformers);\n\n        const currentSearchParams = getCurrentSearchParamsAsJson();\n        const targetSearchParams = { ...currentSearchParams };\n        targetSearchParams.transformers = transformers;\n        setSearchParams(targetSearchParams);\n    };\n\n    return (\n        <div className={styles.ContentTabs}>\n            <div\n                style={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    containerType: 'inline-size'\n                }}\n            >\n                <Tabs value={selectedTabIndex} onChange={handleChange}>\n                    <Tab\n                        label={\n                            <div\n                                style={{\n                                    fontFamily: '\"Transformers\", sans-serif',\n                                    fontVariant: 'small-caps',\n                                    textTransform: 'none',\n                                    fontSize: 18\n                                }}\n                            >\n                                <span className={helperStyles.hideForContainerLT640}>\n                                    Transformers{' '}\n                                </span>\n                                I\n                            </div>\n                        }\n                    />\n                    <Tab\n                        label={\n                            <div\n                                style={{\n                                    fontFamily: '\"Transformers\", sans-serif',\n                                    fontVariant: 'small-caps',\n                                    textTransform: 'none',\n                                    fontSize: 18\n                                }}\n                            >\n                                <span className={helperStyles.hideForContainerLT640}>\n                                    Transformers{' '}\n                                </span>\n                                II\n                            </div>\n                        }\n                    />\n                    <Tab\n                        label={\n                            <div\n                                style={{\n                                    fontFamily: '\"Transformers\", sans-serif',\n                                    fontVariant: 'small-caps',\n                                    textTransform: 'none',\n                                    fontSize: 18\n                                }}\n                            >\n                                <span className={helperStyles.hideForContainerLT640}>\n                                    Transformers{' '}\n                                </span>\n                                III\n                            </div>\n                        }\n                    />\n                </Tabs>\n            </div>\n            <div style={{ marginTop: 40 }}>\n                <TabPanel value={selectedTabIndex} index={0}>\n                    <div>\n                        { firstTabInitialized ? <SingleEditor /> : null }\n                    </div>\n                </TabPanel>\n                <TabPanel value={selectedTabIndex} index={1}>\n                    <div>\n                        { secondTabInitialized ? <DoubleEditor /> : null }\n                    </div>\n                </TabPanel>\n                <TabPanel value={selectedTabIndex} index={2}>\n                    <div>\n                        { thirdTabInitialized ? <TripleEditor /> : null }\n                    </div>\n                </TabPanel>\n            </div>\n        </div>\n    );\n};\n\nexport { ContentTabs };\n","// extracted by mini-css-extract-plugin\nexport default {\"ContentTabs\":\"ContentTabs__ContentTabs--fG_XB\"};","import React from 'react';\n\nimport { ContentTabs } from './ContentTabs/ContentTabs.js';\n\nimport styles from './Dashboard.css';\n\nconst Dashboard = () => {\n    return (\n        <div\n            className={styles.Dashboard}\n            style={{ marginTop: 35 }}\n        >\n            <ContentTabs />\n        </div>\n    );\n};\n\nexport { Dashboard };\n","// extracted by mini-css-extract-plugin\nexport default {\"Dashboard\":\"Dashboard__Dashboard--d2pNX\"};","import React from 'react';\n\nimport styles from './PageFooter.css';\n\nimport { CreatedByMessage } from 'generic-components/CreatedByMessage/CreatedByMessage.js';\n\nconst PageFooter = function () {\n    return (\n        <div className={styles.PageFooter}>\n            <div\n                style={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    marginTop: 45,\n                    marginBottom: 20\n                }}\n            >\n                <CreatedByMessage />\n            </div>\n        </div>\n    );\n};\n\nexport { PageFooter };\n","// extracted by mini-css-extract-plugin\nexport default {\"PageFooter\":\"PageFooter__PageFooter--yI25Y\"};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from '@mui/material/Button/index.js';\nimport Dialog from '@mui/material/Dialog/index.js';\nimport DialogActions from '@mui/material/DialogActions/index.js';\nimport DialogContent from '@mui/material/DialogContent/index.js';\nimport DialogTitle from '@mui/material/DialogTitle/index.js';\n\nconst DialogCssContainerQueriesNotSupported = function ({\n    onClose\n}) {\n    return (\n        <Dialog\n            open={true}\n            onClose={onClose}\n        >\n            <DialogTitle>\n                {'Browser upgrade required!'}\n            </DialogTitle>\n            <DialogContent>\n                <div style={{ fontSize: 12 }}>\n                    <div>\n                        {'It seems that you are using an old browser which does not support \"CSS container queries\".'}\n                    </div>\n                    <div style={{ marginTop: 20 }}>\n                        {'Since this tool is oriented for users with modern browsers, the older versions of browsers are not well-supported and will experience a poor user interface.'}\n                    </div>\n                    <div style={{ marginTop: 20 }}>\n                        {'We recommend you to upgrade to the latest version of a modern browser such as Brave / Chrome / Edge / Firefox / Opera / Safari.'}\n                    </div>\n                </div>\n            </DialogContent>\n            <DialogActions>\n                <div\n                    style={{\n                        marginRight: 16,\n                        marginBottom: 8,\n                        marginLeft: 16\n                    }}\n                >\n                    <Button\n                        variant=\"contained\"\n                        onClick={onClose}\n                        style={{\n                            textTransform: 'unset'\n                        }}\n                    >\n                        I understand\n                    </Button>\n                </div>\n            </DialogActions>\n        </Dialog>\n    );\n};\n\nDialogCssContainerQueriesNotSupported.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n\nexport { DialogCssContainerQueriesNotSupported };\n","import React, { useEffect } from 'react';\n\nimport { DialogCssContainerQueriesNotSupported } from '../Dialogs/DialogCssContainerQueriesNotSupported.js';\n\nconst AppDialogs = function () {\n    const [openCssContainerQueriesDialog, setOpenCssContainerQueriesDialog] = React.useState(false);\n\n    useEffect(() => {\n        const supportsContainerQueries = 'container' in document.documentElement.style;\n\n        if (!supportsContainerQueries) {\n            setOpenCssContainerQueriesDialog(true);\n        }\n    }, []);\n    return (\n        <React.Fragment>\n            {\n                openCssContainerQueriesDialog &&\n                <DialogCssContainerQueriesNotSupported\n                    onClose={() => {\n                        setOpenCssContainerQueriesDialog(false);\n                    }}\n                />\n            }\n        </React.Fragment>\n    );\n};\n\nexport { AppDialogs };\n","import React from 'react';\n\nimport './styles-reset.css';\n\nimport styles from './App.css';\n\nimport { PageHeader } from './PageHeader/PageHeader.js';\nimport { Dashboard } from './Dashboard/Dashboard.js';\nimport { PageFooter } from './PageFooter/PageFooter.js';\n\nimport { AppDialogs } from './AppDialogs/AppDialogs.js';\n\nconst App = function () {\n    return (\n        <div className={styles.App}>\n            <PageHeader />\n            <div className={styles.ContentWide}>\n                <Dashboard />\n            </div>\n            <PageFooter />\n\n            <AppDialogs />\n        </div>\n    );\n};\n\nexport { App };\n","import React from 'react';\n\nimport {\n    createBrowserRouter,\n    RouterProvider\n} from 'react-router-dom';\n\nimport { SnackbarProvider } from 'notistack';\n\nimport { App } from './App.js';\n\nconst router = createBrowserRouter([\n    {\n        // Currently, using it as SPA with query parameters, so all routes are the same. In local development, the path\n        // is `/`, but in GitHub Pages, the path is `/transformers/` (https://webextensions.github.io/transformers/),\n        // so, `window.location.pathname` matches that in the URL.\n        path: window.location.pathname,\n\n        element: (\n            <App />\n        )\n    }\n]);\n\nconst AppWrapper = function () {\n    return (\n        <SnackbarProvider\n            anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'right'\n            }}\n            maxSnack={3}\n            dense\n            preventDuplicate\n            autoHideDuration={3000}\n        >\n            <RouterProvider router={router} />\n        </SnackbarProvider>\n    );\n};\n\nexport { AppWrapper };\n","/* eslint-disable filenames/no-index */\n\nimport React from 'react';\nimport { createRoot } from 'react-dom/client'; // eslint-disable-line node/file-extension-in-import\n\nimport './index.css';\n\nimport { AppWrapper } from './App/AppWrapper.js';\n\nconst container = document.getElementById('root');\nconst root = createRoot(container);\nroot.render(<AppWrapper />);\n","window.less = {\n    // To disable any attempt to transpile LESS to CSS from style tags with rel=\"stylesheet/less\" since that would\n    // lead to an unwanted console message saying: \"Less has finished and no sheets were loaded.\"\n    onReady: false\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdD = function () {\n\tthrow new Error('define cannot be used indirect');\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"chunk.\" + (chunkId === 616 ? \"lessNpmPackage\" : chunkId) + \".\" + {\"123\":\"07a1221cd30aeeb1f915\",\"237\":\"a9d646ec35ae0dfc8057\",\"325\":\"897046b5bb9ae16351ed\",\"372\":\"46642a30e7fab604e979\",\"386\":\"220afb0575cdf540fbab\",\"466\":\"81e6ba3d721b0010bac6\",\"616\":\"e393786a894ce095e023\",\"945\":\"f27061c3224648049813\",\"966\":\"196d4348bdde6a6e9ce3\"}[chunkId] + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t826: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunktransformers\"] = self[\"webpackChunktransformers\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [216], () => (__webpack_require__(34374)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","leafPrototypes","getProto","inProgress","dataWebpackPrefix","PageHeader","className","style","display","flexDirection","alignItems","marginTop","margin","textAlign","fontVariant","letterSpacing","fontSize","color","getCurrentSearchParamsAsJson","params","URLSearchParams","window","location","search","ob","param","mode_css","mode_csv","mode_html","mode_json","mode_less","mode_text","modes","defaultRecommendedOperations","defaultSelectedOperations","IconNotAvailable","CircleIcon","recentOperationsFromLocalStorage","localStorage","getItem","recentOperations","JSON","parse","Array","isArray","err","console","error","recentOperationsAtom","atom","lazyLoadBeautifyCss","async","beautifyCss","configCssFormat","operationId","label","icon","MoodIcon","snippets","content","join","performOperation","inputText","extras","configCssMinify","CompressIcon","minifyCss","lazyLoadMinifyCss","configCssToScss","DataObjectIcon","output","trim","cssToScss","lazyLoadCssToScss","alert","modeCss","modeId","modeNameForAceEditor","title","hasSyntaxHighlighting","operations","optgroupLabel","options","arrOperations","reduce","acc","curr","concat","obOperations","removeCommaCharacterAtEndFromLine","line","char","length","substring","removeMatchingCharacterAtEndFromLine","removeQuoteAndApostropheCharactersFromLine","replaceAll","removeLastColumnFromCsvLine","columns","split","pop","removeFirstColumnFromCsvLine","shift","traverseNode","root","transform","key","fixDataTypes","json","node","String","Number","map","item","configCsvRemoveFirstColumn","FirstPageIcon","operationInputType","operationOutputType","inputArrayOfStrings","configCsvRemoveLastColumn","LastPageIcon","configCsvToJson","lines","headers","i","obj","j","column","push","stringify","csvToJson","modeCsv","configHtmlFormat","prettier","parserHtml","Promise","all","lazyLoadPrettierAndParserHtml","parser","tabWidth","plugins","format","modeHtml","configJsonFormat","inputJson","configJsonMinify","configJsonSort","CategoryIcon","jsonStableStringify","space","removePropertyRecursively","propertyName","hasOwnProperty","Object","keys","forEach","configJsonRemoveProperty","PlaylistRemoveIcon","prompt","Error","configJsonArrayReverse","SwapVertIcon","reverse","flattenObjectsRecursively","parentKey","value","newKey","configJsonArrayOfObjectsFlattenObjects","LinearScaleIcon","configJsonArrayOfObjectsSortByProperty","sort","a","b","configJsonFixDataTypes","BuildIcon","configJsonToCsv","AppsIcon","jsonToCsv","configJsonToLines","ReorderIcon","every","modeJson","configLessFormat","configLessToCss","extraInfo","less","libs","lazyLoadBeautifyCssAndLess","render","css","e","message","index","moveCursorTo","row","position","modeLess","configTextRemoveEmptyLines","SettingsEthernetIcon","filter","x","configTextRemoveDuplicates","CopyAllIcon","Set","configTextSort","SortIcon","outputArrayOfStrings","configTextSortCaseInsensitive","AbcIcon","toLowerCase","localeCompare","configTextSortNatural","ParkIcon","undefined","numeric","configTextRandomize","ShuffleOnIcon","Math","random","configTextReverse","KeyboardDoubleArrowDownIcon","configTextTrim","MultipleStopIcon","configTextTrimLeft","ArrowBackIcon","trimLeft","configTextTrimRight","ArrowForwardIcon","trimRight","configTextRemoveCommaCharacterAtLineEnds","CleaningServicesIcon","configTextRemoveQuoteAndApostropheCharacters","FormatQuoteIcon","configTextGetStats","BarChartIcon","stats","input","linesCount","charactersCount","words","replace","word","wordsCount","lowerCaseWords","uniqueWordsCount","size","configTextLinesToJsonArray","modeText","arrModeConfigs","obModeConfigs","modeConfig","RecentOperations","mode","onOperationClick","setRecentOperations","useAtom","operationsForMode","overflow","paddingRight","marginLeft","arr","includes","operationForMode","IconButton","iconTooltip","onClick","Icon","propTypes","PropTypes","AceEditor","React","copy","simpleText","navigator","clipboard","writeText","generateTargetSearchParamsAsJson","operation","selectedOperations","targetSearchParams","getSanitizedModeWithStatus","indexOf","wasAlreadyClean","readable","MainEditor","placeholder","onLoad","onValueUpdate","allowFileInput","editorWidth","editorHeight","autoApply","onComputeOutput","hideOperations","enqueueSnackbar","useSnackbar","storedMode","setStoredMode","useLocalStorage","raw","setMode","useState","searchParams","setSearchParams","useSearchParams","useEffect","modeFromSearchParams","get","storedOperations","setStoredOperations","operationFromSearchParams","sanitizedMode","sanitizedOperation","getSanitizedOperationWithStatus","flagSyntaxHighlighting","setFlagSyntaxHighlighting","flagLineWrap","setFlagLineWrap","refreshUndoRedo","setRefreshUndoRedo","Date","now","modeForSyntaxHighlighting","editorRef","useRef","debouncedEnqueueSnackbar","useDebouncedCallback","errMessage","debouncedOnChange","val","delta","applyTheOperation","operationToApply","passedOperation","operationsByUser","uniqueOperationsByUser","setItem","operationConfig","inputValue","current","getValue","setValue","parameters","moveCursorToPosition","focus","extraInfoString","styles","justifyContent","containerType","Select","native","width","height","onChange","target","searchParamsToApply","disabled","BorderColorIcon","BorderColorOutlinedIcon","border","selectedOperation","option","editor","selectedOperationId","sample","Science","backgroundColor","Check","Button","variant","startIcon","helperStyles","visibility","borderRadius","Star","borderRight","borderTopLeftRadius","borderBottomLeftRadius","Suspense","fallback","Loading","type","setOptions","wrap","theme","editorProps","$blockScrolling","minHeight","component","FileOpen","file","files","fileContent","text","selectedText","getSelectedText","selectAll","execCommand","ContentCut","ContentCopy","Backspace","getSession","getUndoManager","hasUndo","Undo","hasRedo","Redo","WrapText","blob","Blob","document","createElement","extension","href","URL","createObjectURL","localTimeAsPartOfFilename","getTimezoneOffset","toISOString","download","click","Save","SingleEditor","theEditorsStyles","DoubleEditor","editorARef","editorBRef","setAutoApply","FormControlLabel","control","Checkbox","checked","event","flagAutoApply","marginRight","valueA","valueB","SwapHorizontalCircleRounded","performABToC","editorCRef","c","difference","default","lazyLoadDifference","intersection","lazyLoadIntersection","union","lazyLoadUnion","valueC","TripleEditor","TabPanel","props","children","other","hidden","getSanitizedTransformersWithStatus","transformers","ContentTabs","storedTransformers","setStoredTransformers","transformersAsInt","parseInt","selectedTabIndex","setSelectedTabIndex","firstTabInitialized","setFirstTabInitialized","secondTabInitialized","setSecondTabInitialized","thirdTabInitialized","setThirdTabInitialized","transformersFromSearchParams","sanitizedTransformersWithStatus","transformerBeingMounted","Tabs","newValue","Tab","fontFamily","textTransform","Dashboard","PageFooter","marginBottom","CreatedByMessage","DialogCssContainerQueriesNotSupported","onClose","Dialog","open","DialogTitle","DialogContent","DialogActions","AppDialogs","openCssContainerQueriesDialog","setOpenCssContainerQueriesDialog","documentElement","App","router","createBrowserRouter","path","pathname","element","AppWrapper","anchorOrigin","vertical","horizontal","maxSnack","dense","preventDuplicate","autoHideDuration","container","getElementById","createRoot","onReady","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","id","loaded","__webpack_modules__","call","m","amdD","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","splice","r","n","getter","__esModule","d","getPrototypeOf","t","this","then","ns","create","def","getOwnPropertyNames","definition","o","defineProperty","enumerable","f","chunkId","promises","u","miniCssF","g","globalThis","Function","prop","prototype","l","url","done","script","needAttach","scripts","getElementsByTagName","s","getAttribute","charset","timeout","nc","setAttribute","src","onScriptComplete","prev","onerror","onload","clearTimeout","doneFns","parentNode","removeChild","setTimeout","bind","head","appendChild","Symbol","toStringTag","nmd","paths","scriptUrl","importScripts","currentScript","p","installedChunks","installedChunkData","promise","resolve","reject","errorType","realSrc","name","request","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","some","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}
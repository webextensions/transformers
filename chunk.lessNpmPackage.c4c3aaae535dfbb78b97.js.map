{"version":3,"file":"chunk.lessNpmPackage.c4c3aaae535dfbb78b97.js","mappings":"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","sources":["webpack://transformers/./node_modules/less/dist/less.js"],"sourcesContent":["/**\n * Less - Leaner CSS v4.2.1\n * http://lesscss.org\n * \n * Copyright (c) 2009-2024, Alexis Sellier <self@cloudhead.net>\n * Licensed under the Apache-2.0 License.\n *\n * @license Apache-2.0\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.less = factory());\n})(this, (function () { 'use strict';\n\n    // Export a new default each time\r\n    function defaultOptions () {\r\n        return {\r\n            /* Inline Javascript - @plugin still allowed */\r\n            javascriptEnabled: false,\r\n            /* Outputs a makefile import dependency list to stdout. */\r\n            depends: false,\r\n            /* (DEPRECATED) Compress using less built-in compression.\r\n             * This does an okay job but does not utilise all the tricks of\r\n             * dedicated css compression. */\r\n            compress: false,\r\n            /* Runs the less parser and just reports errors without any output. */\r\n            lint: false,\r\n            /* Sets available include paths.\r\n             * If the file in an @import rule does not exist at that exact location,\r\n             * less will look for it at the location(s) passed to this option.\r\n             * You might use this for instance to specify a path to a library which\r\n             * you want to be referenced simply and relatively in the less files. */\r\n            paths: [],\r\n            /* color output in the terminal */\r\n            color: true,\r\n            /* The strictImports controls whether the compiler will allow an @import inside of either\r\n             * @media blocks or (a later addition) other selector blocks.\r\n             * See: https://github.com/less/less.js/issues/656 */\r\n            strictImports: false,\r\n            /* Allow Imports from Insecure HTTPS Hosts */\r\n            insecure: false,\r\n            /* Allows you to add a path to every generated import and url in your css.\r\n             * This does not affect less import statements that are processed, just ones\r\n             * that are left in the output css. */\r\n            rootpath: '',\r\n            /* By default URLs are kept as-is, so if you import a file in a sub-directory\r\n             * that references an image, exactly the same URL will be output in the css.\r\n             * This option allows you to re-write URL's in imported files so that the\r\n             * URL is always relative to the base imported file */\r\n            rewriteUrls: false,\r\n            /* How to process math\r\n             *   0 always           - eagerly try to solve all operations\r\n             *   1 parens-division  - require parens for division \"/\"\r\n             *   2 parens | strict  - require parens for all operations\r\n             *   3 strict-legacy    - legacy strict behavior (super-strict)\r\n             */\r\n            math: 1,\r\n            /* Without this option, less attempts to guess at the output unit when it does maths. */\r\n            strictUnits: false,\r\n            /* Effectively the declaration is put at the top of your base Less file,\r\n             * meaning it can be used but it also can be overridden if this variable\r\n             * is defined in the file. */\r\n            globalVars: null,\r\n            /* As opposed to the global variable option, this puts the declaration at the\r\n             * end of your base file, meaning it will override anything defined in your Less file. */\r\n            modifyVars: null,\r\n            /* This option allows you to specify a argument to go on to every URL.  */\r\n            urlArgs: ''\r\n        };\r\n    }\n\n    function extractId(href) {\r\n        return href.replace(/^[a-z-]+:\\/+?[^/]+/, '') // Remove protocol & domain\r\n            .replace(/[?&]livereload=\\w+/, '') // Remove LiveReload cachebuster\r\n            .replace(/^\\//, '') // Remove root /\r\n            .replace(/\\.[a-zA-Z]+$/, '') // Remove simple extension\r\n            .replace(/[^.\\w-]+/g, '-') // Replace illegal characters\r\n            .replace(/\\./g, ':'); // Replace dots with colons(for valid id)\r\n    }\r\n    function addDataAttr(options, tag) {\r\n        if (!tag) {\r\n            return;\r\n        } // in case of tag is null or undefined\r\n        for (var opt in tag.dataset) {\r\n            if (Object.prototype.hasOwnProperty.call(tag.dataset, opt)) {\r\n                if (opt === 'env' || opt === 'dumpLineNumbers' || opt === 'rootpath' || opt === 'errorReporting') {\r\n                    options[opt] = tag.dataset[opt];\r\n                }\r\n                else {\r\n                    try {\r\n                        options[opt] = JSON.parse(tag.dataset[opt]);\r\n                    }\r\n                    catch (_) { }\r\n                }\r\n            }\r\n        }\r\n    }\n\n    var browser = {\r\n        createCSS: function (document, styles, sheet) {\r\n            // Strip the query-string\r\n            var href = sheet.href || '';\r\n            // If there is no title set, use the filename, minus the extension\r\n            var id = \"less:\".concat(sheet.title || extractId(href));\r\n            // If this has already been inserted into the DOM, we may need to replace it\r\n            var oldStyleNode = document.getElementById(id);\r\n            var keepOldStyleNode = false;\r\n            // Create a new stylesheet node for insertion or (if necessary) replacement\r\n            var styleNode = document.createElement('style');\r\n            styleNode.setAttribute('type', 'text/css');\r\n            if (sheet.media) {\r\n                styleNode.setAttribute('media', sheet.media);\r\n            }\r\n            styleNode.id = id;\r\n            if (!styleNode.styleSheet) {\r\n                styleNode.appendChild(document.createTextNode(styles));\r\n                // If new contents match contents of oldStyleNode, don't replace oldStyleNode\r\n                keepOldStyleNode = (oldStyleNode !== null && oldStyleNode.childNodes.length > 0 && styleNode.childNodes.length > 0 &&\r\n                    oldStyleNode.firstChild.nodeValue === styleNode.firstChild.nodeValue);\r\n            }\r\n            var head = document.getElementsByTagName('head')[0];\r\n            // If there is no oldStyleNode, just append; otherwise, only append if we need\r\n            // to replace oldStyleNode with an updated stylesheet\r\n            if (oldStyleNode === null || keepOldStyleNode === false) {\r\n                var nextEl = sheet && sheet.nextSibling || null;\r\n                if (nextEl) {\r\n                    nextEl.parentNode.insertBefore(styleNode, nextEl);\r\n                }\r\n                else {\r\n                    head.appendChild(styleNode);\r\n                }\r\n            }\r\n            if (oldStyleNode && keepOldStyleNode === false) {\r\n                oldStyleNode.parentNode.removeChild(oldStyleNode);\r\n            }\r\n            // For IE.\r\n            // This needs to happen *after* the style element is added to the DOM, otherwise IE 7 and 8 may crash.\r\n            // See http://social.msdn.microsoft.com/Forums/en-US/7e081b65-878a-4c22-8e68-c10d39c2ed32/internet-explorer-crashes-appending-style-element-to-head\r\n            if (styleNode.styleSheet) {\r\n                try {\r\n                    styleNode.styleSheet.cssText = styles;\r\n                }\r\n                catch (e) {\r\n                    throw new Error('Couldn\\'t reassign styleSheet.cssText.');\r\n                }\r\n            }\r\n        },\r\n        currentScript: function (window) {\r\n            var document = window.document;\r\n            return document.currentScript || (function () {\r\n                var scripts = document.getElementsByTagName('script');\r\n                return scripts[scripts.length - 1];\r\n            })();\r\n        }\r\n    };\n\n    var addDefaultOptions = (function (window, options) {\r\n        // use options from the current script tag data attribues\r\n        addDataAttr(options, browser.currentScript(window));\r\n        if (options.isFileProtocol === undefined) {\r\n            options.isFileProtocol = /^(file|(chrome|safari)(-extension)?|resource|qrc|app):/.test(window.location.protocol);\r\n        }\r\n        // Load styles asynchronously (default: false)\r\n        //\r\n        // This is set to `false` by default, so that the body\r\n        // doesn't start loading before the stylesheets are parsed.\r\n        // Setting this to `true` can result in flickering.\r\n        //\r\n        options.async = options.async || false;\r\n        options.fileAsync = options.fileAsync || false;\r\n        // Interval between watch polls\r\n        options.poll = options.poll || (options.isFileProtocol ? 1000 : 1500);\r\n        options.env = options.env || (window.location.hostname == '127.0.0.1' ||\r\n            window.location.hostname == '0.0.0.0' ||\r\n            window.location.hostname == 'localhost' ||\r\n            (window.location.port &&\r\n                window.location.port.length > 0) ||\r\n            options.isFileProtocol ? 'development'\r\n            : 'production');\r\n        var dumpLineNumbers = /!dumpLineNumbers:(comments|mediaquery|all)/.exec(window.location.hash);\r\n        if (dumpLineNumbers) {\r\n            options.dumpLineNumbers = dumpLineNumbers[1];\r\n        }\r\n        if (options.useFileCache === undefined) {\r\n            options.useFileCache = true;\r\n        }\r\n        if (options.onReady === undefined) {\r\n            options.onReady = true;\r\n        }\r\n        if (options.relativeUrls) {\r\n            options.rewriteUrls = 'all';\r\n        }\r\n    });\n\n    var logger$1 = {\r\n        error: function (msg) {\r\n            this._fireEvent('error', msg);\r\n        },\r\n        warn: function (msg) {\r\n            this._fireEvent('warn', msg);\r\n        },\r\n        info: function (msg) {\r\n            this._fireEvent('info', msg);\r\n        },\r\n        debug: function (msg) {\r\n            this._fireEvent('debug', msg);\r\n        },\r\n        addListener: function (listener) {\r\n            this._listeners.push(listener);\r\n        },\r\n        removeListener: function (listener) {\r\n            for (var i_1 = 0; i_1 < this._listeners.length; i_1++) {\r\n                if (this._listeners[i_1] === listener) {\r\n                    this._listeners.splice(i_1, 1);\r\n                    return;\r\n                }\r\n            }\r\n        },\r\n        _fireEvent: function (type, msg) {\r\n            for (var i_2 = 0; i_2 < this._listeners.length; i_2++) {\r\n                var logFunction = this._listeners[i_2][type];\r\n                if (logFunction) {\r\n                    logFunction(msg);\r\n                }\r\n            }\r\n        },\r\n        _listeners: []\r\n    };\n\n    /**\r\n     * @todo Document why this abstraction exists, and the relationship between\r\n     *       environment, file managers, and plugin manager\r\n     */\r\n    var Environment = /** @class */ (function () {\r\n        function Environment(externalEnvironment, fileManagers) {\r\n            this.fileManagers = fileManagers || [];\r\n            externalEnvironment = externalEnvironment || {};\r\n            var optionalFunctions = ['encodeBase64', 'mimeLookup', 'charsetLookup', 'getSourceMapGenerator'];\r\n            var requiredFunctions = [];\r\n            var functions = requiredFunctions.concat(optionalFunctions);\r\n            for (var i_1 = 0; i_1 < functions.length; i_1++) {\r\n                var propName = functions[i_1];\r\n                var environmentFunc = externalEnvironment[propName];\r\n                if (environmentFunc) {\r\n                    this[propName] = environmentFunc.bind(externalEnvironment);\r\n                }\r\n                else if (i_1 < requiredFunctions.length) {\r\n                    this.warn(\"missing required function in environment - \".concat(propName));\r\n                }\r\n            }\r\n        }\r\n        Environment.prototype.getFileManager = function (filename, currentDirectory, options, environment, isSync) {\r\n            if (!filename) {\r\n                logger$1.warn('getFileManager called with no filename.. Please report this issue. continuing.');\r\n            }\r\n            if (currentDirectory === undefined) {\r\n                logger$1.warn('getFileManager called with null directory.. Please report this issue. continuing.');\r\n            }\r\n            var fileManagers = this.fileManagers;\r\n            if (options.pluginManager) {\r\n                fileManagers = [].concat(fileManagers).concat(options.pluginManager.getFileManagers());\r\n            }\r\n            for (var i_2 = fileManagers.length - 1; i_2 >= 0; i_2--) {\r\n                var fileManager = fileManagers[i_2];\r\n                if (fileManager[isSync ? 'supportsSync' : 'supports'](filename, currentDirectory, options, environment)) {\r\n                    return fileManager;\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        Environment.prototype.addFileManager = function (fileManager) {\r\n            this.fileManagers.push(fileManager);\r\n        };\r\n        Environment.prototype.clearFileManagers = function () {\r\n            this.fileManagers = [];\r\n        };\r\n        return Environment;\r\n    }());\n\n    var colors = {\r\n        'aliceblue': '#f0f8ff',\r\n        'antiquewhite': '#faebd7',\r\n        'aqua': '#00ffff',\r\n        'aquamarine': '#7fffd4',\r\n        'azure': '#f0ffff',\r\n        'beige': '#f5f5dc',\r\n        'bisque': '#ffe4c4',\r\n        'black': '#000000',\r\n        'blanchedalmond': '#ffebcd',\r\n        'blue': '#0000ff',\r\n        'blueviolet': '#8a2be2',\r\n        'brown': '#a52a2a',\r\n        'burlywood': '#deb887',\r\n        'cadetblue': '#5f9ea0',\r\n        'chartreuse': '#7fff00',\r\n        'chocolate': '#d2691e',\r\n        'coral': '#ff7f50',\r\n        'cornflowerblue': '#6495ed',\r\n        'cornsilk': '#fff8dc',\r\n        'crimson': '#dc143c',\r\n        'cyan': '#00ffff',\r\n        'darkblue': '#00008b',\r\n        'darkcyan': '#008b8b',\r\n        'darkgoldenrod': '#b8860b',\r\n        'darkgray': '#a9a9a9',\r\n        'darkgrey': '#a9a9a9',\r\n        'darkgreen': '#006400',\r\n        'darkkhaki': '#bdb76b',\r\n        'darkmagenta': '#8b008b',\r\n        'darkolivegreen': '#556b2f',\r\n        'darkorange': '#ff8c00',\r\n        'darkorchid': '#9932cc',\r\n        'darkred': '#8b0000',\r\n        'darksalmon': '#e9967a',\r\n        'darkseagreen': '#8fbc8f',\r\n        'darkslateblue': '#483d8b',\r\n        'darkslategray': '#2f4f4f',\r\n        'darkslategrey': '#2f4f4f',\r\n        'darkturquoise': '#00ced1',\r\n        'darkviolet': '#9400d3',\r\n        'deeppink': '#ff1493',\r\n        'deepskyblue': '#00bfff',\r\n        'dimgray': '#696969',\r\n        'dimgrey': '#696969',\r\n        'dodgerblue': '#1e90ff',\r\n        'firebrick': '#b22222',\r\n        'floralwhite': '#fffaf0',\r\n        'forestgreen': '#228b22',\r\n        'fuchsia': '#ff00ff',\r\n        'gainsboro': '#dcdcdc',\r\n        'ghostwhite': '#f8f8ff',\r\n        'gold': '#ffd700',\r\n        'goldenrod': '#daa520',\r\n        'gray': '#808080',\r\n        'grey': '#808080',\r\n        'green': '#008000',\r\n        'greenyellow': '#adff2f',\r\n        'honeydew': '#f0fff0',\r\n        'hotpink': '#ff69b4',\r\n        'indianred': '#cd5c5c',\r\n        'indigo': '#4b0082',\r\n        'ivory': '#fffff0',\r\n        'khaki': '#f0e68c',\r\n        'lavender': '#e6e6fa',\r\n        'lavenderblush': '#fff0f5',\r\n        'lawngreen': '#7cfc00',\r\n        'lemonchiffon': '#fffacd',\r\n        'lightblue': '#add8e6',\r\n        'lightcoral': '#f08080',\r\n        'lightcyan': '#e0ffff',\r\n        'lightgoldenrodyellow': '#fafad2',\r\n        'lightgray': '#d3d3d3',\r\n        'lightgrey': '#d3d3d3',\r\n        'lightgreen': '#90ee90',\r\n        'lightpink': '#ffb6c1',\r\n        'lightsalmon': '#ffa07a',\r\n        'lightseagreen': '#20b2aa',\r\n        'lightskyblue': '#87cefa',\r\n        'lightslategray': '#778899',\r\n        'lightslategrey': '#778899',\r\n        'lightsteelblue': '#b0c4de',\r\n        'lightyellow': '#ffffe0',\r\n        'lime': '#00ff00',\r\n        'limegreen': '#32cd32',\r\n        'linen': '#faf0e6',\r\n        'magenta': '#ff00ff',\r\n        'maroon': '#800000',\r\n        'mediumaquamarine': '#66cdaa',\r\n        'mediumblue': '#0000cd',\r\n        'mediumorchid': '#ba55d3',\r\n        'mediumpurple': '#9370d8',\r\n        'mediumseagreen': '#3cb371',\r\n        'mediumslateblue': '#7b68ee',\r\n        'mediumspringgreen': '#00fa9a',\r\n        'mediumturquoise': '#48d1cc',\r\n        'mediumvioletred': '#c71585',\r\n        'midnightblue': '#191970',\r\n        'mintcream': '#f5fffa',\r\n        'mistyrose': '#ffe4e1',\r\n        'moccasin': '#ffe4b5',\r\n        'navajowhite': '#ffdead',\r\n        'navy': '#000080',\r\n        'oldlace': '#fdf5e6',\r\n        'olive': '#808000',\r\n        'olivedrab': '#6b8e23',\r\n        'orange': '#ffa500',\r\n        'orangered': '#ff4500',\r\n        'orchid': '#da70d6',\r\n        'palegoldenrod': '#eee8aa',\r\n        'palegreen': '#98fb98',\r\n        'paleturquoise': '#afeeee',\r\n        'palevioletred': '#d87093',\r\n        'papayawhip': '#ffefd5',\r\n        'peachpuff': '#ffdab9',\r\n        'peru': '#cd853f',\r\n        'pink': '#ffc0cb',\r\n        'plum': '#dda0dd',\r\n        'powderblue': '#b0e0e6',\r\n        'purple': '#800080',\r\n        'rebeccapurple': '#663399',\r\n        'red': '#ff0000',\r\n        'rosybrown': '#bc8f8f',\r\n        'royalblue': '#4169e1',\r\n        'saddlebrown': '#8b4513',\r\n        'salmon': '#fa8072',\r\n        'sandybrown': '#f4a460',\r\n        'seagreen': '#2e8b57',\r\n        'seashell': '#fff5ee',\r\n        'sienna': '#a0522d',\r\n        'silver': '#c0c0c0',\r\n        'skyblue': '#87ceeb',\r\n        'slateblue': '#6a5acd',\r\n        'slategray': '#708090',\r\n        'slategrey': '#708090',\r\n        'snow': '#fffafa',\r\n        'springgreen': '#00ff7f',\r\n        'steelblue': '#4682b4',\r\n        'tan': '#d2b48c',\r\n        'teal': '#008080',\r\n        'thistle': '#d8bfd8',\r\n        'tomato': '#ff6347',\r\n        'turquoise': '#40e0d0',\r\n        'violet': '#ee82ee',\r\n        'wheat': '#f5deb3',\r\n        'white': '#ffffff',\r\n        'whitesmoke': '#f5f5f5',\r\n        'yellow': '#ffff00',\r\n        'yellowgreen': '#9acd32'\r\n    };\n\n    var unitConversions = {\r\n        length: {\r\n            'm': 1,\r\n            'cm': 0.01,\r\n            'mm': 0.001,\r\n            'in': 0.0254,\r\n            'px': 0.0254 / 96,\r\n            'pt': 0.0254 / 72,\r\n            'pc': 0.0254 / 72 * 12\r\n        },\r\n        duration: {\r\n            's': 1,\r\n            'ms': 0.001\r\n        },\r\n        angle: {\r\n            'rad': 1 / (2 * Math.PI),\r\n            'deg': 1 / 360,\r\n            'grad': 1 / 400,\r\n            'turn': 1\r\n        }\r\n    };\n\n    var data = { colors: colors, unitConversions: unitConversions };\n\n    /**\r\n     * The reason why Node is a class and other nodes simply do not extend\r\n     * from Node (since we're transpiling) is due to this issue:\r\n     *\r\n     * @see https://github.com/less/less.js/issues/3434\r\n     */\r\n    var Node = /** @class */ (function () {\r\n        function Node() {\r\n            this.parent = null;\r\n            this.visibilityBlocks = undefined;\r\n            this.nodeVisible = undefined;\r\n            this.rootNode = null;\r\n            this.parsed = null;\r\n        }\r\n        Object.defineProperty(Node.prototype, \"currentFileInfo\", {\r\n            get: function () {\r\n                return this.fileInfo();\r\n            },\r\n            enumerable: false,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(Node.prototype, \"index\", {\r\n            get: function () {\r\n                return this.getIndex();\r\n            },\r\n            enumerable: false,\r\n            configurable: true\r\n        });\r\n        Node.prototype.setParent = function (nodes, parent) {\r\n            function set(node) {\r\n                if (node && node instanceof Node) {\r\n                    node.parent = parent;\r\n                }\r\n            }\r\n            if (Array.isArray(nodes)) {\r\n                nodes.forEach(set);\r\n            }\r\n            else {\r\n                set(nodes);\r\n            }\r\n        };\r\n        Node.prototype.getIndex = function () {\r\n            return this._index || (this.parent && this.parent.getIndex()) || 0;\r\n        };\r\n        Node.prototype.fileInfo = function () {\r\n            return this._fileInfo || (this.parent && this.parent.fileInfo()) || {};\r\n        };\r\n        Node.prototype.isRulesetLike = function () { return false; };\r\n        Node.prototype.toCSS = function (context) {\r\n            var strs = [];\r\n            this.genCSS(context, {\r\n                // remove when genCSS has JSDoc types\r\n                // eslint-disable-next-line no-unused-vars\r\n                add: function (chunk, fileInfo, index) {\r\n                    strs.push(chunk);\r\n                },\r\n                isEmpty: function () {\r\n                    return strs.length === 0;\r\n                }\r\n            });\r\n            return strs.join('');\r\n        };\r\n        Node.prototype.genCSS = function (context, output) {\r\n            output.add(this.value);\r\n        };\r\n        Node.prototype.accept = function (visitor) {\r\n            this.value = visitor.visit(this.value);\r\n        };\r\n        Node.prototype.eval = function () { return this; };\r\n        Node.prototype._operate = function (context, op, a, b) {\r\n            switch (op) {\r\n                case '+': return a + b;\r\n                case '-': return a - b;\r\n                case '*': return a * b;\r\n                case '/': return a / b;\r\n            }\r\n        };\r\n        Node.prototype.fround = function (context, value) {\r\n            var precision = context && context.numPrecision;\r\n            // add \"epsilon\" to ensure numbers like 1.000000005 (represented as 1.000000004999...) are properly rounded:\r\n            return (precision) ? Number((value + 2e-16).toFixed(precision)) : value;\r\n        };\r\n        Node.compare = function (a, b) {\r\n            /* returns:\r\n             -1: a < b\r\n             0: a = b\r\n             1: a > b\r\n             and *any* other value for a != b (e.g. undefined, NaN, -2 etc.) */\r\n            if ((a.compare) &&\r\n                // for \"symmetric results\" force toCSS-based comparison\r\n                // of Quoted or Anonymous if either value is one of those\r\n                !(b.type === 'Quoted' || b.type === 'Anonymous')) {\r\n                return a.compare(b);\r\n            }\r\n            else if (b.compare) {\r\n                return -b.compare(a);\r\n            }\r\n            else if (a.type !== b.type) {\r\n                return undefined;\r\n            }\r\n            a = a.value;\r\n            b = b.value;\r\n            if (!Array.isArray(a)) {\r\n                return a === b ? 0 : undefined;\r\n            }\r\n            if (a.length !== b.length) {\r\n                return undefined;\r\n            }\r\n            for (var i_1 = 0; i_1 < a.length; i_1++) {\r\n                if (Node.compare(a[i_1], b[i_1]) !== 0) {\r\n                    return undefined;\r\n                }\r\n            }\r\n            return 0;\r\n        };\r\n        Node.numericCompare = function (a, b) {\r\n            return a < b ? -1\r\n                : a === b ? 0\r\n                    : a > b ? 1 : undefined;\r\n        };\r\n        // Returns true if this node represents root of ast imported by reference\r\n        Node.prototype.blocksVisibility = function () {\r\n            if (this.visibilityBlocks === undefined) {\r\n                this.visibilityBlocks = 0;\r\n            }\r\n            return this.visibilityBlocks !== 0;\r\n        };\r\n        Node.prototype.addVisibilityBlock = function () {\r\n            if (this.visibilityBlocks === undefined) {\r\n                this.visibilityBlocks = 0;\r\n            }\r\n            this.visibilityBlocks = this.visibilityBlocks + 1;\r\n        };\r\n        Node.prototype.removeVisibilityBlock = function () {\r\n            if (this.visibilityBlocks === undefined) {\r\n                this.visibilityBlocks = 0;\r\n            }\r\n            this.visibilityBlocks = this.visibilityBlocks - 1;\r\n        };\r\n        // Turns on node visibility - if called node will be shown in output regardless\r\n        // of whether it comes from import by reference or not\r\n        Node.prototype.ensureVisibility = function () {\r\n            this.nodeVisible = true;\r\n        };\r\n        // Turns off node visibility - if called node will NOT be shown in output regardless\r\n        // of whether it comes from import by reference or not\r\n        Node.prototype.ensureInvisibility = function () {\r\n            this.nodeVisible = false;\r\n        };\r\n        // return values:\r\n        // false - the node must not be visible\r\n        // true - the node must be visible\r\n        // undefined or null - the node has the same visibility as its parent\r\n        Node.prototype.isVisible = function () {\r\n            return this.nodeVisible;\r\n        };\r\n        Node.prototype.visibilityInfo = function () {\r\n            return {\r\n                visibilityBlocks: this.visibilityBlocks,\r\n                nodeVisible: this.nodeVisible\r\n            };\r\n        };\r\n        Node.prototype.copyVisibilityInfo = function (info) {\r\n            if (!info) {\r\n                return;\r\n            }\r\n            this.visibilityBlocks = info.visibilityBlocks;\r\n            this.nodeVisible = info.nodeVisible;\r\n        };\r\n        return Node;\r\n    }());\n\n    //\r\n    // RGB Colors - #ff0014, #eee\r\n    //\r\n    var Color = function (rgb, a, originalForm) {\r\n        var self = this;\r\n        //\r\n        // The end goal here, is to parse the arguments\r\n        // into an integer triplet, such as `128, 255, 0`\r\n        //\r\n        // This facilitates operations and conversions.\r\n        //\r\n        if (Array.isArray(rgb)) {\r\n            this.rgb = rgb;\r\n        }\r\n        else if (rgb.length >= 6) {\r\n            this.rgb = [];\r\n            rgb.match(/.{2}/g).map(function (c, i) {\r\n                if (i < 3) {\r\n                    self.rgb.push(parseInt(c, 16));\r\n                }\r\n                else {\r\n                    self.alpha = (parseInt(c, 16)) / 255;\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            this.rgb = [];\r\n            rgb.split('').map(function (c, i) {\r\n                if (i < 3) {\r\n                    self.rgb.push(parseInt(c + c, 16));\r\n                }\r\n                else {\r\n                    self.alpha = (parseInt(c + c, 16)) / 255;\r\n                }\r\n            });\r\n        }\r\n        this.alpha = this.alpha || (typeof a === 'number' ? a : 1);\r\n        if (typeof originalForm !== 'undefined') {\r\n            this.value = originalForm;\r\n        }\r\n    };\r\n    Color.prototype = Object.assign(new Node(), {\r\n        type: 'Color',\r\n        luma: function () {\r\n            var r = this.rgb[0] / 255, g = this.rgb[1] / 255, b = this.rgb[2] / 255;\r\n            r = (r <= 0.03928) ? r / 12.92 : Math.pow(((r + 0.055) / 1.055), 2.4);\r\n            g = (g <= 0.03928) ? g / 12.92 : Math.pow(((g + 0.055) / 1.055), 2.4);\r\n            b = (b <= 0.03928) ? b / 12.92 : Math.pow(((b + 0.055) / 1.055), 2.4);\r\n            return 0.2126 * r + 0.7152 * g + 0.0722 * b;\r\n        },\r\n        genCSS: function (context, output) {\r\n            output.add(this.toCSS(context));\r\n        },\r\n        toCSS: function (context, doNotCompress) {\r\n            var compress = context && context.compress && !doNotCompress;\r\n            var color;\r\n            var alpha;\r\n            var colorFunction;\r\n            var args = [];\r\n            // `value` is set if this color was originally\r\n            // converted from a named color string so we need\r\n            // to respect this and try to output named color too.\r\n            alpha = this.fround(context, this.alpha);\r\n            if (this.value) {\r\n                if (this.value.indexOf('rgb') === 0) {\r\n                    if (alpha < 1) {\r\n                        colorFunction = 'rgba';\r\n                    }\r\n                }\r\n                else if (this.value.indexOf('hsl') === 0) {\r\n                    if (alpha < 1) {\r\n                        colorFunction = 'hsla';\r\n                    }\r\n                    else {\r\n                        colorFunction = 'hsl';\r\n                    }\r\n                }\r\n                else {\r\n                    return this.value;\r\n                }\r\n            }\r\n            else {\r\n                if (alpha < 1) {\r\n                    colorFunction = 'rgba';\r\n                }\r\n            }\r\n            switch (colorFunction) {\r\n                case 'rgba':\r\n                    args = this.rgb.map(function (c) {\r\n                        return clamp$1(Math.round(c), 255);\r\n                    }).concat(clamp$1(alpha, 1));\r\n                    break;\r\n                case 'hsla':\r\n                    args.push(clamp$1(alpha, 1));\r\n                // eslint-disable-next-line no-fallthrough\r\n                case 'hsl':\r\n                    color = this.toHSL();\r\n                    args = [\r\n                        this.fround(context, color.h),\r\n                        \"\".concat(this.fround(context, color.s * 100), \"%\"),\r\n                        \"\".concat(this.fround(context, color.l * 100), \"%\")\r\n                    ].concat(args);\r\n            }\r\n            if (colorFunction) {\r\n                // Values are capped between `0` and `255`, rounded and zero-padded.\r\n                return \"\".concat(colorFunction, \"(\").concat(args.join(\",\".concat(compress ? '' : ' ')), \")\");\r\n            }\r\n            color = this.toRGB();\r\n            if (compress) {\r\n                var splitcolor = color.split('');\r\n                // Convert color to short format\r\n                if (splitcolor[1] === splitcolor[2] && splitcolor[3] === splitcolor[4] && splitcolor[5] === splitcolor[6]) {\r\n                    color = \"#\".concat(splitcolor[1]).concat(splitcolor[3]).concat(splitcolor[5]);\r\n                }\r\n            }\r\n            return color;\r\n        },\r\n        //\r\n        // Operations have to be done per-channel, if not,\r\n        // channels will spill onto each other. Once we have\r\n        // our result, in the form of an integer triplet,\r\n        // we create a new Color node to hold the result.\r\n        //\r\n        operate: function (context, op, other) {\r\n            var rgb = new Array(3);\r\n            var alpha = this.alpha * (1 - other.alpha) + other.alpha;\r\n            for (var c = 0; c < 3; c++) {\r\n                rgb[c] = this._operate(context, op, this.rgb[c], other.rgb[c]);\r\n            }\r\n            return new Color(rgb, alpha);\r\n        },\r\n        toRGB: function () {\r\n            return toHex(this.rgb);\r\n        },\r\n        toHSL: function () {\r\n            var r = this.rgb[0] / 255, g = this.rgb[1] / 255, b = this.rgb[2] / 255, a = this.alpha;\r\n            var max = Math.max(r, g, b), min = Math.min(r, g, b);\r\n            var h;\r\n            var s;\r\n            var l = (max + min) / 2;\r\n            var d = max - min;\r\n            if (max === min) {\r\n                h = s = 0;\r\n            }\r\n            else {\r\n                s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n                switch (max) {\r\n                    case r:\r\n                        h = (g - b) / d + (g < b ? 6 : 0);\r\n                        break;\r\n                    case g:\r\n                        h = (b - r) / d + 2;\r\n                        break;\r\n                    case b:\r\n                        h = (r - g) / d + 4;\r\n                        break;\r\n                }\r\n                h /= 6;\r\n            }\r\n            return { h: h * 360, s: s, l: l, a: a };\r\n        },\r\n        // Adapted from http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript\r\n        toHSV: function () {\r\n            var r = this.rgb[0] / 255, g = this.rgb[1] / 255, b = this.rgb[2] / 255, a = this.alpha;\r\n            var max = Math.max(r, g, b), min = Math.min(r, g, b);\r\n            var h;\r\n            var s;\r\n            var v = max;\r\n            var d = max - min;\r\n            if (max === 0) {\r\n                s = 0;\r\n            }\r\n            else {\r\n                s = d / max;\r\n            }\r\n            if (max === min) {\r\n                h = 0;\r\n            }\r\n            else {\r\n                switch (max) {\r\n                    case r:\r\n                        h = (g - b) / d + (g < b ? 6 : 0);\r\n                        break;\r\n                    case g:\r\n                        h = (b - r) / d + 2;\r\n                        break;\r\n                    case b:\r\n                        h = (r - g) / d + 4;\r\n                        break;\r\n                }\r\n                h /= 6;\r\n            }\r\n            return { h: h * 360, s: s, v: v, a: a };\r\n        },\r\n        toARGB: function () {\r\n            return toHex([this.alpha * 255].concat(this.rgb));\r\n        },\r\n        compare: function (x) {\r\n            return (x.rgb &&\r\n                x.rgb[0] === this.rgb[0] &&\r\n                x.rgb[1] === this.rgb[1] &&\r\n                x.rgb[2] === this.rgb[2] &&\r\n                x.alpha === this.alpha) ? 0 : undefined;\r\n        }\r\n    });\r\n    Color.fromKeyword = function (keyword) {\r\n        var c;\r\n        var key = keyword.toLowerCase();\r\n        // eslint-disable-next-line no-prototype-builtins\r\n        if (colors.hasOwnProperty(key)) {\r\n            c = new Color(colors[key].slice(1));\r\n        }\r\n        else if (key === 'transparent') {\r\n            c = new Color([0, 0, 0], 0);\r\n        }\r\n        if (c) {\r\n            c.value = keyword;\r\n            return c;\r\n        }\r\n    };\r\n    function clamp$1(v, max) {\r\n        return Math.min(Math.max(v, 0), max);\r\n    }\r\n    function toHex(v) {\r\n        return \"#\".concat(v.map(function (c) {\r\n            c = clamp$1(Math.round(c), 255);\r\n            return (c < 16 ? '0' : '') + c.toString(16);\r\n        }).join(''));\r\n    }\n\n    var Paren = function (node) {\r\n        this.value = node;\r\n    };\r\n    Paren.prototype = Object.assign(new Node(), {\r\n        type: 'Paren',\r\n        genCSS: function (context, output) {\r\n            output.add('(');\r\n            this.value.genCSS(context, output);\r\n            output.add(')');\r\n        },\r\n        eval: function (context) {\r\n            return new Paren(this.value.eval(context));\r\n        }\r\n    });\n\n    var _noSpaceCombinators = {\r\n        '': true,\r\n        ' ': true,\r\n        '|': true\r\n    };\r\n    var Combinator = function (value) {\r\n        if (value === ' ') {\r\n            this.value = ' ';\r\n            this.emptyOrWhitespace = true;\r\n        }\r\n        else {\r\n            this.value = value ? value.trim() : '';\r\n            this.emptyOrWhitespace = this.value === '';\r\n        }\r\n    };\r\n    Combinator.prototype = Object.assign(new Node(), {\r\n        type: 'Combinator',\r\n        genCSS: function (context, output) {\r\n            var spaceOrEmpty = (context.compress || _noSpaceCombinators[this.value]) ? '' : ' ';\r\n            output.add(spaceOrEmpty + this.value + spaceOrEmpty);\r\n        }\r\n    });\n\n    var Element = function (combinator, value, isVariable, index, currentFileInfo, visibilityInfo) {\r\n        this.combinator = combinator instanceof Combinator ?\r\n            combinator : new Combinator(combinator);\r\n        if (typeof value === 'string') {\r\n            this.value = value.trim();\r\n        }\r\n        else if (value) {\r\n            this.value = value;\r\n        }\r\n        else {\r\n            this.value = '';\r\n        }\r\n        this.isVariable = isVariable;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.copyVisibilityInfo(visibilityInfo);\r\n        this.setParent(this.combinator, this);\r\n    };\r\n    Element.prototype = Object.assign(new Node(), {\r\n        type: 'Element',\r\n        accept: function (visitor) {\r\n            var value = this.value;\r\n            this.combinator = visitor.visit(this.combinator);\r\n            if (typeof value === 'object') {\r\n                this.value = visitor.visit(value);\r\n            }\r\n        },\r\n        eval: function (context) {\r\n            return new Element(this.combinator, this.value.eval ? this.value.eval(context) : this.value, this.isVariable, this.getIndex(), this.fileInfo(), this.visibilityInfo());\r\n        },\r\n        clone: function () {\r\n            return new Element(this.combinator, this.value, this.isVariable, this.getIndex(), this.fileInfo(), this.visibilityInfo());\r\n        },\r\n        genCSS: function (context, output) {\r\n            output.add(this.toCSS(context), this.fileInfo(), this.getIndex());\r\n        },\r\n        toCSS: function (context) {\r\n            context = context || {};\r\n            var value = this.value;\r\n            var firstSelector = context.firstSelector;\r\n            if (value instanceof Paren) {\r\n                // selector in parens should not be affected by outer selector\r\n                // flags (breaks only interpolated selectors - see #1973)\r\n                context.firstSelector = true;\r\n            }\r\n            value = value.toCSS ? value.toCSS(context) : value;\r\n            context.firstSelector = firstSelector;\r\n            if (value === '' && this.combinator.value.charAt(0) === '&') {\r\n                return '';\r\n            }\r\n            else {\r\n                return this.combinator.toCSS(context) + value;\r\n            }\r\n        }\r\n    });\n\n    var Math$1 = {\r\n        ALWAYS: 0,\r\n        PARENS_DIVISION: 1,\r\n        PARENS: 2\r\n        // removed - STRICT_LEGACY: 3\r\n    };\r\n    var RewriteUrls = {\r\n        OFF: 0,\r\n        LOCAL: 1,\r\n        ALL: 2\r\n    };\n\n    /******************************************************************************\n    Copyright (c) Microsoft Corporation.\n\n    Permission to use, copy, modify, and/or distribute this software for any\n    purpose with or without fee is hereby granted.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n    PERFORMANCE OF THIS SOFTWARE.\n    ***************************************************************************** */\n\n    var __assign = function() {\n      __assign = Object.assign || function __assign(t) {\n          for (var s, i = 1, n = arguments.length; i < n; i++) {\n              s = arguments[i];\n              for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n          }\n          return t;\n      };\n      return __assign.apply(this, arguments);\n    };\n\n    function __spreadArray(to, from, pack) {\n      if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n          if (ar || !(i in from)) {\n              if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n              ar[i] = from[i];\n          }\n      }\n      return to.concat(ar || Array.prototype.slice.call(from));\n    }\n\n    typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n      var e = new Error(message);\n      return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n    };\n\n    /**\r\n     * Returns the object type of the given payload\r\n     *\r\n     * @param {*} payload\r\n     * @returns {string}\r\n     */\r\n    function getType(payload) {\r\n        return Object.prototype.toString.call(payload).slice(8, -1);\r\n    }\r\n    /**\r\n     * Returns whether the payload is a plain JavaScript object (excluding special classes or objects with other prototypes)\r\n     *\r\n     * @param {*} payload\r\n     * @returns {payload is PlainObject}\r\n     */\r\n    function isPlainObject(payload) {\r\n        if (getType(payload) !== 'Object')\r\n            return false;\r\n        return payload.constructor === Object && Object.getPrototypeOf(payload) === Object.prototype;\r\n    }\r\n    /**\r\n     * Returns whether the payload is an array\r\n     *\r\n     * @param {any} payload\r\n     * @returns {payload is any[]}\r\n     */\r\n    function isArray(payload) {\r\n        return getType(payload) === 'Array';\r\n    }\n\n    function assignProp(carry, key, newVal, originalObject, includeNonenumerable) {\r\n        var propType = {}.propertyIsEnumerable.call(originalObject, key)\r\n            ? 'enumerable'\r\n            : 'nonenumerable';\r\n        if (propType === 'enumerable')\r\n            carry[key] = newVal;\r\n        if (includeNonenumerable && propType === 'nonenumerable') {\r\n            Object.defineProperty(carry, key, {\r\n                value: newVal,\r\n                enumerable: false,\r\n                writable: true,\r\n                configurable: true,\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Copy (clone) an object and all its props recursively to get rid of any prop referenced of the original object. Arrays are also cloned, however objects inside arrays are still linked.\r\n     *\r\n     * @export\r\n     * @template T\r\n     * @param {T} target Target can be anything\r\n     * @param {Options} [options = {}] Options can be `props` or `nonenumerable`\r\n     * @returns {T} the target with replaced values\r\n     * @export\r\n     */\r\n    function copy(target, options) {\r\n        if (options === void 0) { options = {}; }\r\n        if (isArray(target)) {\r\n            return target.map(function (item) { return copy(item, options); });\r\n        }\r\n        if (!isPlainObject(target)) {\r\n            return target;\r\n        }\r\n        var props = Object.getOwnPropertyNames(target);\r\n        var symbols = Object.getOwnPropertySymbols(target);\r\n        return __spreadArray(__spreadArray([], props, true), symbols, true).reduce(function (carry, key) {\r\n            if (isArray(options.props) && !options.props.includes(key)) {\r\n                return carry;\r\n            }\r\n            var val = target[key];\r\n            var newVal = copy(val, options);\r\n            assignProp(carry, key, newVal, target, options.nonenumerable);\r\n            return carry;\r\n        }, {});\r\n    }\n\n    /* jshint proto: true */\r\n    function getLocation(index, inputStream) {\r\n        var n = index + 1;\r\n        var line = null;\r\n        var column = -1;\r\n        while (--n >= 0 && inputStream.charAt(n) !== '\\n') {\r\n            column++;\r\n        }\r\n        if (typeof index === 'number') {\r\n            line = (inputStream.slice(0, index).match(/\\n/g) || '').length;\r\n        }\r\n        return {\r\n            line: line,\r\n            column: column\r\n        };\r\n    }\r\n    function copyArray(arr) {\r\n        var i;\r\n        var length = arr.length;\r\n        var copy = new Array(length);\r\n        for (i = 0; i < length; i++) {\r\n            copy[i] = arr[i];\r\n        }\r\n        return copy;\r\n    }\r\n    function clone(obj) {\r\n        var cloned = {};\r\n        for (var prop in obj) {\r\n            if (Object.prototype.hasOwnProperty.call(obj, prop)) {\r\n                cloned[prop] = obj[prop];\r\n            }\r\n        }\r\n        return cloned;\r\n    }\r\n    function defaults(obj1, obj2) {\r\n        var newObj = obj2 || {};\r\n        if (!obj2._defaults) {\r\n            newObj = {};\r\n            var defaults_1 = copy(obj1);\r\n            newObj._defaults = defaults_1;\r\n            var cloned = obj2 ? copy(obj2) : {};\r\n            Object.assign(newObj, defaults_1, cloned);\r\n        }\r\n        return newObj;\r\n    }\r\n    function copyOptions(obj1, obj2) {\r\n        if (obj2 && obj2._defaults) {\r\n            return obj2;\r\n        }\r\n        var opts = defaults(obj1, obj2);\r\n        if (opts.strictMath) {\r\n            opts.math = Math$1.PARENS;\r\n        }\r\n        // Back compat with changed relativeUrls option\r\n        if (opts.relativeUrls) {\r\n            opts.rewriteUrls = RewriteUrls.ALL;\r\n        }\r\n        if (typeof opts.math === 'string') {\r\n            switch (opts.math.toLowerCase()) {\r\n                case 'always':\r\n                    opts.math = Math$1.ALWAYS;\r\n                    break;\r\n                case 'parens-division':\r\n                    opts.math = Math$1.PARENS_DIVISION;\r\n                    break;\r\n                case 'strict':\r\n                case 'parens':\r\n                    opts.math = Math$1.PARENS;\r\n                    break;\r\n                default:\r\n                    opts.math = Math$1.PARENS;\r\n            }\r\n        }\r\n        if (typeof opts.rewriteUrls === 'string') {\r\n            switch (opts.rewriteUrls.toLowerCase()) {\r\n                case 'off':\r\n                    opts.rewriteUrls = RewriteUrls.OFF;\r\n                    break;\r\n                case 'local':\r\n                    opts.rewriteUrls = RewriteUrls.LOCAL;\r\n                    break;\r\n                case 'all':\r\n                    opts.rewriteUrls = RewriteUrls.ALL;\r\n                    break;\r\n            }\r\n        }\r\n        return opts;\r\n    }\r\n    function merge(obj1, obj2) {\r\n        for (var prop in obj2) {\r\n            if (Object.prototype.hasOwnProperty.call(obj2, prop)) {\r\n                obj1[prop] = obj2[prop];\r\n            }\r\n        }\r\n        return obj1;\r\n    }\r\n    function flattenArray(arr, result) {\r\n        if (result === void 0) { result = []; }\r\n        for (var i_1 = 0, length_1 = arr.length; i_1 < length_1; i_1++) {\r\n            var value = arr[i_1];\r\n            if (Array.isArray(value)) {\r\n                flattenArray(value, result);\r\n            }\r\n            else {\r\n                if (value !== undefined) {\r\n                    result.push(value);\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    function isNullOrUndefined(val) {\r\n        return val === null || val === undefined;\r\n    }\n\n    var utils = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        getLocation: getLocation,\n        copyArray: copyArray,\n        clone: clone,\n        defaults: defaults,\n        copyOptions: copyOptions,\n        merge: merge,\n        flattenArray: flattenArray,\n        isNullOrUndefined: isNullOrUndefined\n    });\n\n    var anonymousFunc = /(<anonymous>|Function):(\\d+):(\\d+)/;\r\n    /**\r\n     * This is a centralized class of any error that could be thrown internally (mostly by the parser).\r\n     * Besides standard .message it keeps some additional data like a path to the file where the error\r\n     * occurred along with line and column numbers.\r\n     *\r\n     * @class\r\n     * @extends Error\r\n     * @type {module.LessError}\r\n     *\r\n     * @prop {string} type\r\n     * @prop {string} filename\r\n     * @prop {number} index\r\n     * @prop {number} line\r\n     * @prop {number} column\r\n     * @prop {number} callLine\r\n     * @prop {number} callExtract\r\n     * @prop {string[]} extract\r\n     *\r\n     * @param {Object} e              - An error object to wrap around or just a descriptive object\r\n     * @param {Object} fileContentMap - An object with file contents in 'contents' property (like importManager) @todo - move to fileManager?\r\n     * @param {string} [currentFilename]\r\n     */\r\n    var LessError = function (e, fileContentMap, currentFilename) {\r\n        Error.call(this);\r\n        var filename = e.filename || currentFilename;\r\n        this.message = e.message;\r\n        this.stack = e.stack;\r\n        if (fileContentMap && filename) {\r\n            var input = fileContentMap.contents[filename];\r\n            var loc = getLocation(e.index, input);\r\n            var line = loc.line;\r\n            var col = loc.column;\r\n            var callLine = e.call && getLocation(e.call, input).line;\r\n            var lines = input ? input.split('\\n') : '';\r\n            this.type = e.type || 'Syntax';\r\n            this.filename = filename;\r\n            this.index = e.index;\r\n            this.line = typeof line === 'number' ? line + 1 : null;\r\n            this.column = col;\r\n            if (!this.line && this.stack) {\r\n                var found = this.stack.match(anonymousFunc);\r\n                /**\r\n                 * We have to figure out how this environment stringifies anonymous functions\r\n                 * so we can correctly map plugin errors.\r\n                 *\r\n                 * Note, in Node 8, the output of anonymous funcs varied based on parameters\r\n                 * being present or not, so we inject dummy params.\r\n                 */\r\n                var func = new Function('a', 'throw new Error()');\r\n                var lineAdjust = 0;\r\n                try {\r\n                    func();\r\n                }\r\n                catch (e) {\r\n                    var match = e.stack.match(anonymousFunc);\r\n                    lineAdjust = 1 - parseInt(match[2]);\r\n                }\r\n                if (found) {\r\n                    if (found[2]) {\r\n                        this.line = parseInt(found[2]) + lineAdjust;\r\n                    }\r\n                    if (found[3]) {\r\n                        this.column = parseInt(found[3]);\r\n                    }\r\n                }\r\n            }\r\n            this.callLine = callLine + 1;\r\n            this.callExtract = lines[callLine];\r\n            this.extract = [\r\n                lines[this.line - 2],\r\n                lines[this.line - 1],\r\n                lines[this.line]\r\n            ];\r\n        }\r\n    };\r\n    if (typeof Object.create === 'undefined') {\r\n        var F = function () { };\r\n        F.prototype = Error.prototype;\r\n        LessError.prototype = new F();\r\n    }\r\n    else {\r\n        LessError.prototype = Object.create(Error.prototype);\r\n    }\r\n    LessError.prototype.constructor = LessError;\r\n    /**\r\n     * An overridden version of the default Object.prototype.toString\r\n     * which uses additional information to create a helpful message.\r\n     *\r\n     * @param {Object} options\r\n     * @returns {string}\r\n     */\r\n    LessError.prototype.toString = function (options) {\r\n        options = options || {};\r\n        var message = '';\r\n        var extract = this.extract || [];\r\n        var error = [];\r\n        var stylize = function (str) { return str; };\r\n        if (options.stylize) {\r\n            var type = typeof options.stylize;\r\n            if (type !== 'function') {\r\n                throw Error(\"options.stylize should be a function, got a \".concat(type, \"!\"));\r\n            }\r\n            stylize = options.stylize;\r\n        }\r\n        if (this.line !== null) {\r\n            if (typeof extract[0] === 'string') {\r\n                error.push(stylize(\"\".concat(this.line - 1, \" \").concat(extract[0]), 'grey'));\r\n            }\r\n            if (typeof extract[1] === 'string') {\r\n                var errorTxt = \"\".concat(this.line, \" \");\r\n                if (extract[1]) {\r\n                    errorTxt += extract[1].slice(0, this.column) +\r\n                        stylize(stylize(stylize(extract[1].substr(this.column, 1), 'bold') +\r\n                            extract[1].slice(this.column + 1), 'red'), 'inverse');\r\n                }\r\n                error.push(errorTxt);\r\n            }\r\n            if (typeof extract[2] === 'string') {\r\n                error.push(stylize(\"\".concat(this.line + 1, \" \").concat(extract[2]), 'grey'));\r\n            }\r\n            error = \"\".concat(error.join('\\n') + stylize('', 'reset'), \"\\n\");\r\n        }\r\n        message += stylize(\"\".concat(this.type, \"Error: \").concat(this.message), 'red');\r\n        if (this.filename) {\r\n            message += stylize(' in ', 'red') + this.filename;\r\n        }\r\n        if (this.line) {\r\n            message += stylize(\" on line \".concat(this.line, \", column \").concat(this.column + 1, \":\"), 'grey');\r\n        }\r\n        message += \"\\n\".concat(error);\r\n        if (this.callLine) {\r\n            message += \"\".concat(stylize('from ', 'red') + (this.filename || ''), \"/n\");\r\n            message += \"\".concat(stylize(this.callLine, 'grey'), \" \").concat(this.callExtract, \"/n\");\r\n        }\r\n        return message;\r\n    };\n\n    var _visitArgs = { visitDeeper: true };\r\n    var _hasIndexed = false;\r\n    function _noop(node) {\r\n        return node;\r\n    }\r\n    function indexNodeTypes(parent, ticker) {\r\n        // add .typeIndex to tree node types for lookup table\r\n        var key, child;\r\n        for (key in parent) {\r\n            /* eslint guard-for-in: 0 */\r\n            child = parent[key];\r\n            switch (typeof child) {\r\n                case 'function':\r\n                    // ignore bound functions directly on tree which do not have a prototype\r\n                    // or aren't nodes\r\n                    if (child.prototype && child.prototype.type) {\r\n                        child.prototype.typeIndex = ticker++;\r\n                    }\r\n                    break;\r\n                case 'object':\r\n                    ticker = indexNodeTypes(child, ticker);\r\n                    break;\r\n            }\r\n        }\r\n        return ticker;\r\n    }\r\n    var Visitor = /** @class */ (function () {\r\n        function Visitor(implementation) {\r\n            this._implementation = implementation;\r\n            this._visitInCache = {};\r\n            this._visitOutCache = {};\r\n            if (!_hasIndexed) {\r\n                indexNodeTypes(tree, 1);\r\n                _hasIndexed = true;\r\n            }\r\n        }\r\n        Visitor.prototype.visit = function (node) {\r\n            if (!node) {\r\n                return node;\r\n            }\r\n            var nodeTypeIndex = node.typeIndex;\r\n            if (!nodeTypeIndex) {\r\n                // MixinCall args aren't a node type?\r\n                if (node.value && node.value.typeIndex) {\r\n                    this.visit(node.value);\r\n                }\r\n                return node;\r\n            }\r\n            var impl = this._implementation;\r\n            var func = this._visitInCache[nodeTypeIndex];\r\n            var funcOut = this._visitOutCache[nodeTypeIndex];\r\n            var visitArgs = _visitArgs;\r\n            var fnName;\r\n            visitArgs.visitDeeper = true;\r\n            if (!func) {\r\n                fnName = \"visit\".concat(node.type);\r\n                func = impl[fnName] || _noop;\r\n                funcOut = impl[\"\".concat(fnName, \"Out\")] || _noop;\r\n                this._visitInCache[nodeTypeIndex] = func;\r\n                this._visitOutCache[nodeTypeIndex] = funcOut;\r\n            }\r\n            if (func !== _noop) {\r\n                var newNode = func.call(impl, node, visitArgs);\r\n                if (node && impl.isReplacing) {\r\n                    node = newNode;\r\n                }\r\n            }\r\n            if (visitArgs.visitDeeper && node) {\r\n                if (node.length) {\r\n                    for (var i_1 = 0, cnt = node.length; i_1 < cnt; i_1++) {\r\n                        if (node[i_1].accept) {\r\n                            node[i_1].accept(this);\r\n                        }\r\n                    }\r\n                }\r\n                else if (node.accept) {\r\n                    node.accept(this);\r\n                }\r\n            }\r\n            if (funcOut != _noop) {\r\n                funcOut.call(impl, node);\r\n            }\r\n            return node;\r\n        };\r\n        Visitor.prototype.visitArray = function (nodes, nonReplacing) {\r\n            if (!nodes) {\r\n                return nodes;\r\n            }\r\n            var cnt = nodes.length;\r\n            var i;\r\n            // Non-replacing\r\n            if (nonReplacing || !this._implementation.isReplacing) {\r\n                for (i = 0; i < cnt; i++) {\r\n                    this.visit(nodes[i]);\r\n                }\r\n                return nodes;\r\n            }\r\n            // Replacing\r\n            var out = [];\r\n            for (i = 0; i < cnt; i++) {\r\n                var evald = this.visit(nodes[i]);\r\n                if (evald === undefined) {\r\n                    continue;\r\n                }\r\n                if (!evald.splice) {\r\n                    out.push(evald);\r\n                }\r\n                else if (evald.length) {\r\n                    this.flatten(evald, out);\r\n                }\r\n            }\r\n            return out;\r\n        };\r\n        Visitor.prototype.flatten = function (arr, out) {\r\n            if (!out) {\r\n                out = [];\r\n            }\r\n            var cnt, i, item, nestedCnt, j, nestedItem;\r\n            for (i = 0, cnt = arr.length; i < cnt; i++) {\r\n                item = arr[i];\r\n                if (item === undefined) {\r\n                    continue;\r\n                }\r\n                if (!item.splice) {\r\n                    out.push(item);\r\n                    continue;\r\n                }\r\n                for (j = 0, nestedCnt = item.length; j < nestedCnt; j++) {\r\n                    nestedItem = item[j];\r\n                    if (nestedItem === undefined) {\r\n                        continue;\r\n                    }\r\n                    if (!nestedItem.splice) {\r\n                        out.push(nestedItem);\r\n                    }\r\n                    else if (nestedItem.length) {\r\n                        this.flatten(nestedItem, out);\r\n                    }\r\n                }\r\n            }\r\n            return out;\r\n        };\r\n        return Visitor;\r\n    }());\n\n    var contexts = {};\r\n    var copyFromOriginal = function copyFromOriginal(original, destination, propertiesToCopy) {\r\n        if (!original) {\r\n            return;\r\n        }\r\n        for (var i_1 = 0; i_1 < propertiesToCopy.length; i_1++) {\r\n            if (Object.prototype.hasOwnProperty.call(original, propertiesToCopy[i_1])) {\r\n                destination[propertiesToCopy[i_1]] = original[propertiesToCopy[i_1]];\r\n            }\r\n        }\r\n    };\r\n    /*\r\n     parse is used whilst parsing\r\n     */\r\n    var parseCopyProperties = [\r\n        // options\r\n        'paths',\r\n        'rewriteUrls',\r\n        'rootpath',\r\n        'strictImports',\r\n        'insecure',\r\n        'dumpLineNumbers',\r\n        'compress',\r\n        'syncImport',\r\n        'chunkInput',\r\n        'mime',\r\n        'useFileCache',\r\n        // context\r\n        'processImports',\r\n        // Used by the import manager to stop multiple import visitors being created.\r\n        'pluginManager' // Used as the plugin manager for the session\r\n    ];\r\n    contexts.Parse = function (options) {\r\n        copyFromOriginal(options, this, parseCopyProperties);\r\n        if (typeof this.paths === 'string') {\r\n            this.paths = [this.paths];\r\n        }\r\n    };\r\n    var evalCopyProperties = [\r\n        'paths',\r\n        'compress',\r\n        'math',\r\n        'strictUnits',\r\n        'sourceMap',\r\n        'importMultiple',\r\n        'urlArgs',\r\n        'javascriptEnabled',\r\n        'pluginManager',\r\n        'importantScope',\r\n        'rewriteUrls' // option - whether to adjust URL's to be relative\r\n    ];\r\n    contexts.Eval = function (options, frames) {\r\n        copyFromOriginal(options, this, evalCopyProperties);\r\n        if (typeof this.paths === 'string') {\r\n            this.paths = [this.paths];\r\n        }\r\n        this.frames = frames || [];\r\n        this.importantScope = this.importantScope || [];\r\n    };\r\n    contexts.Eval.prototype.enterCalc = function () {\r\n        if (!this.calcStack) {\r\n            this.calcStack = [];\r\n        }\r\n        this.calcStack.push(true);\r\n        this.inCalc = true;\r\n    };\r\n    contexts.Eval.prototype.exitCalc = function () {\r\n        this.calcStack.pop();\r\n        if (!this.calcStack.length) {\r\n            this.inCalc = false;\r\n        }\r\n    };\r\n    contexts.Eval.prototype.inParenthesis = function () {\r\n        if (!this.parensStack) {\r\n            this.parensStack = [];\r\n        }\r\n        this.parensStack.push(true);\r\n    };\r\n    contexts.Eval.prototype.outOfParenthesis = function () {\r\n        this.parensStack.pop();\r\n    };\r\n    contexts.Eval.prototype.inCalc = false;\r\n    contexts.Eval.prototype.mathOn = true;\r\n    contexts.Eval.prototype.isMathOn = function (op) {\r\n        if (!this.mathOn) {\r\n            return false;\r\n        }\r\n        if (op === '/' && this.math !== Math$1.ALWAYS && (!this.parensStack || !this.parensStack.length)) {\r\n            return false;\r\n        }\r\n        if (this.math > Math$1.PARENS_DIVISION) {\r\n            return this.parensStack && this.parensStack.length;\r\n        }\r\n        return true;\r\n    };\r\n    contexts.Eval.prototype.pathRequiresRewrite = function (path) {\r\n        var isRelative = this.rewriteUrls === RewriteUrls.LOCAL ? isPathLocalRelative : isPathRelative;\r\n        return isRelative(path);\r\n    };\r\n    contexts.Eval.prototype.rewritePath = function (path, rootpath) {\r\n        var newPath;\r\n        rootpath = rootpath || '';\r\n        newPath = this.normalizePath(rootpath + path);\r\n        // If a path was explicit relative and the rootpath was not an absolute path\r\n        // we must ensure that the new path is also explicit relative.\r\n        if (isPathLocalRelative(path) &&\r\n            isPathRelative(rootpath) &&\r\n            isPathLocalRelative(newPath) === false) {\r\n            newPath = \"./\".concat(newPath);\r\n        }\r\n        return newPath;\r\n    };\r\n    contexts.Eval.prototype.normalizePath = function (path) {\r\n        var segments = path.split('/').reverse();\r\n        var segment;\r\n        path = [];\r\n        while (segments.length !== 0) {\r\n            segment = segments.pop();\r\n            switch (segment) {\r\n                case '.':\r\n                    break;\r\n                case '..':\r\n                    if ((path.length === 0) || (path[path.length - 1] === '..')) {\r\n                        path.push(segment);\r\n                    }\r\n                    else {\r\n                        path.pop();\r\n                    }\r\n                    break;\r\n                default:\r\n                    path.push(segment);\r\n                    break;\r\n            }\r\n        }\r\n        return path.join('/');\r\n    };\r\n    function isPathRelative(path) {\r\n        return !/^(?:[a-z-]+:|\\/|#)/i.test(path);\r\n    }\r\n    function isPathLocalRelative(path) {\r\n        return path.charAt(0) === '.';\r\n    }\r\n    // todo - do the same for the toCSS ?\n\n    var ImportSequencer = /** @class */ (function () {\r\n        function ImportSequencer(onSequencerEmpty) {\r\n            this.imports = [];\r\n            this.variableImports = [];\r\n            this._onSequencerEmpty = onSequencerEmpty;\r\n            this._currentDepth = 0;\r\n        }\r\n        ImportSequencer.prototype.addImport = function (callback) {\r\n            var importSequencer = this, importItem = {\r\n                callback: callback,\r\n                args: null,\r\n                isReady: false\r\n            };\r\n            this.imports.push(importItem);\r\n            return function () {\r\n                importItem.args = Array.prototype.slice.call(arguments, 0);\r\n                importItem.isReady = true;\r\n                importSequencer.tryRun();\r\n            };\r\n        };\r\n        ImportSequencer.prototype.addVariableImport = function (callback) {\r\n            this.variableImports.push(callback);\r\n        };\r\n        ImportSequencer.prototype.tryRun = function () {\r\n            this._currentDepth++;\r\n            try {\r\n                while (true) {\r\n                    while (this.imports.length > 0) {\r\n                        var importItem = this.imports[0];\r\n                        if (!importItem.isReady) {\r\n                            return;\r\n                        }\r\n                        this.imports = this.imports.slice(1);\r\n                        importItem.callback.apply(null, importItem.args);\r\n                    }\r\n                    if (this.variableImports.length === 0) {\r\n                        break;\r\n                    }\r\n                    var variableImport = this.variableImports[0];\r\n                    this.variableImports = this.variableImports.slice(1);\r\n                    variableImport();\r\n                }\r\n            }\r\n            finally {\r\n                this._currentDepth--;\r\n            }\r\n            if (this._currentDepth === 0 && this._onSequencerEmpty) {\r\n                this._onSequencerEmpty();\r\n            }\r\n        };\r\n        return ImportSequencer;\r\n    }());\n\n    /* eslint-disable no-unused-vars */\r\n    var ImportVisitor = function (importer, finish) {\r\n        this._visitor = new Visitor(this);\r\n        this._importer = importer;\r\n        this._finish = finish;\r\n        this.context = new contexts.Eval();\r\n        this.importCount = 0;\r\n        this.onceFileDetectionMap = {};\r\n        this.recursionDetector = {};\r\n        this._sequencer = new ImportSequencer(this._onSequencerEmpty.bind(this));\r\n    };\r\n    ImportVisitor.prototype = {\r\n        isReplacing: false,\r\n        run: function (root) {\r\n            try {\r\n                // process the contents\r\n                this._visitor.visit(root);\r\n            }\r\n            catch (e) {\r\n                this.error = e;\r\n            }\r\n            this.isFinished = true;\r\n            this._sequencer.tryRun();\r\n        },\r\n        _onSequencerEmpty: function () {\r\n            if (!this.isFinished) {\r\n                return;\r\n            }\r\n            this._finish(this.error);\r\n        },\r\n        visitImport: function (importNode, visitArgs) {\r\n            var inlineCSS = importNode.options.inline;\r\n            if (!importNode.css || inlineCSS) {\r\n                var context = new contexts.Eval(this.context, copyArray(this.context.frames));\r\n                var importParent = context.frames[0];\r\n                this.importCount++;\r\n                if (importNode.isVariableImport()) {\r\n                    this._sequencer.addVariableImport(this.processImportNode.bind(this, importNode, context, importParent));\r\n                }\r\n                else {\r\n                    this.processImportNode(importNode, context, importParent);\r\n                }\r\n            }\r\n            visitArgs.visitDeeper = false;\r\n        },\r\n        processImportNode: function (importNode, context, importParent) {\r\n            var evaldImportNode;\r\n            var inlineCSS = importNode.options.inline;\r\n            try {\r\n                evaldImportNode = importNode.evalForImport(context);\r\n            }\r\n            catch (e) {\r\n                if (!e.filename) {\r\n                    e.index = importNode.getIndex();\r\n                    e.filename = importNode.fileInfo().filename;\r\n                }\r\n                // attempt to eval properly and treat as css\r\n                importNode.css = true;\r\n                // if that fails, this error will be thrown\r\n                importNode.error = e;\r\n            }\r\n            if (evaldImportNode && (!evaldImportNode.css || inlineCSS)) {\r\n                if (evaldImportNode.options.multiple) {\r\n                    context.importMultiple = true;\r\n                }\r\n                // try appending if we haven't determined if it is css or not\r\n                var tryAppendLessExtension = evaldImportNode.css === undefined;\r\n                for (var i_1 = 0; i_1 < importParent.rules.length; i_1++) {\r\n                    if (importParent.rules[i_1] === importNode) {\r\n                        importParent.rules[i_1] = evaldImportNode;\r\n                        break;\r\n                    }\r\n                }\r\n                var onImported = this.onImported.bind(this, evaldImportNode, context), sequencedOnImported = this._sequencer.addImport(onImported);\r\n                this._importer.push(evaldImportNode.getPath(), tryAppendLessExtension, evaldImportNode.fileInfo(), evaldImportNode.options, sequencedOnImported);\r\n            }\r\n            else {\r\n                this.importCount--;\r\n                if (this.isFinished) {\r\n                    this._sequencer.tryRun();\r\n                }\r\n            }\r\n        },\r\n        onImported: function (importNode, context, e, root, importedAtRoot, fullPath) {\r\n            if (e) {\r\n                if (!e.filename) {\r\n                    e.index = importNode.getIndex();\r\n                    e.filename = importNode.fileInfo().filename;\r\n                }\r\n                this.error = e;\r\n            }\r\n            var importVisitor = this, inlineCSS = importNode.options.inline, isPlugin = importNode.options.isPlugin, isOptional = importNode.options.optional, duplicateImport = importedAtRoot || fullPath in importVisitor.recursionDetector;\r\n            if (!context.importMultiple) {\r\n                if (duplicateImport) {\r\n                    importNode.skip = true;\r\n                }\r\n                else {\r\n                    importNode.skip = function () {\r\n                        if (fullPath in importVisitor.onceFileDetectionMap) {\r\n                            return true;\r\n                        }\r\n                        importVisitor.onceFileDetectionMap[fullPath] = true;\r\n                        return false;\r\n                    };\r\n                }\r\n            }\r\n            if (!fullPath && isOptional) {\r\n                importNode.skip = true;\r\n            }\r\n            if (root) {\r\n                importNode.root = root;\r\n                importNode.importedFilename = fullPath;\r\n                if (!inlineCSS && !isPlugin && (context.importMultiple || !duplicateImport)) {\r\n                    importVisitor.recursionDetector[fullPath] = true;\r\n                    var oldContext = this.context;\r\n                    this.context = context;\r\n                    try {\r\n                        this._visitor.visit(root);\r\n                    }\r\n                    catch (e) {\r\n                        this.error = e;\r\n                    }\r\n                    this.context = oldContext;\r\n                }\r\n            }\r\n            importVisitor.importCount--;\r\n            if (importVisitor.isFinished) {\r\n                importVisitor._sequencer.tryRun();\r\n            }\r\n        },\r\n        visitDeclaration: function (declNode, visitArgs) {\r\n            if (declNode.value.type === 'DetachedRuleset') {\r\n                this.context.frames.unshift(declNode);\r\n            }\r\n            else {\r\n                visitArgs.visitDeeper = false;\r\n            }\r\n        },\r\n        visitDeclarationOut: function (declNode) {\r\n            if (declNode.value.type === 'DetachedRuleset') {\r\n                this.context.frames.shift();\r\n            }\r\n        },\r\n        visitAtRule: function (atRuleNode, visitArgs) {\r\n            this.context.frames.unshift(atRuleNode);\r\n        },\r\n        visitAtRuleOut: function (atRuleNode) {\r\n            this.context.frames.shift();\r\n        },\r\n        visitMixinDefinition: function (mixinDefinitionNode, visitArgs) {\r\n            this.context.frames.unshift(mixinDefinitionNode);\r\n        },\r\n        visitMixinDefinitionOut: function (mixinDefinitionNode) {\r\n            this.context.frames.shift();\r\n        },\r\n        visitRuleset: function (rulesetNode, visitArgs) {\r\n            this.context.frames.unshift(rulesetNode);\r\n        },\r\n        visitRulesetOut: function (rulesetNode) {\r\n            this.context.frames.shift();\r\n        },\r\n        visitMedia: function (mediaNode, visitArgs) {\r\n            this.context.frames.unshift(mediaNode.rules[0]);\r\n        },\r\n        visitMediaOut: function (mediaNode) {\r\n            this.context.frames.shift();\r\n        }\r\n    };\n\n    var SetTreeVisibilityVisitor = /** @class */ (function () {\r\n        function SetTreeVisibilityVisitor(visible) {\r\n            this.visible = visible;\r\n        }\r\n        SetTreeVisibilityVisitor.prototype.run = function (root) {\r\n            this.visit(root);\r\n        };\r\n        SetTreeVisibilityVisitor.prototype.visitArray = function (nodes) {\r\n            if (!nodes) {\r\n                return nodes;\r\n            }\r\n            var cnt = nodes.length;\r\n            var i;\r\n            for (i = 0; i < cnt; i++) {\r\n                this.visit(nodes[i]);\r\n            }\r\n            return nodes;\r\n        };\r\n        SetTreeVisibilityVisitor.prototype.visit = function (node) {\r\n            if (!node) {\r\n                return node;\r\n            }\r\n            if (node.constructor === Array) {\r\n                return this.visitArray(node);\r\n            }\r\n            if (!node.blocksVisibility || node.blocksVisibility()) {\r\n                return node;\r\n            }\r\n            if (this.visible) {\r\n                node.ensureVisibility();\r\n            }\r\n            else {\r\n                node.ensureInvisibility();\r\n            }\r\n            node.accept(this);\r\n            return node;\r\n        };\r\n        return SetTreeVisibilityVisitor;\r\n    }());\n\n    /* eslint-disable no-unused-vars */\r\n    /* jshint loopfunc:true */\r\n    var ExtendFinderVisitor = /** @class */ (function () {\r\n        function ExtendFinderVisitor() {\r\n            this._visitor = new Visitor(this);\r\n            this.contexts = [];\r\n            this.allExtendsStack = [[]];\r\n        }\r\n        ExtendFinderVisitor.prototype.run = function (root) {\r\n            root = this._visitor.visit(root);\r\n            root.allExtends = this.allExtendsStack[0];\r\n            return root;\r\n        };\r\n        ExtendFinderVisitor.prototype.visitDeclaration = function (declNode, visitArgs) {\r\n            visitArgs.visitDeeper = false;\r\n        };\r\n        ExtendFinderVisitor.prototype.visitMixinDefinition = function (mixinDefinitionNode, visitArgs) {\r\n            visitArgs.visitDeeper = false;\r\n        };\r\n        ExtendFinderVisitor.prototype.visitRuleset = function (rulesetNode, visitArgs) {\r\n            if (rulesetNode.root) {\r\n                return;\r\n            }\r\n            var i;\r\n            var j;\r\n            var extend;\r\n            var allSelectorsExtendList = [];\r\n            var extendList;\r\n            // get &:extend(.a); rules which apply to all selectors in this ruleset\r\n            var rules = rulesetNode.rules, ruleCnt = rules ? rules.length : 0;\r\n            for (i = 0; i < ruleCnt; i++) {\r\n                if (rulesetNode.rules[i] instanceof tree.Extend) {\r\n                    allSelectorsExtendList.push(rules[i]);\r\n                    rulesetNode.extendOnEveryPath = true;\r\n                }\r\n            }\r\n            // now find every selector and apply the extends that apply to all extends\r\n            // and the ones which apply to an individual extend\r\n            var paths = rulesetNode.paths;\r\n            for (i = 0; i < paths.length; i++) {\r\n                var selectorPath = paths[i], selector = selectorPath[selectorPath.length - 1], selExtendList = selector.extendList;\r\n                extendList = selExtendList ? copyArray(selExtendList).concat(allSelectorsExtendList)\r\n                    : allSelectorsExtendList;\r\n                if (extendList) {\r\n                    extendList = extendList.map(function (allSelectorsExtend) {\r\n                        return allSelectorsExtend.clone();\r\n                    });\r\n                }\r\n                for (j = 0; j < extendList.length; j++) {\r\n                    this.foundExtends = true;\r\n                    extend = extendList[j];\r\n                    extend.findSelfSelectors(selectorPath);\r\n                    extend.ruleset = rulesetNode;\r\n                    if (j === 0) {\r\n                        extend.firstExtendOnThisSelectorPath = true;\r\n                    }\r\n                    this.allExtendsStack[this.allExtendsStack.length - 1].push(extend);\r\n                }\r\n            }\r\n            this.contexts.push(rulesetNode.selectors);\r\n        };\r\n        ExtendFinderVisitor.prototype.visitRulesetOut = function (rulesetNode) {\r\n            if (!rulesetNode.root) {\r\n                this.contexts.length = this.contexts.length - 1;\r\n            }\r\n        };\r\n        ExtendFinderVisitor.prototype.visitMedia = function (mediaNode, visitArgs) {\r\n            mediaNode.allExtends = [];\r\n            this.allExtendsStack.push(mediaNode.allExtends);\r\n        };\r\n        ExtendFinderVisitor.prototype.visitMediaOut = function (mediaNode) {\r\n            this.allExtendsStack.length = this.allExtendsStack.length - 1;\r\n        };\r\n        ExtendFinderVisitor.prototype.visitAtRule = function (atRuleNode, visitArgs) {\r\n            atRuleNode.allExtends = [];\r\n            this.allExtendsStack.push(atRuleNode.allExtends);\r\n        };\r\n        ExtendFinderVisitor.prototype.visitAtRuleOut = function (atRuleNode) {\r\n            this.allExtendsStack.length = this.allExtendsStack.length - 1;\r\n        };\r\n        return ExtendFinderVisitor;\r\n    }());\r\n    var ProcessExtendsVisitor = /** @class */ (function () {\r\n        function ProcessExtendsVisitor() {\r\n            this._visitor = new Visitor(this);\r\n        }\r\n        ProcessExtendsVisitor.prototype.run = function (root) {\r\n            var extendFinder = new ExtendFinderVisitor();\r\n            this.extendIndices = {};\r\n            extendFinder.run(root);\r\n            if (!extendFinder.foundExtends) {\r\n                return root;\r\n            }\r\n            root.allExtends = root.allExtends.concat(this.doExtendChaining(root.allExtends, root.allExtends));\r\n            this.allExtendsStack = [root.allExtends];\r\n            var newRoot = this._visitor.visit(root);\r\n            this.checkExtendsForNonMatched(root.allExtends);\r\n            return newRoot;\r\n        };\r\n        ProcessExtendsVisitor.prototype.checkExtendsForNonMatched = function (extendList) {\r\n            var indices = this.extendIndices;\r\n            extendList.filter(function (extend) {\r\n                return !extend.hasFoundMatches && extend.parent_ids.length == 1;\r\n            }).forEach(function (extend) {\r\n                var selector = '_unknown_';\r\n                try {\r\n                    selector = extend.selector.toCSS({});\r\n                }\r\n                catch (_) { }\r\n                if (!indices[\"\".concat(extend.index, \" \").concat(selector)]) {\r\n                    indices[\"\".concat(extend.index, \" \").concat(selector)] = true;\r\n                    logger$1.warn(\"extend '\".concat(selector, \"' has no matches\"));\r\n                }\r\n            });\r\n        };\r\n        ProcessExtendsVisitor.prototype.doExtendChaining = function (extendsList, extendsListTarget, iterationCount) {\r\n            //\r\n            // chaining is different from normal extension.. if we extend an extend then we are not just copying, altering\r\n            // and pasting the selector we would do normally, but we are also adding an extend with the same target selector\r\n            // this means this new extend can then go and alter other extends\r\n            //\r\n            // this method deals with all the chaining work - without it, extend is flat and doesn't work on other extend selectors\r\n            // this is also the most expensive.. and a match on one selector can cause an extension of a selector we had already\r\n            // processed if we look at each selector at a time, as is done in visitRuleset\r\n            var extendIndex;\r\n            var targetExtendIndex;\r\n            var matches;\r\n            var extendsToAdd = [];\r\n            var newSelector;\r\n            var extendVisitor = this;\r\n            var selectorPath;\r\n            var extend;\r\n            var targetExtend;\r\n            var newExtend;\r\n            iterationCount = iterationCount || 0;\r\n            // loop through comparing every extend with every target extend.\r\n            // a target extend is the one on the ruleset we are looking at copy/edit/pasting in place\r\n            // e.g.  .a:extend(.b) {}  and .b:extend(.c) {} then the first extend extends the second one\r\n            // and the second is the target.\r\n            // the separation into two lists allows us to process a subset of chains with a bigger set, as is the\r\n            // case when processing media queries\r\n            for (extendIndex = 0; extendIndex < extendsList.length; extendIndex++) {\r\n                for (targetExtendIndex = 0; targetExtendIndex < extendsListTarget.length; targetExtendIndex++) {\r\n                    extend = extendsList[extendIndex];\r\n                    targetExtend = extendsListTarget[targetExtendIndex];\r\n                    // look for circular references\r\n                    if (extend.parent_ids.indexOf(targetExtend.object_id) >= 0) {\r\n                        continue;\r\n                    }\r\n                    // find a match in the target extends self selector (the bit before :extend)\r\n                    selectorPath = [targetExtend.selfSelectors[0]];\r\n                    matches = extendVisitor.findMatch(extend, selectorPath);\r\n                    if (matches.length) {\r\n                        extend.hasFoundMatches = true;\r\n                        // we found a match, so for each self selector..\r\n                        extend.selfSelectors.forEach(function (selfSelector) {\r\n                            var info = targetExtend.visibilityInfo();\r\n                            // process the extend as usual\r\n                            newSelector = extendVisitor.extendSelector(matches, selectorPath, selfSelector, extend.isVisible());\r\n                            // but now we create a new extend from it\r\n                            newExtend = new (tree.Extend)(targetExtend.selector, targetExtend.option, 0, targetExtend.fileInfo(), info);\r\n                            newExtend.selfSelectors = newSelector;\r\n                            // add the extend onto the list of extends for that selector\r\n                            newSelector[newSelector.length - 1].extendList = [newExtend];\r\n                            // record that we need to add it.\r\n                            extendsToAdd.push(newExtend);\r\n                            newExtend.ruleset = targetExtend.ruleset;\r\n                            // remember its parents for circular references\r\n                            newExtend.parent_ids = newExtend.parent_ids.concat(targetExtend.parent_ids, extend.parent_ids);\r\n                            // only process the selector once.. if we have :extend(.a,.b) then multiple\r\n                            // extends will look at the same selector path, so when extending\r\n                            // we know that any others will be duplicates in terms of what is added to the css\r\n                            if (targetExtend.firstExtendOnThisSelectorPath) {\r\n                                newExtend.firstExtendOnThisSelectorPath = true;\r\n                                targetExtend.ruleset.paths.push(newSelector);\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n            if (extendsToAdd.length) {\r\n                // try to detect circular references to stop a stack overflow.\r\n                // may no longer be needed.\r\n                this.extendChainCount++;\r\n                if (iterationCount > 100) {\r\n                    var selectorOne = '{unable to calculate}';\r\n                    var selectorTwo = '{unable to calculate}';\r\n                    try {\r\n                        selectorOne = extendsToAdd[0].selfSelectors[0].toCSS();\r\n                        selectorTwo = extendsToAdd[0].selector.toCSS();\r\n                    }\r\n                    catch (e) { }\r\n                    throw { message: \"extend circular reference detected. One of the circular extends is currently:\".concat(selectorOne, \":extend(\").concat(selectorTwo, \")\") };\r\n                }\r\n                // now process the new extends on the existing rules so that we can handle a extending b extending c extending\r\n                // d extending e...\r\n                return extendsToAdd.concat(extendVisitor.doExtendChaining(extendsToAdd, extendsListTarget, iterationCount + 1));\r\n            }\r\n            else {\r\n                return extendsToAdd;\r\n            }\r\n        };\r\n        ProcessExtendsVisitor.prototype.visitDeclaration = function (ruleNode, visitArgs) {\r\n            visitArgs.visitDeeper = false;\r\n        };\r\n        ProcessExtendsVisitor.prototype.visitMixinDefinition = function (mixinDefinitionNode, visitArgs) {\r\n            visitArgs.visitDeeper = false;\r\n        };\r\n        ProcessExtendsVisitor.prototype.visitSelector = function (selectorNode, visitArgs) {\r\n            visitArgs.visitDeeper = false;\r\n        };\r\n        ProcessExtendsVisitor.prototype.visitRuleset = function (rulesetNode, visitArgs) {\r\n            if (rulesetNode.root) {\r\n                return;\r\n            }\r\n            var matches;\r\n            var pathIndex;\r\n            var extendIndex;\r\n            var allExtends = this.allExtendsStack[this.allExtendsStack.length - 1];\r\n            var selectorsToAdd = [];\r\n            var extendVisitor = this;\r\n            var selectorPath;\r\n            // look at each selector path in the ruleset, find any extend matches and then copy, find and replace\r\n            for (extendIndex = 0; extendIndex < allExtends.length; extendIndex++) {\r\n                for (pathIndex = 0; pathIndex < rulesetNode.paths.length; pathIndex++) {\r\n                    selectorPath = rulesetNode.paths[pathIndex];\r\n                    // extending extends happens initially, before the main pass\r\n                    if (rulesetNode.extendOnEveryPath) {\r\n                        continue;\r\n                    }\r\n                    var extendList = selectorPath[selectorPath.length - 1].extendList;\r\n                    if (extendList && extendList.length) {\r\n                        continue;\r\n                    }\r\n                    matches = this.findMatch(allExtends[extendIndex], selectorPath);\r\n                    if (matches.length) {\r\n                        allExtends[extendIndex].hasFoundMatches = true;\r\n                        allExtends[extendIndex].selfSelectors.forEach(function (selfSelector) {\r\n                            var extendedSelectors;\r\n                            extendedSelectors = extendVisitor.extendSelector(matches, selectorPath, selfSelector, allExtends[extendIndex].isVisible());\r\n                            selectorsToAdd.push(extendedSelectors);\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n            rulesetNode.paths = rulesetNode.paths.concat(selectorsToAdd);\r\n        };\r\n        ProcessExtendsVisitor.prototype.findMatch = function (extend, haystackSelectorPath) {\r\n            //\r\n            // look through the haystack selector path to try and find the needle - extend.selector\r\n            // returns an array of selector matches that can then be replaced\r\n            //\r\n            var haystackSelectorIndex;\r\n            var hackstackSelector;\r\n            var hackstackElementIndex;\r\n            var haystackElement;\r\n            var targetCombinator;\r\n            var i;\r\n            var extendVisitor = this;\r\n            var needleElements = extend.selector.elements;\r\n            var potentialMatches = [];\r\n            var potentialMatch;\r\n            var matches = [];\r\n            // loop through the haystack elements\r\n            for (haystackSelectorIndex = 0; haystackSelectorIndex < haystackSelectorPath.length; haystackSelectorIndex++) {\r\n                hackstackSelector = haystackSelectorPath[haystackSelectorIndex];\r\n                for (hackstackElementIndex = 0; hackstackElementIndex < hackstackSelector.elements.length; hackstackElementIndex++) {\r\n                    haystackElement = hackstackSelector.elements[hackstackElementIndex];\r\n                    // if we allow elements before our match we can add a potential match every time. otherwise only at the first element.\r\n                    if (extend.allowBefore || (haystackSelectorIndex === 0 && hackstackElementIndex === 0)) {\r\n                        potentialMatches.push({ pathIndex: haystackSelectorIndex, index: hackstackElementIndex, matched: 0,\r\n                            initialCombinator: haystackElement.combinator });\r\n                    }\r\n                    for (i = 0; i < potentialMatches.length; i++) {\r\n                        potentialMatch = potentialMatches[i];\r\n                        // selectors add \" \" onto the first element. When we use & it joins the selectors together, but if we don't\r\n                        // then each selector in haystackSelectorPath has a space before it added in the toCSS phase. so we need to\r\n                        // work out what the resulting combinator will be\r\n                        targetCombinator = haystackElement.combinator.value;\r\n                        if (targetCombinator === '' && hackstackElementIndex === 0) {\r\n                            targetCombinator = ' ';\r\n                        }\r\n                        // if we don't match, null our match to indicate failure\r\n                        if (!extendVisitor.isElementValuesEqual(needleElements[potentialMatch.matched].value, haystackElement.value) ||\r\n                            (potentialMatch.matched > 0 && needleElements[potentialMatch.matched].combinator.value !== targetCombinator)) {\r\n                            potentialMatch = null;\r\n                        }\r\n                        else {\r\n                            potentialMatch.matched++;\r\n                        }\r\n                        // if we are still valid and have finished, test whether we have elements after and whether these are allowed\r\n                        if (potentialMatch) {\r\n                            potentialMatch.finished = potentialMatch.matched === needleElements.length;\r\n                            if (potentialMatch.finished &&\r\n                                (!extend.allowAfter &&\r\n                                    (hackstackElementIndex + 1 < hackstackSelector.elements.length || haystackSelectorIndex + 1 < haystackSelectorPath.length))) {\r\n                                potentialMatch = null;\r\n                            }\r\n                        }\r\n                        // if null we remove, if not, we are still valid, so either push as a valid match or continue\r\n                        if (potentialMatch) {\r\n                            if (potentialMatch.finished) {\r\n                                potentialMatch.length = needleElements.length;\r\n                                potentialMatch.endPathIndex = haystackSelectorIndex;\r\n                                potentialMatch.endPathElementIndex = hackstackElementIndex + 1; // index after end of match\r\n                                potentialMatches.length = 0; // we don't allow matches to overlap, so start matching again\r\n                                matches.push(potentialMatch);\r\n                            }\r\n                        }\r\n                        else {\r\n                            potentialMatches.splice(i, 1);\r\n                            i--;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return matches;\r\n        };\r\n        ProcessExtendsVisitor.prototype.isElementValuesEqual = function (elementValue1, elementValue2) {\r\n            if (typeof elementValue1 === 'string' || typeof elementValue2 === 'string') {\r\n                return elementValue1 === elementValue2;\r\n            }\r\n            if (elementValue1 instanceof tree.Attribute) {\r\n                if (elementValue1.op !== elementValue2.op || elementValue1.key !== elementValue2.key) {\r\n                    return false;\r\n                }\r\n                if (!elementValue1.value || !elementValue2.value) {\r\n                    if (elementValue1.value || elementValue2.value) {\r\n                        return false;\r\n                    }\r\n                    return true;\r\n                }\r\n                elementValue1 = elementValue1.value.value || elementValue1.value;\r\n                elementValue2 = elementValue2.value.value || elementValue2.value;\r\n                return elementValue1 === elementValue2;\r\n            }\r\n            elementValue1 = elementValue1.value;\r\n            elementValue2 = elementValue2.value;\r\n            if (elementValue1 instanceof tree.Selector) {\r\n                if (!(elementValue2 instanceof tree.Selector) || elementValue1.elements.length !== elementValue2.elements.length) {\r\n                    return false;\r\n                }\r\n                for (var i_1 = 0; i_1 < elementValue1.elements.length; i_1++) {\r\n                    if (elementValue1.elements[i_1].combinator.value !== elementValue2.elements[i_1].combinator.value) {\r\n                        if (i_1 !== 0 || (elementValue1.elements[i_1].combinator.value || ' ') !== (elementValue2.elements[i_1].combinator.value || ' ')) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                    if (!this.isElementValuesEqual(elementValue1.elements[i_1].value, elementValue2.elements[i_1].value)) {\r\n                        return false;\r\n                    }\r\n                }\r\n                return true;\r\n            }\r\n            return false;\r\n        };\r\n        ProcessExtendsVisitor.prototype.extendSelector = function (matches, selectorPath, replacementSelector, isVisible) {\r\n            // for a set of matches, replace each match with the replacement selector\r\n            var currentSelectorPathIndex = 0, currentSelectorPathElementIndex = 0, path = [], matchIndex, selector, firstElement, match, newElements;\r\n            for (matchIndex = 0; matchIndex < matches.length; matchIndex++) {\r\n                match = matches[matchIndex];\r\n                selector = selectorPath[match.pathIndex];\r\n                firstElement = new tree.Element(match.initialCombinator, replacementSelector.elements[0].value, replacementSelector.elements[0].isVariable, replacementSelector.elements[0].getIndex(), replacementSelector.elements[0].fileInfo());\r\n                if (match.pathIndex > currentSelectorPathIndex && currentSelectorPathElementIndex > 0) {\r\n                    path[path.length - 1].elements = path[path.length - 1]\r\n                        .elements.concat(selectorPath[currentSelectorPathIndex].elements.slice(currentSelectorPathElementIndex));\r\n                    currentSelectorPathElementIndex = 0;\r\n                    currentSelectorPathIndex++;\r\n                }\r\n                newElements = selector.elements\r\n                    .slice(currentSelectorPathElementIndex, match.index)\r\n                    .concat([firstElement])\r\n                    .concat(replacementSelector.elements.slice(1));\r\n                if (currentSelectorPathIndex === match.pathIndex && matchIndex > 0) {\r\n                    path[path.length - 1].elements =\r\n                        path[path.length - 1].elements.concat(newElements);\r\n                }\r\n                else {\r\n                    path = path.concat(selectorPath.slice(currentSelectorPathIndex, match.pathIndex));\r\n                    path.push(new tree.Selector(newElements));\r\n                }\r\n                currentSelectorPathIndex = match.endPathIndex;\r\n                currentSelectorPathElementIndex = match.endPathElementIndex;\r\n                if (currentSelectorPathElementIndex >= selectorPath[currentSelectorPathIndex].elements.length) {\r\n                    currentSelectorPathElementIndex = 0;\r\n                    currentSelectorPathIndex++;\r\n                }\r\n            }\r\n            if (currentSelectorPathIndex < selectorPath.length && currentSelectorPathElementIndex > 0) {\r\n                path[path.length - 1].elements = path[path.length - 1]\r\n                    .elements.concat(selectorPath[currentSelectorPathIndex].elements.slice(currentSelectorPathElementIndex));\r\n                currentSelectorPathIndex++;\r\n            }\r\n            path = path.concat(selectorPath.slice(currentSelectorPathIndex, selectorPath.length));\r\n            path = path.map(function (currentValue) {\r\n                // we can re-use elements here, because the visibility property matters only for selectors\r\n                var derived = currentValue.createDerived(currentValue.elements);\r\n                if (isVisible) {\r\n                    derived.ensureVisibility();\r\n                }\r\n                else {\r\n                    derived.ensureInvisibility();\r\n                }\r\n                return derived;\r\n            });\r\n            return path;\r\n        };\r\n        ProcessExtendsVisitor.prototype.visitMedia = function (mediaNode, visitArgs) {\r\n            var newAllExtends = mediaNode.allExtends.concat(this.allExtendsStack[this.allExtendsStack.length - 1]);\r\n            newAllExtends = newAllExtends.concat(this.doExtendChaining(newAllExtends, mediaNode.allExtends));\r\n            this.allExtendsStack.push(newAllExtends);\r\n        };\r\n        ProcessExtendsVisitor.prototype.visitMediaOut = function (mediaNode) {\r\n            var lastIndex = this.allExtendsStack.length - 1;\r\n            this.allExtendsStack.length = lastIndex;\r\n        };\r\n        ProcessExtendsVisitor.prototype.visitAtRule = function (atRuleNode, visitArgs) {\r\n            var newAllExtends = atRuleNode.allExtends.concat(this.allExtendsStack[this.allExtendsStack.length - 1]);\r\n            newAllExtends = newAllExtends.concat(this.doExtendChaining(newAllExtends, atRuleNode.allExtends));\r\n            this.allExtendsStack.push(newAllExtends);\r\n        };\r\n        ProcessExtendsVisitor.prototype.visitAtRuleOut = function (atRuleNode) {\r\n            var lastIndex = this.allExtendsStack.length - 1;\r\n            this.allExtendsStack.length = lastIndex;\r\n        };\r\n        return ProcessExtendsVisitor;\r\n    }());\n\n    /* eslint-disable no-unused-vars */\r\n    var JoinSelectorVisitor = /** @class */ (function () {\r\n        function JoinSelectorVisitor() {\r\n            this.contexts = [[]];\r\n            this._visitor = new Visitor(this);\r\n        }\r\n        JoinSelectorVisitor.prototype.run = function (root) {\r\n            return this._visitor.visit(root);\r\n        };\r\n        JoinSelectorVisitor.prototype.visitDeclaration = function (declNode, visitArgs) {\r\n            visitArgs.visitDeeper = false;\r\n        };\r\n        JoinSelectorVisitor.prototype.visitMixinDefinition = function (mixinDefinitionNode, visitArgs) {\r\n            visitArgs.visitDeeper = false;\r\n        };\r\n        JoinSelectorVisitor.prototype.visitRuleset = function (rulesetNode, visitArgs) {\r\n            var context = this.contexts[this.contexts.length - 1];\r\n            var paths = [];\r\n            var selectors;\r\n            this.contexts.push(paths);\r\n            if (!rulesetNode.root) {\r\n                selectors = rulesetNode.selectors;\r\n                if (selectors) {\r\n                    selectors = selectors.filter(function (selector) { return selector.getIsOutput(); });\r\n                    rulesetNode.selectors = selectors.length ? selectors : (selectors = null);\r\n                    if (selectors) {\r\n                        rulesetNode.joinSelectors(paths, context, selectors);\r\n                    }\r\n                }\r\n                if (!selectors) {\r\n                    rulesetNode.rules = null;\r\n                }\r\n                rulesetNode.paths = paths;\r\n            }\r\n        };\r\n        JoinSelectorVisitor.prototype.visitRulesetOut = function (rulesetNode) {\r\n            this.contexts.length = this.contexts.length - 1;\r\n        };\r\n        JoinSelectorVisitor.prototype.visitMedia = function (mediaNode, visitArgs) {\r\n            var context = this.contexts[this.contexts.length - 1];\r\n            mediaNode.rules[0].root = (context.length === 0 || context[0].multiMedia);\r\n        };\r\n        JoinSelectorVisitor.prototype.visitAtRule = function (atRuleNode, visitArgs) {\r\n            var context = this.contexts[this.contexts.length - 1];\r\n            if (atRuleNode.rules && atRuleNode.rules.length) {\r\n                atRuleNode.rules[0].root = (atRuleNode.isRooted || context.length === 0 || null);\r\n            }\r\n        };\r\n        return JoinSelectorVisitor;\r\n    }());\n\n    /* eslint-disable no-unused-vars */\r\n    var CSSVisitorUtils = /** @class */ (function () {\r\n        function CSSVisitorUtils(context) {\r\n            this._visitor = new Visitor(this);\r\n            this._context = context;\r\n        }\r\n        CSSVisitorUtils.prototype.containsSilentNonBlockedChild = function (bodyRules) {\r\n            var rule;\r\n            if (!bodyRules) {\r\n                return false;\r\n            }\r\n            for (var r = 0; r < bodyRules.length; r++) {\r\n                rule = bodyRules[r];\r\n                if (rule.isSilent && rule.isSilent(this._context) && !rule.blocksVisibility()) {\r\n                    // the atrule contains something that was referenced (likely by extend)\r\n                    // therefore it needs to be shown in output too\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        };\r\n        CSSVisitorUtils.prototype.keepOnlyVisibleChilds = function (owner) {\r\n            if (owner && owner.rules) {\r\n                owner.rules = owner.rules.filter(function (thing) { return thing.isVisible(); });\r\n            }\r\n        };\r\n        CSSVisitorUtils.prototype.isEmpty = function (owner) {\r\n            return (owner && owner.rules)\r\n                ? (owner.rules.length === 0) : true;\r\n        };\r\n        CSSVisitorUtils.prototype.hasVisibleSelector = function (rulesetNode) {\r\n            return (rulesetNode && rulesetNode.paths)\r\n                ? (rulesetNode.paths.length > 0) : false;\r\n        };\r\n        CSSVisitorUtils.prototype.resolveVisibility = function (node) {\r\n            if (!node.blocksVisibility()) {\r\n                if (this.isEmpty(node)) {\r\n                    return;\r\n                }\r\n                return node;\r\n            }\r\n            var compiledRulesBody = node.rules[0];\r\n            this.keepOnlyVisibleChilds(compiledRulesBody);\r\n            if (this.isEmpty(compiledRulesBody)) {\r\n                return;\r\n            }\r\n            node.ensureVisibility();\r\n            node.removeVisibilityBlock();\r\n            return node;\r\n        };\r\n        CSSVisitorUtils.prototype.isVisibleRuleset = function (rulesetNode) {\r\n            if (rulesetNode.firstRoot) {\r\n                return true;\r\n            }\r\n            if (this.isEmpty(rulesetNode)) {\r\n                return false;\r\n            }\r\n            if (!rulesetNode.root && !this.hasVisibleSelector(rulesetNode)) {\r\n                return false;\r\n            }\r\n            return true;\r\n        };\r\n        return CSSVisitorUtils;\r\n    }());\r\n    var ToCSSVisitor = function (context) {\r\n        this._visitor = new Visitor(this);\r\n        this._context = context;\r\n        this.utils = new CSSVisitorUtils(context);\r\n    };\r\n    ToCSSVisitor.prototype = {\r\n        isReplacing: true,\r\n        run: function (root) {\r\n            return this._visitor.visit(root);\r\n        },\r\n        visitDeclaration: function (declNode, visitArgs) {\r\n            if (declNode.blocksVisibility() || declNode.variable) {\r\n                return;\r\n            }\r\n            return declNode;\r\n        },\r\n        visitMixinDefinition: function (mixinNode, visitArgs) {\r\n            // mixin definitions do not get eval'd - this means they keep state\r\n            // so we have to clear that state here so it isn't used if toCSS is called twice\r\n            mixinNode.frames = [];\r\n        },\r\n        visitExtend: function (extendNode, visitArgs) {\r\n        },\r\n        visitComment: function (commentNode, visitArgs) {\r\n            if (commentNode.blocksVisibility() || commentNode.isSilent(this._context)) {\r\n                return;\r\n            }\r\n            return commentNode;\r\n        },\r\n        visitMedia: function (mediaNode, visitArgs) {\r\n            var originalRules = mediaNode.rules[0].rules;\r\n            mediaNode.accept(this._visitor);\r\n            visitArgs.visitDeeper = false;\r\n            return this.utils.resolveVisibility(mediaNode, originalRules);\r\n        },\r\n        visitImport: function (importNode, visitArgs) {\r\n            if (importNode.blocksVisibility()) {\r\n                return;\r\n            }\r\n            return importNode;\r\n        },\r\n        visitAtRule: function (atRuleNode, visitArgs) {\r\n            if (atRuleNode.rules && atRuleNode.rules.length) {\r\n                return this.visitAtRuleWithBody(atRuleNode, visitArgs);\r\n            }\r\n            else {\r\n                return this.visitAtRuleWithoutBody(atRuleNode, visitArgs);\r\n            }\r\n        },\r\n        visitAnonymous: function (anonymousNode, visitArgs) {\r\n            if (!anonymousNode.blocksVisibility()) {\r\n                anonymousNode.accept(this._visitor);\r\n                return anonymousNode;\r\n            }\r\n        },\r\n        visitAtRuleWithBody: function (atRuleNode, visitArgs) {\r\n            // if there is only one nested ruleset and that one has no path, then it is\r\n            // just fake ruleset\r\n            function hasFakeRuleset(atRuleNode) {\r\n                var bodyRules = atRuleNode.rules;\r\n                return bodyRules.length === 1 && (!bodyRules[0].paths || bodyRules[0].paths.length === 0);\r\n            }\r\n            function getBodyRules(atRuleNode) {\r\n                var nodeRules = atRuleNode.rules;\r\n                if (hasFakeRuleset(atRuleNode)) {\r\n                    return nodeRules[0].rules;\r\n                }\r\n                return nodeRules;\r\n            }\r\n            // it is still true that it is only one ruleset in array\r\n            // this is last such moment\r\n            // process childs\r\n            var originalRules = getBodyRules(atRuleNode);\r\n            atRuleNode.accept(this._visitor);\r\n            visitArgs.visitDeeper = false;\r\n            if (!this.utils.isEmpty(atRuleNode)) {\r\n                this._mergeRules(atRuleNode.rules[0].rules);\r\n            }\r\n            return this.utils.resolveVisibility(atRuleNode, originalRules);\r\n        },\r\n        visitAtRuleWithoutBody: function (atRuleNode, visitArgs) {\r\n            if (atRuleNode.blocksVisibility()) {\r\n                return;\r\n            }\r\n            if (atRuleNode.name === '@charset') {\r\n                // Only output the debug info together with subsequent @charset definitions\r\n                // a comment (or @media statement) before the actual @charset atrule would\r\n                // be considered illegal css as it has to be on the first line\r\n                if (this.charset) {\r\n                    if (atRuleNode.debugInfo) {\r\n                        var comment = new tree.Comment(\"/* \".concat(atRuleNode.toCSS(this._context).replace(/\\n/g, ''), \" */\\n\"));\r\n                        comment.debugInfo = atRuleNode.debugInfo;\r\n                        return this._visitor.visit(comment);\r\n                    }\r\n                    return;\r\n                }\r\n                this.charset = true;\r\n            }\r\n            return atRuleNode;\r\n        },\r\n        checkValidNodes: function (rules, isRoot) {\r\n            if (!rules) {\r\n                return;\r\n            }\r\n            for (var i_1 = 0; i_1 < rules.length; i_1++) {\r\n                var ruleNode = rules[i_1];\r\n                if (isRoot && ruleNode instanceof tree.Declaration && !ruleNode.variable) {\r\n                    throw { message: 'Properties must be inside selector blocks. They cannot be in the root',\r\n                        index: ruleNode.getIndex(), filename: ruleNode.fileInfo() && ruleNode.fileInfo().filename };\r\n                }\r\n                if (ruleNode instanceof tree.Call) {\r\n                    throw { message: \"Function '\".concat(ruleNode.name, \"' did not return a root node\"),\r\n                        index: ruleNode.getIndex(), filename: ruleNode.fileInfo() && ruleNode.fileInfo().filename };\r\n                }\r\n                if (ruleNode.type && !ruleNode.allowRoot) {\r\n                    throw { message: \"\".concat(ruleNode.type, \" node returned by a function is not valid here\"),\r\n                        index: ruleNode.getIndex(), filename: ruleNode.fileInfo() && ruleNode.fileInfo().filename };\r\n                }\r\n            }\r\n        },\r\n        visitRuleset: function (rulesetNode, visitArgs) {\r\n            // at this point rulesets are nested into each other\r\n            var rule;\r\n            var rulesets = [];\r\n            this.checkValidNodes(rulesetNode.rules, rulesetNode.firstRoot);\r\n            if (!rulesetNode.root) {\r\n                // remove invisible paths\r\n                this._compileRulesetPaths(rulesetNode);\r\n                // remove rulesets from this ruleset body and compile them separately\r\n                var nodeRules = rulesetNode.rules;\r\n                var nodeRuleCnt = nodeRules ? nodeRules.length : 0;\r\n                for (var i_2 = 0; i_2 < nodeRuleCnt;) {\r\n                    rule = nodeRules[i_2];\r\n                    if (rule && rule.rules) {\r\n                        // visit because we are moving them out from being a child\r\n                        rulesets.push(this._visitor.visit(rule));\r\n                        nodeRules.splice(i_2, 1);\r\n                        nodeRuleCnt--;\r\n                        continue;\r\n                    }\r\n                    i_2++;\r\n                }\r\n                // accept the visitor to remove rules and refactor itself\r\n                // then we can decide nogw whether we want it or not\r\n                // compile body\r\n                if (nodeRuleCnt > 0) {\r\n                    rulesetNode.accept(this._visitor);\r\n                }\r\n                else {\r\n                    rulesetNode.rules = null;\r\n                }\r\n                visitArgs.visitDeeper = false;\r\n            }\r\n            else { // if (! rulesetNode.root) {\r\n                rulesetNode.accept(this._visitor);\r\n                visitArgs.visitDeeper = false;\r\n            }\r\n            if (rulesetNode.rules) {\r\n                this._mergeRules(rulesetNode.rules);\r\n                this._removeDuplicateRules(rulesetNode.rules);\r\n            }\r\n            // now decide whether we keep the ruleset\r\n            if (this.utils.isVisibleRuleset(rulesetNode)) {\r\n                rulesetNode.ensureVisibility();\r\n                rulesets.splice(0, 0, rulesetNode);\r\n            }\r\n            if (rulesets.length === 1) {\r\n                return rulesets[0];\r\n            }\r\n            return rulesets;\r\n        },\r\n        _compileRulesetPaths: function (rulesetNode) {\r\n            if (rulesetNode.paths) {\r\n                rulesetNode.paths = rulesetNode.paths\r\n                    .filter(function (p) {\r\n                    var i;\r\n                    if (p[0].elements[0].combinator.value === ' ') {\r\n                        p[0].elements[0].combinator = new (tree.Combinator)('');\r\n                    }\r\n                    for (i = 0; i < p.length; i++) {\r\n                        if (p[i].isVisible() && p[i].getIsOutput()) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                    return false;\r\n                });\r\n            }\r\n        },\r\n        _removeDuplicateRules: function (rules) {\r\n            if (!rules) {\r\n                return;\r\n            }\r\n            // remove duplicates\r\n            var ruleCache = {};\r\n            var ruleList;\r\n            var rule;\r\n            var i;\r\n            for (i = rules.length - 1; i >= 0; i--) {\r\n                rule = rules[i];\r\n                if (rule instanceof tree.Declaration) {\r\n                    if (!ruleCache[rule.name]) {\r\n                        ruleCache[rule.name] = rule;\r\n                    }\r\n                    else {\r\n                        ruleList = ruleCache[rule.name];\r\n                        if (ruleList instanceof tree.Declaration) {\r\n                            ruleList = ruleCache[rule.name] = [ruleCache[rule.name].toCSS(this._context)];\r\n                        }\r\n                        var ruleCSS = rule.toCSS(this._context);\r\n                        if (ruleList.indexOf(ruleCSS) !== -1) {\r\n                            rules.splice(i, 1);\r\n                        }\r\n                        else {\r\n                            ruleList.push(ruleCSS);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        _mergeRules: function (rules) {\r\n            if (!rules) {\r\n                return;\r\n            }\r\n            var groups = {};\r\n            var groupsArr = [];\r\n            for (var i_3 = 0; i_3 < rules.length; i_3++) {\r\n                var rule = rules[i_3];\r\n                if (rule.merge) {\r\n                    var key = rule.name;\r\n                    groups[key] ? rules.splice(i_3--, 1) :\r\n                        groupsArr.push(groups[key] = []);\r\n                    groups[key].push(rule);\r\n                }\r\n            }\r\n            groupsArr.forEach(function (group) {\r\n                if (group.length > 0) {\r\n                    var result_1 = group[0];\r\n                    var space_1 = [];\r\n                    var comma_1 = [new tree.Expression(space_1)];\r\n                    group.forEach(function (rule) {\r\n                        if ((rule.merge === '+') && (space_1.length > 0)) {\r\n                            comma_1.push(new tree.Expression(space_1 = []));\r\n                        }\r\n                        space_1.push(rule.value);\r\n                        result_1.important = result_1.important || rule.important;\r\n                    });\r\n                    result_1.value = new tree.Value(comma_1);\r\n                }\r\n            });\r\n        }\r\n    };\n\n    var visitors = {\r\n        Visitor: Visitor,\r\n        ImportVisitor: ImportVisitor,\r\n        MarkVisibleSelectorsVisitor: SetTreeVisibilityVisitor,\r\n        ExtendVisitor: ProcessExtendsVisitor,\r\n        JoinSelectorVisitor: JoinSelectorVisitor,\r\n        ToCSSVisitor: ToCSSVisitor\r\n    };\n\n    // Split the input into chunks.\r\n    function chunker (input, fail) {\r\n        var len = input.length;\r\n        var level = 0;\r\n        var parenLevel = 0;\r\n        var lastOpening;\r\n        var lastOpeningParen;\r\n        var lastMultiComment;\r\n        var lastMultiCommentEndBrace;\r\n        var chunks = [];\r\n        var emitFrom = 0;\r\n        var chunkerCurrentIndex;\r\n        var currentChunkStartIndex;\r\n        var cc;\r\n        var cc2;\r\n        var matched;\r\n        function emitChunk(force) {\r\n            var len = chunkerCurrentIndex - emitFrom;\r\n            if (((len < 512) && !force) || !len) {\r\n                return;\r\n            }\r\n            chunks.push(input.slice(emitFrom, chunkerCurrentIndex + 1));\r\n            emitFrom = chunkerCurrentIndex + 1;\r\n        }\r\n        for (chunkerCurrentIndex = 0; chunkerCurrentIndex < len; chunkerCurrentIndex++) {\r\n            cc = input.charCodeAt(chunkerCurrentIndex);\r\n            if (((cc >= 97) && (cc <= 122)) || (cc < 34)) {\r\n                // a-z or whitespace\r\n                continue;\r\n            }\r\n            switch (cc) {\r\n                case 40: // (\r\n                    parenLevel++;\r\n                    lastOpeningParen = chunkerCurrentIndex;\r\n                    continue;\r\n                case 41: // )\r\n                    if (--parenLevel < 0) {\r\n                        return fail('missing opening `(`', chunkerCurrentIndex);\r\n                    }\r\n                    continue;\r\n                case 59: // ;\r\n                    if (!parenLevel) {\r\n                        emitChunk();\r\n                    }\r\n                    continue;\r\n                case 123: // {\r\n                    level++;\r\n                    lastOpening = chunkerCurrentIndex;\r\n                    continue;\r\n                case 125: // }\r\n                    if (--level < 0) {\r\n                        return fail('missing opening `{`', chunkerCurrentIndex);\r\n                    }\r\n                    if (!level && !parenLevel) {\r\n                        emitChunk();\r\n                    }\r\n                    continue;\r\n                case 92: // \\\r\n                    if (chunkerCurrentIndex < len - 1) {\r\n                        chunkerCurrentIndex++;\r\n                        continue;\r\n                    }\r\n                    return fail('unescaped `\\\\`', chunkerCurrentIndex);\r\n                case 34:\r\n                case 39:\r\n                case 96: // \", ' and `\r\n                    matched = 0;\r\n                    currentChunkStartIndex = chunkerCurrentIndex;\r\n                    for (chunkerCurrentIndex = chunkerCurrentIndex + 1; chunkerCurrentIndex < len; chunkerCurrentIndex++) {\r\n                        cc2 = input.charCodeAt(chunkerCurrentIndex);\r\n                        if (cc2 > 96) {\r\n                            continue;\r\n                        }\r\n                        if (cc2 == cc) {\r\n                            matched = 1;\r\n                            break;\r\n                        }\r\n                        if (cc2 == 92) { // \\\r\n                            if (chunkerCurrentIndex == len - 1) {\r\n                                return fail('unescaped `\\\\`', chunkerCurrentIndex);\r\n                            }\r\n                            chunkerCurrentIndex++;\r\n                        }\r\n                    }\r\n                    if (matched) {\r\n                        continue;\r\n                    }\r\n                    return fail(\"unmatched `\".concat(String.fromCharCode(cc), \"`\"), currentChunkStartIndex);\r\n                case 47: // /, check for comment\r\n                    if (parenLevel || (chunkerCurrentIndex == len - 1)) {\r\n                        continue;\r\n                    }\r\n                    cc2 = input.charCodeAt(chunkerCurrentIndex + 1);\r\n                    if (cc2 == 47) {\r\n                        // //, find lnfeed\r\n                        for (chunkerCurrentIndex = chunkerCurrentIndex + 2; chunkerCurrentIndex < len; chunkerCurrentIndex++) {\r\n                            cc2 = input.charCodeAt(chunkerCurrentIndex);\r\n                            if ((cc2 <= 13) && ((cc2 == 10) || (cc2 == 13))) {\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    else if (cc2 == 42) {\r\n                        // /*, find */\r\n                        lastMultiComment = currentChunkStartIndex = chunkerCurrentIndex;\r\n                        for (chunkerCurrentIndex = chunkerCurrentIndex + 2; chunkerCurrentIndex < len - 1; chunkerCurrentIndex++) {\r\n                            cc2 = input.charCodeAt(chunkerCurrentIndex);\r\n                            if (cc2 == 125) {\r\n                                lastMultiCommentEndBrace = chunkerCurrentIndex;\r\n                            }\r\n                            if (cc2 != 42) {\r\n                                continue;\r\n                            }\r\n                            if (input.charCodeAt(chunkerCurrentIndex + 1) == 47) {\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (chunkerCurrentIndex == len - 1) {\r\n                            return fail('missing closing `*/`', currentChunkStartIndex);\r\n                        }\r\n                        chunkerCurrentIndex++;\r\n                    }\r\n                    continue;\r\n                case 42: // *, check for unmatched */\r\n                    if ((chunkerCurrentIndex < len - 1) && (input.charCodeAt(chunkerCurrentIndex + 1) == 47)) {\r\n                        return fail('unmatched `/*`', chunkerCurrentIndex);\r\n                    }\r\n                    continue;\r\n            }\r\n        }\r\n        if (level !== 0) {\r\n            if ((lastMultiComment > lastOpening) && (lastMultiCommentEndBrace > lastMultiComment)) {\r\n                return fail('missing closing `}` or `*/`', lastOpening);\r\n            }\r\n            else {\r\n                return fail('missing closing `}`', lastOpening);\r\n            }\r\n        }\r\n        else if (parenLevel !== 0) {\r\n            return fail('missing closing `)`', lastOpeningParen);\r\n        }\r\n        emitChunk(true);\r\n        return chunks;\r\n    }\n\n    var getParserInput = (function () {\r\n        var // Less input string\r\n        input;\r\n        var // current chunk\r\n        j;\r\n        var // holds state for backtracking\r\n        saveStack = [];\r\n        var // furthest index the parser has gone to\r\n        furthest;\r\n        var // if this is furthest we got to, this is the probably cause\r\n        furthestPossibleErrorMessage;\r\n        var // chunkified input\r\n        chunks;\r\n        var // current chunk\r\n        current;\r\n        var // index of current chunk, in `input`\r\n        currentPos;\r\n        var parserInput = {};\r\n        var CHARCODE_SPACE = 32;\r\n        var CHARCODE_TAB = 9;\r\n        var CHARCODE_LF = 10;\r\n        var CHARCODE_CR = 13;\r\n        var CHARCODE_PLUS = 43;\r\n        var CHARCODE_COMMA = 44;\r\n        var CHARCODE_FORWARD_SLASH = 47;\r\n        var CHARCODE_9 = 57;\r\n        function skipWhitespace(length) {\r\n            var oldi = parserInput.i;\r\n            var oldj = j;\r\n            var curr = parserInput.i - currentPos;\r\n            var endIndex = parserInput.i + current.length - curr;\r\n            var mem = (parserInput.i += length);\r\n            var inp = input;\r\n            var c;\r\n            var nextChar;\r\n            var comment;\r\n            for (; parserInput.i < endIndex; parserInput.i++) {\r\n                c = inp.charCodeAt(parserInput.i);\r\n                if (parserInput.autoCommentAbsorb && c === CHARCODE_FORWARD_SLASH) {\r\n                    nextChar = inp.charAt(parserInput.i + 1);\r\n                    if (nextChar === '/') {\r\n                        comment = { index: parserInput.i, isLineComment: true };\r\n                        var nextNewLine = inp.indexOf('\\n', parserInput.i + 2);\r\n                        if (nextNewLine < 0) {\r\n                            nextNewLine = endIndex;\r\n                        }\r\n                        parserInput.i = nextNewLine;\r\n                        comment.text = inp.substr(comment.index, parserInput.i - comment.index);\r\n                        parserInput.commentStore.push(comment);\r\n                        continue;\r\n                    }\r\n                    else if (nextChar === '*') {\r\n                        var nextStarSlash = inp.indexOf('*/', parserInput.i + 2);\r\n                        if (nextStarSlash >= 0) {\r\n                            comment = {\r\n                                index: parserInput.i,\r\n                                text: inp.substr(parserInput.i, nextStarSlash + 2 - parserInput.i),\r\n                                isLineComment: false\r\n                            };\r\n                            parserInput.i += comment.text.length - 1;\r\n                            parserInput.commentStore.push(comment);\r\n                            continue;\r\n                        }\r\n                    }\r\n                    break;\r\n                }\r\n                if ((c !== CHARCODE_SPACE) && (c !== CHARCODE_LF) && (c !== CHARCODE_TAB) && (c !== CHARCODE_CR)) {\r\n                    break;\r\n                }\r\n            }\r\n            current = current.slice(length + parserInput.i - mem + curr);\r\n            currentPos = parserInput.i;\r\n            if (!current.length) {\r\n                if (j < chunks.length - 1) {\r\n                    current = chunks[++j];\r\n                    skipWhitespace(0); // skip space at the beginning of a chunk\r\n                    return true; // things changed\r\n                }\r\n                parserInput.finished = true;\r\n            }\r\n            return oldi !== parserInput.i || oldj !== j;\r\n        }\r\n        parserInput.save = function () {\r\n            currentPos = parserInput.i;\r\n            saveStack.push({ current: current, i: parserInput.i, j: j });\r\n        };\r\n        parserInput.restore = function (possibleErrorMessage) {\r\n            if (parserInput.i > furthest || (parserInput.i === furthest && possibleErrorMessage && !furthestPossibleErrorMessage)) {\r\n                furthest = parserInput.i;\r\n                furthestPossibleErrorMessage = possibleErrorMessage;\r\n            }\r\n            var state = saveStack.pop();\r\n            current = state.current;\r\n            currentPos = parserInput.i = state.i;\r\n            j = state.j;\r\n        };\r\n        parserInput.forget = function () {\r\n            saveStack.pop();\r\n        };\r\n        parserInput.isWhitespace = function (offset) {\r\n            var pos = parserInput.i + (offset || 0);\r\n            var code = input.charCodeAt(pos);\r\n            return (code === CHARCODE_SPACE || code === CHARCODE_CR || code === CHARCODE_TAB || code === CHARCODE_LF);\r\n        };\r\n        // Specialization of $(tok)\r\n        parserInput.$re = function (tok) {\r\n            if (parserInput.i > currentPos) {\r\n                current = current.slice(parserInput.i - currentPos);\r\n                currentPos = parserInput.i;\r\n            }\r\n            var m = tok.exec(current);\r\n            if (!m) {\r\n                return null;\r\n            }\r\n            skipWhitespace(m[0].length);\r\n            if (typeof m === 'string') {\r\n                return m;\r\n            }\r\n            return m.length === 1 ? m[0] : m;\r\n        };\r\n        parserInput.$char = function (tok) {\r\n            if (input.charAt(parserInput.i) !== tok) {\r\n                return null;\r\n            }\r\n            skipWhitespace(1);\r\n            return tok;\r\n        };\r\n        parserInput.$peekChar = function (tok) {\r\n            if (input.charAt(parserInput.i) !== tok) {\r\n                return null;\r\n            }\r\n            return tok;\r\n        };\r\n        parserInput.$str = function (tok) {\r\n            var tokLength = tok.length;\r\n            // https://jsperf.com/string-startswith/21\r\n            for (var i_1 = 0; i_1 < tokLength; i_1++) {\r\n                if (input.charAt(parserInput.i + i_1) !== tok.charAt(i_1)) {\r\n                    return null;\r\n                }\r\n            }\r\n            skipWhitespace(tokLength);\r\n            return tok;\r\n        };\r\n        parserInput.$quoted = function (loc) {\r\n            var pos = loc || parserInput.i;\r\n            var startChar = input.charAt(pos);\r\n            if (startChar !== '\\'' && startChar !== '\"') {\r\n                return;\r\n            }\r\n            var length = input.length;\r\n            var currentPosition = pos;\r\n            for (var i_2 = 1; i_2 + currentPosition < length; i_2++) {\r\n                var nextChar = input.charAt(i_2 + currentPosition);\r\n                switch (nextChar) {\r\n                    case '\\\\':\r\n                        i_2++;\r\n                        continue;\r\n                    case '\\r':\r\n                    case '\\n':\r\n                        break;\r\n                    case startChar: {\r\n                        var str = input.substr(currentPosition, i_2 + 1);\r\n                        if (!loc && loc !== 0) {\r\n                            skipWhitespace(i_2 + 1);\r\n                            return str;\r\n                        }\r\n                        return [startChar, str];\r\n                    }\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        /**\r\n         * Permissive parsing. Ignores everything except matching {} [] () and quotes\r\n         * until matching token (outside of blocks)\r\n         */\r\n        parserInput.$parseUntil = function (tok) {\r\n            var quote = '';\r\n            var returnVal = null;\r\n            var inComment = false;\r\n            var blockDepth = 0;\r\n            var blockStack = [];\r\n            var parseGroups = [];\r\n            var length = input.length;\r\n            var startPos = parserInput.i;\r\n            var lastPos = parserInput.i;\r\n            var i = parserInput.i;\r\n            var loop = true;\r\n            var testChar;\r\n            if (typeof tok === 'string') {\r\n                testChar = function (char) { return char === tok; };\r\n            }\r\n            else {\r\n                testChar = function (char) { return tok.test(char); };\r\n            }\r\n            do {\r\n                var nextChar = input.charAt(i);\r\n                if (blockDepth === 0 && testChar(nextChar)) {\r\n                    returnVal = input.substr(lastPos, i - lastPos);\r\n                    if (returnVal) {\r\n                        parseGroups.push(returnVal);\r\n                    }\r\n                    else {\r\n                        parseGroups.push(' ');\r\n                    }\r\n                    returnVal = parseGroups;\r\n                    skipWhitespace(i - startPos);\r\n                    loop = false;\r\n                }\r\n                else {\r\n                    if (inComment) {\r\n                        if (nextChar === '*' &&\r\n                            input.charAt(i + 1) === '/') {\r\n                            i++;\r\n                            blockDepth--;\r\n                            inComment = false;\r\n                        }\r\n                        i++;\r\n                        continue;\r\n                    }\r\n                    switch (nextChar) {\r\n                        case '\\\\':\r\n                            i++;\r\n                            nextChar = input.charAt(i);\r\n                            parseGroups.push(input.substr(lastPos, i - lastPos + 1));\r\n                            lastPos = i + 1;\r\n                            break;\r\n                        case '/':\r\n                            if (input.charAt(i + 1) === '*') {\r\n                                i++;\r\n                                inComment = true;\r\n                                blockDepth++;\r\n                            }\r\n                            break;\r\n                        case '\\'':\r\n                        case '\"':\r\n                            quote = parserInput.$quoted(i);\r\n                            if (quote) {\r\n                                parseGroups.push(input.substr(lastPos, i - lastPos), quote);\r\n                                i += quote[1].length - 1;\r\n                                lastPos = i + 1;\r\n                            }\r\n                            else {\r\n                                skipWhitespace(i - startPos);\r\n                                returnVal = nextChar;\r\n                                loop = false;\r\n                            }\r\n                            break;\r\n                        case '{':\r\n                            blockStack.push('}');\r\n                            blockDepth++;\r\n                            break;\r\n                        case '(':\r\n                            blockStack.push(')');\r\n                            blockDepth++;\r\n                            break;\r\n                        case '[':\r\n                            blockStack.push(']');\r\n                            blockDepth++;\r\n                            break;\r\n                        case '}':\r\n                        case ')':\r\n                        case ']': {\r\n                            var expected = blockStack.pop();\r\n                            if (nextChar === expected) {\r\n                                blockDepth--;\r\n                            }\r\n                            else {\r\n                                // move the parser to the error and return expected\r\n                                skipWhitespace(i - startPos);\r\n                                returnVal = expected;\r\n                                loop = false;\r\n                            }\r\n                        }\r\n                    }\r\n                    i++;\r\n                    if (i > length) {\r\n                        loop = false;\r\n                    }\r\n                }\r\n            } while (loop);\r\n            return returnVal ? returnVal : null;\r\n        };\r\n        parserInput.autoCommentAbsorb = true;\r\n        parserInput.commentStore = [];\r\n        parserInput.finished = false;\r\n        // Same as $(), but don't change the state of the parser,\r\n        // just return the match.\r\n        parserInput.peek = function (tok) {\r\n            if (typeof tok === 'string') {\r\n                // https://jsperf.com/string-startswith/21\r\n                for (var i_3 = 0; i_3 < tok.length; i_3++) {\r\n                    if (input.charAt(parserInput.i + i_3) !== tok.charAt(i_3)) {\r\n                        return false;\r\n                    }\r\n                }\r\n                return true;\r\n            }\r\n            else {\r\n                return tok.test(current);\r\n            }\r\n        };\r\n        // Specialization of peek()\r\n        // TODO remove or change some currentChar calls to peekChar\r\n        parserInput.peekChar = function (tok) { return input.charAt(parserInput.i) === tok; };\r\n        parserInput.currentChar = function () { return input.charAt(parserInput.i); };\r\n        parserInput.prevChar = function () { return input.charAt(parserInput.i - 1); };\r\n        parserInput.getInput = function () { return input; };\r\n        parserInput.peekNotNumeric = function () {\r\n            var c = input.charCodeAt(parserInput.i);\r\n            // Is the first char of the dimension 0-9, '.', '+' or '-'\r\n            return (c > CHARCODE_9 || c < CHARCODE_PLUS) || c === CHARCODE_FORWARD_SLASH || c === CHARCODE_COMMA;\r\n        };\r\n        parserInput.start = function (str, chunkInput, failFunction) {\r\n            input = str;\r\n            parserInput.i = j = currentPos = furthest = 0;\r\n            // chunking apparently makes things quicker (but my tests indicate\r\n            // it might actually make things slower in node at least)\r\n            // and it is a non-perfect parse - it can't recognise\r\n            // unquoted urls, meaning it can't distinguish comments\r\n            // meaning comments with quotes or {}() in them get 'counted'\r\n            // and then lead to parse errors.\r\n            // In addition if the chunking chunks in the wrong place we might\r\n            // not be able to parse a parser statement in one go\r\n            // this is officially deprecated but can be switched on via an option\r\n            // in the case it causes too much performance issues.\r\n            if (chunkInput) {\r\n                chunks = chunker(str, failFunction);\r\n            }\r\n            else {\r\n                chunks = [str];\r\n            }\r\n            current = chunks[0];\r\n            skipWhitespace(0);\r\n        };\r\n        parserInput.end = function () {\r\n            var message;\r\n            var isFinished = parserInput.i >= input.length;\r\n            if (parserInput.i < furthest) {\r\n                message = furthestPossibleErrorMessage;\r\n                parserInput.i = furthest;\r\n            }\r\n            return {\r\n                isFinished: isFinished,\r\n                furthest: parserInput.i,\r\n                furthestPossibleErrorMessage: message,\r\n                furthestReachedEnd: parserInput.i >= input.length - 1,\r\n                furthestChar: input[parserInput.i]\r\n            };\r\n        };\r\n        return parserInput;\r\n    });\n\n    function makeRegistry(base) {\r\n        return {\r\n            _data: {},\r\n            add: function (name, func) {\r\n                // precautionary case conversion, as later querying of\r\n                // the registry by function-caller uses lower case as well.\r\n                name = name.toLowerCase();\r\n                // eslint-disable-next-line no-prototype-builtins\r\n                if (this._data.hasOwnProperty(name)) ;\r\n                this._data[name] = func;\r\n            },\r\n            addMultiple: function (functions) {\r\n                var _this = this;\r\n                Object.keys(functions).forEach(function (name) {\r\n                    _this.add(name, functions[name]);\r\n                });\r\n            },\r\n            get: function (name) {\r\n                return this._data[name] || (base && base.get(name));\r\n            },\r\n            getLocalFunctions: function () {\r\n                return this._data;\r\n            },\r\n            inherit: function () {\r\n                return makeRegistry(this);\r\n            },\r\n            create: function (base) {\r\n                return makeRegistry(base);\r\n            }\r\n        };\r\n    }\r\n    var functionRegistry = makeRegistry(null);\n\n    var MediaSyntaxOptions = {\r\n        queryInParens: true\r\n    };\r\n    var ContainerSyntaxOptions = {\r\n        queryInParens: true\r\n    };\n\n    //\r\n    // less.js - parser\r\n    //\r\n    //    A relatively straight-forward predictive parser.\r\n    //    There is no tokenization/lexing stage, the input is parsed\r\n    //    in one sweep.\r\n    //\r\n    //    To make the parser fast enough to run in the browser, several\r\n    //    optimization had to be made:\r\n    //\r\n    //    - Matching and slicing on a huge input is often cause of slowdowns.\r\n    //      The solution is to chunkify the input into smaller strings.\r\n    //      The chunks are stored in the `chunks` var,\r\n    //      `j` holds the current chunk index, and `currentPos` holds\r\n    //      the index of the current chunk in relation to `input`.\r\n    //      This gives us an almost 4x speed-up.\r\n    //\r\n    //    - In many cases, we don't need to match individual tokens;\r\n    //      for example, if a value doesn't hold any variables, operations\r\n    //      or dynamic references, the parser can effectively 'skip' it,\r\n    //      treating it as a literal.\r\n    //      An example would be '1px solid #000' - which evaluates to itself,\r\n    //      we don't need to know what the individual components are.\r\n    //      The drawback, of course is that you don't get the benefits of\r\n    //      syntax-checking on the CSS. This gives us a 50% speed-up in the parser,\r\n    //      and a smaller speed-up in the code-gen.\r\n    //\r\n    //\r\n    //    Token matching is done with the `$` function, which either takes\r\n    //    a terminal string or regexp, or a non-terminal function to call.\r\n    //    It also takes care of moving all the indices forwards.\r\n    //\r\n    var Parser = function Parser(context, imports, fileInfo, currentIndex) {\r\n        currentIndex = currentIndex || 0;\r\n        var parsers;\r\n        var parserInput = getParserInput();\r\n        function error(msg, type) {\r\n            throw new LessError({\r\n                index: parserInput.i,\r\n                filename: fileInfo.filename,\r\n                type: type || 'Syntax',\r\n                message: msg\r\n            }, imports);\r\n        }\r\n        function expect(arg, msg) {\r\n            // some older browsers return typeof 'function' for RegExp\r\n            var result = (arg instanceof Function) ? arg.call(parsers) : parserInput.$re(arg);\r\n            if (result) {\r\n                return result;\r\n            }\r\n            error(msg || (typeof arg === 'string'\r\n                ? \"expected '\".concat(arg, \"' got '\").concat(parserInput.currentChar(), \"'\")\r\n                : 'unexpected token'));\r\n        }\r\n        // Specialization of expect()\r\n        function expectChar(arg, msg) {\r\n            if (parserInput.$char(arg)) {\r\n                return arg;\r\n            }\r\n            error(msg || \"expected '\".concat(arg, \"' got '\").concat(parserInput.currentChar(), \"'\"));\r\n        }\r\n        function getDebugInfo(index) {\r\n            var filename = fileInfo.filename;\r\n            return {\r\n                lineNumber: getLocation(index, parserInput.getInput()).line + 1,\r\n                fileName: filename\r\n            };\r\n        }\r\n        /**\r\n         *  Used after initial parsing to create nodes on the fly\r\n         *\r\n         *  @param {String} str          - string to parse\r\n         *  @param {Array}  parseList    - array of parsers to run input through e.g. [\"value\", \"important\"]\r\n         *  @param {Number} currentIndex - start number to begin indexing\r\n         *  @param {Object} fileInfo     - fileInfo to attach to created nodes\r\n         */\r\n        function parseNode(str, parseList, callback) {\r\n            var result;\r\n            var returnNodes = [];\r\n            var parser = parserInput;\r\n            try {\r\n                parser.start(str, false, function fail(msg, index) {\r\n                    callback({\r\n                        message: msg,\r\n                        index: index + currentIndex\r\n                    });\r\n                });\r\n                for (var x = 0, p = void 0; (p = parseList[x]); x++) {\r\n                    result = parsers[p]();\r\n                    returnNodes.push(result || null);\r\n                }\r\n                var endInfo = parser.end();\r\n                if (endInfo.isFinished) {\r\n                    callback(null, returnNodes);\r\n                }\r\n                else {\r\n                    callback(true, null);\r\n                }\r\n            }\r\n            catch (e) {\r\n                throw new LessError({\r\n                    index: e.index + currentIndex,\r\n                    message: e.message\r\n                }, imports, fileInfo.filename);\r\n            }\r\n        }\r\n        //\r\n        // The Parser\r\n        //\r\n        return {\r\n            parserInput: parserInput,\r\n            imports: imports,\r\n            fileInfo: fileInfo,\r\n            parseNode: parseNode,\r\n            //\r\n            // Parse an input string into an abstract syntax tree,\r\n            // @param str A string containing 'less' markup\r\n            // @param callback call `callback` when done.\r\n            // @param [additionalData] An optional map which can contains vars - a map (key, value) of variables to apply\r\n            //\r\n            parse: function (str, callback, additionalData) {\r\n                var root;\r\n                var err = null;\r\n                var globalVars;\r\n                var modifyVars;\r\n                var ignored;\r\n                var preText = '';\r\n                // Optionally disable @plugin parsing\r\n                if (additionalData && additionalData.disablePluginRule) {\r\n                    parsers.plugin = function () {\r\n                        var dir = parserInput.$re(/^@plugin?\\s+/);\r\n                        if (dir) {\r\n                            error('@plugin statements are not allowed when disablePluginRule is set to true');\r\n                        }\r\n                    };\r\n                }\r\n                globalVars = (additionalData && additionalData.globalVars) ? \"\".concat(Parser.serializeVars(additionalData.globalVars), \"\\n\") : '';\r\n                modifyVars = (additionalData && additionalData.modifyVars) ? \"\\n\".concat(Parser.serializeVars(additionalData.modifyVars)) : '';\r\n                if (context.pluginManager) {\r\n                    var preProcessors = context.pluginManager.getPreProcessors();\r\n                    for (var i_1 = 0; i_1 < preProcessors.length; i_1++) {\r\n                        str = preProcessors[i_1].process(str, { context: context, imports: imports, fileInfo: fileInfo });\r\n                    }\r\n                }\r\n                if (globalVars || (additionalData && additionalData.banner)) {\r\n                    preText = ((additionalData && additionalData.banner) ? additionalData.banner : '') + globalVars;\r\n                    ignored = imports.contentsIgnoredChars;\r\n                    ignored[fileInfo.filename] = ignored[fileInfo.filename] || 0;\r\n                    ignored[fileInfo.filename] += preText.length;\r\n                }\r\n                str = str.replace(/\\r\\n?/g, '\\n');\r\n                // Remove potential UTF Byte Order Mark\r\n                str = preText + str.replace(/^\\uFEFF/, '') + modifyVars;\r\n                imports.contents[fileInfo.filename] = str;\r\n                // Start with the primary rule.\r\n                // The whole syntax tree is held under a Ruleset node,\r\n                // with the `root` property set to true, so no `{}` are\r\n                // output. The callback is called when the input is parsed.\r\n                try {\r\n                    parserInput.start(str, context.chunkInput, function fail(msg, index) {\r\n                        throw new LessError({\r\n                            index: index,\r\n                            type: 'Parse',\r\n                            message: msg,\r\n                            filename: fileInfo.filename\r\n                        }, imports);\r\n                    });\r\n                    tree.Node.prototype.parse = this;\r\n                    root = new tree.Ruleset(null, this.parsers.primary());\r\n                    tree.Node.prototype.rootNode = root;\r\n                    root.root = true;\r\n                    root.firstRoot = true;\r\n                    root.functionRegistry = functionRegistry.inherit();\r\n                }\r\n                catch (e) {\r\n                    return callback(new LessError(e, imports, fileInfo.filename));\r\n                }\r\n                // If `i` is smaller than the `input.length - 1`,\r\n                // it means the parser wasn't able to parse the whole\r\n                // string, so we've got a parsing error.\r\n                //\r\n                // We try to extract a \\n delimited string,\r\n                // showing the line where the parse error occurred.\r\n                // We split it up into two parts (the part which parsed,\r\n                // and the part which didn't), so we can color them differently.\r\n                var endInfo = parserInput.end();\r\n                if (!endInfo.isFinished) {\r\n                    var message = endInfo.furthestPossibleErrorMessage;\r\n                    if (!message) {\r\n                        message = 'Unrecognised input';\r\n                        if (endInfo.furthestChar === '}') {\r\n                            message += '. Possibly missing opening \\'{\\'';\r\n                        }\r\n                        else if (endInfo.furthestChar === ')') {\r\n                            message += '. Possibly missing opening \\'(\\'';\r\n                        }\r\n                        else if (endInfo.furthestReachedEnd) {\r\n                            message += '. Possibly missing something';\r\n                        }\r\n                    }\r\n                    err = new LessError({\r\n                        type: 'Parse',\r\n                        message: message,\r\n                        index: endInfo.furthest,\r\n                        filename: fileInfo.filename\r\n                    }, imports);\r\n                }\r\n                var finish = function (e) {\r\n                    e = err || e || imports.error;\r\n                    if (e) {\r\n                        if (!(e instanceof LessError)) {\r\n                            e = new LessError(e, imports, fileInfo.filename);\r\n                        }\r\n                        return callback(e);\r\n                    }\r\n                    else {\r\n                        return callback(null, root);\r\n                    }\r\n                };\r\n                if (context.processImports !== false) {\r\n                    new visitors.ImportVisitor(imports, finish)\r\n                        .run(root);\r\n                }\r\n                else {\r\n                    return finish();\r\n                }\r\n            },\r\n            //\r\n            // Here in, the parsing rules/functions\r\n            //\r\n            // The basic structure of the syntax tree generated is as follows:\r\n            //\r\n            //   Ruleset ->  Declaration -> Value -> Expression -> Entity\r\n            //\r\n            // Here's some Less code:\r\n            //\r\n            //    .class {\r\n            //      color: #fff;\r\n            //      border: 1px solid #000;\r\n            //      width: @w + 4px;\r\n            //      > .child {...}\r\n            //    }\r\n            //\r\n            // And here's what the parse tree might look like:\r\n            //\r\n            //     Ruleset (Selector '.class', [\r\n            //         Declaration (\"color\",  Value ([Expression [Color #fff]]))\r\n            //         Declaration (\"border\", Value ([Expression [Dimension 1px][Keyword \"solid\"][Color #000]]))\r\n            //         Declaration (\"width\",  Value ([Expression [Operation \" + \" [Variable \"@w\"][Dimension 4px]]]))\r\n            //         Ruleset (Selector [Element '>', '.child'], [...])\r\n            //     ])\r\n            //\r\n            //  In general, most rules will try to parse a token with the `$re()` function, and if the return\r\n            //  value is truly, will return a new node, of the relevant type. Sometimes, we need to check\r\n            //  first, before parsing, that's when we use `peek()`.\r\n            //\r\n            parsers: parsers = {\r\n                //\r\n                // The `primary` rule is the *entry* and *exit* point of the parser.\r\n                // The rules here can appear at any level of the parse tree.\r\n                //\r\n                // The recursive nature of the grammar is an interplay between the `block`\r\n                // rule, which represents `{ ... }`, the `ruleset` rule, and this `primary` rule,\r\n                // as represented by this simplified grammar:\r\n                //\r\n                //     primary  →  (ruleset | declaration)+\r\n                //     ruleset  →  selector+ block\r\n                //     block    →  '{' primary '}'\r\n                //\r\n                // Only at one point is the primary rule not called from the\r\n                // block rule: at the root level.\r\n                //\r\n                primary: function () {\r\n                    var mixin = this.mixin;\r\n                    var root = [];\r\n                    var node;\r\n                    while (true) {\r\n                        while (true) {\r\n                            node = this.comment();\r\n                            if (!node) {\r\n                                break;\r\n                            }\r\n                            root.push(node);\r\n                        }\r\n                        // always process comments before deciding if finished\r\n                        if (parserInput.finished) {\r\n                            break;\r\n                        }\r\n                        if (parserInput.peek('}')) {\r\n                            break;\r\n                        }\r\n                        node = this.extendRule();\r\n                        if (node) {\r\n                            root = root.concat(node);\r\n                            continue;\r\n                        }\r\n                        node = mixin.definition() || this.declaration() || mixin.call(false, false) ||\r\n                            this.ruleset() || this.variableCall() || this.entities.call() || this.atrule();\r\n                        if (node) {\r\n                            root.push(node);\r\n                        }\r\n                        else {\r\n                            var foundSemiColon = false;\r\n                            while (parserInput.$char(';')) {\r\n                                foundSemiColon = true;\r\n                            }\r\n                            if (!foundSemiColon) {\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    return root;\r\n                },\r\n                // comments are collected by the main parsing mechanism and then assigned to nodes\r\n                // where the current structure allows it\r\n                comment: function () {\r\n                    if (parserInput.commentStore.length) {\r\n                        var comment = parserInput.commentStore.shift();\r\n                        return new (tree.Comment)(comment.text, comment.isLineComment, comment.index + currentIndex, fileInfo);\r\n                    }\r\n                },\r\n                //\r\n                // Entities are tokens which can be found inside an Expression\r\n                //\r\n                entities: {\r\n                    mixinLookup: function () {\r\n                        return parsers.mixin.call(true, true);\r\n                    },\r\n                    //\r\n                    // A string, which supports escaping \" and '\r\n                    //\r\n                    //     \"milky way\" 'he\\'s the one!'\r\n                    //\r\n                    quoted: function (forceEscaped) {\r\n                        var str;\r\n                        var index = parserInput.i;\r\n                        var isEscaped = false;\r\n                        parserInput.save();\r\n                        if (parserInput.$char('~')) {\r\n                            isEscaped = true;\r\n                        }\r\n                        else if (forceEscaped) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                        str = parserInput.$quoted();\r\n                        if (!str) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                        parserInput.forget();\r\n                        return new (tree.Quoted)(str.charAt(0), str.substr(1, str.length - 2), isEscaped, index + currentIndex, fileInfo);\r\n                    },\r\n                    //\r\n                    // A catch-all word, such as:\r\n                    //\r\n                    //     black border-collapse\r\n                    //\r\n                    keyword: function () {\r\n                        var k = parserInput.$char('%') || parserInput.$re(/^\\[?(?:[\\w-]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+\\]?/);\r\n                        if (k) {\r\n                            return tree.Color.fromKeyword(k) || new (tree.Keyword)(k);\r\n                        }\r\n                    },\r\n                    //\r\n                    // A function call\r\n                    //\r\n                    //     rgb(255, 0, 255)\r\n                    //\r\n                    // The arguments are parsed with the `entities.arguments` parser.\r\n                    //\r\n                    call: function () {\r\n                        var name;\r\n                        var args;\r\n                        var func;\r\n                        var index = parserInput.i;\r\n                        // http://jsperf.com/case-insensitive-regex-vs-strtolower-then-regex/18\r\n                        if (parserInput.peek(/^url\\(/i)) {\r\n                            return;\r\n                        }\r\n                        parserInput.save();\r\n                        name = parserInput.$re(/^([\\w-]+|%|~|progid:[\\w.]+)\\(/);\r\n                        if (!name) {\r\n                            parserInput.forget();\r\n                            return;\r\n                        }\r\n                        name = name[1];\r\n                        func = this.customFuncCall(name);\r\n                        if (func) {\r\n                            args = func.parse();\r\n                            if (args && func.stop) {\r\n                                parserInput.forget();\r\n                                return args;\r\n                            }\r\n                        }\r\n                        args = this.arguments(args);\r\n                        if (!parserInput.$char(')')) {\r\n                            parserInput.restore('Could not parse call arguments or missing \\')\\'');\r\n                            return;\r\n                        }\r\n                        parserInput.forget();\r\n                        return new (tree.Call)(name, args, index + currentIndex, fileInfo);\r\n                    },\r\n                    declarationCall: function () {\r\n                        var validCall;\r\n                        var args;\r\n                        var index = parserInput.i;\r\n                        parserInput.save();\r\n                        validCall = parserInput.$re(/^[\\w]+\\(/);\r\n                        if (!validCall) {\r\n                            parserInput.forget();\r\n                            return;\r\n                        }\r\n                        validCall = validCall.substring(0, validCall.length - 1);\r\n                        var rule = this.ruleProperty();\r\n                        var value;\r\n                        if (rule) {\r\n                            value = this.value();\r\n                        }\r\n                        if (rule && value) {\r\n                            args = [new (tree.Declaration)(rule, value, null, null, parserInput.i + currentIndex, fileInfo, true)];\r\n                        }\r\n                        if (!parserInput.$char(')')) {\r\n                            parserInput.restore('Could not parse call arguments or missing \\')\\'');\r\n                            return;\r\n                        }\r\n                        parserInput.forget();\r\n                        return new (tree.Call)(validCall, args, index + currentIndex, fileInfo);\r\n                    },\r\n                    //\r\n                    // Parsing rules for functions with non-standard args, e.g.:\r\n                    //\r\n                    //     boolean(not(2 > 1))\r\n                    //\r\n                    //     This is a quick prototype, to be modified/improved when\r\n                    //     more custom-parsed funcs come (e.g. `selector(...)`)\r\n                    //\r\n                    customFuncCall: function (name) {\r\n                        /* Ideally the table is to be moved out of here for faster perf.,\r\n                           but it's quite tricky since it relies on all these `parsers`\r\n                           and `expect` available only here */\r\n                        return {\r\n                            alpha: f(parsers.ieAlpha, true),\r\n                            boolean: f(condition),\r\n                            'if': f(condition)\r\n                        }[name.toLowerCase()];\r\n                        function f(parse, stop) {\r\n                            return {\r\n                                parse: parse,\r\n                                stop: stop // when true - stop after parse() and return its result,\r\n                                // otherwise continue for plain args\r\n                            };\r\n                        }\r\n                        function condition() {\r\n                            return [expect(parsers.condition, 'expected condition')];\r\n                        }\r\n                    },\r\n                    arguments: function (prevArgs) {\r\n                        var argsComma = prevArgs || [];\r\n                        var argsSemiColon = [];\r\n                        var isSemiColonSeparated;\r\n                        var value;\r\n                        parserInput.save();\r\n                        while (true) {\r\n                            if (prevArgs) {\r\n                                prevArgs = false;\r\n                            }\r\n                            else {\r\n                                value = parsers.detachedRuleset() || this.assignment() || parsers.expression();\r\n                                if (!value) {\r\n                                    break;\r\n                                }\r\n                                if (value.value && value.value.length == 1) {\r\n                                    value = value.value[0];\r\n                                }\r\n                                argsComma.push(value);\r\n                            }\r\n                            if (parserInput.$char(',')) {\r\n                                continue;\r\n                            }\r\n                            if (parserInput.$char(';') || isSemiColonSeparated) {\r\n                                isSemiColonSeparated = true;\r\n                                value = (argsComma.length < 1) ? argsComma[0]\r\n                                    : new tree.Value(argsComma);\r\n                                argsSemiColon.push(value);\r\n                                argsComma = [];\r\n                            }\r\n                        }\r\n                        parserInput.forget();\r\n                        return isSemiColonSeparated ? argsSemiColon : argsComma;\r\n                    },\r\n                    literal: function () {\r\n                        return this.dimension() ||\r\n                            this.color() ||\r\n                            this.quoted() ||\r\n                            this.unicodeDescriptor();\r\n                    },\r\n                    // Assignments are argument entities for calls.\r\n                    // They are present in ie filter properties as shown below.\r\n                    //\r\n                    //     filter: progid:DXImageTransform.Microsoft.Alpha( *opacity=50* )\r\n                    //\r\n                    assignment: function () {\r\n                        var key;\r\n                        var value;\r\n                        parserInput.save();\r\n                        key = parserInput.$re(/^\\w+(?=\\s?=)/i);\r\n                        if (!key) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                        if (!parserInput.$char('=')) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                        value = parsers.entity();\r\n                        if (value) {\r\n                            parserInput.forget();\r\n                            return new (tree.Assignment)(key, value);\r\n                        }\r\n                        else {\r\n                            parserInput.restore();\r\n                        }\r\n                    },\r\n                    //\r\n                    // Parse url() tokens\r\n                    //\r\n                    // We use a specific rule for urls, because they don't really behave like\r\n                    // standard function calls. The difference is that the argument doesn't have\r\n                    // to be enclosed within a string, so it can't be parsed as an Expression.\r\n                    //\r\n                    url: function () {\r\n                        var value;\r\n                        var index = parserInput.i;\r\n                        parserInput.autoCommentAbsorb = false;\r\n                        if (!parserInput.$str('url(')) {\r\n                            parserInput.autoCommentAbsorb = true;\r\n                            return;\r\n                        }\r\n                        value = this.quoted() || this.variable() || this.property() ||\r\n                            parserInput.$re(/^(?:(?:\\\\[()'\"])|[^()'\"])+/) || '';\r\n                        parserInput.autoCommentAbsorb = true;\r\n                        expectChar(')');\r\n                        return new (tree.URL)((value.value !== undefined ||\r\n                            value instanceof tree.Variable ||\r\n                            value instanceof tree.Property) ?\r\n                            value : new (tree.Anonymous)(value, index), index + currentIndex, fileInfo);\r\n                    },\r\n                    //\r\n                    // A Variable entity, such as `@fink`, in\r\n                    //\r\n                    //     width: @fink + 2px\r\n                    //\r\n                    // We use a different parser for variable definitions,\r\n                    // see `parsers.variable`.\r\n                    //\r\n                    variable: function () {\r\n                        var ch;\r\n                        var name;\r\n                        var index = parserInput.i;\r\n                        parserInput.save();\r\n                        if (parserInput.currentChar() === '@' && (name = parserInput.$re(/^@@?[\\w-]+/))) {\r\n                            ch = parserInput.currentChar();\r\n                            if (ch === '(' || ch === '[' && !parserInput.prevChar().match(/^\\s/)) {\r\n                                // this may be a VariableCall lookup\r\n                                var result = parsers.variableCall(name);\r\n                                if (result) {\r\n                                    parserInput.forget();\r\n                                    return result;\r\n                                }\r\n                            }\r\n                            parserInput.forget();\r\n                            return new (tree.Variable)(name, index + currentIndex, fileInfo);\r\n                        }\r\n                        parserInput.restore();\r\n                    },\r\n                    // A variable entity using the protective {} e.g. @{var}\r\n                    variableCurly: function () {\r\n                        var curly;\r\n                        var index = parserInput.i;\r\n                        if (parserInput.currentChar() === '@' && (curly = parserInput.$re(/^@\\{([\\w-]+)\\}/))) {\r\n                            return new (tree.Variable)(\"@\".concat(curly[1]), index + currentIndex, fileInfo);\r\n                        }\r\n                    },\r\n                    //\r\n                    // A Property accessor, such as `$color`, in\r\n                    //\r\n                    //     background-color: $color\r\n                    //\r\n                    property: function () {\r\n                        var name;\r\n                        var index = parserInput.i;\r\n                        if (parserInput.currentChar() === '$' && (name = parserInput.$re(/^\\$[\\w-]+/))) {\r\n                            return new (tree.Property)(name, index + currentIndex, fileInfo);\r\n                        }\r\n                    },\r\n                    // A property entity useing the protective {} e.g. ${prop}\r\n                    propertyCurly: function () {\r\n                        var curly;\r\n                        var index = parserInput.i;\r\n                        if (parserInput.currentChar() === '$' && (curly = parserInput.$re(/^\\$\\{([\\w-]+)\\}/))) {\r\n                            return new (tree.Property)(\"$\".concat(curly[1]), index + currentIndex, fileInfo);\r\n                        }\r\n                    },\r\n                    //\r\n                    // A Hexadecimal color\r\n                    //\r\n                    //     #4F3C2F\r\n                    //\r\n                    // `rgb` and `hsl` colors are parsed through the `entities.call` parser.\r\n                    //\r\n                    color: function () {\r\n                        var rgb;\r\n                        parserInput.save();\r\n                        if (parserInput.currentChar() === '#' && (rgb = parserInput.$re(/^#([A-Fa-f0-9]{8}|[A-Fa-f0-9]{6}|[A-Fa-f0-9]{3,4})([\\w.#[])?/))) {\r\n                            if (!rgb[2]) {\r\n                                parserInput.forget();\r\n                                return new (tree.Color)(rgb[1], undefined, rgb[0]);\r\n                            }\r\n                        }\r\n                        parserInput.restore();\r\n                    },\r\n                    colorKeyword: function () {\r\n                        parserInput.save();\r\n                        var autoCommentAbsorb = parserInput.autoCommentAbsorb;\r\n                        parserInput.autoCommentAbsorb = false;\r\n                        var k = parserInput.$re(/^[_A-Za-z-][_A-Za-z0-9-]+/);\r\n                        parserInput.autoCommentAbsorb = autoCommentAbsorb;\r\n                        if (!k) {\r\n                            parserInput.forget();\r\n                            return;\r\n                        }\r\n                        parserInput.restore();\r\n                        var color = tree.Color.fromKeyword(k);\r\n                        if (color) {\r\n                            parserInput.$str(k);\r\n                            return color;\r\n                        }\r\n                    },\r\n                    //\r\n                    // A Dimension, that is, a number and a unit\r\n                    //\r\n                    //     0.5em 95%\r\n                    //\r\n                    dimension: function () {\r\n                        if (parserInput.peekNotNumeric()) {\r\n                            return;\r\n                        }\r\n                        var value = parserInput.$re(/^([+-]?\\d*\\.?\\d+)(%|[a-z_]+)?/i);\r\n                        if (value) {\r\n                            return new (tree.Dimension)(value[1], value[2]);\r\n                        }\r\n                    },\r\n                    //\r\n                    // A unicode descriptor, as is used in unicode-range\r\n                    //\r\n                    // U+0??  or U+00A1-00A9\r\n                    //\r\n                    unicodeDescriptor: function () {\r\n                        var ud;\r\n                        ud = parserInput.$re(/^U\\+[0-9a-fA-F?]+(-[0-9a-fA-F?]+)?/);\r\n                        if (ud) {\r\n                            return new (tree.UnicodeDescriptor)(ud[0]);\r\n                        }\r\n                    },\r\n                    //\r\n                    // JavaScript code to be evaluated\r\n                    //\r\n                    //     `window.location.href`\r\n                    //\r\n                    javascript: function () {\r\n                        var js;\r\n                        var index = parserInput.i;\r\n                        parserInput.save();\r\n                        var escape = parserInput.$char('~');\r\n                        var jsQuote = parserInput.$char('`');\r\n                        if (!jsQuote) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                        js = parserInput.$re(/^[^`]*`/);\r\n                        if (js) {\r\n                            parserInput.forget();\r\n                            return new (tree.JavaScript)(js.substr(0, js.length - 1), Boolean(escape), index + currentIndex, fileInfo);\r\n                        }\r\n                        parserInput.restore('invalid javascript definition');\r\n                    }\r\n                },\r\n                //\r\n                // The variable part of a variable definition. Used in the `rule` parser\r\n                //\r\n                //     @fink:\r\n                //\r\n                variable: function () {\r\n                    var name;\r\n                    if (parserInput.currentChar() === '@' && (name = parserInput.$re(/^(@[\\w-]+)\\s*:/))) {\r\n                        return name[1];\r\n                    }\r\n                },\r\n                //\r\n                // Call a variable value to retrieve a detached ruleset\r\n                // or a value from a detached ruleset's rules.\r\n                //\r\n                //     @fink();\r\n                //     @fink;\r\n                //     color: @fink[@color];\r\n                //\r\n                variableCall: function (parsedName) {\r\n                    var lookups;\r\n                    var i = parserInput.i;\r\n                    var inValue = !!parsedName;\r\n                    var name = parsedName;\r\n                    parserInput.save();\r\n                    if (name || (parserInput.currentChar() === '@'\r\n                        && (name = parserInput.$re(/^(@[\\w-]+)(\\(\\s*\\))?/)))) {\r\n                        lookups = this.mixin.ruleLookups();\r\n                        if (!lookups && ((inValue && parserInput.$str('()') !== '()') || (name[2] !== '()'))) {\r\n                            parserInput.restore('Missing \\'[...]\\' lookup in variable call');\r\n                            return;\r\n                        }\r\n                        if (!inValue) {\r\n                            name = name[1];\r\n                        }\r\n                        var call = new tree.VariableCall(name, i, fileInfo);\r\n                        if (!inValue && parsers.end()) {\r\n                            parserInput.forget();\r\n                            return call;\r\n                        }\r\n                        else {\r\n                            parserInput.forget();\r\n                            return new tree.NamespaceValue(call, lookups, i, fileInfo);\r\n                        }\r\n                    }\r\n                    parserInput.restore();\r\n                },\r\n                //\r\n                // extend syntax - used to extend selectors\r\n                //\r\n                extend: function (isRule) {\r\n                    var elements;\r\n                    var e;\r\n                    var index = parserInput.i;\r\n                    var option;\r\n                    var extendList;\r\n                    var extend;\r\n                    if (!parserInput.$str(isRule ? '&:extend(' : ':extend(')) {\r\n                        return;\r\n                    }\r\n                    do {\r\n                        option = null;\r\n                        elements = null;\r\n                        while (!(option = parserInput.$re(/^(all)(?=\\s*(\\)|,))/))) {\r\n                            e = this.element();\r\n                            if (!e) {\r\n                                break;\r\n                            }\r\n                            if (elements) {\r\n                                elements.push(e);\r\n                            }\r\n                            else {\r\n                                elements = [e];\r\n                            }\r\n                        }\r\n                        option = option && option[1];\r\n                        if (!elements) {\r\n                            error('Missing target selector for :extend().');\r\n                        }\r\n                        extend = new (tree.Extend)(new (tree.Selector)(elements), option, index + currentIndex, fileInfo);\r\n                        if (extendList) {\r\n                            extendList.push(extend);\r\n                        }\r\n                        else {\r\n                            extendList = [extend];\r\n                        }\r\n                    } while (parserInput.$char(','));\r\n                    expect(/^\\)/);\r\n                    if (isRule) {\r\n                        expect(/^;/);\r\n                    }\r\n                    return extendList;\r\n                },\r\n                //\r\n                // extendRule - used in a rule to extend all the parent selectors\r\n                //\r\n                extendRule: function () {\r\n                    return this.extend(true);\r\n                },\r\n                //\r\n                // Mixins\r\n                //\r\n                mixin: {\r\n                    //\r\n                    // A Mixin call, with an optional argument list\r\n                    //\r\n                    //     #mixins > .square(#fff);\r\n                    //     #mixins.square(#fff);\r\n                    //     .rounded(4px, black);\r\n                    //     .button;\r\n                    //\r\n                    // We can lookup / return a value using the lookup syntax:\r\n                    //\r\n                    //     color: #mixin.square(#fff)[@color];\r\n                    //\r\n                    // The `while` loop is there because mixins can be\r\n                    // namespaced, but we only support the child and descendant\r\n                    // selector for now.\r\n                    //\r\n                    call: function (inValue, getLookup) {\r\n                        var s = parserInput.currentChar();\r\n                        var important = false;\r\n                        var lookups;\r\n                        var index = parserInput.i;\r\n                        var elements;\r\n                        var args;\r\n                        var hasParens;\r\n                        if (s !== '.' && s !== '#') {\r\n                            return;\r\n                        }\r\n                        parserInput.save(); // stop us absorbing part of an invalid selector\r\n                        elements = this.elements();\r\n                        if (elements) {\r\n                            if (parserInput.$char('(')) {\r\n                                args = this.args(true).args;\r\n                                expectChar(')');\r\n                                hasParens = true;\r\n                            }\r\n                            if (getLookup !== false) {\r\n                                lookups = this.ruleLookups();\r\n                            }\r\n                            if (getLookup === true && !lookups) {\r\n                                parserInput.restore();\r\n                                return;\r\n                            }\r\n                            if (inValue && !lookups && !hasParens) {\r\n                                // This isn't a valid in-value mixin call\r\n                                parserInput.restore();\r\n                                return;\r\n                            }\r\n                            if (!inValue && parsers.important()) {\r\n                                important = true;\r\n                            }\r\n                            if (inValue || parsers.end()) {\r\n                                parserInput.forget();\r\n                                var mixin = new (tree.mixin.Call)(elements, args, index + currentIndex, fileInfo, !lookups && important);\r\n                                if (lookups) {\r\n                                    return new tree.NamespaceValue(mixin, lookups);\r\n                                }\r\n                                else {\r\n                                    return mixin;\r\n                                }\r\n                            }\r\n                        }\r\n                        parserInput.restore();\r\n                    },\r\n                    /**\r\n                     * Matching elements for mixins\r\n                     * (Start with . or # and can have > )\r\n                     */\r\n                    elements: function () {\r\n                        var elements;\r\n                        var e;\r\n                        var c;\r\n                        var elem;\r\n                        var elemIndex;\r\n                        var re = /^[#.](?:[\\w-]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+/;\r\n                        while (true) {\r\n                            elemIndex = parserInput.i;\r\n                            e = parserInput.$re(re);\r\n                            if (!e) {\r\n                                break;\r\n                            }\r\n                            elem = new (tree.Element)(c, e, false, elemIndex + currentIndex, fileInfo);\r\n                            if (elements) {\r\n                                elements.push(elem);\r\n                            }\r\n                            else {\r\n                                elements = [elem];\r\n                            }\r\n                            c = parserInput.$char('>');\r\n                        }\r\n                        return elements;\r\n                    },\r\n                    args: function (isCall) {\r\n                        var entities = parsers.entities;\r\n                        var returner = { args: null, variadic: false };\r\n                        var expressions = [];\r\n                        var argsSemiColon = [];\r\n                        var argsComma = [];\r\n                        var isSemiColonSeparated;\r\n                        var expressionContainsNamed;\r\n                        var name;\r\n                        var nameLoop;\r\n                        var value;\r\n                        var arg;\r\n                        var expand;\r\n                        var hasSep = true;\r\n                        parserInput.save();\r\n                        while (true) {\r\n                            if (isCall) {\r\n                                arg = parsers.detachedRuleset() || parsers.expression();\r\n                            }\r\n                            else {\r\n                                parserInput.commentStore.length = 0;\r\n                                if (parserInput.$str('...')) {\r\n                                    returner.variadic = true;\r\n                                    if (parserInput.$char(';') && !isSemiColonSeparated) {\r\n                                        isSemiColonSeparated = true;\r\n                                    }\r\n                                    (isSemiColonSeparated ? argsSemiColon : argsComma)\r\n                                        .push({ variadic: true });\r\n                                    break;\r\n                                }\r\n                                arg = entities.variable() || entities.property() || entities.literal() || entities.keyword() || this.call(true);\r\n                            }\r\n                            if (!arg || !hasSep) {\r\n                                break;\r\n                            }\r\n                            nameLoop = null;\r\n                            if (arg.throwAwayComments) {\r\n                                arg.throwAwayComments();\r\n                            }\r\n                            value = arg;\r\n                            var val = null;\r\n                            if (isCall) {\r\n                                // Variable\r\n                                if (arg.value && arg.value.length == 1) {\r\n                                    val = arg.value[0];\r\n                                }\r\n                            }\r\n                            else {\r\n                                val = arg;\r\n                            }\r\n                            if (val && (val instanceof tree.Variable || val instanceof tree.Property)) {\r\n                                if (parserInput.$char(':')) {\r\n                                    if (expressions.length > 0) {\r\n                                        if (isSemiColonSeparated) {\r\n                                            error('Cannot mix ; and , as delimiter types');\r\n                                        }\r\n                                        expressionContainsNamed = true;\r\n                                    }\r\n                                    value = parsers.detachedRuleset() || parsers.expression();\r\n                                    if (!value) {\r\n                                        if (isCall) {\r\n                                            error('could not understand value for named argument');\r\n                                        }\r\n                                        else {\r\n                                            parserInput.restore();\r\n                                            returner.args = [];\r\n                                            return returner;\r\n                                        }\r\n                                    }\r\n                                    nameLoop = (name = val.name);\r\n                                }\r\n                                else if (parserInput.$str('...')) {\r\n                                    if (!isCall) {\r\n                                        returner.variadic = true;\r\n                                        if (parserInput.$char(';') && !isSemiColonSeparated) {\r\n                                            isSemiColonSeparated = true;\r\n                                        }\r\n                                        (isSemiColonSeparated ? argsSemiColon : argsComma)\r\n                                            .push({ name: arg.name, variadic: true });\r\n                                        break;\r\n                                    }\r\n                                    else {\r\n                                        expand = true;\r\n                                    }\r\n                                }\r\n                                else if (!isCall) {\r\n                                    name = nameLoop = val.name;\r\n                                    value = null;\r\n                                }\r\n                            }\r\n                            if (value) {\r\n                                expressions.push(value);\r\n                            }\r\n                            argsComma.push({ name: nameLoop, value: value, expand: expand });\r\n                            if (parserInput.$char(',')) {\r\n                                hasSep = true;\r\n                                continue;\r\n                            }\r\n                            hasSep = parserInput.$char(';') === ';';\r\n                            if (hasSep || isSemiColonSeparated) {\r\n                                if (expressionContainsNamed) {\r\n                                    error('Cannot mix ; and , as delimiter types');\r\n                                }\r\n                                isSemiColonSeparated = true;\r\n                                if (expressions.length > 1) {\r\n                                    value = new (tree.Value)(expressions);\r\n                                }\r\n                                argsSemiColon.push({ name: name, value: value, expand: expand });\r\n                                name = null;\r\n                                expressions = [];\r\n                                expressionContainsNamed = false;\r\n                            }\r\n                        }\r\n                        parserInput.forget();\r\n                        returner.args = isSemiColonSeparated ? argsSemiColon : argsComma;\r\n                        return returner;\r\n                    },\r\n                    //\r\n                    // A Mixin definition, with a list of parameters\r\n                    //\r\n                    //     .rounded (@radius: 2px, @color) {\r\n                    //        ...\r\n                    //     }\r\n                    //\r\n                    // Until we have a finer grained state-machine, we have to\r\n                    // do a look-ahead, to make sure we don't have a mixin call.\r\n                    // See the `rule` function for more information.\r\n                    //\r\n                    // We start by matching `.rounded (`, and then proceed on to\r\n                    // the argument list, which has optional default values.\r\n                    // We store the parameters in `params`, with a `value` key,\r\n                    // if there is a value, such as in the case of `@radius`.\r\n                    //\r\n                    // Once we've got our params list, and a closing `)`, we parse\r\n                    // the `{...}` block.\r\n                    //\r\n                    definition: function () {\r\n                        var name;\r\n                        var params = [];\r\n                        var match;\r\n                        var ruleset;\r\n                        var cond;\r\n                        var variadic = false;\r\n                        if ((parserInput.currentChar() !== '.' && parserInput.currentChar() !== '#') ||\r\n                            parserInput.peek(/^[^{]*\\}/)) {\r\n                            return;\r\n                        }\r\n                        parserInput.save();\r\n                        match = parserInput.$re(/^([#.](?:[\\w-]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+)\\s*\\(/);\r\n                        if (match) {\r\n                            name = match[1];\r\n                            var argInfo = this.args(false);\r\n                            params = argInfo.args;\r\n                            variadic = argInfo.variadic;\r\n                            // .mixincall(\"@{a}\");\r\n                            // looks a bit like a mixin definition..\r\n                            // also\r\n                            // .mixincall(@a: {rule: set;});\r\n                            // so we have to be nice and restore\r\n                            if (!parserInput.$char(')')) {\r\n                                parserInput.restore('Missing closing \\')\\'');\r\n                                return;\r\n                            }\r\n                            parserInput.commentStore.length = 0;\r\n                            if (parserInput.$str('when')) { // Guard\r\n                                cond = expect(parsers.conditions, 'expected condition');\r\n                            }\r\n                            ruleset = parsers.block();\r\n                            if (ruleset) {\r\n                                parserInput.forget();\r\n                                return new (tree.mixin.Definition)(name, params, ruleset, cond, variadic);\r\n                            }\r\n                            else {\r\n                                parserInput.restore();\r\n                            }\r\n                        }\r\n                        else {\r\n                            parserInput.restore();\r\n                        }\r\n                    },\r\n                    ruleLookups: function () {\r\n                        var rule;\r\n                        var lookups = [];\r\n                        if (parserInput.currentChar() !== '[') {\r\n                            return;\r\n                        }\r\n                        while (true) {\r\n                            parserInput.save();\r\n                            rule = this.lookupValue();\r\n                            if (!rule && rule !== '') {\r\n                                parserInput.restore();\r\n                                break;\r\n                            }\r\n                            lookups.push(rule);\r\n                            parserInput.forget();\r\n                        }\r\n                        if (lookups.length > 0) {\r\n                            return lookups;\r\n                        }\r\n                    },\r\n                    lookupValue: function () {\r\n                        parserInput.save();\r\n                        if (!parserInput.$char('[')) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                        var name = parserInput.$re(/^(?:[@$]{0,2})[_a-zA-Z0-9-]*/);\r\n                        if (!parserInput.$char(']')) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                        if (name || name === '') {\r\n                            parserInput.forget();\r\n                            return name;\r\n                        }\r\n                        parserInput.restore();\r\n                    }\r\n                },\r\n                //\r\n                // Entities are the smallest recognized token,\r\n                // and can be found inside a rule's value.\r\n                //\r\n                entity: function () {\r\n                    var entities = this.entities;\r\n                    return this.comment() || entities.literal() || entities.variable() || entities.url() ||\r\n                        entities.property() || entities.call() || entities.keyword() || this.mixin.call(true) ||\r\n                        entities.javascript();\r\n                },\r\n                //\r\n                // A Declaration terminator. Note that we use `peek()` to check for '}',\r\n                // because the `block` rule will be expecting it, but we still need to make sure\r\n                // it's there, if ';' was omitted.\r\n                //\r\n                end: function () {\r\n                    return parserInput.$char(';') || parserInput.peek('}');\r\n                },\r\n                //\r\n                // IE's alpha function\r\n                //\r\n                //     alpha(opacity=88)\r\n                //\r\n                ieAlpha: function () {\r\n                    var value;\r\n                    // http://jsperf.com/case-insensitive-regex-vs-strtolower-then-regex/18\r\n                    if (!parserInput.$re(/^opacity=/i)) {\r\n                        return;\r\n                    }\r\n                    value = parserInput.$re(/^\\d+/);\r\n                    if (!value) {\r\n                        value = expect(parsers.entities.variable, 'Could not parse alpha');\r\n                        value = \"@{\".concat(value.name.slice(1), \"}\");\r\n                    }\r\n                    expectChar(')');\r\n                    return new tree.Quoted('', \"alpha(opacity=\".concat(value, \")\"));\r\n                },\r\n                //\r\n                // A Selector Element\r\n                //\r\n                //     div\r\n                //     + h1\r\n                //     #socks\r\n                //     input[type=\"text\"]\r\n                //\r\n                // Elements are the building blocks for Selectors,\r\n                // they are made out of a `Combinator` (see combinator rule),\r\n                // and an element name, such as a tag a class, or `*`.\r\n                //\r\n                element: function () {\r\n                    var e;\r\n                    var c;\r\n                    var v;\r\n                    var index = parserInput.i;\r\n                    c = this.combinator();\r\n                    e = parserInput.$re(/^(?:\\d+\\.\\d+|\\d+)%/) ||\r\n                        // eslint-disable-next-line no-control-regex\r\n                        parserInput.$re(/^(?:[.#]?|:*)(?:[\\w-]|[^\\x00-\\x9f]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+/) ||\r\n                        parserInput.$char('*') || parserInput.$char('&') || this.attribute() ||\r\n                        parserInput.$re(/^\\([^&()@]+\\)/) || parserInput.$re(/^[.#:](?=@)/) ||\r\n                        this.entities.variableCurly();\r\n                    if (!e) {\r\n                        parserInput.save();\r\n                        if (parserInput.$char('(')) {\r\n                            if ((v = this.selector(false)) && parserInput.$char(')')) {\r\n                                e = new (tree.Paren)(v);\r\n                                parserInput.forget();\r\n                            }\r\n                            else {\r\n                                parserInput.restore('Missing closing \\')\\'');\r\n                            }\r\n                        }\r\n                        else {\r\n                            parserInput.forget();\r\n                        }\r\n                    }\r\n                    if (e) {\r\n                        return new (tree.Element)(c, e, e instanceof tree.Variable, index + currentIndex, fileInfo);\r\n                    }\r\n                },\r\n                //\r\n                // Combinators combine elements together, in a Selector.\r\n                //\r\n                // Because our parser isn't white-space sensitive, special care\r\n                // has to be taken, when parsing the descendant combinator, ` `,\r\n                // as it's an empty space. We have to check the previous character\r\n                // in the input, to see if it's a ` ` character. More info on how\r\n                // we deal with this in *combinator.js*.\r\n                //\r\n                combinator: function () {\r\n                    var c = parserInput.currentChar();\r\n                    if (c === '/') {\r\n                        parserInput.save();\r\n                        var slashedCombinator = parserInput.$re(/^\\/[a-z]+\\//i);\r\n                        if (slashedCombinator) {\r\n                            parserInput.forget();\r\n                            return new (tree.Combinator)(slashedCombinator);\r\n                        }\r\n                        parserInput.restore();\r\n                    }\r\n                    if (c === '>' || c === '+' || c === '~' || c === '|' || c === '^') {\r\n                        parserInput.i++;\r\n                        if (c === '^' && parserInput.currentChar() === '^') {\r\n                            c = '^^';\r\n                            parserInput.i++;\r\n                        }\r\n                        while (parserInput.isWhitespace()) {\r\n                            parserInput.i++;\r\n                        }\r\n                        return new (tree.Combinator)(c);\r\n                    }\r\n                    else if (parserInput.isWhitespace(-1)) {\r\n                        return new (tree.Combinator)(' ');\r\n                    }\r\n                    else {\r\n                        return new (tree.Combinator)(null);\r\n                    }\r\n                },\r\n                //\r\n                // A CSS Selector\r\n                // with less extensions e.g. the ability to extend and guard\r\n                //\r\n                //     .class > div + h1\r\n                //     li a:hover\r\n                //\r\n                // Selectors are made out of one or more Elements, see above.\r\n                //\r\n                selector: function (isLess) {\r\n                    var index = parserInput.i;\r\n                    var elements;\r\n                    var extendList;\r\n                    var c;\r\n                    var e;\r\n                    var allExtends;\r\n                    var when;\r\n                    var condition;\r\n                    isLess = isLess !== false;\r\n                    while ((isLess && (extendList = this.extend())) || (isLess && (when = parserInput.$str('when'))) || (e = this.element())) {\r\n                        if (when) {\r\n                            condition = expect(this.conditions, 'expected condition');\r\n                        }\r\n                        else if (condition) {\r\n                            error('CSS guard can only be used at the end of selector');\r\n                        }\r\n                        else if (extendList) {\r\n                            if (allExtends) {\r\n                                allExtends = allExtends.concat(extendList);\r\n                            }\r\n                            else {\r\n                                allExtends = extendList;\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (allExtends) {\r\n                                error('Extend can only be used at the end of selector');\r\n                            }\r\n                            c = parserInput.currentChar();\r\n                            if (elements) {\r\n                                elements.push(e);\r\n                            }\r\n                            else {\r\n                                elements = [e];\r\n                            }\r\n                            e = null;\r\n                        }\r\n                        if (c === '{' || c === '}' || c === ';' || c === ',' || c === ')') {\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (elements) {\r\n                        return new (tree.Selector)(elements, allExtends, condition, index + currentIndex, fileInfo);\r\n                    }\r\n                    if (allExtends) {\r\n                        error('Extend must be used to extend a selector, it cannot be used on its own');\r\n                    }\r\n                },\r\n                selectors: function () {\r\n                    var s;\r\n                    var selectors;\r\n                    while (true) {\r\n                        s = this.selector();\r\n                        if (!s) {\r\n                            break;\r\n                        }\r\n                        if (selectors) {\r\n                            selectors.push(s);\r\n                        }\r\n                        else {\r\n                            selectors = [s];\r\n                        }\r\n                        parserInput.commentStore.length = 0;\r\n                        if (s.condition && selectors.length > 1) {\r\n                            error('Guards are only currently allowed on a single selector.');\r\n                        }\r\n                        if (!parserInput.$char(',')) {\r\n                            break;\r\n                        }\r\n                        if (s.condition) {\r\n                            error('Guards are only currently allowed on a single selector.');\r\n                        }\r\n                        parserInput.commentStore.length = 0;\r\n                    }\r\n                    return selectors;\r\n                },\r\n                attribute: function () {\r\n                    if (!parserInput.$char('[')) {\r\n                        return;\r\n                    }\r\n                    var entities = this.entities;\r\n                    var key;\r\n                    var val;\r\n                    var op;\r\n                    //\r\n                    // case-insensitive flag\r\n                    // e.g. [attr operator value i]\r\n                    //\r\n                    var cif;\r\n                    if (!(key = entities.variableCurly())) {\r\n                        key = expect(/^(?:[_A-Za-z0-9-*]*\\|)?(?:[_A-Za-z0-9-]|\\\\.)+/);\r\n                    }\r\n                    op = parserInput.$re(/^[|~*$^]?=/);\r\n                    if (op) {\r\n                        val = entities.quoted() || parserInput.$re(/^[0-9]+%/) || parserInput.$re(/^[\\w-]+/) || entities.variableCurly();\r\n                        if (val) {\r\n                            cif = parserInput.$re(/^[iIsS]/);\r\n                        }\r\n                    }\r\n                    expectChar(']');\r\n                    return new (tree.Attribute)(key, op, val, cif);\r\n                },\r\n                //\r\n                // The `block` rule is used by `ruleset` and `mixin.definition`.\r\n                // It's a wrapper around the `primary` rule, with added `{}`.\r\n                //\r\n                block: function () {\r\n                    var content;\r\n                    if (parserInput.$char('{') && (content = this.primary()) && parserInput.$char('}')) {\r\n                        return content;\r\n                    }\r\n                },\r\n                blockRuleset: function () {\r\n                    var block = this.block();\r\n                    if (block) {\r\n                        block = new tree.Ruleset(null, block);\r\n                    }\r\n                    return block;\r\n                },\r\n                detachedRuleset: function () {\r\n                    var argInfo;\r\n                    var params;\r\n                    var variadic;\r\n                    parserInput.save();\r\n                    if (parserInput.$re(/^[.#]\\(/)) {\r\n                        /**\r\n                         * DR args currently only implemented for each() function, and not\r\n                         * yet settable as `@dr: #(@arg) {}`\r\n                         * This should be done when DRs are merged with mixins.\r\n                         * See: https://github.com/less/less-meta/issues/16\r\n                         */\r\n                        argInfo = this.mixin.args(false);\r\n                        params = argInfo.args;\r\n                        variadic = argInfo.variadic;\r\n                        if (!parserInput.$char(')')) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                    }\r\n                    var blockRuleset = this.blockRuleset();\r\n                    if (blockRuleset) {\r\n                        parserInput.forget();\r\n                        if (params) {\r\n                            return new tree.mixin.Definition(null, params, blockRuleset, null, variadic);\r\n                        }\r\n                        return new tree.DetachedRuleset(blockRuleset);\r\n                    }\r\n                    parserInput.restore();\r\n                },\r\n                //\r\n                // div, .class, body > p {...}\r\n                //\r\n                ruleset: function () {\r\n                    var selectors;\r\n                    var rules;\r\n                    var debugInfo;\r\n                    parserInput.save();\r\n                    if (context.dumpLineNumbers) {\r\n                        debugInfo = getDebugInfo(parserInput.i);\r\n                    }\r\n                    selectors = this.selectors();\r\n                    if (selectors && (rules = this.block())) {\r\n                        parserInput.forget();\r\n                        var ruleset = new (tree.Ruleset)(selectors, rules, context.strictImports);\r\n                        if (context.dumpLineNumbers) {\r\n                            ruleset.debugInfo = debugInfo;\r\n                        }\r\n                        return ruleset;\r\n                    }\r\n                    else {\r\n                        parserInput.restore();\r\n                    }\r\n                },\r\n                declaration: function () {\r\n                    var name;\r\n                    var value;\r\n                    var index = parserInput.i;\r\n                    var hasDR;\r\n                    var c = parserInput.currentChar();\r\n                    var important;\r\n                    var merge;\r\n                    var isVariable;\r\n                    if (c === '.' || c === '#' || c === '&' || c === ':') {\r\n                        return;\r\n                    }\r\n                    parserInput.save();\r\n                    name = this.variable() || this.ruleProperty();\r\n                    if (name) {\r\n                        isVariable = typeof name === 'string';\r\n                        if (isVariable) {\r\n                            value = this.detachedRuleset();\r\n                            if (value) {\r\n                                hasDR = true;\r\n                            }\r\n                        }\r\n                        parserInput.commentStore.length = 0;\r\n                        if (!value) {\r\n                            // a name returned by this.ruleProperty() is always an array of the form:\r\n                            // [string-1, ..., string-n, \"\"] or [string-1, ..., string-n, \"+\"]\r\n                            // where each item is a tree.Keyword or tree.Variable\r\n                            merge = !isVariable && name.length > 1 && name.pop().value;\r\n                            // Custom property values get permissive parsing\r\n                            if (name[0].value && name[0].value.slice(0, 2) === '--') {\r\n                                value = this.permissiveValue(/[;}]/);\r\n                            }\r\n                            // Try to store values as anonymous\r\n                            // If we need the value later we'll re-parse it in ruleset.parseValue\r\n                            else {\r\n                                value = this.anonymousValue();\r\n                            }\r\n                            if (value) {\r\n                                parserInput.forget();\r\n                                // anonymous values absorb the end ';' which is required for them to work\r\n                                return new (tree.Declaration)(name, value, false, merge, index + currentIndex, fileInfo);\r\n                            }\r\n                            if (!value) {\r\n                                value = this.value();\r\n                            }\r\n                            if (value) {\r\n                                important = this.important();\r\n                            }\r\n                            else if (isVariable) {\r\n                                // As a last resort, try permissiveValue\r\n                                value = this.permissiveValue();\r\n                            }\r\n                        }\r\n                        if (value && (this.end() || hasDR)) {\r\n                            parserInput.forget();\r\n                            return new (tree.Declaration)(name, value, important, merge, index + currentIndex, fileInfo);\r\n                        }\r\n                        else {\r\n                            parserInput.restore();\r\n                        }\r\n                    }\r\n                    else {\r\n                        parserInput.restore();\r\n                    }\r\n                },\r\n                anonymousValue: function () {\r\n                    var index = parserInput.i;\r\n                    var match = parserInput.$re(/^([^.#@$+/'\"*`(;{}-]*);/);\r\n                    if (match) {\r\n                        return new (tree.Anonymous)(match[1], index + currentIndex);\r\n                    }\r\n                },\r\n                /**\r\n                 * Used for custom properties, at-rules, and variables (as fallback)\r\n                 * Parses almost anything inside of {} [] () \"\" blocks\r\n                 * until it reaches outer-most tokens.\r\n                 *\r\n                 * First, it will try to parse comments and entities to reach\r\n                 * the end. This is mostly like the Expression parser except no\r\n                 * math is allowed.\r\n                 */\r\n                permissiveValue: function (untilTokens) {\r\n                    var i;\r\n                    var e;\r\n                    var done;\r\n                    var value;\r\n                    var tok = untilTokens || ';';\r\n                    var index = parserInput.i;\r\n                    var result = [];\r\n                    function testCurrentChar() {\r\n                        var char = parserInput.currentChar();\r\n                        if (typeof tok === 'string') {\r\n                            return char === tok;\r\n                        }\r\n                        else {\r\n                            return tok.test(char);\r\n                        }\r\n                    }\r\n                    if (testCurrentChar()) {\r\n                        return;\r\n                    }\r\n                    value = [];\r\n                    do {\r\n                        e = this.comment();\r\n                        if (e) {\r\n                            value.push(e);\r\n                            continue;\r\n                        }\r\n                        e = this.entity();\r\n                        if (e) {\r\n                            value.push(e);\r\n                        }\r\n                        if (parserInput.peek(',')) {\r\n                            value.push(new (tree.Anonymous)(',', parserInput.i));\r\n                            parserInput.$char(',');\r\n                        }\r\n                    } while (e);\r\n                    done = testCurrentChar();\r\n                    if (value.length > 0) {\r\n                        value = new (tree.Expression)(value);\r\n                        if (done) {\r\n                            return value;\r\n                        }\r\n                        else {\r\n                            result.push(value);\r\n                        }\r\n                        // Preserve space before $parseUntil as it will not\r\n                        if (parserInput.prevChar() === ' ') {\r\n                            result.push(new tree.Anonymous(' ', index));\r\n                        }\r\n                    }\r\n                    parserInput.save();\r\n                    value = parserInput.$parseUntil(tok);\r\n                    if (value) {\r\n                        if (typeof value === 'string') {\r\n                            error(\"Expected '\".concat(value, \"'\"), 'Parse');\r\n                        }\r\n                        if (value.length === 1 && value[0] === ' ') {\r\n                            parserInput.forget();\r\n                            return new tree.Anonymous('', index);\r\n                        }\r\n                        var item = void 0;\r\n                        for (i = 0; i < value.length; i++) {\r\n                            item = value[i];\r\n                            if (Array.isArray(item)) {\r\n                                // Treat actual quotes as normal quoted values\r\n                                result.push(new tree.Quoted(item[0], item[1], true, index, fileInfo));\r\n                            }\r\n                            else {\r\n                                if (i === value.length - 1) {\r\n                                    item = item.trim();\r\n                                }\r\n                                // Treat like quoted values, but replace vars like unquoted expressions\r\n                                var quote = new tree.Quoted('\\'', item, true, index, fileInfo);\r\n                                quote.variableRegex = /@([\\w-]+)/g;\r\n                                quote.propRegex = /\\$([\\w-]+)/g;\r\n                                result.push(quote);\r\n                            }\r\n                        }\r\n                        parserInput.forget();\r\n                        return new tree.Expression(result, true);\r\n                    }\r\n                    parserInput.restore();\r\n                },\r\n                //\r\n                // An @import atrule\r\n                //\r\n                //     @import \"lib\";\r\n                //\r\n                // Depending on our environment, importing is done differently:\r\n                // In the browser, it's an XHR request, in Node, it would be a\r\n                // file-system operation. The function used for importing is\r\n                // stored in `import`, which we pass to the Import constructor.\r\n                //\r\n                'import': function () {\r\n                    var path;\r\n                    var features;\r\n                    var index = parserInput.i;\r\n                    var dir = parserInput.$re(/^@import\\s+/);\r\n                    if (dir) {\r\n                        var options = (dir ? this.importOptions() : null) || {};\r\n                        if ((path = this.entities.quoted() || this.entities.url())) {\r\n                            features = this.mediaFeatures({});\r\n                            if (!parserInput.$char(';')) {\r\n                                parserInput.i = index;\r\n                                error('missing semi-colon or unrecognised media features on import');\r\n                            }\r\n                            features = features && new (tree.Value)(features);\r\n                            return new (tree.Import)(path, features, options, index + currentIndex, fileInfo);\r\n                        }\r\n                        else {\r\n                            parserInput.i = index;\r\n                            error('malformed import statement');\r\n                        }\r\n                    }\r\n                },\r\n                importOptions: function () {\r\n                    var o;\r\n                    var options = {};\r\n                    var optionName;\r\n                    var value;\r\n                    // list of options, surrounded by parens\r\n                    if (!parserInput.$char('(')) {\r\n                        return null;\r\n                    }\r\n                    do {\r\n                        o = this.importOption();\r\n                        if (o) {\r\n                            optionName = o;\r\n                            value = true;\r\n                            switch (optionName) {\r\n                                case 'css':\r\n                                    optionName = 'less';\r\n                                    value = false;\r\n                                    break;\r\n                                case 'once':\r\n                                    optionName = 'multiple';\r\n                                    value = false;\r\n                                    break;\r\n                            }\r\n                            options[optionName] = value;\r\n                            if (!parserInput.$char(',')) {\r\n                                break;\r\n                            }\r\n                        }\r\n                    } while (o);\r\n                    expectChar(')');\r\n                    return options;\r\n                },\r\n                importOption: function () {\r\n                    var opt = parserInput.$re(/^(less|css|multiple|once|inline|reference|optional)/);\r\n                    if (opt) {\r\n                        return opt[1];\r\n                    }\r\n                },\r\n                mediaFeature: function (syntaxOptions) {\r\n                    var entities = this.entities;\r\n                    var nodes = [];\r\n                    var e;\r\n                    var p;\r\n                    var rangeP;\r\n                    parserInput.save();\r\n                    do {\r\n                        e = entities.declarationCall.bind(this)() || entities.keyword() || entities.variable() || entities.mixinLookup();\r\n                        if (e) {\r\n                            nodes.push(e);\r\n                        }\r\n                        else if (parserInput.$char('(')) {\r\n                            p = this.property();\r\n                            parserInput.save();\r\n                            if (!p && syntaxOptions.queryInParens && parserInput.$re(/^[0-9a-z-]*\\s*([<>]=|<=|>=|[<>]|=)/)) {\r\n                                parserInput.restore();\r\n                                p = this.condition();\r\n                                parserInput.save();\r\n                                rangeP = this.atomicCondition(null, p.rvalue);\r\n                                if (!rangeP) {\r\n                                    parserInput.restore();\r\n                                }\r\n                            }\r\n                            else {\r\n                                parserInput.restore();\r\n                                e = this.value();\r\n                            }\r\n                            if (parserInput.$char(')')) {\r\n                                if (p && !e) {\r\n                                    nodes.push(new (tree.Paren)(new (tree.QueryInParens)(p.op, p.lvalue, p.rvalue, rangeP ? rangeP.op : null, rangeP ? rangeP.rvalue : null, p._index)));\r\n                                    e = p;\r\n                                }\r\n                                else if (p && e) {\r\n                                    nodes.push(new (tree.Paren)(new (tree.Declaration)(p, e, null, null, parserInput.i + currentIndex, fileInfo, true)));\r\n                                }\r\n                                else if (e) {\r\n                                    nodes.push(new (tree.Paren)(e));\r\n                                }\r\n                                else {\r\n                                    error('badly formed media feature definition');\r\n                                }\r\n                            }\r\n                            else {\r\n                                error('Missing closing \\')\\'', 'Parse');\r\n                            }\r\n                        }\r\n                    } while (e);\r\n                    parserInput.forget();\r\n                    if (nodes.length > 0) {\r\n                        return new (tree.Expression)(nodes);\r\n                    }\r\n                },\r\n                mediaFeatures: function (syntaxOptions) {\r\n                    var entities = this.entities;\r\n                    var features = [];\r\n                    var e;\r\n                    do {\r\n                        e = this.mediaFeature(syntaxOptions);\r\n                        if (e) {\r\n                            features.push(e);\r\n                            if (!parserInput.$char(',')) {\r\n                                break;\r\n                            }\r\n                        }\r\n                        else {\r\n                            e = entities.variable() || entities.mixinLookup();\r\n                            if (e) {\r\n                                features.push(e);\r\n                                if (!parserInput.$char(',')) {\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                    } while (e);\r\n                    return features.length > 0 ? features : null;\r\n                },\r\n                prepareAndGetNestableAtRule: function (treeType, index, debugInfo, syntaxOptions) {\r\n                    var features = this.mediaFeatures(syntaxOptions);\r\n                    var rules = this.block();\r\n                    if (!rules) {\r\n                        error('media definitions require block statements after any features');\r\n                    }\r\n                    parserInput.forget();\r\n                    var atRule = new (treeType)(rules, features, index + currentIndex, fileInfo);\r\n                    if (context.dumpLineNumbers) {\r\n                        atRule.debugInfo = debugInfo;\r\n                    }\r\n                    return atRule;\r\n                },\r\n                nestableAtRule: function () {\r\n                    var debugInfo;\r\n                    var index = parserInput.i;\r\n                    if (context.dumpLineNumbers) {\r\n                        debugInfo = getDebugInfo(index);\r\n                    }\r\n                    parserInput.save();\r\n                    if (parserInput.$peekChar('@')) {\r\n                        if (parserInput.$str('@media')) {\r\n                            return this.prepareAndGetNestableAtRule(tree.Media, index, debugInfo, MediaSyntaxOptions);\r\n                        }\r\n                        if (parserInput.$str('@container')) {\r\n                            return this.prepareAndGetNestableAtRule(tree.Container, index, debugInfo, ContainerSyntaxOptions);\r\n                        }\r\n                    }\r\n                    parserInput.restore();\r\n                },\r\n                //\r\n                // A @plugin directive, used to import plugins dynamically.\r\n                //\r\n                //     @plugin (args) \"lib\";\r\n                //\r\n                plugin: function () {\r\n                    var path;\r\n                    var args;\r\n                    var options;\r\n                    var index = parserInput.i;\r\n                    var dir = parserInput.$re(/^@plugin\\s+/);\r\n                    if (dir) {\r\n                        args = this.pluginArgs();\r\n                        if (args) {\r\n                            options = {\r\n                                pluginArgs: args,\r\n                                isPlugin: true\r\n                            };\r\n                        }\r\n                        else {\r\n                            options = { isPlugin: true };\r\n                        }\r\n                        if ((path = this.entities.quoted() || this.entities.url())) {\r\n                            if (!parserInput.$char(';')) {\r\n                                parserInput.i = index;\r\n                                error('missing semi-colon on @plugin');\r\n                            }\r\n                            return new (tree.Import)(path, null, options, index + currentIndex, fileInfo);\r\n                        }\r\n                        else {\r\n                            parserInput.i = index;\r\n                            error('malformed @plugin statement');\r\n                        }\r\n                    }\r\n                },\r\n                pluginArgs: function () {\r\n                    // list of options, surrounded by parens\r\n                    parserInput.save();\r\n                    if (!parserInput.$char('(')) {\r\n                        parserInput.restore();\r\n                        return null;\r\n                    }\r\n                    var args = parserInput.$re(/^\\s*([^);]+)\\)\\s*/);\r\n                    if (args[1]) {\r\n                        parserInput.forget();\r\n                        return args[1].trim();\r\n                    }\r\n                    else {\r\n                        parserInput.restore();\r\n                        return null;\r\n                    }\r\n                },\r\n                //\r\n                // A CSS AtRule\r\n                //\r\n                //     @charset \"utf-8\";\r\n                //\r\n                atrule: function () {\r\n                    var index = parserInput.i;\r\n                    var name;\r\n                    var value;\r\n                    var rules;\r\n                    var nonVendorSpecificName;\r\n                    var hasIdentifier;\r\n                    var hasExpression;\r\n                    var hasUnknown;\r\n                    var hasBlock = true;\r\n                    var isRooted = true;\r\n                    if (parserInput.currentChar() !== '@') {\r\n                        return;\r\n                    }\r\n                    value = this['import']() || this.plugin() || this.nestableAtRule();\r\n                    if (value) {\r\n                        return value;\r\n                    }\r\n                    parserInput.save();\r\n                    name = parserInput.$re(/^@[a-z-]+/);\r\n                    if (!name) {\r\n                        return;\r\n                    }\r\n                    nonVendorSpecificName = name;\r\n                    if (name.charAt(1) == '-' && name.indexOf('-', 2) > 0) {\r\n                        nonVendorSpecificName = \"@\".concat(name.slice(name.indexOf('-', 2) + 1));\r\n                    }\r\n                    switch (nonVendorSpecificName) {\r\n                        case '@charset':\r\n                            hasIdentifier = true;\r\n                            hasBlock = false;\r\n                            break;\r\n                        case '@namespace':\r\n                            hasExpression = true;\r\n                            hasBlock = false;\r\n                            break;\r\n                        case '@keyframes':\r\n                        case '@counter-style':\r\n                            hasIdentifier = true;\r\n                            break;\r\n                        case '@document':\r\n                        case '@supports':\r\n                            hasUnknown = true;\r\n                            isRooted = false;\r\n                            break;\r\n                        default:\r\n                            hasUnknown = true;\r\n                            break;\r\n                    }\r\n                    parserInput.commentStore.length = 0;\r\n                    if (hasIdentifier) {\r\n                        value = this.entity();\r\n                        if (!value) {\r\n                            error(\"expected \".concat(name, \" identifier\"));\r\n                        }\r\n                    }\r\n                    else if (hasExpression) {\r\n                        value = this.expression();\r\n                        if (!value) {\r\n                            error(\"expected \".concat(name, \" expression\"));\r\n                        }\r\n                    }\r\n                    else if (hasUnknown) {\r\n                        value = this.permissiveValue(/^[{;]/);\r\n                        hasBlock = (parserInput.currentChar() === '{');\r\n                        if (!value) {\r\n                            if (!hasBlock && parserInput.currentChar() !== ';') {\r\n                                error(\"\".concat(name, \" rule is missing block or ending semi-colon\"));\r\n                            }\r\n                        }\r\n                        else if (!value.value) {\r\n                            value = null;\r\n                        }\r\n                    }\r\n                    if (hasBlock) {\r\n                        rules = this.blockRuleset();\r\n                    }\r\n                    if (rules || (!hasBlock && value && parserInput.$char(';'))) {\r\n                        parserInput.forget();\r\n                        return new (tree.AtRule)(name, value, rules, index + currentIndex, fileInfo, context.dumpLineNumbers ? getDebugInfo(index) : null, isRooted);\r\n                    }\r\n                    parserInput.restore('at-rule options not recognised');\r\n                },\r\n                //\r\n                // A Value is a comma-delimited list of Expressions\r\n                //\r\n                //     font-family: Baskerville, Georgia, serif;\r\n                //\r\n                // In a Rule, a Value represents everything after the `:`,\r\n                // and before the `;`.\r\n                //\r\n                value: function () {\r\n                    var e;\r\n                    var expressions = [];\r\n                    var index = parserInput.i;\r\n                    do {\r\n                        e = this.expression();\r\n                        if (e) {\r\n                            expressions.push(e);\r\n                            if (!parserInput.$char(',')) {\r\n                                break;\r\n                            }\r\n                        }\r\n                    } while (e);\r\n                    if (expressions.length > 0) {\r\n                        return new (tree.Value)(expressions, index + currentIndex);\r\n                    }\r\n                },\r\n                important: function () {\r\n                    if (parserInput.currentChar() === '!') {\r\n                        return parserInput.$re(/^! *important/);\r\n                    }\r\n                },\r\n                sub: function () {\r\n                    var a;\r\n                    var e;\r\n                    parserInput.save();\r\n                    if (parserInput.$char('(')) {\r\n                        a = this.addition();\r\n                        if (a && parserInput.$char(')')) {\r\n                            parserInput.forget();\r\n                            e = new (tree.Expression)([a]);\r\n                            e.parens = true;\r\n                            return e;\r\n                        }\r\n                        parserInput.restore('Expected \\')\\'');\r\n                        return;\r\n                    }\r\n                    parserInput.restore();\r\n                },\r\n                multiplication: function () {\r\n                    var m;\r\n                    var a;\r\n                    var op;\r\n                    var operation;\r\n                    var isSpaced;\r\n                    m = this.operand();\r\n                    if (m) {\r\n                        isSpaced = parserInput.isWhitespace(-1);\r\n                        while (true) {\r\n                            if (parserInput.peek(/^\\/[*/]/)) {\r\n                                break;\r\n                            }\r\n                            parserInput.save();\r\n                            op = parserInput.$char('/') || parserInput.$char('*') || parserInput.$str('./');\r\n                            if (!op) {\r\n                                parserInput.forget();\r\n                                break;\r\n                            }\r\n                            a = this.operand();\r\n                            if (!a) {\r\n                                parserInput.restore();\r\n                                break;\r\n                            }\r\n                            parserInput.forget();\r\n                            m.parensInOp = true;\r\n                            a.parensInOp = true;\r\n                            operation = new (tree.Operation)(op, [operation || m, a], isSpaced);\r\n                            isSpaced = parserInput.isWhitespace(-1);\r\n                        }\r\n                        return operation || m;\r\n                    }\r\n                },\r\n                addition: function () {\r\n                    var m;\r\n                    var a;\r\n                    var op;\r\n                    var operation;\r\n                    var isSpaced;\r\n                    m = this.multiplication();\r\n                    if (m) {\r\n                        isSpaced = parserInput.isWhitespace(-1);\r\n                        while (true) {\r\n                            op = parserInput.$re(/^[-+]\\s+/) || (!isSpaced && (parserInput.$char('+') || parserInput.$char('-')));\r\n                            if (!op) {\r\n                                break;\r\n                            }\r\n                            a = this.multiplication();\r\n                            if (!a) {\r\n                                break;\r\n                            }\r\n                            m.parensInOp = true;\r\n                            a.parensInOp = true;\r\n                            operation = new (tree.Operation)(op, [operation || m, a], isSpaced);\r\n                            isSpaced = parserInput.isWhitespace(-1);\r\n                        }\r\n                        return operation || m;\r\n                    }\r\n                },\r\n                conditions: function () {\r\n                    var a;\r\n                    var b;\r\n                    var index = parserInput.i;\r\n                    var condition;\r\n                    a = this.condition(true);\r\n                    if (a) {\r\n                        while (true) {\r\n                            if (!parserInput.peek(/^,\\s*(not\\s*)?\\(/) || !parserInput.$char(',')) {\r\n                                break;\r\n                            }\r\n                            b = this.condition(true);\r\n                            if (!b) {\r\n                                break;\r\n                            }\r\n                            condition = new (tree.Condition)('or', condition || a, b, index + currentIndex);\r\n                        }\r\n                        return condition || a;\r\n                    }\r\n                },\r\n                condition: function (needsParens) {\r\n                    var result;\r\n                    var logical;\r\n                    var next;\r\n                    function or() {\r\n                        return parserInput.$str('or');\r\n                    }\r\n                    result = this.conditionAnd(needsParens);\r\n                    if (!result) {\r\n                        return;\r\n                    }\r\n                    logical = or();\r\n                    if (logical) {\r\n                        next = this.condition(needsParens);\r\n                        if (next) {\r\n                            result = new (tree.Condition)(logical, result, next);\r\n                        }\r\n                        else {\r\n                            return;\r\n                        }\r\n                    }\r\n                    return result;\r\n                },\r\n                conditionAnd: function (needsParens) {\r\n                    var result;\r\n                    var logical;\r\n                    var next;\r\n                    var self = this;\r\n                    function insideCondition() {\r\n                        var cond = self.negatedCondition(needsParens) || self.parenthesisCondition(needsParens);\r\n                        if (!cond && !needsParens) {\r\n                            return self.atomicCondition(needsParens);\r\n                        }\r\n                        return cond;\r\n                    }\r\n                    function and() {\r\n                        return parserInput.$str('and');\r\n                    }\r\n                    result = insideCondition();\r\n                    if (!result) {\r\n                        return;\r\n                    }\r\n                    logical = and();\r\n                    if (logical) {\r\n                        next = this.conditionAnd(needsParens);\r\n                        if (next) {\r\n                            result = new (tree.Condition)(logical, result, next);\r\n                        }\r\n                        else {\r\n                            return;\r\n                        }\r\n                    }\r\n                    return result;\r\n                },\r\n                negatedCondition: function (needsParens) {\r\n                    if (parserInput.$str('not')) {\r\n                        var result = this.parenthesisCondition(needsParens);\r\n                        if (result) {\r\n                            result.negate = !result.negate;\r\n                        }\r\n                        return result;\r\n                    }\r\n                },\r\n                parenthesisCondition: function (needsParens) {\r\n                    function tryConditionFollowedByParenthesis(me) {\r\n                        var body;\r\n                        parserInput.save();\r\n                        body = me.condition(needsParens);\r\n                        if (!body) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                        if (!parserInput.$char(')')) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                        parserInput.forget();\r\n                        return body;\r\n                    }\r\n                    var body;\r\n                    parserInput.save();\r\n                    if (!parserInput.$str('(')) {\r\n                        parserInput.restore();\r\n                        return;\r\n                    }\r\n                    body = tryConditionFollowedByParenthesis(this);\r\n                    if (body) {\r\n                        parserInput.forget();\r\n                        return body;\r\n                    }\r\n                    body = this.atomicCondition(needsParens);\r\n                    if (!body) {\r\n                        parserInput.restore();\r\n                        return;\r\n                    }\r\n                    if (!parserInput.$char(')')) {\r\n                        parserInput.restore(\"expected ')' got '\".concat(parserInput.currentChar(), \"'\"));\r\n                        return;\r\n                    }\r\n                    parserInput.forget();\r\n                    return body;\r\n                },\r\n                atomicCondition: function (needsParens, preparsedCond) {\r\n                    var entities = this.entities;\r\n                    var index = parserInput.i;\r\n                    var a;\r\n                    var b;\r\n                    var c;\r\n                    var op;\r\n                    var cond = (function () {\r\n                        return this.addition() || entities.keyword() || entities.quoted() || entities.mixinLookup();\r\n                    }).bind(this);\r\n                    if (preparsedCond) {\r\n                        a = preparsedCond;\r\n                    }\r\n                    else {\r\n                        a = cond();\r\n                    }\r\n                    if (a) {\r\n                        if (parserInput.$char('>')) {\r\n                            if (parserInput.$char('=')) {\r\n                                op = '>=';\r\n                            }\r\n                            else {\r\n                                op = '>';\r\n                            }\r\n                        }\r\n                        else if (parserInput.$char('<')) {\r\n                            if (parserInput.$char('=')) {\r\n                                op = '<=';\r\n                            }\r\n                            else {\r\n                                op = '<';\r\n                            }\r\n                        }\r\n                        else if (parserInput.$char('=')) {\r\n                            if (parserInput.$char('>')) {\r\n                                op = '=>';\r\n                            }\r\n                            else if (parserInput.$char('<')) {\r\n                                op = '=<';\r\n                            }\r\n                            else {\r\n                                op = '=';\r\n                            }\r\n                        }\r\n                        if (op) {\r\n                            b = cond();\r\n                            if (b) {\r\n                                c = new (tree.Condition)(op, a, b, index + currentIndex, false);\r\n                            }\r\n                            else {\r\n                                error('expected expression');\r\n                            }\r\n                        }\r\n                        else if (!preparsedCond) {\r\n                            c = new (tree.Condition)('=', a, new (tree.Keyword)('true'), index + currentIndex, false);\r\n                        }\r\n                        return c;\r\n                    }\r\n                },\r\n                //\r\n                // An operand is anything that can be part of an operation,\r\n                // such as a Color, or a Variable\r\n                //\r\n                operand: function () {\r\n                    var entities = this.entities;\r\n                    var negate;\r\n                    if (parserInput.peek(/^-[@$(]/)) {\r\n                        negate = parserInput.$char('-');\r\n                    }\r\n                    var o = this.sub() || entities.dimension() ||\r\n                        entities.color() || entities.variable() ||\r\n                        entities.property() || entities.call() ||\r\n                        entities.quoted(true) || entities.colorKeyword() ||\r\n                        entities.mixinLookup();\r\n                    if (negate) {\r\n                        o.parensInOp = true;\r\n                        o = new (tree.Negative)(o);\r\n                    }\r\n                    return o;\r\n                },\r\n                //\r\n                // Expressions either represent mathematical operations,\r\n                // or white-space delimited Entities.\r\n                //\r\n                //     1px solid black\r\n                //     @var * 2\r\n                //\r\n                expression: function () {\r\n                    var entities = [];\r\n                    var e;\r\n                    var delim;\r\n                    var index = parserInput.i;\r\n                    do {\r\n                        e = this.comment();\r\n                        if (e) {\r\n                            entities.push(e);\r\n                            continue;\r\n                        }\r\n                        e = this.addition() || this.entity();\r\n                        if (e instanceof tree.Comment) {\r\n                            e = null;\r\n                        }\r\n                        if (e) {\r\n                            entities.push(e);\r\n                            // operations do not allow keyword \"/\" dimension (e.g. small/20px) so we support that here\r\n                            if (!parserInput.peek(/^\\/[/*]/)) {\r\n                                delim = parserInput.$char('/');\r\n                                if (delim) {\r\n                                    entities.push(new (tree.Anonymous)(delim, index + currentIndex));\r\n                                }\r\n                            }\r\n                        }\r\n                    } while (e);\r\n                    if (entities.length > 0) {\r\n                        return new (tree.Expression)(entities);\r\n                    }\r\n                },\r\n                property: function () {\r\n                    var name = parserInput.$re(/^(\\*?-?[_a-zA-Z0-9-]+)\\s*:/);\r\n                    if (name) {\r\n                        return name[1];\r\n                    }\r\n                },\r\n                ruleProperty: function () {\r\n                    var name = [];\r\n                    var index = [];\r\n                    var s;\r\n                    var k;\r\n                    parserInput.save();\r\n                    var simpleProperty = parserInput.$re(/^([_a-zA-Z0-9-]+)\\s*:/);\r\n                    if (simpleProperty) {\r\n                        name = [new (tree.Keyword)(simpleProperty[1])];\r\n                        parserInput.forget();\r\n                        return name;\r\n                    }\r\n                    function match(re) {\r\n                        var i = parserInput.i;\r\n                        var chunk = parserInput.$re(re);\r\n                        if (chunk) {\r\n                            index.push(i);\r\n                            return name.push(chunk[1]);\r\n                        }\r\n                    }\r\n                    match(/^(\\*?)/);\r\n                    while (true) {\r\n                        if (!match(/^((?:[\\w-]+)|(?:[@$]\\{[\\w-]+\\}))/)) {\r\n                            break;\r\n                        }\r\n                    }\r\n                    if ((name.length > 1) && match(/^((?:\\+_|\\+)?)\\s*:/)) {\r\n                        parserInput.forget();\r\n                        // at last, we have the complete match now. move forward,\r\n                        // convert name particles to tree objects and return:\r\n                        if (name[0] === '') {\r\n                            name.shift();\r\n                            index.shift();\r\n                        }\r\n                        for (k = 0; k < name.length; k++) {\r\n                            s = name[k];\r\n                            name[k] = (s.charAt(0) !== '@' && s.charAt(0) !== '$') ?\r\n                                new (tree.Keyword)(s) :\r\n                                (s.charAt(0) === '@' ?\r\n                                    new (tree.Variable)(\"@\".concat(s.slice(2, -1)), index[k] + currentIndex, fileInfo) :\r\n                                    new (tree.Property)(\"$\".concat(s.slice(2, -1)), index[k] + currentIndex, fileInfo));\r\n                        }\r\n                        return name;\r\n                    }\r\n                    parserInput.restore();\r\n                }\r\n            }\r\n        };\r\n    };\r\n    Parser.serializeVars = function (vars) {\r\n        var s = '';\r\n        for (var name_1 in vars) {\r\n            if (Object.hasOwnProperty.call(vars, name_1)) {\r\n                var value = vars[name_1];\r\n                s += \"\".concat(((name_1[0] === '@') ? '' : '@') + name_1, \": \").concat(value).concat((String(value).slice(-1) === ';') ? '' : ';');\r\n            }\r\n        }\r\n        return s;\r\n    };\n\n    var Selector = function (elements, extendList, condition, index, currentFileInfo, visibilityInfo) {\r\n        this.extendList = extendList;\r\n        this.condition = condition;\r\n        this.evaldCondition = !condition;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.elements = this.getElements(elements);\r\n        this.mixinElements_ = undefined;\r\n        this.copyVisibilityInfo(visibilityInfo);\r\n        this.setParent(this.elements, this);\r\n    };\r\n    Selector.prototype = Object.assign(new Node(), {\r\n        type: 'Selector',\r\n        accept: function (visitor) {\r\n            if (this.elements) {\r\n                this.elements = visitor.visitArray(this.elements);\r\n            }\r\n            if (this.extendList) {\r\n                this.extendList = visitor.visitArray(this.extendList);\r\n            }\r\n            if (this.condition) {\r\n                this.condition = visitor.visit(this.condition);\r\n            }\r\n        },\r\n        createDerived: function (elements, extendList, evaldCondition) {\r\n            elements = this.getElements(elements);\r\n            var newSelector = new Selector(elements, extendList || this.extendList, null, this.getIndex(), this.fileInfo(), this.visibilityInfo());\r\n            newSelector.evaldCondition = (!isNullOrUndefined(evaldCondition)) ? evaldCondition : this.evaldCondition;\r\n            newSelector.mediaEmpty = this.mediaEmpty;\r\n            return newSelector;\r\n        },\r\n        getElements: function (els) {\r\n            if (!els) {\r\n                return [new Element('', '&', false, this._index, this._fileInfo)];\r\n            }\r\n            if (typeof els === 'string') {\r\n                new Parser(this.parse.context, this.parse.importManager, this._fileInfo, this._index).parseNode(els, ['selector'], function (err, result) {\r\n                    if (err) {\r\n                        throw new LessError({\r\n                            index: err.index,\r\n                            message: err.message\r\n                        }, this.parse.imports, this._fileInfo.filename);\r\n                    }\r\n                    els = result[0].elements;\r\n                });\r\n            }\r\n            return els;\r\n        },\r\n        createEmptySelectors: function () {\r\n            var el = new Element('', '&', false, this._index, this._fileInfo), sels = [new Selector([el], null, null, this._index, this._fileInfo)];\r\n            sels[0].mediaEmpty = true;\r\n            return sels;\r\n        },\r\n        match: function (other) {\r\n            var elements = this.elements;\r\n            var len = elements.length;\r\n            var olen;\r\n            var i;\r\n            other = other.mixinElements();\r\n            olen = other.length;\r\n            if (olen === 0 || len < olen) {\r\n                return 0;\r\n            }\r\n            else {\r\n                for (i = 0; i < olen; i++) {\r\n                    if (elements[i].value !== other[i]) {\r\n                        return 0;\r\n                    }\r\n                }\r\n            }\r\n            return olen; // return number of matched elements\r\n        },\r\n        mixinElements: function () {\r\n            if (this.mixinElements_) {\r\n                return this.mixinElements_;\r\n            }\r\n            var elements = this.elements.map(function (v) {\r\n                return v.combinator.value + (v.value.value || v.value);\r\n            }).join('').match(/[,&#*.\\w-]([\\w-]|(\\\\.))*/g);\r\n            if (elements) {\r\n                if (elements[0] === '&') {\r\n                    elements.shift();\r\n                }\r\n            }\r\n            else {\r\n                elements = [];\r\n            }\r\n            return (this.mixinElements_ = elements);\r\n        },\r\n        isJustParentSelector: function () {\r\n            return !this.mediaEmpty &&\r\n                this.elements.length === 1 &&\r\n                this.elements[0].value === '&' &&\r\n                (this.elements[0].combinator.value === ' ' || this.elements[0].combinator.value === '');\r\n        },\r\n        eval: function (context) {\r\n            var evaldCondition = this.condition && this.condition.eval(context);\r\n            var elements = this.elements;\r\n            var extendList = this.extendList;\r\n            elements = elements && elements.map(function (e) { return e.eval(context); });\r\n            extendList = extendList && extendList.map(function (extend) { return extend.eval(context); });\r\n            return this.createDerived(elements, extendList, evaldCondition);\r\n        },\r\n        genCSS: function (context, output) {\r\n            var i, element;\r\n            if ((!context || !context.firstSelector) && this.elements[0].combinator.value === '') {\r\n                output.add(' ', this.fileInfo(), this.getIndex());\r\n            }\r\n            for (i = 0; i < this.elements.length; i++) {\r\n                element = this.elements[i];\r\n                element.genCSS(context, output);\r\n            }\r\n        },\r\n        getIsOutput: function () {\r\n            return this.evaldCondition;\r\n        }\r\n    });\n\n    var Value = function (value) {\r\n        if (!value) {\r\n            throw new Error('Value requires an array argument');\r\n        }\r\n        if (!Array.isArray(value)) {\r\n            this.value = [value];\r\n        }\r\n        else {\r\n            this.value = value;\r\n        }\r\n    };\r\n    Value.prototype = Object.assign(new Node(), {\r\n        type: 'Value',\r\n        accept: function (visitor) {\r\n            if (this.value) {\r\n                this.value = visitor.visitArray(this.value);\r\n            }\r\n        },\r\n        eval: function (context) {\r\n            if (this.value.length === 1) {\r\n                return this.value[0].eval(context);\r\n            }\r\n            else {\r\n                return new Value(this.value.map(function (v) {\r\n                    return v.eval(context);\r\n                }));\r\n            }\r\n        },\r\n        genCSS: function (context, output) {\r\n            var i;\r\n            for (i = 0; i < this.value.length; i++) {\r\n                this.value[i].genCSS(context, output);\r\n                if (i + 1 < this.value.length) {\r\n                    output.add((context && context.compress) ? ',' : ', ');\r\n                }\r\n            }\r\n        }\r\n    });\n\n    var Keyword = function (value) {\r\n        this.value = value;\r\n    };\r\n    Keyword.prototype = Object.assign(new Node(), {\r\n        type: 'Keyword',\r\n        genCSS: function (context, output) {\r\n            if (this.value === '%') {\r\n                throw { type: 'Syntax', message: 'Invalid % without number' };\r\n            }\r\n            output.add(this.value);\r\n        }\r\n    });\r\n    Keyword.True = new Keyword('true');\r\n    Keyword.False = new Keyword('false');\n\n    var Anonymous = function (value, index, currentFileInfo, mapLines, rulesetLike, visibilityInfo) {\r\n        this.value = value;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.mapLines = mapLines;\r\n        this.rulesetLike = (typeof rulesetLike === 'undefined') ? false : rulesetLike;\r\n        this.allowRoot = true;\r\n        this.copyVisibilityInfo(visibilityInfo);\r\n    };\r\n    Anonymous.prototype = Object.assign(new Node(), {\r\n        type: 'Anonymous',\r\n        eval: function () {\r\n            return new Anonymous(this.value, this._index, this._fileInfo, this.mapLines, this.rulesetLike, this.visibilityInfo());\r\n        },\r\n        compare: function (other) {\r\n            return other.toCSS && this.toCSS() === other.toCSS() ? 0 : undefined;\r\n        },\r\n        isRulesetLike: function () {\r\n            return this.rulesetLike;\r\n        },\r\n        genCSS: function (context, output) {\r\n            this.nodeVisible = Boolean(this.value);\r\n            if (this.nodeVisible) {\r\n                output.add(this.value, this._fileInfo, this._index, this.mapLines);\r\n            }\r\n        }\r\n    });\n\n    var MATH$1 = Math$1;\r\n    function evalName(context, name) {\r\n        var value = '';\r\n        var i;\r\n        var n = name.length;\r\n        var output = { add: function (s) { value += s; } };\r\n        for (i = 0; i < n; i++) {\r\n            name[i].eval(context).genCSS(context, output);\r\n        }\r\n        return value;\r\n    }\r\n    var Declaration = function (name, value, important, merge, index, currentFileInfo, inline, variable) {\r\n        this.name = name;\r\n        this.value = (value instanceof Node) ? value : new Value([value ? new Anonymous(value) : null]);\r\n        this.important = important ? \" \".concat(important.trim()) : '';\r\n        this.merge = merge;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.inline = inline || false;\r\n        this.variable = (variable !== undefined) ? variable\r\n            : (name.charAt && (name.charAt(0) === '@'));\r\n        this.allowRoot = true;\r\n        this.setParent(this.value, this);\r\n    };\r\n    Declaration.prototype = Object.assign(new Node(), {\r\n        type: 'Declaration',\r\n        genCSS: function (context, output) {\r\n            output.add(this.name + (context.compress ? ':' : ': '), this.fileInfo(), this.getIndex());\r\n            try {\r\n                this.value.genCSS(context, output);\r\n            }\r\n            catch (e) {\r\n                e.index = this._index;\r\n                e.filename = this._fileInfo.filename;\r\n                throw e;\r\n            }\r\n            output.add(this.important + ((this.inline || (context.lastRule && context.compress)) ? '' : ';'), this._fileInfo, this._index);\r\n        },\r\n        eval: function (context) {\r\n            var mathBypass = false, prevMath, name = this.name, evaldValue, variable = this.variable;\r\n            if (typeof name !== 'string') {\r\n                // expand 'primitive' name directly to get\r\n                // things faster (~10% for benchmark.less):\r\n                name = (name.length === 1) && (name[0] instanceof Keyword) ?\r\n                    name[0].value : evalName(context, name);\r\n                variable = false; // never treat expanded interpolation as new variable name\r\n            }\r\n            // @todo remove when parens-division is default\r\n            if (name === 'font' && context.math === MATH$1.ALWAYS) {\r\n                mathBypass = true;\r\n                prevMath = context.math;\r\n                context.math = MATH$1.PARENS_DIVISION;\r\n            }\r\n            try {\r\n                context.importantScope.push({});\r\n                evaldValue = this.value.eval(context);\r\n                if (!this.variable && evaldValue.type === 'DetachedRuleset') {\r\n                    throw { message: 'Rulesets cannot be evaluated on a property.',\r\n                        index: this.getIndex(), filename: this.fileInfo().filename };\r\n                }\r\n                var important = this.important;\r\n                var importantResult = context.importantScope.pop();\r\n                if (!important && importantResult.important) {\r\n                    important = importantResult.important;\r\n                }\r\n                return new Declaration(name, evaldValue, important, this.merge, this.getIndex(), this.fileInfo(), this.inline, variable);\r\n            }\r\n            catch (e) {\r\n                if (typeof e.index !== 'number') {\r\n                    e.index = this.getIndex();\r\n                    e.filename = this.fileInfo().filename;\r\n                }\r\n                throw e;\r\n            }\r\n            finally {\r\n                if (mathBypass) {\r\n                    context.math = prevMath;\r\n                }\r\n            }\r\n        },\r\n        makeImportant: function () {\r\n            return new Declaration(this.name, this.value, '!important', this.merge, this.getIndex(), this.fileInfo(), this.inline);\r\n        }\r\n    });\n\n    function asComment(ctx) {\r\n        return \"/* line \".concat(ctx.debugInfo.lineNumber, \", \").concat(ctx.debugInfo.fileName, \" */\\n\");\r\n    }\r\n    function asMediaQuery(ctx) {\r\n        var filenameWithProtocol = ctx.debugInfo.fileName;\r\n        if (!/^[a-z]+:\\/\\//i.test(filenameWithProtocol)) {\r\n            filenameWithProtocol = \"file://\".concat(filenameWithProtocol);\r\n        }\r\n        return \"@media -sass-debug-info{filename{font-family:\".concat(filenameWithProtocol.replace(/([.:/\\\\])/g, function (a) {\r\n            if (a == '\\\\') {\r\n                a = '/';\r\n            }\r\n            return \"\\\\\".concat(a);\r\n        }), \"}line{font-family:\\\\00003\").concat(ctx.debugInfo.lineNumber, \"}}\\n\");\r\n    }\r\n    function debugInfo(context, ctx, lineSeparator) {\r\n        var result = '';\r\n        if (context.dumpLineNumbers && !context.compress) {\r\n            switch (context.dumpLineNumbers) {\r\n                case 'comments':\r\n                    result = asComment(ctx);\r\n                    break;\r\n                case 'mediaquery':\r\n                    result = asMediaQuery(ctx);\r\n                    break;\r\n                case 'all':\r\n                    result = asComment(ctx) + (lineSeparator || '') + asMediaQuery(ctx);\r\n                    break;\r\n            }\r\n        }\r\n        return result;\r\n    }\n\n    var Comment = function (value, isLineComment, index, currentFileInfo) {\r\n        this.value = value;\r\n        this.isLineComment = isLineComment;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.allowRoot = true;\r\n    };\r\n    Comment.prototype = Object.assign(new Node(), {\r\n        type: 'Comment',\r\n        genCSS: function (context, output) {\r\n            if (this.debugInfo) {\r\n                output.add(debugInfo(context, this), this.fileInfo(), this.getIndex());\r\n            }\r\n            output.add(this.value);\r\n        },\r\n        isSilent: function (context) {\r\n            var isCompressed = context.compress && this.value[2] !== '!';\r\n            return this.isLineComment || isCompressed;\r\n        }\r\n    });\n\n    var defaultFunc = {\r\n        eval: function () {\r\n            var v = this.value_;\r\n            var e = this.error_;\r\n            if (e) {\r\n                throw e;\r\n            }\r\n            if (!isNullOrUndefined(v)) {\r\n                return v ? Keyword.True : Keyword.False;\r\n            }\r\n        },\r\n        value: function (v) {\r\n            this.value_ = v;\r\n        },\r\n        error: function (e) {\r\n            this.error_ = e;\r\n        },\r\n        reset: function () {\r\n            this.value_ = this.error_ = null;\r\n        }\r\n    };\n\n    var Ruleset = function (selectors, rules, strictImports, visibilityInfo) {\r\n        this.selectors = selectors;\r\n        this.rules = rules;\r\n        this._lookups = {};\r\n        this._variables = null;\r\n        this._properties = null;\r\n        this.strictImports = strictImports;\r\n        this.copyVisibilityInfo(visibilityInfo);\r\n        this.allowRoot = true;\r\n        this.setParent(this.selectors, this);\r\n        this.setParent(this.rules, this);\r\n    };\r\n    Ruleset.prototype = Object.assign(new Node(), {\r\n        type: 'Ruleset',\r\n        isRuleset: true,\r\n        isRulesetLike: function () { return true; },\r\n        accept: function (visitor) {\r\n            if (this.paths) {\r\n                this.paths = visitor.visitArray(this.paths, true);\r\n            }\r\n            else if (this.selectors) {\r\n                this.selectors = visitor.visitArray(this.selectors);\r\n            }\r\n            if (this.rules && this.rules.length) {\r\n                this.rules = visitor.visitArray(this.rules);\r\n            }\r\n        },\r\n        eval: function (context) {\r\n            var selectors;\r\n            var selCnt;\r\n            var selector;\r\n            var i;\r\n            var hasVariable;\r\n            var hasOnePassingSelector = false;\r\n            if (this.selectors && (selCnt = this.selectors.length)) {\r\n                selectors = new Array(selCnt);\r\n                defaultFunc.error({\r\n                    type: 'Syntax',\r\n                    message: 'it is currently only allowed in parametric mixin guards,'\r\n                });\r\n                for (i = 0; i < selCnt; i++) {\r\n                    selector = this.selectors[i].eval(context);\r\n                    for (var j = 0; j < selector.elements.length; j++) {\r\n                        if (selector.elements[j].isVariable) {\r\n                            hasVariable = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                    selectors[i] = selector;\r\n                    if (selector.evaldCondition) {\r\n                        hasOnePassingSelector = true;\r\n                    }\r\n                }\r\n                if (hasVariable) {\r\n                    var toParseSelectors = new Array(selCnt);\r\n                    for (i = 0; i < selCnt; i++) {\r\n                        selector = selectors[i];\r\n                        toParseSelectors[i] = selector.toCSS(context);\r\n                    }\r\n                    var startingIndex = selectors[0].getIndex();\r\n                    var selectorFileInfo = selectors[0].fileInfo();\r\n                    new Parser(context, this.parse.importManager, selectorFileInfo, startingIndex).parseNode(toParseSelectors.join(','), ['selectors'], function (err, result) {\r\n                        if (result) {\r\n                            selectors = flattenArray(result);\r\n                        }\r\n                    });\r\n                }\r\n                defaultFunc.reset();\r\n            }\r\n            else {\r\n                hasOnePassingSelector = true;\r\n            }\r\n            var rules = this.rules ? copyArray(this.rules) : null;\r\n            var ruleset = new Ruleset(selectors, rules, this.strictImports, this.visibilityInfo());\r\n            var rule;\r\n            var subRule;\r\n            ruleset.originalRuleset = this;\r\n            ruleset.root = this.root;\r\n            ruleset.firstRoot = this.firstRoot;\r\n            ruleset.allowImports = this.allowImports;\r\n            if (this.debugInfo) {\r\n                ruleset.debugInfo = this.debugInfo;\r\n            }\r\n            if (!hasOnePassingSelector) {\r\n                rules.length = 0;\r\n            }\r\n            // inherit a function registry from the frames stack when possible;\r\n            // otherwise from the global registry\r\n            ruleset.functionRegistry = (function (frames) {\r\n                var i = 0;\r\n                var n = frames.length;\r\n                var found;\r\n                for (; i !== n; ++i) {\r\n                    found = frames[i].functionRegistry;\r\n                    if (found) {\r\n                        return found;\r\n                    }\r\n                }\r\n                return functionRegistry;\r\n            }(context.frames)).inherit();\r\n            // push the current ruleset to the frames stack\r\n            var ctxFrames = context.frames;\r\n            ctxFrames.unshift(ruleset);\r\n            // currrent selectors\r\n            var ctxSelectors = context.selectors;\r\n            if (!ctxSelectors) {\r\n                context.selectors = ctxSelectors = [];\r\n            }\r\n            ctxSelectors.unshift(this.selectors);\r\n            // Evaluate imports\r\n            if (ruleset.root || ruleset.allowImports || !ruleset.strictImports) {\r\n                ruleset.evalImports(context);\r\n            }\r\n            // Store the frames around mixin definitions,\r\n            // so they can be evaluated like closures when the time comes.\r\n            var rsRules = ruleset.rules;\r\n            for (i = 0; (rule = rsRules[i]); i++) {\r\n                if (rule.evalFirst) {\r\n                    rsRules[i] = rule.eval(context);\r\n                }\r\n            }\r\n            var mediaBlockCount = (context.mediaBlocks && context.mediaBlocks.length) || 0;\r\n            // Evaluate mixin calls.\r\n            for (i = 0; (rule = rsRules[i]); i++) {\r\n                if (rule.type === 'MixinCall') {\r\n                    /* jshint loopfunc:true */\r\n                    rules = rule.eval(context).filter(function (r) {\r\n                        if ((r instanceof Declaration) && r.variable) {\r\n                            // do not pollute the scope if the variable is\r\n                            // already there. consider returning false here\r\n                            // but we need a way to \"return\" variable from mixins\r\n                            return !(ruleset.variable(r.name));\r\n                        }\r\n                        return true;\r\n                    });\r\n                    rsRules.splice.apply(rsRules, [i, 1].concat(rules));\r\n                    i += rules.length - 1;\r\n                    ruleset.resetCache();\r\n                }\r\n                else if (rule.type === 'VariableCall') {\r\n                    /* jshint loopfunc:true */\r\n                    rules = rule.eval(context).rules.filter(function (r) {\r\n                        if ((r instanceof Declaration) && r.variable) {\r\n                            // do not pollute the scope at all\r\n                            return false;\r\n                        }\r\n                        return true;\r\n                    });\r\n                    rsRules.splice.apply(rsRules, [i, 1].concat(rules));\r\n                    i += rules.length - 1;\r\n                    ruleset.resetCache();\r\n                }\r\n            }\r\n            // Evaluate everything else\r\n            for (i = 0; (rule = rsRules[i]); i++) {\r\n                if (!rule.evalFirst) {\r\n                    rsRules[i] = rule = rule.eval ? rule.eval(context) : rule;\r\n                }\r\n            }\r\n            // Evaluate everything else\r\n            for (i = 0; (rule = rsRules[i]); i++) {\r\n                // for rulesets, check if it is a css guard and can be removed\r\n                if (rule instanceof Ruleset && rule.selectors && rule.selectors.length === 1) {\r\n                    // check if it can be folded in (e.g. & where)\r\n                    if (rule.selectors[0] && rule.selectors[0].isJustParentSelector()) {\r\n                        rsRules.splice(i--, 1);\r\n                        for (var j = 0; (subRule = rule.rules[j]); j++) {\r\n                            if (subRule instanceof Node) {\r\n                                subRule.copyVisibilityInfo(rule.visibilityInfo());\r\n                                if (!(subRule instanceof Declaration) || !subRule.variable) {\r\n                                    rsRules.splice(++i, 0, subRule);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // Pop the stack\r\n            ctxFrames.shift();\r\n            ctxSelectors.shift();\r\n            if (context.mediaBlocks) {\r\n                for (i = mediaBlockCount; i < context.mediaBlocks.length; i++) {\r\n                    context.mediaBlocks[i].bubbleSelectors(selectors);\r\n                }\r\n            }\r\n            return ruleset;\r\n        },\r\n        evalImports: function (context) {\r\n            var rules = this.rules;\r\n            var i;\r\n            var importRules;\r\n            if (!rules) {\r\n                return;\r\n            }\r\n            for (i = 0; i < rules.length; i++) {\r\n                if (rules[i].type === 'Import') {\r\n                    importRules = rules[i].eval(context);\r\n                    if (importRules && (importRules.length || importRules.length === 0)) {\r\n                        rules.splice.apply(rules, [i, 1].concat(importRules));\r\n                        i += importRules.length - 1;\r\n                    }\r\n                    else {\r\n                        rules.splice(i, 1, importRules);\r\n                    }\r\n                    this.resetCache();\r\n                }\r\n            }\r\n        },\r\n        makeImportant: function () {\r\n            var result = new Ruleset(this.selectors, this.rules.map(function (r) {\r\n                if (r.makeImportant) {\r\n                    return r.makeImportant();\r\n                }\r\n                else {\r\n                    return r;\r\n                }\r\n            }), this.strictImports, this.visibilityInfo());\r\n            return result;\r\n        },\r\n        matchArgs: function (args) {\r\n            return !args || args.length === 0;\r\n        },\r\n        // lets you call a css selector with a guard\r\n        matchCondition: function (args, context) {\r\n            var lastSelector = this.selectors[this.selectors.length - 1];\r\n            if (!lastSelector.evaldCondition) {\r\n                return false;\r\n            }\r\n            if (lastSelector.condition &&\r\n                !lastSelector.condition.eval(new contexts.Eval(context, context.frames))) {\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n        resetCache: function () {\r\n            this._rulesets = null;\r\n            this._variables = null;\r\n            this._properties = null;\r\n            this._lookups = {};\r\n        },\r\n        variables: function () {\r\n            if (!this._variables) {\r\n                this._variables = !this.rules ? {} : this.rules.reduce(function (hash, r) {\r\n                    if (r instanceof Declaration && r.variable === true) {\r\n                        hash[r.name] = r;\r\n                    }\r\n                    // when evaluating variables in an import statement, imports have not been eval'd\r\n                    // so we need to go inside import statements.\r\n                    // guard against root being a string (in the case of inlined less)\r\n                    if (r.type === 'Import' && r.root && r.root.variables) {\r\n                        var vars = r.root.variables();\r\n                        for (var name_1 in vars) {\r\n                            // eslint-disable-next-line no-prototype-builtins\r\n                            if (vars.hasOwnProperty(name_1)) {\r\n                                hash[name_1] = r.root.variable(name_1);\r\n                            }\r\n                        }\r\n                    }\r\n                    return hash;\r\n                }, {});\r\n            }\r\n            return this._variables;\r\n        },\r\n        properties: function () {\r\n            if (!this._properties) {\r\n                this._properties = !this.rules ? {} : this.rules.reduce(function (hash, r) {\r\n                    if (r instanceof Declaration && r.variable !== true) {\r\n                        var name_2 = (r.name.length === 1) && (r.name[0] instanceof Keyword) ?\r\n                            r.name[0].value : r.name;\r\n                        // Properties don't overwrite as they can merge\r\n                        if (!hash[\"$\".concat(name_2)]) {\r\n                            hash[\"$\".concat(name_2)] = [r];\r\n                        }\r\n                        else {\r\n                            hash[\"$\".concat(name_2)].push(r);\r\n                        }\r\n                    }\r\n                    return hash;\r\n                }, {});\r\n            }\r\n            return this._properties;\r\n        },\r\n        variable: function (name) {\r\n            var decl = this.variables()[name];\r\n            if (decl) {\r\n                return this.parseValue(decl);\r\n            }\r\n        },\r\n        property: function (name) {\r\n            var decl = this.properties()[name];\r\n            if (decl) {\r\n                return this.parseValue(decl);\r\n            }\r\n        },\r\n        lastDeclaration: function () {\r\n            for (var i_1 = this.rules.length; i_1 > 0; i_1--) {\r\n                var decl = this.rules[i_1 - 1];\r\n                if (decl instanceof Declaration) {\r\n                    return this.parseValue(decl);\r\n                }\r\n            }\r\n        },\r\n        parseValue: function (toParse) {\r\n            var self = this;\r\n            function transformDeclaration(decl) {\r\n                if (decl.value instanceof Anonymous && !decl.parsed) {\r\n                    if (typeof decl.value.value === 'string') {\r\n                        new Parser(this.parse.context, this.parse.importManager, decl.fileInfo(), decl.value.getIndex()).parseNode(decl.value.value, ['value', 'important'], function (err, result) {\r\n                            if (err) {\r\n                                decl.parsed = true;\r\n                            }\r\n                            if (result) {\r\n                                decl.value = result[0];\r\n                                decl.important = result[1] || '';\r\n                                decl.parsed = true;\r\n                            }\r\n                        });\r\n                    }\r\n                    else {\r\n                        decl.parsed = true;\r\n                    }\r\n                    return decl;\r\n                }\r\n                else {\r\n                    return decl;\r\n                }\r\n            }\r\n            if (!Array.isArray(toParse)) {\r\n                return transformDeclaration.call(self, toParse);\r\n            }\r\n            else {\r\n                var nodes_1 = [];\r\n                toParse.forEach(function (n) {\r\n                    nodes_1.push(transformDeclaration.call(self, n));\r\n                });\r\n                return nodes_1;\r\n            }\r\n        },\r\n        rulesets: function () {\r\n            if (!this.rules) {\r\n                return [];\r\n            }\r\n            var filtRules = [];\r\n            var rules = this.rules;\r\n            var i;\r\n            var rule;\r\n            for (i = 0; (rule = rules[i]); i++) {\r\n                if (rule.isRuleset) {\r\n                    filtRules.push(rule);\r\n                }\r\n            }\r\n            return filtRules;\r\n        },\r\n        prependRule: function (rule) {\r\n            var rules = this.rules;\r\n            if (rules) {\r\n                rules.unshift(rule);\r\n            }\r\n            else {\r\n                this.rules = [rule];\r\n            }\r\n            this.setParent(rule, this);\r\n        },\r\n        find: function (selector, self, filter) {\r\n            self = self || this;\r\n            var rules = [];\r\n            var match;\r\n            var foundMixins;\r\n            var key = selector.toCSS();\r\n            if (key in this._lookups) {\r\n                return this._lookups[key];\r\n            }\r\n            this.rulesets().forEach(function (rule) {\r\n                if (rule !== self) {\r\n                    for (var j = 0; j < rule.selectors.length; j++) {\r\n                        match = selector.match(rule.selectors[j]);\r\n                        if (match) {\r\n                            if (selector.elements.length > match) {\r\n                                if (!filter || filter(rule)) {\r\n                                    foundMixins = rule.find(new Selector(selector.elements.slice(match)), self, filter);\r\n                                    for (var i_2 = 0; i_2 < foundMixins.length; ++i_2) {\r\n                                        foundMixins[i_2].path.push(rule);\r\n                                    }\r\n                                    Array.prototype.push.apply(rules, foundMixins);\r\n                                }\r\n                            }\r\n                            else {\r\n                                rules.push({ rule: rule, path: [] });\r\n                            }\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            this._lookups[key] = rules;\r\n            return rules;\r\n        },\r\n        genCSS: function (context, output) {\r\n            var i;\r\n            var j;\r\n            var charsetRuleNodes = [];\r\n            var ruleNodes = [];\r\n            var // Line number debugging\r\n            debugInfo$1;\r\n            var rule;\r\n            var path;\r\n            context.tabLevel = (context.tabLevel || 0);\r\n            if (!this.root) {\r\n                context.tabLevel++;\r\n            }\r\n            var tabRuleStr = context.compress ? '' : Array(context.tabLevel + 1).join('  ');\r\n            var tabSetStr = context.compress ? '' : Array(context.tabLevel).join('  ');\r\n            var sep;\r\n            var charsetNodeIndex = 0;\r\n            var importNodeIndex = 0;\r\n            for (i = 0; (rule = this.rules[i]); i++) {\r\n                if (rule instanceof Comment) {\r\n                    if (importNodeIndex === i) {\r\n                        importNodeIndex++;\r\n                    }\r\n                    ruleNodes.push(rule);\r\n                }\r\n                else if (rule.isCharset && rule.isCharset()) {\r\n                    ruleNodes.splice(charsetNodeIndex, 0, rule);\r\n                    charsetNodeIndex++;\r\n                    importNodeIndex++;\r\n                }\r\n                else if (rule.type === 'Import') {\r\n                    ruleNodes.splice(importNodeIndex, 0, rule);\r\n                    importNodeIndex++;\r\n                }\r\n                else {\r\n                    ruleNodes.push(rule);\r\n                }\r\n            }\r\n            ruleNodes = charsetRuleNodes.concat(ruleNodes);\r\n            // If this is the root node, we don't render\r\n            // a selector, or {}.\r\n            if (!this.root) {\r\n                debugInfo$1 = debugInfo(context, this, tabSetStr);\r\n                if (debugInfo$1) {\r\n                    output.add(debugInfo$1);\r\n                    output.add(tabSetStr);\r\n                }\r\n                var paths = this.paths;\r\n                var pathCnt = paths.length;\r\n                var pathSubCnt = void 0;\r\n                sep = context.compress ? ',' : (\",\\n\".concat(tabSetStr));\r\n                for (i = 0; i < pathCnt; i++) {\r\n                    path = paths[i];\r\n                    if (!(pathSubCnt = path.length)) {\r\n                        continue;\r\n                    }\r\n                    if (i > 0) {\r\n                        output.add(sep);\r\n                    }\r\n                    context.firstSelector = true;\r\n                    path[0].genCSS(context, output);\r\n                    context.firstSelector = false;\r\n                    for (j = 1; j < pathSubCnt; j++) {\r\n                        path[j].genCSS(context, output);\r\n                    }\r\n                }\r\n                output.add((context.compress ? '{' : ' {\\n') + tabRuleStr);\r\n            }\r\n            // Compile rules and rulesets\r\n            for (i = 0; (rule = ruleNodes[i]); i++) {\r\n                if (i + 1 === ruleNodes.length) {\r\n                    context.lastRule = true;\r\n                }\r\n                var currentLastRule = context.lastRule;\r\n                if (rule.isRulesetLike(rule)) {\r\n                    context.lastRule = false;\r\n                }\r\n                if (rule.genCSS) {\r\n                    rule.genCSS(context, output);\r\n                }\r\n                else if (rule.value) {\r\n                    output.add(rule.value.toString());\r\n                }\r\n                context.lastRule = currentLastRule;\r\n                if (!context.lastRule && rule.isVisible()) {\r\n                    output.add(context.compress ? '' : (\"\\n\".concat(tabRuleStr)));\r\n                }\r\n                else {\r\n                    context.lastRule = false;\r\n                }\r\n            }\r\n            if (!this.root) {\r\n                output.add((context.compress ? '}' : \"\\n\".concat(tabSetStr, \"}\")));\r\n                context.tabLevel--;\r\n            }\r\n            if (!output.isEmpty() && !context.compress && this.firstRoot) {\r\n                output.add('\\n');\r\n            }\r\n        },\r\n        joinSelectors: function (paths, context, selectors) {\r\n            for (var s = 0; s < selectors.length; s++) {\r\n                this.joinSelector(paths, context, selectors[s]);\r\n            }\r\n        },\r\n        joinSelector: function (paths, context, selector) {\r\n            function createParenthesis(elementsToPak, originalElement) {\r\n                var replacementParen, j;\r\n                if (elementsToPak.length === 0) {\r\n                    replacementParen = new Paren(elementsToPak[0]);\r\n                }\r\n                else {\r\n                    var insideParent = new Array(elementsToPak.length);\r\n                    for (j = 0; j < elementsToPak.length; j++) {\r\n                        insideParent[j] = new Element(null, elementsToPak[j], originalElement.isVariable, originalElement._index, originalElement._fileInfo);\r\n                    }\r\n                    replacementParen = new Paren(new Selector(insideParent));\r\n                }\r\n                return replacementParen;\r\n            }\r\n            function createSelector(containedElement, originalElement) {\r\n                var element, selector;\r\n                element = new Element(null, containedElement, originalElement.isVariable, originalElement._index, originalElement._fileInfo);\r\n                selector = new Selector([element]);\r\n                return selector;\r\n            }\r\n            // joins selector path from `beginningPath` with selector path in `addPath`\r\n            // `replacedElement` contains element that is being replaced by `addPath`\r\n            // returns concatenated path\r\n            function addReplacementIntoPath(beginningPath, addPath, replacedElement, originalSelector) {\r\n                var newSelectorPath, lastSelector, newJoinedSelector;\r\n                // our new selector path\r\n                newSelectorPath = [];\r\n                // construct the joined selector - if & is the first thing this will be empty,\r\n                // if not newJoinedSelector will be the last set of elements in the selector\r\n                if (beginningPath.length > 0) {\r\n                    newSelectorPath = copyArray(beginningPath);\r\n                    lastSelector = newSelectorPath.pop();\r\n                    newJoinedSelector = originalSelector.createDerived(copyArray(lastSelector.elements));\r\n                }\r\n                else {\r\n                    newJoinedSelector = originalSelector.createDerived([]);\r\n                }\r\n                if (addPath.length > 0) {\r\n                    // /deep/ is a CSS4 selector - (removed, so should deprecate)\r\n                    // that is valid without anything in front of it\r\n                    // so if the & does not have a combinator that is \"\" or \" \" then\r\n                    // and there is a combinator on the parent, then grab that.\r\n                    // this also allows + a { & .b { .a & { ... though not sure why you would want to do that\r\n                    var combinator = replacedElement.combinator;\r\n                    var parentEl = addPath[0].elements[0];\r\n                    if (combinator.emptyOrWhitespace && !parentEl.combinator.emptyOrWhitespace) {\r\n                        combinator = parentEl.combinator;\r\n                    }\r\n                    // join the elements so far with the first part of the parent\r\n                    newJoinedSelector.elements.push(new Element(combinator, parentEl.value, replacedElement.isVariable, replacedElement._index, replacedElement._fileInfo));\r\n                    newJoinedSelector.elements = newJoinedSelector.elements.concat(addPath[0].elements.slice(1));\r\n                }\r\n                // now add the joined selector - but only if it is not empty\r\n                if (newJoinedSelector.elements.length !== 0) {\r\n                    newSelectorPath.push(newJoinedSelector);\r\n                }\r\n                // put together the parent selectors after the join (e.g. the rest of the parent)\r\n                if (addPath.length > 1) {\r\n                    var restOfPath = addPath.slice(1);\r\n                    restOfPath = restOfPath.map(function (selector) {\r\n                        return selector.createDerived(selector.elements, []);\r\n                    });\r\n                    newSelectorPath = newSelectorPath.concat(restOfPath);\r\n                }\r\n                return newSelectorPath;\r\n            }\r\n            // joins selector path from `beginningPath` with every selector path in `addPaths` array\r\n            // `replacedElement` contains element that is being replaced by `addPath`\r\n            // returns array with all concatenated paths\r\n            function addAllReplacementsIntoPath(beginningPath, addPaths, replacedElement, originalSelector, result) {\r\n                var j;\r\n                for (j = 0; j < beginningPath.length; j++) {\r\n                    var newSelectorPath = addReplacementIntoPath(beginningPath[j], addPaths, replacedElement, originalSelector);\r\n                    result.push(newSelectorPath);\r\n                }\r\n                return result;\r\n            }\r\n            function mergeElementsOnToSelectors(elements, selectors) {\r\n                var i, sel;\r\n                if (elements.length === 0) {\r\n                    return;\r\n                }\r\n                if (selectors.length === 0) {\r\n                    selectors.push([new Selector(elements)]);\r\n                    return;\r\n                }\r\n                for (i = 0; (sel = selectors[i]); i++) {\r\n                    // if the previous thing in sel is a parent this needs to join on to it\r\n                    if (sel.length > 0) {\r\n                        sel[sel.length - 1] = sel[sel.length - 1].createDerived(sel[sel.length - 1].elements.concat(elements));\r\n                    }\r\n                    else {\r\n                        sel.push(new Selector(elements));\r\n                    }\r\n                }\r\n            }\r\n            // replace all parent selectors inside `inSelector` by content of `context` array\r\n            // resulting selectors are returned inside `paths` array\r\n            // returns true if `inSelector` contained at least one parent selector\r\n            function replaceParentSelector(paths, context, inSelector) {\r\n                // The paths are [[Selector]]\r\n                // The first list is a list of comma separated selectors\r\n                // The inner list is a list of inheritance separated selectors\r\n                // e.g.\r\n                // .a, .b {\r\n                //   .c {\r\n                //   }\r\n                // }\r\n                // == [[.a] [.c]] [[.b] [.c]]\r\n                //\r\n                var i, j, k, currentElements, newSelectors, selectorsMultiplied, sel, el, hadParentSelector = false, length, lastSelector;\r\n                function findNestedSelector(element) {\r\n                    var maybeSelector;\r\n                    if (!(element.value instanceof Paren)) {\r\n                        return null;\r\n                    }\r\n                    maybeSelector = element.value.value;\r\n                    if (!(maybeSelector instanceof Selector)) {\r\n                        return null;\r\n                    }\r\n                    return maybeSelector;\r\n                }\r\n                // the elements from the current selector so far\r\n                currentElements = [];\r\n                // the current list of new selectors to add to the path.\r\n                // We will build it up. We initiate it with one empty selector as we \"multiply\" the new selectors\r\n                // by the parents\r\n                newSelectors = [\r\n                    []\r\n                ];\r\n                for (i = 0; (el = inSelector.elements[i]); i++) {\r\n                    // non parent reference elements just get added\r\n                    if (el.value !== '&') {\r\n                        var nestedSelector = findNestedSelector(el);\r\n                        if (nestedSelector !== null) {\r\n                            // merge the current list of non parent selector elements\r\n                            // on to the current list of selectors to add\r\n                            mergeElementsOnToSelectors(currentElements, newSelectors);\r\n                            var nestedPaths = [];\r\n                            var replaced = void 0;\r\n                            var replacedNewSelectors = [];\r\n                            replaced = replaceParentSelector(nestedPaths, context, nestedSelector);\r\n                            hadParentSelector = hadParentSelector || replaced;\r\n                            // the nestedPaths array should have only one member - replaceParentSelector does not multiply selectors\r\n                            for (k = 0; k < nestedPaths.length; k++) {\r\n                                var replacementSelector = createSelector(createParenthesis(nestedPaths[k], el), el);\r\n                                addAllReplacementsIntoPath(newSelectors, [replacementSelector], el, inSelector, replacedNewSelectors);\r\n                            }\r\n                            newSelectors = replacedNewSelectors;\r\n                            currentElements = [];\r\n                        }\r\n                        else {\r\n                            currentElements.push(el);\r\n                        }\r\n                    }\r\n                    else {\r\n                        hadParentSelector = true;\r\n                        // the new list of selectors to add\r\n                        selectorsMultiplied = [];\r\n                        // merge the current list of non parent selector elements\r\n                        // on to the current list of selectors to add\r\n                        mergeElementsOnToSelectors(currentElements, newSelectors);\r\n                        // loop through our current selectors\r\n                        for (j = 0; j < newSelectors.length; j++) {\r\n                            sel = newSelectors[j];\r\n                            // if we don't have any parent paths, the & might be in a mixin so that it can be used\r\n                            // whether there are parents or not\r\n                            if (context.length === 0) {\r\n                                // the combinator used on el should now be applied to the next element instead so that\r\n                                // it is not lost\r\n                                if (sel.length > 0) {\r\n                                    sel[0].elements.push(new Element(el.combinator, '', el.isVariable, el._index, el._fileInfo));\r\n                                }\r\n                                selectorsMultiplied.push(sel);\r\n                            }\r\n                            else {\r\n                                // and the parent selectors\r\n                                for (k = 0; k < context.length; k++) {\r\n                                    // We need to put the current selectors\r\n                                    // then join the last selector's elements on to the parents selectors\r\n                                    var newSelectorPath = addReplacementIntoPath(sel, context[k], el, inSelector);\r\n                                    // add that to our new set of selectors\r\n                                    selectorsMultiplied.push(newSelectorPath);\r\n                                }\r\n                            }\r\n                        }\r\n                        // our new selectors has been multiplied, so reset the state\r\n                        newSelectors = selectorsMultiplied;\r\n                        currentElements = [];\r\n                    }\r\n                }\r\n                // if we have any elements left over (e.g. .a& .b == .b)\r\n                // add them on to all the current selectors\r\n                mergeElementsOnToSelectors(currentElements, newSelectors);\r\n                for (i = 0; i < newSelectors.length; i++) {\r\n                    length = newSelectors[i].length;\r\n                    if (length > 0) {\r\n                        paths.push(newSelectors[i]);\r\n                        lastSelector = newSelectors[i][length - 1];\r\n                        newSelectors[i][length - 1] = lastSelector.createDerived(lastSelector.elements, inSelector.extendList);\r\n                    }\r\n                }\r\n                return hadParentSelector;\r\n            }\r\n            function deriveSelector(visibilityInfo, deriveFrom) {\r\n                var newSelector = deriveFrom.createDerived(deriveFrom.elements, deriveFrom.extendList, deriveFrom.evaldCondition);\r\n                newSelector.copyVisibilityInfo(visibilityInfo);\r\n                return newSelector;\r\n            }\r\n            // joinSelector code follows\r\n            var i, newPaths, hadParentSelector;\r\n            newPaths = [];\r\n            hadParentSelector = replaceParentSelector(newPaths, context, selector);\r\n            if (!hadParentSelector) {\r\n                if (context.length > 0) {\r\n                    newPaths = [];\r\n                    for (i = 0; i < context.length; i++) {\r\n                        var concatenated = context[i].map(deriveSelector.bind(this, selector.visibilityInfo()));\r\n                        concatenated.push(selector);\r\n                        newPaths.push(concatenated);\r\n                    }\r\n                }\r\n                else {\r\n                    newPaths = [[selector]];\r\n                }\r\n            }\r\n            for (i = 0; i < newPaths.length; i++) {\r\n                paths.push(newPaths[i]);\r\n            }\r\n        }\r\n    });\n\n    var AtRule = function (name, value, rules, index, currentFileInfo, debugInfo, isRooted, visibilityInfo) {\r\n        var i;\r\n        this.name = name;\r\n        this.value = (value instanceof Node) ? value : (value ? new Anonymous(value) : value);\r\n        if (rules) {\r\n            if (Array.isArray(rules)) {\r\n                this.rules = rules;\r\n            }\r\n            else {\r\n                this.rules = [rules];\r\n                this.rules[0].selectors = (new Selector([], null, null, index, currentFileInfo)).createEmptySelectors();\r\n            }\r\n            for (i = 0; i < this.rules.length; i++) {\r\n                this.rules[i].allowImports = true;\r\n            }\r\n            this.setParent(this.rules, this);\r\n        }\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.debugInfo = debugInfo;\r\n        this.isRooted = isRooted || false;\r\n        this.copyVisibilityInfo(visibilityInfo);\r\n        this.allowRoot = true;\r\n    };\r\n    AtRule.prototype = Object.assign(new Node(), {\r\n        type: 'AtRule',\r\n        accept: function (visitor) {\r\n            var value = this.value, rules = this.rules;\r\n            if (rules) {\r\n                this.rules = visitor.visitArray(rules);\r\n            }\r\n            if (value) {\r\n                this.value = visitor.visit(value);\r\n            }\r\n        },\r\n        isRulesetLike: function () {\r\n            return this.rules || !this.isCharset();\r\n        },\r\n        isCharset: function () {\r\n            return '@charset' === this.name;\r\n        },\r\n        genCSS: function (context, output) {\r\n            var value = this.value, rules = this.rules;\r\n            output.add(this.name, this.fileInfo(), this.getIndex());\r\n            if (value) {\r\n                output.add(' ');\r\n                value.genCSS(context, output);\r\n            }\r\n            if (rules) {\r\n                this.outputRuleset(context, output, rules);\r\n            }\r\n            else {\r\n                output.add(';');\r\n            }\r\n        },\r\n        eval: function (context) {\r\n            var mediaPathBackup, mediaBlocksBackup, value = this.value, rules = this.rules;\r\n            // media stored inside other atrule should not bubble over it\r\n            // backpup media bubbling information\r\n            mediaPathBackup = context.mediaPath;\r\n            mediaBlocksBackup = context.mediaBlocks;\r\n            // deleted media bubbling information\r\n            context.mediaPath = [];\r\n            context.mediaBlocks = [];\r\n            if (value) {\r\n                value = value.eval(context);\r\n            }\r\n            if (rules) {\r\n                // assuming that there is only one rule at this point - that is how parser constructs the rule\r\n                rules = [rules[0].eval(context)];\r\n                rules[0].root = true;\r\n            }\r\n            // restore media bubbling information\r\n            context.mediaPath = mediaPathBackup;\r\n            context.mediaBlocks = mediaBlocksBackup;\r\n            return new AtRule(this.name, value, rules, this.getIndex(), this.fileInfo(), this.debugInfo, this.isRooted, this.visibilityInfo());\r\n        },\r\n        variable: function (name) {\r\n            if (this.rules) {\r\n                // assuming that there is only one rule at this point - that is how parser constructs the rule\r\n                return Ruleset.prototype.variable.call(this.rules[0], name);\r\n            }\r\n        },\r\n        find: function () {\r\n            if (this.rules) {\r\n                // assuming that there is only one rule at this point - that is how parser constructs the rule\r\n                return Ruleset.prototype.find.apply(this.rules[0], arguments);\r\n            }\r\n        },\r\n        rulesets: function () {\r\n            if (this.rules) {\r\n                // assuming that there is only one rule at this point - that is how parser constructs the rule\r\n                return Ruleset.prototype.rulesets.apply(this.rules[0]);\r\n            }\r\n        },\r\n        outputRuleset: function (context, output, rules) {\r\n            var ruleCnt = rules.length;\r\n            var i;\r\n            context.tabLevel = (context.tabLevel | 0) + 1;\r\n            // Compressed\r\n            if (context.compress) {\r\n                output.add('{');\r\n                for (i = 0; i < ruleCnt; i++) {\r\n                    rules[i].genCSS(context, output);\r\n                }\r\n                output.add('}');\r\n                context.tabLevel--;\r\n                return;\r\n            }\r\n            // Non-compressed\r\n            var tabSetStr = \"\\n\".concat(Array(context.tabLevel).join('  ')), tabRuleStr = \"\".concat(tabSetStr, \"  \");\r\n            if (!ruleCnt) {\r\n                output.add(\" {\".concat(tabSetStr, \"}\"));\r\n            }\r\n            else {\r\n                output.add(\" {\".concat(tabRuleStr));\r\n                rules[0].genCSS(context, output);\r\n                for (i = 1; i < ruleCnt; i++) {\r\n                    output.add(tabRuleStr);\r\n                    rules[i].genCSS(context, output);\r\n                }\r\n                output.add(\"\".concat(tabSetStr, \"}\"));\r\n            }\r\n            context.tabLevel--;\r\n        }\r\n    });\n\n    var DetachedRuleset = function (ruleset, frames) {\r\n        this.ruleset = ruleset;\r\n        this.frames = frames;\r\n        this.setParent(this.ruleset, this);\r\n    };\r\n    DetachedRuleset.prototype = Object.assign(new Node(), {\r\n        type: 'DetachedRuleset',\r\n        evalFirst: true,\r\n        accept: function (visitor) {\r\n            this.ruleset = visitor.visit(this.ruleset);\r\n        },\r\n        eval: function (context) {\r\n            var frames = this.frames || copyArray(context.frames);\r\n            return new DetachedRuleset(this.ruleset, frames);\r\n        },\r\n        callEval: function (context) {\r\n            return this.ruleset.eval(this.frames ? new contexts.Eval(context, this.frames.concat(context.frames)) : context);\r\n        }\r\n    });\n\n    var Unit = function (numerator, denominator, backupUnit) {\r\n        this.numerator = numerator ? copyArray(numerator).sort() : [];\r\n        this.denominator = denominator ? copyArray(denominator).sort() : [];\r\n        if (backupUnit) {\r\n            this.backupUnit = backupUnit;\r\n        }\r\n        else if (numerator && numerator.length) {\r\n            this.backupUnit = numerator[0];\r\n        }\r\n    };\r\n    Unit.prototype = Object.assign(new Node(), {\r\n        type: 'Unit',\r\n        clone: function () {\r\n            return new Unit(copyArray(this.numerator), copyArray(this.denominator), this.backupUnit);\r\n        },\r\n        genCSS: function (context, output) {\r\n            // Dimension checks the unit is singular and throws an error if in strict math mode.\r\n            var strictUnits = context && context.strictUnits;\r\n            if (this.numerator.length === 1) {\r\n                output.add(this.numerator[0]); // the ideal situation\r\n            }\r\n            else if (!strictUnits && this.backupUnit) {\r\n                output.add(this.backupUnit);\r\n            }\r\n            else if (!strictUnits && this.denominator.length) {\r\n                output.add(this.denominator[0]);\r\n            }\r\n        },\r\n        toString: function () {\r\n            var i, returnStr = this.numerator.join('*');\r\n            for (i = 0; i < this.denominator.length; i++) {\r\n                returnStr += \"/\".concat(this.denominator[i]);\r\n            }\r\n            return returnStr;\r\n        },\r\n        compare: function (other) {\r\n            return this.is(other.toString()) ? 0 : undefined;\r\n        },\r\n        is: function (unitString) {\r\n            return this.toString().toUpperCase() === unitString.toUpperCase();\r\n        },\r\n        isLength: function () {\r\n            return RegExp('^(px|em|ex|ch|rem|in|cm|mm|pc|pt|ex|vw|vh|vmin|vmax)$', 'gi').test(this.toCSS());\r\n        },\r\n        isEmpty: function () {\r\n            return this.numerator.length === 0 && this.denominator.length === 0;\r\n        },\r\n        isSingular: function () {\r\n            return this.numerator.length <= 1 && this.denominator.length === 0;\r\n        },\r\n        map: function (callback) {\r\n            var i;\r\n            for (i = 0; i < this.numerator.length; i++) {\r\n                this.numerator[i] = callback(this.numerator[i], false);\r\n            }\r\n            for (i = 0; i < this.denominator.length; i++) {\r\n                this.denominator[i] = callback(this.denominator[i], true);\r\n            }\r\n        },\r\n        usedUnits: function () {\r\n            var group;\r\n            var result = {};\r\n            var mapUnit;\r\n            var groupName;\r\n            mapUnit = function (atomicUnit) {\r\n                // eslint-disable-next-line no-prototype-builtins\r\n                if (group.hasOwnProperty(atomicUnit) && !result[groupName]) {\r\n                    result[groupName] = atomicUnit;\r\n                }\r\n                return atomicUnit;\r\n            };\r\n            for (groupName in unitConversions) {\r\n                // eslint-disable-next-line no-prototype-builtins\r\n                if (unitConversions.hasOwnProperty(groupName)) {\r\n                    group = unitConversions[groupName];\r\n                    this.map(mapUnit);\r\n                }\r\n            }\r\n            return result;\r\n        },\r\n        cancel: function () {\r\n            var counter = {};\r\n            var atomicUnit;\r\n            var i;\r\n            for (i = 0; i < this.numerator.length; i++) {\r\n                atomicUnit = this.numerator[i];\r\n                counter[atomicUnit] = (counter[atomicUnit] || 0) + 1;\r\n            }\r\n            for (i = 0; i < this.denominator.length; i++) {\r\n                atomicUnit = this.denominator[i];\r\n                counter[atomicUnit] = (counter[atomicUnit] || 0) - 1;\r\n            }\r\n            this.numerator = [];\r\n            this.denominator = [];\r\n            for (atomicUnit in counter) {\r\n                // eslint-disable-next-line no-prototype-builtins\r\n                if (counter.hasOwnProperty(atomicUnit)) {\r\n                    var count = counter[atomicUnit];\r\n                    if (count > 0) {\r\n                        for (i = 0; i < count; i++) {\r\n                            this.numerator.push(atomicUnit);\r\n                        }\r\n                    }\r\n                    else if (count < 0) {\r\n                        for (i = 0; i < -count; i++) {\r\n                            this.denominator.push(atomicUnit);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this.numerator.sort();\r\n            this.denominator.sort();\r\n        }\r\n    });\n\n    /* eslint-disable no-prototype-builtins */\r\n    //\r\n    // A number with a unit\r\n    //\r\n    var Dimension = function (value, unit) {\r\n        this.value = parseFloat(value);\r\n        if (isNaN(this.value)) {\r\n            throw new Error('Dimension is not a number.');\r\n        }\r\n        this.unit = (unit && unit instanceof Unit) ? unit :\r\n            new Unit(unit ? [unit] : undefined);\r\n        this.setParent(this.unit, this);\r\n    };\r\n    Dimension.prototype = Object.assign(new Node(), {\r\n        type: 'Dimension',\r\n        accept: function (visitor) {\r\n            this.unit = visitor.visit(this.unit);\r\n        },\r\n        // remove when Nodes have JSDoc types\r\n        // eslint-disable-next-line no-unused-vars\r\n        eval: function (context) {\r\n            return this;\r\n        },\r\n        toColor: function () {\r\n            return new Color([this.value, this.value, this.value]);\r\n        },\r\n        genCSS: function (context, output) {\r\n            if ((context && context.strictUnits) && !this.unit.isSingular()) {\r\n                throw new Error(\"Multiple units in dimension. Correct the units or use the unit function. Bad unit: \".concat(this.unit.toString()));\r\n            }\r\n            var value = this.fround(context, this.value);\r\n            var strValue = String(value);\r\n            if (value !== 0 && value < 0.000001 && value > -0.000001) {\r\n                // would be output 1e-6 etc.\r\n                strValue = value.toFixed(20).replace(/0+$/, '');\r\n            }\r\n            if (context && context.compress) {\r\n                // Zero values doesn't need a unit\r\n                if (value === 0 && this.unit.isLength()) {\r\n                    output.add(strValue);\r\n                    return;\r\n                }\r\n                // Float values doesn't need a leading zero\r\n                if (value > 0 && value < 1) {\r\n                    strValue = (strValue).substr(1);\r\n                }\r\n            }\r\n            output.add(strValue);\r\n            this.unit.genCSS(context, output);\r\n        },\r\n        // In an operation between two Dimensions,\r\n        // we default to the first Dimension's unit,\r\n        // so `1px + 2` will yield `3px`.\r\n        operate: function (context, op, other) {\r\n            /* jshint noempty:false */\r\n            var value = this._operate(context, op, this.value, other.value);\r\n            var unit = this.unit.clone();\r\n            if (op === '+' || op === '-') {\r\n                if (unit.numerator.length === 0 && unit.denominator.length === 0) {\r\n                    unit = other.unit.clone();\r\n                    if (this.unit.backupUnit) {\r\n                        unit.backupUnit = this.unit.backupUnit;\r\n                    }\r\n                }\r\n                else if (other.unit.numerator.length === 0 && unit.denominator.length === 0) ;\r\n                else {\r\n                    other = other.convertTo(this.unit.usedUnits());\r\n                    if (context.strictUnits && other.unit.toString() !== unit.toString()) {\r\n                        throw new Error('Incompatible units. Change the units or use the unit function. '\r\n                            + \"Bad units: '\".concat(unit.toString(), \"' and '\").concat(other.unit.toString(), \"'.\"));\r\n                    }\r\n                    value = this._operate(context, op, this.value, other.value);\r\n                }\r\n            }\r\n            else if (op === '*') {\r\n                unit.numerator = unit.numerator.concat(other.unit.numerator).sort();\r\n                unit.denominator = unit.denominator.concat(other.unit.denominator).sort();\r\n                unit.cancel();\r\n            }\r\n            else if (op === '/') {\r\n                unit.numerator = unit.numerator.concat(other.unit.denominator).sort();\r\n                unit.denominator = unit.denominator.concat(other.unit.numerator).sort();\r\n                unit.cancel();\r\n            }\r\n            return new Dimension(value, unit);\r\n        },\r\n        compare: function (other) {\r\n            var a, b;\r\n            if (!(other instanceof Dimension)) {\r\n                return undefined;\r\n            }\r\n            if (this.unit.isEmpty() || other.unit.isEmpty()) {\r\n                a = this;\r\n                b = other;\r\n            }\r\n            else {\r\n                a = this.unify();\r\n                b = other.unify();\r\n                if (a.unit.compare(b.unit) !== 0) {\r\n                    return undefined;\r\n                }\r\n            }\r\n            return Node.numericCompare(a.value, b.value);\r\n        },\r\n        unify: function () {\r\n            return this.convertTo({ length: 'px', duration: 's', angle: 'rad' });\r\n        },\r\n        convertTo: function (conversions) {\r\n            var value = this.value;\r\n            var unit = this.unit.clone();\r\n            var i;\r\n            var groupName;\r\n            var group;\r\n            var targetUnit;\r\n            var derivedConversions = {};\r\n            var applyUnit;\r\n            if (typeof conversions === 'string') {\r\n                for (i in unitConversions) {\r\n                    if (unitConversions[i].hasOwnProperty(conversions)) {\r\n                        derivedConversions = {};\r\n                        derivedConversions[i] = conversions;\r\n                    }\r\n                }\r\n                conversions = derivedConversions;\r\n            }\r\n            applyUnit = function (atomicUnit, denominator) {\r\n                if (group.hasOwnProperty(atomicUnit)) {\r\n                    if (denominator) {\r\n                        value = value / (group[atomicUnit] / group[targetUnit]);\r\n                    }\r\n                    else {\r\n                        value = value * (group[atomicUnit] / group[targetUnit]);\r\n                    }\r\n                    return targetUnit;\r\n                }\r\n                return atomicUnit;\r\n            };\r\n            for (groupName in conversions) {\r\n                if (conversions.hasOwnProperty(groupName)) {\r\n                    targetUnit = conversions[groupName];\r\n                    group = unitConversions[groupName];\r\n                    unit.map(applyUnit);\r\n                }\r\n            }\r\n            unit.cancel();\r\n            return new Dimension(value, unit);\r\n        }\r\n    });\n\n    var MATH = Math$1;\r\n    var Operation = function (op, operands, isSpaced) {\r\n        this.op = op.trim();\r\n        this.operands = operands;\r\n        this.isSpaced = isSpaced;\r\n    };\r\n    Operation.prototype = Object.assign(new Node(), {\r\n        type: 'Operation',\r\n        accept: function (visitor) {\r\n            this.operands = visitor.visitArray(this.operands);\r\n        },\r\n        eval: function (context) {\r\n            var a = this.operands[0].eval(context), b = this.operands[1].eval(context), op;\r\n            if (context.isMathOn(this.op)) {\r\n                op = this.op === './' ? '/' : this.op;\r\n                if (a instanceof Dimension && b instanceof Color) {\r\n                    a = a.toColor();\r\n                }\r\n                if (b instanceof Dimension && a instanceof Color) {\r\n                    b = b.toColor();\r\n                }\r\n                if (!a.operate || !b.operate) {\r\n                    if ((a instanceof Operation || b instanceof Operation)\r\n                        && a.op === '/' && context.math === MATH.PARENS_DIVISION) {\r\n                        return new Operation(this.op, [a, b], this.isSpaced);\r\n                    }\r\n                    throw { type: 'Operation',\r\n                        message: 'Operation on an invalid type' };\r\n                }\r\n                return a.operate(context, op, b);\r\n            }\r\n            else {\r\n                return new Operation(this.op, [a, b], this.isSpaced);\r\n            }\r\n        },\r\n        genCSS: function (context, output) {\r\n            this.operands[0].genCSS(context, output);\r\n            if (this.isSpaced) {\r\n                output.add(' ');\r\n            }\r\n            output.add(this.op);\r\n            if (this.isSpaced) {\r\n                output.add(' ');\r\n            }\r\n            this.operands[1].genCSS(context, output);\r\n        }\r\n    });\n\n    var Expression = function (value, noSpacing) {\r\n        this.value = value;\r\n        this.noSpacing = noSpacing;\r\n        if (!value) {\r\n            throw new Error('Expression requires an array parameter');\r\n        }\r\n    };\r\n    Expression.prototype = Object.assign(new Node(), {\r\n        type: 'Expression',\r\n        accept: function (visitor) {\r\n            this.value = visitor.visitArray(this.value);\r\n        },\r\n        eval: function (context) {\r\n            var returnValue;\r\n            var mathOn = context.isMathOn();\r\n            var inParenthesis = this.parens;\r\n            var doubleParen = false;\r\n            if (inParenthesis) {\r\n                context.inParenthesis();\r\n            }\r\n            if (this.value.length > 1) {\r\n                returnValue = new Expression(this.value.map(function (e) {\r\n                    if (!e.eval) {\r\n                        return e;\r\n                    }\r\n                    return e.eval(context);\r\n                }), this.noSpacing);\r\n            }\r\n            else if (this.value.length === 1) {\r\n                if (this.value[0].parens && !this.value[0].parensInOp && !context.inCalc) {\r\n                    doubleParen = true;\r\n                }\r\n                returnValue = this.value[0].eval(context);\r\n            }\r\n            else {\r\n                returnValue = this;\r\n            }\r\n            if (inParenthesis) {\r\n                context.outOfParenthesis();\r\n            }\r\n            if (this.parens && this.parensInOp && !mathOn && !doubleParen\r\n                && (!(returnValue instanceof Dimension))) {\r\n                returnValue = new Paren(returnValue);\r\n            }\r\n            return returnValue;\r\n        },\r\n        genCSS: function (context, output) {\r\n            for (var i_1 = 0; i_1 < this.value.length; i_1++) {\r\n                this.value[i_1].genCSS(context, output);\r\n                if (!this.noSpacing && i_1 + 1 < this.value.length) {\r\n                    if (i_1 + 1 < this.value.length && !(this.value[i_1 + 1] instanceof Anonymous) ||\r\n                        this.value[i_1 + 1] instanceof Anonymous && this.value[i_1 + 1].value !== ',') {\r\n                        output.add(' ');\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        throwAwayComments: function () {\r\n            this.value = this.value.filter(function (v) {\r\n                return !(v instanceof Comment);\r\n            });\r\n        }\r\n    });\n\n    var functionCaller = /** @class */ (function () {\r\n        function functionCaller(name, context, index, currentFileInfo) {\r\n            this.name = name.toLowerCase();\r\n            this.index = index;\r\n            this.context = context;\r\n            this.currentFileInfo = currentFileInfo;\r\n            this.func = context.frames[0].functionRegistry.get(this.name);\r\n        }\r\n        functionCaller.prototype.isValid = function () {\r\n            return Boolean(this.func);\r\n        };\r\n        functionCaller.prototype.call = function (args) {\r\n            var _this = this;\r\n            if (!(Array.isArray(args))) {\r\n                args = [args];\r\n            }\r\n            var evalArgs = this.func.evalArgs;\r\n            if (evalArgs !== false) {\r\n                args = args.map(function (a) { return a.eval(_this.context); });\r\n            }\r\n            var commentFilter = function (item) { return !(item.type === 'Comment'); };\r\n            // This code is terrible and should be replaced as per this issue...\r\n            // https://github.com/less/less.js/issues/2477\r\n            args = args\r\n                .filter(commentFilter)\r\n                .map(function (item) {\r\n                if (item.type === 'Expression') {\r\n                    var subNodes = item.value.filter(commentFilter);\r\n                    if (subNodes.length === 1) {\r\n                        // https://github.com/less/less.js/issues/3616\r\n                        if (item.parens && subNodes[0].op === '/') {\r\n                            return item;\r\n                        }\r\n                        return subNodes[0];\r\n                    }\r\n                    else {\r\n                        return new Expression(subNodes);\r\n                    }\r\n                }\r\n                return item;\r\n            });\r\n            if (evalArgs === false) {\r\n                return this.func.apply(this, __spreadArray([this.context], args, false));\r\n            }\r\n            return this.func.apply(this, args);\r\n        };\r\n        return functionCaller;\r\n    }());\n\n    //\r\n    // A function call node.\r\n    //\r\n    var Call = function (name, args, index, currentFileInfo) {\r\n        this.name = name;\r\n        this.args = args;\r\n        this.calc = name === 'calc';\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n    };\r\n    Call.prototype = Object.assign(new Node(), {\r\n        type: 'Call',\r\n        accept: function (visitor) {\r\n            if (this.args) {\r\n                this.args = visitor.visitArray(this.args);\r\n            }\r\n        },\r\n        //\r\n        // When evaluating a function call,\r\n        // we either find the function in the functionRegistry,\r\n        // in which case we call it, passing the  evaluated arguments,\r\n        // if this returns null or we cannot find the function, we\r\n        // simply print it out as it appeared originally [2].\r\n        //\r\n        // The reason why we evaluate the arguments, is in the case where\r\n        // we try to pass a variable to a function, like: `saturate(@color)`.\r\n        // The function should receive the value, not the variable.\r\n        //\r\n        eval: function (context) {\r\n            var _this = this;\r\n            /**\r\n             * Turn off math for calc(), and switch back on for evaluating nested functions\r\n             */\r\n            var currentMathContext = context.mathOn;\r\n            context.mathOn = !this.calc;\r\n            if (this.calc || context.inCalc) {\r\n                context.enterCalc();\r\n            }\r\n            var exitCalc = function () {\r\n                if (_this.calc || context.inCalc) {\r\n                    context.exitCalc();\r\n                }\r\n                context.mathOn = currentMathContext;\r\n            };\r\n            var result;\r\n            var funcCaller = new functionCaller(this.name, context, this.getIndex(), this.fileInfo());\r\n            if (funcCaller.isValid()) {\r\n                try {\r\n                    result = funcCaller.call(this.args);\r\n                    exitCalc();\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-prototype-builtins\r\n                    if (e.hasOwnProperty('line') && e.hasOwnProperty('column')) {\r\n                        throw e;\r\n                    }\r\n                    throw {\r\n                        type: e.type || 'Runtime',\r\n                        message: \"Error evaluating function `\".concat(this.name, \"`\").concat(e.message ? \": \".concat(e.message) : ''),\r\n                        index: this.getIndex(),\r\n                        filename: this.fileInfo().filename,\r\n                        line: e.lineNumber,\r\n                        column: e.columnNumber\r\n                    };\r\n                }\r\n            }\r\n            if (result !== null && result !== undefined) {\r\n                // Results that that are not nodes are cast as Anonymous nodes\r\n                // Falsy values or booleans are returned as empty nodes\r\n                if (!(result instanceof Node)) {\r\n                    if (!result || result === true) {\r\n                        result = new Anonymous(null);\r\n                    }\r\n                    else {\r\n                        result = new Anonymous(result.toString());\r\n                    }\r\n                }\r\n                result._index = this._index;\r\n                result._fileInfo = this._fileInfo;\r\n                return result;\r\n            }\r\n            var args = this.args.map(function (a) { return a.eval(context); });\r\n            exitCalc();\r\n            return new Call(this.name, args, this.getIndex(), this.fileInfo());\r\n        },\r\n        genCSS: function (context, output) {\r\n            output.add(\"\".concat(this.name, \"(\"), this.fileInfo(), this.getIndex());\r\n            for (var i_1 = 0; i_1 < this.args.length; i_1++) {\r\n                this.args[i_1].genCSS(context, output);\r\n                if (i_1 + 1 < this.args.length) {\r\n                    output.add(', ');\r\n                }\r\n            }\r\n            output.add(')');\r\n        }\r\n    });\n\n    var Variable = function (name, index, currentFileInfo) {\r\n        this.name = name;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n    };\r\n    Variable.prototype = Object.assign(new Node(), {\r\n        type: 'Variable',\r\n        eval: function (context) {\r\n            var variable, name = this.name;\r\n            if (name.indexOf('@@') === 0) {\r\n                name = \"@\".concat(new Variable(name.slice(1), this.getIndex(), this.fileInfo()).eval(context).value);\r\n            }\r\n            if (this.evaluating) {\r\n                throw { type: 'Name',\r\n                    message: \"Recursive variable definition for \".concat(name),\r\n                    filename: this.fileInfo().filename,\r\n                    index: this.getIndex() };\r\n            }\r\n            this.evaluating = true;\r\n            variable = this.find(context.frames, function (frame) {\r\n                var v = frame.variable(name);\r\n                if (v) {\r\n                    if (v.important) {\r\n                        var importantScope = context.importantScope[context.importantScope.length - 1];\r\n                        importantScope.important = v.important;\r\n                    }\r\n                    // If in calc, wrap vars in a function call to cascade evaluate args first\r\n                    if (context.inCalc) {\r\n                        return (new Call('_SELF', [v.value])).eval(context);\r\n                    }\r\n                    else {\r\n                        return v.value.eval(context);\r\n                    }\r\n                }\r\n            });\r\n            if (variable) {\r\n                this.evaluating = false;\r\n                return variable;\r\n            }\r\n            else {\r\n                throw { type: 'Name',\r\n                    message: \"variable \".concat(name, \" is undefined\"),\r\n                    filename: this.fileInfo().filename,\r\n                    index: this.getIndex() };\r\n            }\r\n        },\r\n        find: function (obj, fun) {\r\n            for (var i_1 = 0, r = void 0; i_1 < obj.length; i_1++) {\r\n                r = fun.call(obj, obj[i_1]);\r\n                if (r) {\r\n                    return r;\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n    });\n\n    var Property = function (name, index, currentFileInfo) {\r\n        this.name = name;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n    };\r\n    Property.prototype = Object.assign(new Node(), {\r\n        type: 'Property',\r\n        eval: function (context) {\r\n            var property;\r\n            var name = this.name;\r\n            // TODO: shorten this reference\r\n            var mergeRules = context.pluginManager.less.visitors.ToCSSVisitor.prototype._mergeRules;\r\n            if (this.evaluating) {\r\n                throw { type: 'Name',\r\n                    message: \"Recursive property reference for \".concat(name),\r\n                    filename: this.fileInfo().filename,\r\n                    index: this.getIndex() };\r\n            }\r\n            this.evaluating = true;\r\n            property = this.find(context.frames, function (frame) {\r\n                var v;\r\n                var vArr = frame.property(name);\r\n                if (vArr) {\r\n                    for (var i_1 = 0; i_1 < vArr.length; i_1++) {\r\n                        v = vArr[i_1];\r\n                        vArr[i_1] = new Declaration(v.name, v.value, v.important, v.merge, v.index, v.currentFileInfo, v.inline, v.variable);\r\n                    }\r\n                    mergeRules(vArr);\r\n                    v = vArr[vArr.length - 1];\r\n                    if (v.important) {\r\n                        var importantScope = context.importantScope[context.importantScope.length - 1];\r\n                        importantScope.important = v.important;\r\n                    }\r\n                    v = v.value.eval(context);\r\n                    return v;\r\n                }\r\n            });\r\n            if (property) {\r\n                this.evaluating = false;\r\n                return property;\r\n            }\r\n            else {\r\n                throw { type: 'Name',\r\n                    message: \"Property '\".concat(name, \"' is undefined\"),\r\n                    filename: this.currentFileInfo.filename,\r\n                    index: this.index };\r\n            }\r\n        },\r\n        find: function (obj, fun) {\r\n            for (var i_2 = 0, r = void 0; i_2 < obj.length; i_2++) {\r\n                r = fun.call(obj, obj[i_2]);\r\n                if (r) {\r\n                    return r;\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n    });\n\n    var Attribute = function (key, op, value, cif) {\r\n        this.key = key;\r\n        this.op = op;\r\n        this.value = value;\r\n        this.cif = cif;\r\n    };\r\n    Attribute.prototype = Object.assign(new Node(), {\r\n        type: 'Attribute',\r\n        eval: function (context) {\r\n            return new Attribute(this.key.eval ? this.key.eval(context) : this.key, this.op, (this.value && this.value.eval) ? this.value.eval(context) : this.value, this.cif);\r\n        },\r\n        genCSS: function (context, output) {\r\n            output.add(this.toCSS(context));\r\n        },\r\n        toCSS: function (context) {\r\n            var value = this.key.toCSS ? this.key.toCSS(context) : this.key;\r\n            if (this.op) {\r\n                value += this.op;\r\n                value += (this.value.toCSS ? this.value.toCSS(context) : this.value);\r\n            }\r\n            if (this.cif) {\r\n                value = value + ' ' + this.cif;\r\n            }\r\n            return \"[\".concat(value, \"]\");\r\n        }\r\n    });\n\n    var Quoted = function (str, content, escaped, index, currentFileInfo) {\r\n        this.escaped = (escaped === undefined) ? true : escaped;\r\n        this.value = content || '';\r\n        this.quote = str.charAt(0);\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.variableRegex = /@\\{([\\w-]+)\\}/g;\r\n        this.propRegex = /\\$\\{([\\w-]+)\\}/g;\r\n        this.allowRoot = escaped;\r\n    };\r\n    Quoted.prototype = Object.assign(new Node(), {\r\n        type: 'Quoted',\r\n        genCSS: function (context, output) {\r\n            if (!this.escaped) {\r\n                output.add(this.quote, this.fileInfo(), this.getIndex());\r\n            }\r\n            output.add(this.value);\r\n            if (!this.escaped) {\r\n                output.add(this.quote);\r\n            }\r\n        },\r\n        containsVariables: function () {\r\n            return this.value.match(this.variableRegex);\r\n        },\r\n        eval: function (context) {\r\n            var that = this;\r\n            var value = this.value;\r\n            var variableReplacement = function (_, name) {\r\n                var v = new Variable(\"@\".concat(name), that.getIndex(), that.fileInfo()).eval(context, true);\r\n                return (v instanceof Quoted) ? v.value : v.toCSS();\r\n            };\r\n            var propertyReplacement = function (_, name) {\r\n                var v = new Property(\"$\".concat(name), that.getIndex(), that.fileInfo()).eval(context, true);\r\n                return (v instanceof Quoted) ? v.value : v.toCSS();\r\n            };\r\n            function iterativeReplace(value, regexp, replacementFnc) {\r\n                var evaluatedValue = value;\r\n                do {\r\n                    value = evaluatedValue.toString();\r\n                    evaluatedValue = value.replace(regexp, replacementFnc);\r\n                } while (value !== evaluatedValue);\r\n                return evaluatedValue;\r\n            }\r\n            value = iterativeReplace(value, this.variableRegex, variableReplacement);\r\n            value = iterativeReplace(value, this.propRegex, propertyReplacement);\r\n            return new Quoted(this.quote + value + this.quote, value, this.escaped, this.getIndex(), this.fileInfo());\r\n        },\r\n        compare: function (other) {\r\n            // when comparing quoted strings allow the quote to differ\r\n            if (other.type === 'Quoted' && !this.escaped && !other.escaped) {\r\n                return Node.numericCompare(this.value, other.value);\r\n            }\r\n            else {\r\n                return other.toCSS && this.toCSS() === other.toCSS() ? 0 : undefined;\r\n            }\r\n        }\r\n    });\n\n    function escapePath(path) {\r\n        return path.replace(/[()'\"\\s]/g, function (match) { return \"\\\\\".concat(match); });\r\n    }\r\n    var URL = function (val, index, currentFileInfo, isEvald) {\r\n        this.value = val;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.isEvald = isEvald;\r\n    };\r\n    URL.prototype = Object.assign(new Node(), {\r\n        type: 'Url',\r\n        accept: function (visitor) {\r\n            this.value = visitor.visit(this.value);\r\n        },\r\n        genCSS: function (context, output) {\r\n            output.add('url(');\r\n            this.value.genCSS(context, output);\r\n            output.add(')');\r\n        },\r\n        eval: function (context) {\r\n            var val = this.value.eval(context);\r\n            var rootpath;\r\n            if (!this.isEvald) {\r\n                // Add the rootpath if the URL requires a rewrite\r\n                rootpath = this.fileInfo() && this.fileInfo().rootpath;\r\n                if (typeof rootpath === 'string' &&\r\n                    typeof val.value === 'string' &&\r\n                    context.pathRequiresRewrite(val.value)) {\r\n                    if (!val.quote) {\r\n                        rootpath = escapePath(rootpath);\r\n                    }\r\n                    val.value = context.rewritePath(val.value, rootpath);\r\n                }\r\n                else {\r\n                    val.value = context.normalizePath(val.value);\r\n                }\r\n                // Add url args if enabled\r\n                if (context.urlArgs) {\r\n                    if (!val.value.match(/^\\s*data:/)) {\r\n                        var delimiter = val.value.indexOf('?') === -1 ? '?' : '&';\r\n                        var urlArgs = delimiter + context.urlArgs;\r\n                        if (val.value.indexOf('#') !== -1) {\r\n                            val.value = val.value.replace('#', \"\".concat(urlArgs, \"#\"));\r\n                        }\r\n                        else {\r\n                            val.value += urlArgs;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return new URL(val, this.getIndex(), this.fileInfo(), true);\r\n        }\r\n    });\n\n    var NestableAtRulePrototype = {\r\n        isRulesetLike: function () {\r\n            return true;\r\n        },\r\n        accept: function (visitor) {\r\n            if (this.features) {\r\n                this.features = visitor.visit(this.features);\r\n            }\r\n            if (this.rules) {\r\n                this.rules = visitor.visitArray(this.rules);\r\n            }\r\n        },\r\n        evalTop: function (context) {\r\n            var result = this;\r\n            // Render all dependent Media blocks.\r\n            if (context.mediaBlocks.length > 1) {\r\n                var selectors = (new Selector([], null, null, this.getIndex(), this.fileInfo())).createEmptySelectors();\r\n                result = new Ruleset(selectors, context.mediaBlocks);\r\n                result.multiMedia = true;\r\n                result.copyVisibilityInfo(this.visibilityInfo());\r\n                this.setParent(result, this);\r\n            }\r\n            delete context.mediaBlocks;\r\n            delete context.mediaPath;\r\n            return result;\r\n        },\r\n        evalNested: function (context) {\r\n            var i;\r\n            var value;\r\n            var path = context.mediaPath.concat([this]);\r\n            // Extract the media-query conditions separated with `,` (OR).\r\n            for (i = 0; i < path.length; i++) {\r\n                value = path[i].features instanceof Value ?\r\n                    path[i].features.value : path[i].features;\r\n                path[i] = Array.isArray(value) ? value : [value];\r\n            }\r\n            // Trace all permutations to generate the resulting media-query.\r\n            //\r\n            // (a, b and c) with nested (d, e) ->\r\n            //    a and d\r\n            //    a and e\r\n            //    b and c and d\r\n            //    b and c and e\r\n            this.features = new Value(this.permute(path).map(function (path) {\r\n                path = path.map(function (fragment) { return fragment.toCSS ? fragment : new Anonymous(fragment); });\r\n                for (i = path.length - 1; i > 0; i--) {\r\n                    path.splice(i, 0, new Anonymous('and'));\r\n                }\r\n                return new Expression(path);\r\n            }));\r\n            this.setParent(this.features, this);\r\n            // Fake a tree-node that doesn't output anything.\r\n            return new Ruleset([], []);\r\n        },\r\n        permute: function (arr) {\r\n            if (arr.length === 0) {\r\n                return [];\r\n            }\r\n            else if (arr.length === 1) {\r\n                return arr[0];\r\n            }\r\n            else {\r\n                var result = [];\r\n                var rest = this.permute(arr.slice(1));\r\n                for (var i_1 = 0; i_1 < rest.length; i_1++) {\r\n                    for (var j = 0; j < arr[0].length; j++) {\r\n                        result.push([arr[0][j]].concat(rest[i_1]));\r\n                    }\r\n                }\r\n                return result;\r\n            }\r\n        },\r\n        bubbleSelectors: function (selectors) {\r\n            if (!selectors) {\r\n                return;\r\n            }\r\n            this.rules = [new Ruleset(copyArray(selectors), [this.rules[0]])];\r\n            this.setParent(this.rules, this);\r\n        }\r\n    };\n\n    var Media = function (value, features, index, currentFileInfo, visibilityInfo) {\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        var selectors = (new Selector([], null, null, this._index, this._fileInfo)).createEmptySelectors();\r\n        this.features = new Value(features);\r\n        this.rules = [new Ruleset(selectors, value)];\r\n        this.rules[0].allowImports = true;\r\n        this.copyVisibilityInfo(visibilityInfo);\r\n        this.allowRoot = true;\r\n        this.setParent(selectors, this);\r\n        this.setParent(this.features, this);\r\n        this.setParent(this.rules, this);\r\n    };\r\n    Media.prototype = Object.assign(new AtRule(), __assign(__assign({ type: 'Media' }, NestableAtRulePrototype), { genCSS: function (context, output) {\r\n            output.add('@media ', this._fileInfo, this._index);\r\n            this.features.genCSS(context, output);\r\n            this.outputRuleset(context, output, this.rules);\r\n        }, eval: function (context) {\r\n            if (!context.mediaBlocks) {\r\n                context.mediaBlocks = [];\r\n                context.mediaPath = [];\r\n            }\r\n            var media = new Media(null, [], this._index, this._fileInfo, this.visibilityInfo());\r\n            if (this.debugInfo) {\r\n                this.rules[0].debugInfo = this.debugInfo;\r\n                media.debugInfo = this.debugInfo;\r\n            }\r\n            media.features = this.features.eval(context);\r\n            context.mediaPath.push(media);\r\n            context.mediaBlocks.push(media);\r\n            this.rules[0].functionRegistry = context.frames[0].functionRegistry.inherit();\r\n            context.frames.unshift(this.rules[0]);\r\n            media.rules = [this.rules[0].eval(context)];\r\n            context.frames.shift();\r\n            context.mediaPath.pop();\r\n            return context.mediaPath.length === 0 ? media.evalTop(context) :\r\n                media.evalNested(context);\r\n        } }));\n\n    //\r\n    // CSS @import node\r\n    //\r\n    // The general strategy here is that we don't want to wait\r\n    // for the parsing to be completed, before we start importing\r\n    // the file. That's because in the context of a browser,\r\n    // most of the time will be spent waiting for the server to respond.\r\n    //\r\n    // On creation, we push the import path to our import queue, though\r\n    // `import,push`, we also pass it a callback, which it'll call once\r\n    // the file has been fetched, and parsed.\r\n    //\r\n    var Import = function (path, features, options, index, currentFileInfo, visibilityInfo) {\r\n        this.options = options;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.path = path;\r\n        this.features = features;\r\n        this.allowRoot = true;\r\n        if (this.options.less !== undefined || this.options.inline) {\r\n            this.css = !this.options.less || this.options.inline;\r\n        }\r\n        else {\r\n            var pathValue = this.getPath();\r\n            if (pathValue && /[#.&?]css([?;].*)?$/.test(pathValue)) {\r\n                this.css = true;\r\n            }\r\n        }\r\n        this.copyVisibilityInfo(visibilityInfo);\r\n        this.setParent(this.features, this);\r\n        this.setParent(this.path, this);\r\n    };\r\n    Import.prototype = Object.assign(new Node(), {\r\n        type: 'Import',\r\n        accept: function (visitor) {\r\n            if (this.features) {\r\n                this.features = visitor.visit(this.features);\r\n            }\r\n            this.path = visitor.visit(this.path);\r\n            if (!this.options.isPlugin && !this.options.inline && this.root) {\r\n                this.root = visitor.visit(this.root);\r\n            }\r\n        },\r\n        genCSS: function (context, output) {\r\n            if (this.css && this.path._fileInfo.reference === undefined) {\r\n                output.add('@import ', this._fileInfo, this._index);\r\n                this.path.genCSS(context, output);\r\n                if (this.features) {\r\n                    output.add(' ');\r\n                    this.features.genCSS(context, output);\r\n                }\r\n                output.add(';');\r\n            }\r\n        },\r\n        getPath: function () {\r\n            return (this.path instanceof URL) ?\r\n                this.path.value.value : this.path.value;\r\n        },\r\n        isVariableImport: function () {\r\n            var path = this.path;\r\n            if (path instanceof URL) {\r\n                path = path.value;\r\n            }\r\n            if (path instanceof Quoted) {\r\n                return path.containsVariables();\r\n            }\r\n            return true;\r\n        },\r\n        evalForImport: function (context) {\r\n            var path = this.path;\r\n            if (path instanceof URL) {\r\n                path = path.value;\r\n            }\r\n            return new Import(path.eval(context), this.features, this.options, this._index, this._fileInfo, this.visibilityInfo());\r\n        },\r\n        evalPath: function (context) {\r\n            var path = this.path.eval(context);\r\n            var fileInfo = this._fileInfo;\r\n            if (!(path instanceof URL)) {\r\n                // Add the rootpath if the URL requires a rewrite\r\n                var pathValue = path.value;\r\n                if (fileInfo &&\r\n                    pathValue &&\r\n                    context.pathRequiresRewrite(pathValue)) {\r\n                    path.value = context.rewritePath(pathValue, fileInfo.rootpath);\r\n                }\r\n                else {\r\n                    path.value = context.normalizePath(path.value);\r\n                }\r\n            }\r\n            return path;\r\n        },\r\n        eval: function (context) {\r\n            var result = this.doEval(context);\r\n            if (this.options.reference || this.blocksVisibility()) {\r\n                if (result.length || result.length === 0) {\r\n                    result.forEach(function (node) {\r\n                        node.addVisibilityBlock();\r\n                    });\r\n                }\r\n                else {\r\n                    result.addVisibilityBlock();\r\n                }\r\n            }\r\n            return result;\r\n        },\r\n        doEval: function (context) {\r\n            var ruleset;\r\n            var registry;\r\n            var features = this.features && this.features.eval(context);\r\n            if (this.options.isPlugin) {\r\n                if (this.root && this.root.eval) {\r\n                    try {\r\n                        this.root.eval(context);\r\n                    }\r\n                    catch (e) {\r\n                        e.message = 'Plugin error during evaluation';\r\n                        throw new LessError(e, this.root.imports, this.root.filename);\r\n                    }\r\n                }\r\n                registry = context.frames[0] && context.frames[0].functionRegistry;\r\n                if (registry && this.root && this.root.functions) {\r\n                    registry.addMultiple(this.root.functions);\r\n                }\r\n                return [];\r\n            }\r\n            if (this.skip) {\r\n                if (typeof this.skip === 'function') {\r\n                    this.skip = this.skip();\r\n                }\r\n                if (this.skip) {\r\n                    return [];\r\n                }\r\n            }\r\n            if (this.options.inline) {\r\n                var contents = new Anonymous(this.root, 0, {\r\n                    filename: this.importedFilename,\r\n                    reference: this.path._fileInfo && this.path._fileInfo.reference\r\n                }, true, true);\r\n                return this.features ? new Media([contents], this.features.value) : [contents];\r\n            }\r\n            else if (this.css) {\r\n                var newImport = new Import(this.evalPath(context), features, this.options, this._index);\r\n                if (!newImport.css && this.error) {\r\n                    throw this.error;\r\n                }\r\n                return newImport;\r\n            }\r\n            else if (this.root) {\r\n                ruleset = new Ruleset(null, copyArray(this.root.rules));\r\n                ruleset.evalImports(context);\r\n                return this.features ? new Media(ruleset.rules, this.features.value) : ruleset.rules;\r\n            }\r\n            else {\r\n                return [];\r\n            }\r\n        }\r\n    });\n\n    var JsEvalNode = function () { };\r\n    JsEvalNode.prototype = Object.assign(new Node(), {\r\n        evaluateJavaScript: function (expression, context) {\r\n            var result;\r\n            var that = this;\r\n            var evalContext = {};\r\n            if (!context.javascriptEnabled) {\r\n                throw { message: 'Inline JavaScript is not enabled. Is it set in your options?',\r\n                    filename: this.fileInfo().filename,\r\n                    index: this.getIndex() };\r\n            }\r\n            expression = expression.replace(/@\\{([\\w-]+)\\}/g, function (_, name) {\r\n                return that.jsify(new Variable(\"@\".concat(name), that.getIndex(), that.fileInfo()).eval(context));\r\n            });\r\n            try {\r\n                expression = new Function(\"return (\".concat(expression, \")\"));\r\n            }\r\n            catch (e) {\r\n                throw { message: \"JavaScript evaluation error: \".concat(e.message, \" from `\").concat(expression, \"`\"),\r\n                    filename: this.fileInfo().filename,\r\n                    index: this.getIndex() };\r\n            }\r\n            var variables = context.frames[0].variables();\r\n            for (var k in variables) {\r\n                // eslint-disable-next-line no-prototype-builtins\r\n                if (variables.hasOwnProperty(k)) {\r\n                    evalContext[k.slice(1)] = {\r\n                        value: variables[k].value,\r\n                        toJS: function () {\r\n                            return this.value.eval(context).toCSS();\r\n                        }\r\n                    };\r\n                }\r\n            }\r\n            try {\r\n                result = expression.call(evalContext);\r\n            }\r\n            catch (e) {\r\n                throw { message: \"JavaScript evaluation error: '\".concat(e.name, \": \").concat(e.message.replace(/[\"]/g, '\\''), \"'\"),\r\n                    filename: this.fileInfo().filename,\r\n                    index: this.getIndex() };\r\n            }\r\n            return result;\r\n        },\r\n        jsify: function (obj) {\r\n            if (Array.isArray(obj.value) && (obj.value.length > 1)) {\r\n                return \"[\".concat(obj.value.map(function (v) { return v.toCSS(); }).join(', '), \"]\");\r\n            }\r\n            else {\r\n                return obj.toCSS();\r\n            }\r\n        }\r\n    });\n\n    var JavaScript = function (string, escaped, index, currentFileInfo) {\r\n        this.escaped = escaped;\r\n        this.expression = string;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n    };\r\n    JavaScript.prototype = Object.assign(new JsEvalNode(), {\r\n        type: 'JavaScript',\r\n        eval: function (context) {\r\n            var result = this.evaluateJavaScript(this.expression, context);\r\n            var type = typeof result;\r\n            if (type === 'number' && !isNaN(result)) {\r\n                return new Dimension(result);\r\n            }\r\n            else if (type === 'string') {\r\n                return new Quoted(\"\\\"\".concat(result, \"\\\"\"), result, this.escaped, this._index);\r\n            }\r\n            else if (Array.isArray(result)) {\r\n                return new Anonymous(result.join(', '));\r\n            }\r\n            else {\r\n                return new Anonymous(result);\r\n            }\r\n        }\r\n    });\n\n    var Assignment = function (key, val) {\r\n        this.key = key;\r\n        this.value = val;\r\n    };\r\n    Assignment.prototype = Object.assign(new Node(), {\r\n        type: 'Assignment',\r\n        accept: function (visitor) {\r\n            this.value = visitor.visit(this.value);\r\n        },\r\n        eval: function (context) {\r\n            if (this.value.eval) {\r\n                return new Assignment(this.key, this.value.eval(context));\r\n            }\r\n            return this;\r\n        },\r\n        genCSS: function (context, output) {\r\n            output.add(\"\".concat(this.key, \"=\"));\r\n            if (this.value.genCSS) {\r\n                this.value.genCSS(context, output);\r\n            }\r\n            else {\r\n                output.add(this.value);\r\n            }\r\n        }\r\n    });\n\n    var Condition = function (op, l, r, i, negate) {\r\n        this.op = op.trim();\r\n        this.lvalue = l;\r\n        this.rvalue = r;\r\n        this._index = i;\r\n        this.negate = negate;\r\n    };\r\n    Condition.prototype = Object.assign(new Node(), {\r\n        type: 'Condition',\r\n        accept: function (visitor) {\r\n            this.lvalue = visitor.visit(this.lvalue);\r\n            this.rvalue = visitor.visit(this.rvalue);\r\n        },\r\n        eval: function (context) {\r\n            var result = (function (op, a, b) {\r\n                switch (op) {\r\n                    case 'and': return a && b;\r\n                    case 'or': return a || b;\r\n                    default:\r\n                        switch (Node.compare(a, b)) {\r\n                            case -1:\r\n                                return op === '<' || op === '=<' || op === '<=';\r\n                            case 0:\r\n                                return op === '=' || op === '>=' || op === '=<' || op === '<=';\r\n                            case 1:\r\n                                return op === '>' || op === '>=';\r\n                            default:\r\n                                return false;\r\n                        }\r\n                }\r\n            })(this.op, this.lvalue.eval(context), this.rvalue.eval(context));\r\n            return this.negate ? !result : result;\r\n        }\r\n    });\n\n    var QueryInParens = function (op, l, m, op2, r, i) {\r\n        this.op = op.trim();\r\n        this.lvalue = l;\r\n        this.mvalue = m;\r\n        this.op2 = op2 ? op2.trim() : null;\r\n        this.rvalue = r;\r\n        this._index = i;\r\n    };\r\n    QueryInParens.prototype = Object.assign(new Node(), {\r\n        type: 'QueryInParens',\r\n        accept: function (visitor) {\r\n            this.lvalue = visitor.visit(this.lvalue);\r\n            this.mvalue = visitor.visit(this.mvalue);\r\n            if (this.rvalue) {\r\n                this.rvalue = visitor.visit(this.rvalue);\r\n            }\r\n        },\r\n        eval: function (context) {\r\n            this.lvalue = this.lvalue.eval(context);\r\n            this.mvalue = this.mvalue.eval(context);\r\n            if (this.rvalue) {\r\n                this.rvalue = this.rvalue.eval(context);\r\n            }\r\n            return this;\r\n        },\r\n        genCSS: function (context, output) {\r\n            this.lvalue.genCSS(context, output);\r\n            output.add(' ' + this.op + ' ');\r\n            this.mvalue.genCSS(context, output);\r\n            if (this.rvalue) {\r\n                output.add(' ' + this.op2 + ' ');\r\n                this.rvalue.genCSS(context, output);\r\n            }\r\n        },\r\n    });\n\n    var Container = function (value, features, index, currentFileInfo, visibilityInfo) {\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        var selectors = (new Selector([], null, null, this._index, this._fileInfo)).createEmptySelectors();\r\n        this.features = new Value(features);\r\n        this.rules = [new Ruleset(selectors, value)];\r\n        this.rules[0].allowImports = true;\r\n        this.copyVisibilityInfo(visibilityInfo);\r\n        this.allowRoot = true;\r\n        this.setParent(selectors, this);\r\n        this.setParent(this.features, this);\r\n        this.setParent(this.rules, this);\r\n    };\r\n    Container.prototype = Object.assign(new AtRule(), __assign(__assign({ type: 'Container' }, NestableAtRulePrototype), { genCSS: function (context, output) {\r\n            output.add('@container ', this._fileInfo, this._index);\r\n            this.features.genCSS(context, output);\r\n            this.outputRuleset(context, output, this.rules);\r\n        }, eval: function (context) {\r\n            if (!context.mediaBlocks) {\r\n                context.mediaBlocks = [];\r\n                context.mediaPath = [];\r\n            }\r\n            var media = new Container(null, [], this._index, this._fileInfo, this.visibilityInfo());\r\n            if (this.debugInfo) {\r\n                this.rules[0].debugInfo = this.debugInfo;\r\n                media.debugInfo = this.debugInfo;\r\n            }\r\n            media.features = this.features.eval(context);\r\n            context.mediaPath.push(media);\r\n            context.mediaBlocks.push(media);\r\n            this.rules[0].functionRegistry = context.frames[0].functionRegistry.inherit();\r\n            context.frames.unshift(this.rules[0]);\r\n            media.rules = [this.rules[0].eval(context)];\r\n            context.frames.shift();\r\n            context.mediaPath.pop();\r\n            return context.mediaPath.length === 0 ? media.evalTop(context) :\r\n                media.evalNested(context);\r\n        } }));\n\n    var UnicodeDescriptor = function (value) {\r\n        this.value = value;\r\n    };\r\n    UnicodeDescriptor.prototype = Object.assign(new Node(), {\r\n        type: 'UnicodeDescriptor'\r\n    });\n\n    var Negative = function (node) {\r\n        this.value = node;\r\n    };\r\n    Negative.prototype = Object.assign(new Node(), {\r\n        type: 'Negative',\r\n        genCSS: function (context, output) {\r\n            output.add('-');\r\n            this.value.genCSS(context, output);\r\n        },\r\n        eval: function (context) {\r\n            if (context.isMathOn()) {\r\n                return (new Operation('*', [new Dimension(-1), this.value])).eval(context);\r\n            }\r\n            return new Negative(this.value.eval(context));\r\n        }\r\n    });\n\n    var Extend = function (selector, option, index, currentFileInfo, visibilityInfo) {\r\n        this.selector = selector;\r\n        this.option = option;\r\n        this.object_id = Extend.next_id++;\r\n        this.parent_ids = [this.object_id];\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.copyVisibilityInfo(visibilityInfo);\r\n        this.allowRoot = true;\r\n        switch (option) {\r\n            case 'all':\r\n                this.allowBefore = true;\r\n                this.allowAfter = true;\r\n                break;\r\n            default:\r\n                this.allowBefore = false;\r\n                this.allowAfter = false;\r\n                break;\r\n        }\r\n        this.setParent(this.selector, this);\r\n    };\r\n    Extend.prototype = Object.assign(new Node(), {\r\n        type: 'Extend',\r\n        accept: function (visitor) {\r\n            this.selector = visitor.visit(this.selector);\r\n        },\r\n        eval: function (context) {\r\n            return new Extend(this.selector.eval(context), this.option, this.getIndex(), this.fileInfo(), this.visibilityInfo());\r\n        },\r\n        // remove when Nodes have JSDoc types\r\n        // eslint-disable-next-line no-unused-vars\r\n        clone: function (context) {\r\n            return new Extend(this.selector, this.option, this.getIndex(), this.fileInfo(), this.visibilityInfo());\r\n        },\r\n        // it concatenates (joins) all selectors in selector array\r\n        findSelfSelectors: function (selectors) {\r\n            var selfElements = [], i, selectorElements;\r\n            for (i = 0; i < selectors.length; i++) {\r\n                selectorElements = selectors[i].elements;\r\n                // duplicate the logic in genCSS function inside the selector node.\r\n                // future TODO - move both logics into the selector joiner visitor\r\n                if (i > 0 && selectorElements.length && selectorElements[0].combinator.value === '') {\r\n                    selectorElements[0].combinator.value = ' ';\r\n                }\r\n                selfElements = selfElements.concat(selectors[i].elements);\r\n            }\r\n            this.selfSelectors = [new Selector(selfElements)];\r\n            this.selfSelectors[0].copyVisibilityInfo(this.visibilityInfo());\r\n        }\r\n    });\r\n    Extend.next_id = 0;\n\n    var VariableCall = function (variable, index, currentFileInfo) {\r\n        this.variable = variable;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.allowRoot = true;\r\n    };\r\n    VariableCall.prototype = Object.assign(new Node(), {\r\n        type: 'VariableCall',\r\n        eval: function (context) {\r\n            var rules;\r\n            var detachedRuleset = new Variable(this.variable, this.getIndex(), this.fileInfo()).eval(context);\r\n            var error = new LessError({ message: \"Could not evaluate variable call \".concat(this.variable) });\r\n            if (!detachedRuleset.ruleset) {\r\n                if (detachedRuleset.rules) {\r\n                    rules = detachedRuleset;\r\n                }\r\n                else if (Array.isArray(detachedRuleset)) {\r\n                    rules = new Ruleset('', detachedRuleset);\r\n                }\r\n                else if (Array.isArray(detachedRuleset.value)) {\r\n                    rules = new Ruleset('', detachedRuleset.value);\r\n                }\r\n                else {\r\n                    throw error;\r\n                }\r\n                detachedRuleset = new DetachedRuleset(rules);\r\n            }\r\n            if (detachedRuleset.ruleset) {\r\n                return detachedRuleset.callEval(context);\r\n            }\r\n            throw error;\r\n        }\r\n    });\n\n    var NamespaceValue = function (ruleCall, lookups, index, fileInfo) {\r\n        this.value = ruleCall;\r\n        this.lookups = lookups;\r\n        this._index = index;\r\n        this._fileInfo = fileInfo;\r\n    };\r\n    NamespaceValue.prototype = Object.assign(new Node(), {\r\n        type: 'NamespaceValue',\r\n        eval: function (context) {\r\n            var i, name, rules = this.value.eval(context);\r\n            for (i = 0; i < this.lookups.length; i++) {\r\n                name = this.lookups[i];\r\n                /**\r\n                 * Eval'd DRs return rulesets.\r\n                 * Eval'd mixins return rules, so let's make a ruleset if we need it.\r\n                 * We need to do this because of late parsing of values\r\n                 */\r\n                if (Array.isArray(rules)) {\r\n                    rules = new Ruleset([new Selector()], rules);\r\n                }\r\n                if (name === '') {\r\n                    rules = rules.lastDeclaration();\r\n                }\r\n                else if (name.charAt(0) === '@') {\r\n                    if (name.charAt(1) === '@') {\r\n                        name = \"@\".concat(new Variable(name.substr(1)).eval(context).value);\r\n                    }\r\n                    if (rules.variables) {\r\n                        rules = rules.variable(name);\r\n                    }\r\n                    if (!rules) {\r\n                        throw { type: 'Name',\r\n                            message: \"variable \".concat(name, \" not found\"),\r\n                            filename: this.fileInfo().filename,\r\n                            index: this.getIndex() };\r\n                    }\r\n                }\r\n                else {\r\n                    if (name.substring(0, 2) === '$@') {\r\n                        name = \"$\".concat(new Variable(name.substr(1)).eval(context).value);\r\n                    }\r\n                    else {\r\n                        name = name.charAt(0) === '$' ? name : \"$\".concat(name);\r\n                    }\r\n                    if (rules.properties) {\r\n                        rules = rules.property(name);\r\n                    }\r\n                    if (!rules) {\r\n                        throw { type: 'Name',\r\n                            message: \"property \\\"\".concat(name.substr(1), \"\\\" not found\"),\r\n                            filename: this.fileInfo().filename,\r\n                            index: this.getIndex() };\r\n                    }\r\n                    // Properties are an array of values, since a ruleset can have multiple props.\r\n                    // We pick the last one (the \"cascaded\" value)\r\n                    rules = rules[rules.length - 1];\r\n                }\r\n                if (rules.value) {\r\n                    rules = rules.eval(context).value;\r\n                }\r\n                if (rules.ruleset) {\r\n                    rules = rules.ruleset.eval(context);\r\n                }\r\n            }\r\n            return rules;\r\n        }\r\n    });\n\n    var Definition = function (name, params, rules, condition, variadic, frames, visibilityInfo) {\r\n        this.name = name || 'anonymous mixin';\r\n        this.selectors = [new Selector([new Element(null, name, false, this._index, this._fileInfo)])];\r\n        this.params = params;\r\n        this.condition = condition;\r\n        this.variadic = variadic;\r\n        this.arity = params.length;\r\n        this.rules = rules;\r\n        this._lookups = {};\r\n        var optionalParameters = [];\r\n        this.required = params.reduce(function (count, p) {\r\n            if (!p.name || (p.name && !p.value)) {\r\n                return count + 1;\r\n            }\r\n            else {\r\n                optionalParameters.push(p.name);\r\n                return count;\r\n            }\r\n        }, 0);\r\n        this.optionalParameters = optionalParameters;\r\n        this.frames = frames;\r\n        this.copyVisibilityInfo(visibilityInfo);\r\n        this.allowRoot = true;\r\n    };\r\n    Definition.prototype = Object.assign(new Ruleset(), {\r\n        type: 'MixinDefinition',\r\n        evalFirst: true,\r\n        accept: function (visitor) {\r\n            if (this.params && this.params.length) {\r\n                this.params = visitor.visitArray(this.params);\r\n            }\r\n            this.rules = visitor.visitArray(this.rules);\r\n            if (this.condition) {\r\n                this.condition = visitor.visit(this.condition);\r\n            }\r\n        },\r\n        evalParams: function (context, mixinEnv, args, evaldArguments) {\r\n            /* jshint boss:true */\r\n            var frame = new Ruleset(null, null);\r\n            var varargs;\r\n            var arg;\r\n            var params = copyArray(this.params);\r\n            var i;\r\n            var j;\r\n            var val;\r\n            var name;\r\n            var isNamedFound;\r\n            var argIndex;\r\n            var argsLength = 0;\r\n            if (mixinEnv.frames && mixinEnv.frames[0] && mixinEnv.frames[0].functionRegistry) {\r\n                frame.functionRegistry = mixinEnv.frames[0].functionRegistry.inherit();\r\n            }\r\n            mixinEnv = new contexts.Eval(mixinEnv, [frame].concat(mixinEnv.frames));\r\n            if (args) {\r\n                args = copyArray(args);\r\n                argsLength = args.length;\r\n                for (i = 0; i < argsLength; i++) {\r\n                    arg = args[i];\r\n                    if (name = (arg && arg.name)) {\r\n                        isNamedFound = false;\r\n                        for (j = 0; j < params.length; j++) {\r\n                            if (!evaldArguments[j] && name === params[j].name) {\r\n                                evaldArguments[j] = arg.value.eval(context);\r\n                                frame.prependRule(new Declaration(name, arg.value.eval(context)));\r\n                                isNamedFound = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (isNamedFound) {\r\n                            args.splice(i, 1);\r\n                            i--;\r\n                            continue;\r\n                        }\r\n                        else {\r\n                            throw { type: 'Runtime', message: \"Named argument for \".concat(this.name, \" \").concat(args[i].name, \" not found\") };\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            argIndex = 0;\r\n            for (i = 0; i < params.length; i++) {\r\n                if (evaldArguments[i]) {\r\n                    continue;\r\n                }\r\n                arg = args && args[argIndex];\r\n                if (name = params[i].name) {\r\n                    if (params[i].variadic) {\r\n                        varargs = [];\r\n                        for (j = argIndex; j < argsLength; j++) {\r\n                            varargs.push(args[j].value.eval(context));\r\n                        }\r\n                        frame.prependRule(new Declaration(name, new Expression(varargs).eval(context)));\r\n                    }\r\n                    else {\r\n                        val = arg && arg.value;\r\n                        if (val) {\r\n                            // This was a mixin call, pass in a detached ruleset of it's eval'd rules\r\n                            if (Array.isArray(val)) {\r\n                                val = new DetachedRuleset(new Ruleset('', val));\r\n                            }\r\n                            else {\r\n                                val = val.eval(context);\r\n                            }\r\n                        }\r\n                        else if (params[i].value) {\r\n                            val = params[i].value.eval(mixinEnv);\r\n                            frame.resetCache();\r\n                        }\r\n                        else {\r\n                            throw { type: 'Runtime', message: \"wrong number of arguments for \".concat(this.name, \" (\").concat(argsLength, \" for \").concat(this.arity, \")\") };\r\n                        }\r\n                        frame.prependRule(new Declaration(name, val));\r\n                        evaldArguments[i] = val;\r\n                    }\r\n                }\r\n                if (params[i].variadic && args) {\r\n                    for (j = argIndex; j < argsLength; j++) {\r\n                        evaldArguments[j] = args[j].value.eval(context);\r\n                    }\r\n                }\r\n                argIndex++;\r\n            }\r\n            return frame;\r\n        },\r\n        makeImportant: function () {\r\n            var rules = !this.rules ? this.rules : this.rules.map(function (r) {\r\n                if (r.makeImportant) {\r\n                    return r.makeImportant(true);\r\n                }\r\n                else {\r\n                    return r;\r\n                }\r\n            });\r\n            var result = new Definition(this.name, this.params, rules, this.condition, this.variadic, this.frames);\r\n            return result;\r\n        },\r\n        eval: function (context) {\r\n            return new Definition(this.name, this.params, this.rules, this.condition, this.variadic, this.frames || copyArray(context.frames));\r\n        },\r\n        evalCall: function (context, args, important) {\r\n            var _arguments = [];\r\n            var mixinFrames = this.frames ? this.frames.concat(context.frames) : context.frames;\r\n            var frame = this.evalParams(context, new contexts.Eval(context, mixinFrames), args, _arguments);\r\n            var rules;\r\n            var ruleset;\r\n            frame.prependRule(new Declaration('@arguments', new Expression(_arguments).eval(context)));\r\n            rules = copyArray(this.rules);\r\n            ruleset = new Ruleset(null, rules);\r\n            ruleset.originalRuleset = this;\r\n            ruleset = ruleset.eval(new contexts.Eval(context, [this, frame].concat(mixinFrames)));\r\n            if (important) {\r\n                ruleset = ruleset.makeImportant();\r\n            }\r\n            return ruleset;\r\n        },\r\n        matchCondition: function (args, context) {\r\n            if (this.condition && !this.condition.eval(new contexts.Eval(context, [this.evalParams(context, /* the parameter variables */ new contexts.Eval(context, this.frames ? this.frames.concat(context.frames) : context.frames), args, [])]\r\n                .concat(this.frames || []) // the parent namespace/mixin frames\r\n                .concat(context.frames)))) { // the current environment frames\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n        matchArgs: function (args, context) {\r\n            var allArgsCnt = (args && args.length) || 0;\r\n            var len;\r\n            var optionalParameters = this.optionalParameters;\r\n            var requiredArgsCnt = !args ? 0 : args.reduce(function (count, p) {\r\n                if (optionalParameters.indexOf(p.name) < 0) {\r\n                    return count + 1;\r\n                }\r\n                else {\r\n                    return count;\r\n                }\r\n            }, 0);\r\n            if (!this.variadic) {\r\n                if (requiredArgsCnt < this.required) {\r\n                    return false;\r\n                }\r\n                if (allArgsCnt > this.params.length) {\r\n                    return false;\r\n                }\r\n            }\r\n            else {\r\n                if (requiredArgsCnt < (this.required - 1)) {\r\n                    return false;\r\n                }\r\n            }\r\n            // check patterns\r\n            len = Math.min(requiredArgsCnt, this.arity);\r\n            for (var i_1 = 0; i_1 < len; i_1++) {\r\n                if (!this.params[i_1].name && !this.params[i_1].variadic) {\r\n                    if (args[i_1].value.eval(context).toCSS() != this.params[i_1].value.eval(context).toCSS()) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n    });\n\n    var MixinCall = function (elements, args, index, currentFileInfo, important) {\r\n        this.selector = new Selector(elements);\r\n        this.arguments = args || [];\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.important = important;\r\n        this.allowRoot = true;\r\n        this.setParent(this.selector, this);\r\n    };\r\n    MixinCall.prototype = Object.assign(new Node(), {\r\n        type: 'MixinCall',\r\n        accept: function (visitor) {\r\n            if (this.selector) {\r\n                this.selector = visitor.visit(this.selector);\r\n            }\r\n            if (this.arguments.length) {\r\n                this.arguments = visitor.visitArray(this.arguments);\r\n            }\r\n        },\r\n        eval: function (context) {\r\n            var mixins;\r\n            var mixin;\r\n            var mixinPath;\r\n            var args = [];\r\n            var arg;\r\n            var argValue;\r\n            var rules = [];\r\n            var match = false;\r\n            var i;\r\n            var m;\r\n            var f;\r\n            var isRecursive;\r\n            var isOneFound;\r\n            var candidates = [];\r\n            var candidate;\r\n            var conditionResult = [];\r\n            var defaultResult;\r\n            var defFalseEitherCase = -1;\r\n            var defNone = 0;\r\n            var defTrue = 1;\r\n            var defFalse = 2;\r\n            var count;\r\n            var originalRuleset;\r\n            var noArgumentsFilter;\r\n            this.selector = this.selector.eval(context);\r\n            function calcDefGroup(mixin, mixinPath) {\r\n                var f, p, namespace;\r\n                for (f = 0; f < 2; f++) {\r\n                    conditionResult[f] = true;\r\n                    defaultFunc.value(f);\r\n                    for (p = 0; p < mixinPath.length && conditionResult[f]; p++) {\r\n                        namespace = mixinPath[p];\r\n                        if (namespace.matchCondition) {\r\n                            conditionResult[f] = conditionResult[f] && namespace.matchCondition(null, context);\r\n                        }\r\n                    }\r\n                    if (mixin.matchCondition) {\r\n                        conditionResult[f] = conditionResult[f] && mixin.matchCondition(args, context);\r\n                    }\r\n                }\r\n                if (conditionResult[0] || conditionResult[1]) {\r\n                    if (conditionResult[0] != conditionResult[1]) {\r\n                        return conditionResult[1] ?\r\n                            defTrue : defFalse;\r\n                    }\r\n                    return defNone;\r\n                }\r\n                return defFalseEitherCase;\r\n            }\r\n            for (i = 0; i < this.arguments.length; i++) {\r\n                arg = this.arguments[i];\r\n                argValue = arg.value.eval(context);\r\n                if (arg.expand && Array.isArray(argValue.value)) {\r\n                    argValue = argValue.value;\r\n                    for (m = 0; m < argValue.length; m++) {\r\n                        args.push({ value: argValue[m] });\r\n                    }\r\n                }\r\n                else {\r\n                    args.push({ name: arg.name, value: argValue });\r\n                }\r\n            }\r\n            noArgumentsFilter = function (rule) { return rule.matchArgs(null, context); };\r\n            for (i = 0; i < context.frames.length; i++) {\r\n                if ((mixins = context.frames[i].find(this.selector, null, noArgumentsFilter)).length > 0) {\r\n                    isOneFound = true;\r\n                    // To make `default()` function independent of definition order we have two \"subpasses\" here.\r\n                    // At first we evaluate each guard *twice* (with `default() == true` and `default() == false`),\r\n                    // and build candidate list with corresponding flags. Then, when we know all possible matches,\r\n                    // we make a final decision.\r\n                    for (m = 0; m < mixins.length; m++) {\r\n                        mixin = mixins[m].rule;\r\n                        mixinPath = mixins[m].path;\r\n                        isRecursive = false;\r\n                        for (f = 0; f < context.frames.length; f++) {\r\n                            if ((!(mixin instanceof Definition)) && mixin === (context.frames[f].originalRuleset || context.frames[f])) {\r\n                                isRecursive = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (isRecursive) {\r\n                            continue;\r\n                        }\r\n                        if (mixin.matchArgs(args, context)) {\r\n                            candidate = { mixin: mixin, group: calcDefGroup(mixin, mixinPath) };\r\n                            if (candidate.group !== defFalseEitherCase) {\r\n                                candidates.push(candidate);\r\n                            }\r\n                            match = true;\r\n                        }\r\n                    }\r\n                    defaultFunc.reset();\r\n                    count = [0, 0, 0];\r\n                    for (m = 0; m < candidates.length; m++) {\r\n                        count[candidates[m].group]++;\r\n                    }\r\n                    if (count[defNone] > 0) {\r\n                        defaultResult = defFalse;\r\n                    }\r\n                    else {\r\n                        defaultResult = defTrue;\r\n                        if ((count[defTrue] + count[defFalse]) > 1) {\r\n                            throw { type: 'Runtime',\r\n                                message: \"Ambiguous use of `default()` found when matching for `\".concat(this.format(args), \"`\"),\r\n                                index: this.getIndex(), filename: this.fileInfo().filename };\r\n                        }\r\n                    }\r\n                    for (m = 0; m < candidates.length; m++) {\r\n                        candidate = candidates[m].group;\r\n                        if ((candidate === defNone) || (candidate === defaultResult)) {\r\n                            try {\r\n                                mixin = candidates[m].mixin;\r\n                                if (!(mixin instanceof Definition)) {\r\n                                    originalRuleset = mixin.originalRuleset || mixin;\r\n                                    mixin = new Definition('', [], mixin.rules, null, false, null, originalRuleset.visibilityInfo());\r\n                                    mixin.originalRuleset = originalRuleset;\r\n                                }\r\n                                var newRules = mixin.evalCall(context, args, this.important).rules;\r\n                                this._setVisibilityToReplacement(newRules);\r\n                                Array.prototype.push.apply(rules, newRules);\r\n                            }\r\n                            catch (e) {\r\n                                throw { message: e.message, index: this.getIndex(), filename: this.fileInfo().filename, stack: e.stack };\r\n                            }\r\n                        }\r\n                    }\r\n                    if (match) {\r\n                        return rules;\r\n                    }\r\n                }\r\n            }\r\n            if (isOneFound) {\r\n                throw { type: 'Runtime',\r\n                    message: \"No matching definition was found for `\".concat(this.format(args), \"`\"),\r\n                    index: this.getIndex(), filename: this.fileInfo().filename };\r\n            }\r\n            else {\r\n                throw { type: 'Name',\r\n                    message: \"\".concat(this.selector.toCSS().trim(), \" is undefined\"),\r\n                    index: this.getIndex(), filename: this.fileInfo().filename };\r\n            }\r\n        },\r\n        _setVisibilityToReplacement: function (replacement) {\r\n            var i, rule;\r\n            if (this.blocksVisibility()) {\r\n                for (i = 0; i < replacement.length; i++) {\r\n                    rule = replacement[i];\r\n                    rule.addVisibilityBlock();\r\n                }\r\n            }\r\n        },\r\n        format: function (args) {\r\n            return \"\".concat(this.selector.toCSS().trim(), \"(\").concat(args ? args.map(function (a) {\r\n                var argValue = '';\r\n                if (a.name) {\r\n                    argValue += \"\".concat(a.name, \":\");\r\n                }\r\n                if (a.value.toCSS) {\r\n                    argValue += a.value.toCSS();\r\n                }\r\n                else {\r\n                    argValue += '???';\r\n                }\r\n                return argValue;\r\n            }).join(', ') : '', \")\");\r\n        }\r\n    });\n\n    var tree = {\r\n        Node: Node,\r\n        Color: Color,\r\n        AtRule: AtRule,\r\n        DetachedRuleset: DetachedRuleset,\r\n        Operation: Operation,\r\n        Dimension: Dimension,\r\n        Unit: Unit,\r\n        Keyword: Keyword,\r\n        Variable: Variable,\r\n        Property: Property,\r\n        Ruleset: Ruleset,\r\n        Element: Element,\r\n        Attribute: Attribute,\r\n        Combinator: Combinator,\r\n        Selector: Selector,\r\n        Quoted: Quoted,\r\n        Expression: Expression,\r\n        Declaration: Declaration,\r\n        Call: Call,\r\n        URL: URL,\r\n        Import: Import,\r\n        Comment: Comment,\r\n        Anonymous: Anonymous,\r\n        Value: Value,\r\n        JavaScript: JavaScript,\r\n        Assignment: Assignment,\r\n        Condition: Condition,\r\n        Paren: Paren,\r\n        Media: Media,\r\n        Container: Container,\r\n        QueryInParens: QueryInParens,\r\n        UnicodeDescriptor: UnicodeDescriptor,\r\n        Negative: Negative,\r\n        Extend: Extend,\r\n        VariableCall: VariableCall,\r\n        NamespaceValue: NamespaceValue,\r\n        mixin: {\r\n            Call: MixinCall,\r\n            Definition: Definition\r\n        }\r\n    };\n\n    var AbstractFileManager = /** @class */ (function () {\r\n        function AbstractFileManager() {\r\n        }\r\n        AbstractFileManager.prototype.getPath = function (filename) {\r\n            var j = filename.lastIndexOf('?');\r\n            if (j > 0) {\r\n                filename = filename.slice(0, j);\r\n            }\r\n            j = filename.lastIndexOf('/');\r\n            if (j < 0) {\r\n                j = filename.lastIndexOf('\\\\');\r\n            }\r\n            if (j < 0) {\r\n                return '';\r\n            }\r\n            return filename.slice(0, j + 1);\r\n        };\r\n        AbstractFileManager.prototype.tryAppendExtension = function (path, ext) {\r\n            return /(\\.[a-z]*$)|([?;].*)$/.test(path) ? path : path + ext;\r\n        };\r\n        AbstractFileManager.prototype.tryAppendLessExtension = function (path) {\r\n            return this.tryAppendExtension(path, '.less');\r\n        };\r\n        AbstractFileManager.prototype.supportsSync = function () {\r\n            return false;\r\n        };\r\n        AbstractFileManager.prototype.alwaysMakePathsAbsolute = function () {\r\n            return false;\r\n        };\r\n        AbstractFileManager.prototype.isPathAbsolute = function (filename) {\r\n            return (/^(?:[a-z-]+:|\\/|\\\\|#)/i).test(filename);\r\n        };\r\n        // TODO: pull out / replace?\r\n        AbstractFileManager.prototype.join = function (basePath, laterPath) {\r\n            if (!basePath) {\r\n                return laterPath;\r\n            }\r\n            return basePath + laterPath;\r\n        };\r\n        AbstractFileManager.prototype.pathDiff = function (url, baseUrl) {\r\n            // diff between two paths to create a relative path\r\n            var urlParts = this.extractUrlParts(url);\r\n            var baseUrlParts = this.extractUrlParts(baseUrl);\r\n            var i;\r\n            var max;\r\n            var urlDirectories;\r\n            var baseUrlDirectories;\r\n            var diff = '';\r\n            if (urlParts.hostPart !== baseUrlParts.hostPart) {\r\n                return '';\r\n            }\r\n            max = Math.max(baseUrlParts.directories.length, urlParts.directories.length);\r\n            for (i = 0; i < max; i++) {\r\n                if (baseUrlParts.directories[i] !== urlParts.directories[i]) {\r\n                    break;\r\n                }\r\n            }\r\n            baseUrlDirectories = baseUrlParts.directories.slice(i);\r\n            urlDirectories = urlParts.directories.slice(i);\r\n            for (i = 0; i < baseUrlDirectories.length - 1; i++) {\r\n                diff += '../';\r\n            }\r\n            for (i = 0; i < urlDirectories.length - 1; i++) {\r\n                diff += \"\".concat(urlDirectories[i], \"/\");\r\n            }\r\n            return diff;\r\n        };\r\n        /**\r\n         * Helper function, not part of API.\r\n         * This should be replaceable by newer Node / Browser APIs\r\n         *\r\n         * @param {string} url\r\n         * @param {string} baseUrl\r\n         */\r\n        AbstractFileManager.prototype.extractUrlParts = function (url, baseUrl) {\r\n            // urlParts[1] = protocol://hostname/ OR /\r\n            // urlParts[2] = / if path relative to host base\r\n            // urlParts[3] = directories\r\n            // urlParts[4] = filename\r\n            // urlParts[5] = parameters\r\n            var urlPartsRegex = /^((?:[a-z-]+:)?\\/{2}(?:[^/?#]*\\/)|([/\\\\]))?((?:[^/\\\\?#]*[/\\\\])*)([^/\\\\?#]*)([#?].*)?$/i;\r\n            var urlParts = url.match(urlPartsRegex);\r\n            var returner = {};\r\n            var rawDirectories = [];\r\n            var directories = [];\r\n            var i;\r\n            var baseUrlParts;\r\n            if (!urlParts) {\r\n                throw new Error(\"Could not parse sheet href - '\".concat(url, \"'\"));\r\n            }\r\n            // Stylesheets in IE don't always return the full path\r\n            if (baseUrl && (!urlParts[1] || urlParts[2])) {\r\n                baseUrlParts = baseUrl.match(urlPartsRegex);\r\n                if (!baseUrlParts) {\r\n                    throw new Error(\"Could not parse page url - '\".concat(baseUrl, \"'\"));\r\n                }\r\n                urlParts[1] = urlParts[1] || baseUrlParts[1] || '';\r\n                if (!urlParts[2]) {\r\n                    urlParts[3] = baseUrlParts[3] + urlParts[3];\r\n                }\r\n            }\r\n            if (urlParts[3]) {\r\n                rawDirectories = urlParts[3].replace(/\\\\/g, '/').split('/');\r\n                // collapse '..' and skip '.'\r\n                for (i = 0; i < rawDirectories.length; i++) {\r\n                    if (rawDirectories[i] === '..') {\r\n                        directories.pop();\r\n                    }\r\n                    else if (rawDirectories[i] !== '.') {\r\n                        directories.push(rawDirectories[i]);\r\n                    }\r\n                }\r\n            }\r\n            returner.hostPart = urlParts[1];\r\n            returner.directories = directories;\r\n            returner.rawPath = (urlParts[1] || '') + rawDirectories.join('/');\r\n            returner.path = (urlParts[1] || '') + directories.join('/');\r\n            returner.filename = urlParts[4];\r\n            returner.fileUrl = returner.path + (urlParts[4] || '');\r\n            returner.url = returner.fileUrl + (urlParts[5] || '');\r\n            return returner;\r\n        };\r\n        return AbstractFileManager;\r\n    }());\n\n    var AbstractPluginLoader = /** @class */ (function () {\r\n        function AbstractPluginLoader() {\r\n            // Implemented by Node.js plugin loader\r\n            this.require = function () {\r\n                return null;\r\n            };\r\n        }\r\n        AbstractPluginLoader.prototype.evalPlugin = function (contents, context, imports, pluginOptions, fileInfo) {\r\n            var loader, registry, pluginObj, localModule, pluginManager, filename, result;\r\n            pluginManager = context.pluginManager;\r\n            if (fileInfo) {\r\n                if (typeof fileInfo === 'string') {\r\n                    filename = fileInfo;\r\n                }\r\n                else {\r\n                    filename = fileInfo.filename;\r\n                }\r\n            }\r\n            var shortname = (new this.less.FileManager()).extractUrlParts(filename).filename;\r\n            if (filename) {\r\n                pluginObj = pluginManager.get(filename);\r\n                if (pluginObj) {\r\n                    result = this.trySetOptions(pluginObj, filename, shortname, pluginOptions);\r\n                    if (result) {\r\n                        return result;\r\n                    }\r\n                    try {\r\n                        if (pluginObj.use) {\r\n                            pluginObj.use.call(this.context, pluginObj);\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        e.message = e.message || 'Error during @plugin call';\r\n                        return new LessError(e, imports, filename);\r\n                    }\r\n                    return pluginObj;\r\n                }\r\n            }\r\n            localModule = {\r\n                exports: {},\r\n                pluginManager: pluginManager,\r\n                fileInfo: fileInfo\r\n            };\r\n            registry = functionRegistry.create();\r\n            var registerPlugin = function (obj) {\r\n                pluginObj = obj;\r\n            };\r\n            try {\r\n                loader = new Function('module', 'require', 'registerPlugin', 'functions', 'tree', 'less', 'fileInfo', contents);\r\n                loader(localModule, this.require(filename), registerPlugin, registry, this.less.tree, this.less, fileInfo);\r\n            }\r\n            catch (e) {\r\n                return new LessError(e, imports, filename);\r\n            }\r\n            if (!pluginObj) {\r\n                pluginObj = localModule.exports;\r\n            }\r\n            pluginObj = this.validatePlugin(pluginObj, filename, shortname);\r\n            if (pluginObj instanceof LessError) {\r\n                return pluginObj;\r\n            }\r\n            if (pluginObj) {\r\n                pluginObj.imports = imports;\r\n                pluginObj.filename = filename;\r\n                // For < 3.x (or unspecified minVersion) - setOptions() before install()\r\n                if (!pluginObj.minVersion || this.compareVersion('3.0.0', pluginObj.minVersion) < 0) {\r\n                    result = this.trySetOptions(pluginObj, filename, shortname, pluginOptions);\r\n                    if (result) {\r\n                        return result;\r\n                    }\r\n                }\r\n                // Run on first load\r\n                pluginManager.addPlugin(pluginObj, fileInfo.filename, registry);\r\n                pluginObj.functions = registry.getLocalFunctions();\r\n                // Need to call setOptions again because the pluginObj might have functions\r\n                result = this.trySetOptions(pluginObj, filename, shortname, pluginOptions);\r\n                if (result) {\r\n                    return result;\r\n                }\r\n                // Run every @plugin call\r\n                try {\r\n                    if (pluginObj.use) {\r\n                        pluginObj.use.call(this.context, pluginObj);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    e.message = e.message || 'Error during @plugin call';\r\n                    return new LessError(e, imports, filename);\r\n                }\r\n            }\r\n            else {\r\n                return new LessError({ message: 'Not a valid plugin' }, imports, filename);\r\n            }\r\n            return pluginObj;\r\n        };\r\n        AbstractPluginLoader.prototype.trySetOptions = function (plugin, filename, name, options) {\r\n            if (options && !plugin.setOptions) {\r\n                return new LessError({\r\n                    message: \"Options have been provided but the plugin \".concat(name, \" does not support any options.\")\r\n                });\r\n            }\r\n            try {\r\n                plugin.setOptions && plugin.setOptions(options);\r\n            }\r\n            catch (e) {\r\n                return new LessError(e);\r\n            }\r\n        };\r\n        AbstractPluginLoader.prototype.validatePlugin = function (plugin, filename, name) {\r\n            if (plugin) {\r\n                // support plugins being a function\r\n                // so that the plugin can be more usable programmatically\r\n                if (typeof plugin === 'function') {\r\n                    plugin = new plugin();\r\n                }\r\n                if (plugin.minVersion) {\r\n                    if (this.compareVersion(plugin.minVersion, this.less.version) < 0) {\r\n                        return new LessError({\r\n                            message: \"Plugin \".concat(name, \" requires version \").concat(this.versionToString(plugin.minVersion))\r\n                        });\r\n                    }\r\n                }\r\n                return plugin;\r\n            }\r\n            return null;\r\n        };\r\n        AbstractPluginLoader.prototype.compareVersion = function (aVersion, bVersion) {\r\n            if (typeof aVersion === 'string') {\r\n                aVersion = aVersion.match(/^(\\d+)\\.?(\\d+)?\\.?(\\d+)?/);\r\n                aVersion.shift();\r\n            }\r\n            for (var i_1 = 0; i_1 < aVersion.length; i_1++) {\r\n                if (aVersion[i_1] !== bVersion[i_1]) {\r\n                    return parseInt(aVersion[i_1]) > parseInt(bVersion[i_1]) ? -1 : 1;\r\n                }\r\n            }\r\n            return 0;\r\n        };\r\n        AbstractPluginLoader.prototype.versionToString = function (version) {\r\n            var versionString = '';\r\n            for (var i_2 = 0; i_2 < version.length; i_2++) {\r\n                versionString += (versionString ? '.' : '') + version[i_2];\r\n            }\r\n            return versionString;\r\n        };\r\n        AbstractPluginLoader.prototype.printUsage = function (plugins) {\r\n            for (var i_3 = 0; i_3 < plugins.length; i_3++) {\r\n                var plugin = plugins[i_3];\r\n                if (plugin.printUsage) {\r\n                    plugin.printUsage();\r\n                }\r\n            }\r\n        };\r\n        return AbstractPluginLoader;\r\n    }());\n\n    function boolean(condition) {\r\n        return condition ? Keyword.True : Keyword.False;\r\n    }\r\n    /**\r\n     * Functions with evalArgs set to false are sent context\r\n     * as the first argument.\r\n     */\r\n    function If(context, condition, trueValue, falseValue) {\r\n        return condition.eval(context) ? trueValue.eval(context)\r\n            : (falseValue ? falseValue.eval(context) : new Anonymous);\r\n    }\r\n    If.evalArgs = false;\r\n    function isdefined(context, variable) {\r\n        try {\r\n            variable.eval(context);\r\n            return Keyword.True;\r\n        }\r\n        catch (e) {\r\n            return Keyword.False;\r\n        }\r\n    }\r\n    isdefined.evalArgs = false;\r\n    var boolean$1 = { isdefined: isdefined, boolean: boolean, 'if': If };\n\n    var colorFunctions;\r\n    function clamp(val) {\r\n        return Math.min(1, Math.max(0, val));\r\n    }\r\n    function hsla(origColor, hsl) {\r\n        var color = colorFunctions.hsla(hsl.h, hsl.s, hsl.l, hsl.a);\r\n        if (color) {\r\n            if (origColor.value &&\r\n                /^(rgb|hsl)/.test(origColor.value)) {\r\n                color.value = origColor.value;\r\n            }\r\n            else {\r\n                color.value = 'rgb';\r\n            }\r\n            return color;\r\n        }\r\n    }\r\n    function toHSL(color) {\r\n        if (color.toHSL) {\r\n            return color.toHSL();\r\n        }\r\n        else {\r\n            throw new Error('Argument cannot be evaluated to a color');\r\n        }\r\n    }\r\n    function toHSV(color) {\r\n        if (color.toHSV) {\r\n            return color.toHSV();\r\n        }\r\n        else {\r\n            throw new Error('Argument cannot be evaluated to a color');\r\n        }\r\n    }\r\n    function number$1(n) {\r\n        if (n instanceof Dimension) {\r\n            return parseFloat(n.unit.is('%') ? n.value / 100 : n.value);\r\n        }\r\n        else if (typeof n === 'number') {\r\n            return n;\r\n        }\r\n        else {\r\n            throw {\r\n                type: 'Argument',\r\n                message: 'color functions take numbers as parameters'\r\n            };\r\n        }\r\n    }\r\n    function scaled(n, size) {\r\n        if (n instanceof Dimension && n.unit.is('%')) {\r\n            return parseFloat(n.value * size / 100);\r\n        }\r\n        else {\r\n            return number$1(n);\r\n        }\r\n    }\r\n    colorFunctions = {\r\n        rgb: function (r, g, b) {\r\n            var a = 1;\r\n            /**\r\n             * Comma-less syntax\r\n             *   e.g. rgb(0 128 255 / 50%)\r\n             */\r\n            if (r instanceof Expression) {\r\n                var val = r.value;\r\n                r = val[0];\r\n                g = val[1];\r\n                b = val[2];\r\n                /**\r\n                 * @todo - should this be normalized in\r\n                 *   function caller? Or parsed differently?\r\n                 */\r\n                if (b instanceof Operation) {\r\n                    var op = b;\r\n                    b = op.operands[0];\r\n                    a = op.operands[1];\r\n                }\r\n            }\r\n            var color = colorFunctions.rgba(r, g, b, a);\r\n            if (color) {\r\n                color.value = 'rgb';\r\n                return color;\r\n            }\r\n        },\r\n        rgba: function (r, g, b, a) {\r\n            try {\r\n                if (r instanceof Color) {\r\n                    if (g) {\r\n                        a = number$1(g);\r\n                    }\r\n                    else {\r\n                        a = r.alpha;\r\n                    }\r\n                    return new Color(r.rgb, a, 'rgba');\r\n                }\r\n                var rgb = [r, g, b].map(function (c) { return scaled(c, 255); });\r\n                a = number$1(a);\r\n                return new Color(rgb, a, 'rgba');\r\n            }\r\n            catch (e) { }\r\n        },\r\n        hsl: function (h, s, l) {\r\n            var a = 1;\r\n            if (h instanceof Expression) {\r\n                var val = h.value;\r\n                h = val[0];\r\n                s = val[1];\r\n                l = val[2];\r\n                if (l instanceof Operation) {\r\n                    var op = l;\r\n                    l = op.operands[0];\r\n                    a = op.operands[1];\r\n                }\r\n            }\r\n            var color = colorFunctions.hsla(h, s, l, a);\r\n            if (color) {\r\n                color.value = 'hsl';\r\n                return color;\r\n            }\r\n        },\r\n        hsla: function (h, s, l, a) {\r\n            var m1;\r\n            var m2;\r\n            function hue(h) {\r\n                h = h < 0 ? h + 1 : (h > 1 ? h - 1 : h);\r\n                if (h * 6 < 1) {\r\n                    return m1 + (m2 - m1) * h * 6;\r\n                }\r\n                else if (h * 2 < 1) {\r\n                    return m2;\r\n                }\r\n                else if (h * 3 < 2) {\r\n                    return m1 + (m2 - m1) * (2 / 3 - h) * 6;\r\n                }\r\n                else {\r\n                    return m1;\r\n                }\r\n            }\r\n            try {\r\n                if (h instanceof Color) {\r\n                    if (s) {\r\n                        a = number$1(s);\r\n                    }\r\n                    else {\r\n                        a = h.alpha;\r\n                    }\r\n                    return new Color(h.rgb, a, 'hsla');\r\n                }\r\n                h = (number$1(h) % 360) / 360;\r\n                s = clamp(number$1(s));\r\n                l = clamp(number$1(l));\r\n                a = clamp(number$1(a));\r\n                m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\r\n                m1 = l * 2 - m2;\r\n                var rgb = [\r\n                    hue(h + 1 / 3) * 255,\r\n                    hue(h) * 255,\r\n                    hue(h - 1 / 3) * 255\r\n                ];\r\n                a = number$1(a);\r\n                return new Color(rgb, a, 'hsla');\r\n            }\r\n            catch (e) { }\r\n        },\r\n        hsv: function (h, s, v) {\r\n            return colorFunctions.hsva(h, s, v, 1.0);\r\n        },\r\n        hsva: function (h, s, v, a) {\r\n            h = ((number$1(h) % 360) / 360) * 360;\r\n            s = number$1(s);\r\n            v = number$1(v);\r\n            a = number$1(a);\r\n            var i;\r\n            var f;\r\n            i = Math.floor((h / 60) % 6);\r\n            f = (h / 60) - i;\r\n            var vs = [v,\r\n                v * (1 - s),\r\n                v * (1 - f * s),\r\n                v * (1 - (1 - f) * s)];\r\n            var perm = [[0, 3, 1],\r\n                [2, 0, 1],\r\n                [1, 0, 3],\r\n                [1, 2, 0],\r\n                [3, 1, 0],\r\n                [0, 1, 2]];\r\n            return colorFunctions.rgba(vs[perm[i][0]] * 255, vs[perm[i][1]] * 255, vs[perm[i][2]] * 255, a);\r\n        },\r\n        hue: function (color) {\r\n            return new Dimension(toHSL(color).h);\r\n        },\r\n        saturation: function (color) {\r\n            return new Dimension(toHSL(color).s * 100, '%');\r\n        },\r\n        lightness: function (color) {\r\n            return new Dimension(toHSL(color).l * 100, '%');\r\n        },\r\n        hsvhue: function (color) {\r\n            return new Dimension(toHSV(color).h);\r\n        },\r\n        hsvsaturation: function (color) {\r\n            return new Dimension(toHSV(color).s * 100, '%');\r\n        },\r\n        hsvvalue: function (color) {\r\n            return new Dimension(toHSV(color).v * 100, '%');\r\n        },\r\n        red: function (color) {\r\n            return new Dimension(color.rgb[0]);\r\n        },\r\n        green: function (color) {\r\n            return new Dimension(color.rgb[1]);\r\n        },\r\n        blue: function (color) {\r\n            return new Dimension(color.rgb[2]);\r\n        },\r\n        alpha: function (color) {\r\n            return new Dimension(toHSL(color).a);\r\n        },\r\n        luma: function (color) {\r\n            return new Dimension(color.luma() * color.alpha * 100, '%');\r\n        },\r\n        luminance: function (color) {\r\n            var luminance = (0.2126 * color.rgb[0] / 255) +\r\n                (0.7152 * color.rgb[1] / 255) +\r\n                (0.0722 * color.rgb[2] / 255);\r\n            return new Dimension(luminance * color.alpha * 100, '%');\r\n        },\r\n        saturate: function (color, amount, method) {\r\n            // filter: saturate(3.2);\r\n            // should be kept as is, so check for color\r\n            if (!color.rgb) {\r\n                return null;\r\n            }\r\n            var hsl = toHSL(color);\r\n            if (typeof method !== 'undefined' && method.value === 'relative') {\r\n                hsl.s += hsl.s * amount.value / 100;\r\n            }\r\n            else {\r\n                hsl.s += amount.value / 100;\r\n            }\r\n            hsl.s = clamp(hsl.s);\r\n            return hsla(color, hsl);\r\n        },\r\n        desaturate: function (color, amount, method) {\r\n            var hsl = toHSL(color);\r\n            if (typeof method !== 'undefined' && method.value === 'relative') {\r\n                hsl.s -= hsl.s * amount.value / 100;\r\n            }\r\n            else {\r\n                hsl.s -= amount.value / 100;\r\n            }\r\n            hsl.s = clamp(hsl.s);\r\n            return hsla(color, hsl);\r\n        },\r\n        lighten: function (color, amount, method) {\r\n            var hsl = toHSL(color);\r\n            if (typeof method !== 'undefined' && method.value === 'relative') {\r\n                hsl.l += hsl.l * amount.value / 100;\r\n            }\r\n            else {\r\n                hsl.l += amount.value / 100;\r\n            }\r\n            hsl.l = clamp(hsl.l);\r\n            return hsla(color, hsl);\r\n        },\r\n        darken: function (color, amount, method) {\r\n            var hsl = toHSL(color);\r\n            if (typeof method !== 'undefined' && method.value === 'relative') {\r\n                hsl.l -= hsl.l * amount.value / 100;\r\n            }\r\n            else {\r\n                hsl.l -= amount.value / 100;\r\n            }\r\n            hsl.l = clamp(hsl.l);\r\n            return hsla(color, hsl);\r\n        },\r\n        fadein: function (color, amount, method) {\r\n            var hsl = toHSL(color);\r\n            if (typeof method !== 'undefined' && method.value === 'relative') {\r\n                hsl.a += hsl.a * amount.value / 100;\r\n            }\r\n            else {\r\n                hsl.a += amount.value / 100;\r\n            }\r\n            hsl.a = clamp(hsl.a);\r\n            return hsla(color, hsl);\r\n        },\r\n        fadeout: function (color, amount, method) {\r\n            var hsl = toHSL(color);\r\n            if (typeof method !== 'undefined' && method.value === 'relative') {\r\n                hsl.a -= hsl.a * amount.value / 100;\r\n            }\r\n            else {\r\n                hsl.a -= amount.value / 100;\r\n            }\r\n            hsl.a = clamp(hsl.a);\r\n            return hsla(color, hsl);\r\n        },\r\n        fade: function (color, amount) {\r\n            var hsl = toHSL(color);\r\n            hsl.a = amount.value / 100;\r\n            hsl.a = clamp(hsl.a);\r\n            return hsla(color, hsl);\r\n        },\r\n        spin: function (color, amount) {\r\n            var hsl = toHSL(color);\r\n            var hue = (hsl.h + amount.value) % 360;\r\n            hsl.h = hue < 0 ? 360 + hue : hue;\r\n            return hsla(color, hsl);\r\n        },\r\n        //\r\n        // Copyright (c) 2006-2009 Hampton Catlin, Natalie Weizenbaum, and Chris Eppstein\r\n        // http://sass-lang.com\r\n        //\r\n        mix: function (color1, color2, weight) {\r\n            if (!weight) {\r\n                weight = new Dimension(50);\r\n            }\r\n            var p = weight.value / 100.0;\r\n            var w = p * 2 - 1;\r\n            var a = toHSL(color1).a - toHSL(color2).a;\r\n            var w1 = (((w * a == -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\r\n            var w2 = 1 - w1;\r\n            var rgb = [color1.rgb[0] * w1 + color2.rgb[0] * w2,\r\n                color1.rgb[1] * w1 + color2.rgb[1] * w2,\r\n                color1.rgb[2] * w1 + color2.rgb[2] * w2];\r\n            var alpha = color1.alpha * p + color2.alpha * (1 - p);\r\n            return new Color(rgb, alpha);\r\n        },\r\n        greyscale: function (color) {\r\n            return colorFunctions.desaturate(color, new Dimension(100));\r\n        },\r\n        contrast: function (color, dark, light, threshold) {\r\n            // filter: contrast(3.2);\r\n            // should be kept as is, so check for color\r\n            if (!color.rgb) {\r\n                return null;\r\n            }\r\n            if (typeof light === 'undefined') {\r\n                light = colorFunctions.rgba(255, 255, 255, 1.0);\r\n            }\r\n            if (typeof dark === 'undefined') {\r\n                dark = colorFunctions.rgba(0, 0, 0, 1.0);\r\n            }\r\n            // Figure out which is actually light and dark:\r\n            if (dark.luma() > light.luma()) {\r\n                var t = light;\r\n                light = dark;\r\n                dark = t;\r\n            }\r\n            if (typeof threshold === 'undefined') {\r\n                threshold = 0.43;\r\n            }\r\n            else {\r\n                threshold = number$1(threshold);\r\n            }\r\n            if (color.luma() < threshold) {\r\n                return light;\r\n            }\r\n            else {\r\n                return dark;\r\n            }\r\n        },\r\n        // Changes made in 2.7.0 - Reverted in 3.0.0\r\n        // contrast: function (color, color1, color2, threshold) {\r\n        //     // Return which of `color1` and `color2` has the greatest contrast with `color`\r\n        //     // according to the standard WCAG contrast ratio calculation.\r\n        //     // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\r\n        //     // The threshold param is no longer used, in line with SASS.\r\n        //     // filter: contrast(3.2);\r\n        //     // should be kept as is, so check for color\r\n        //     if (!color.rgb) {\r\n        //         return null;\r\n        //     }\r\n        //     if (typeof color1 === 'undefined') {\r\n        //         color1 = colorFunctions.rgba(0, 0, 0, 1.0);\r\n        //     }\r\n        //     if (typeof color2 === 'undefined') {\r\n        //         color2 = colorFunctions.rgba(255, 255, 255, 1.0);\r\n        //     }\r\n        //     var contrast1, contrast2;\r\n        //     var luma = color.luma();\r\n        //     var luma1 = color1.luma();\r\n        //     var luma2 = color2.luma();\r\n        //     // Calculate contrast ratios for each color\r\n        //     if (luma > luma1) {\r\n        //         contrast1 = (luma + 0.05) / (luma1 + 0.05);\r\n        //     } else {\r\n        //         contrast1 = (luma1 + 0.05) / (luma + 0.05);\r\n        //     }\r\n        //     if (luma > luma2) {\r\n        //         contrast2 = (luma + 0.05) / (luma2 + 0.05);\r\n        //     } else {\r\n        //         contrast2 = (luma2 + 0.05) / (luma + 0.05);\r\n        //     }\r\n        //     if (contrast1 > contrast2) {\r\n        //         return color1;\r\n        //     } else {\r\n        //         return color2;\r\n        //     }\r\n        // },\r\n        argb: function (color) {\r\n            return new Anonymous(color.toARGB());\r\n        },\r\n        color: function (c) {\r\n            if ((c instanceof Quoted) &&\r\n                (/^#([A-Fa-f0-9]{8}|[A-Fa-f0-9]{6}|[A-Fa-f0-9]{3,4})$/i.test(c.value))) {\r\n                var val = c.value.slice(1);\r\n                return new Color(val, undefined, \"#\".concat(val));\r\n            }\r\n            if ((c instanceof Color) || (c = Color.fromKeyword(c.value))) {\r\n                c.value = undefined;\r\n                return c;\r\n            }\r\n            throw {\r\n                type: 'Argument',\r\n                message: 'argument must be a color keyword or 3|4|6|8 digit hex e.g. #FFF'\r\n            };\r\n        },\r\n        tint: function (color, amount) {\r\n            return colorFunctions.mix(colorFunctions.rgb(255, 255, 255), color, amount);\r\n        },\r\n        shade: function (color, amount) {\r\n            return colorFunctions.mix(colorFunctions.rgb(0, 0, 0), color, amount);\r\n        }\r\n    };\r\n    var color = colorFunctions;\n\n    // Color Blending\r\n    // ref: http://www.w3.org/TR/compositing-1\r\n    function colorBlend(mode, color1, color2) {\r\n        var ab = color1.alpha; // result\r\n        var // backdrop\r\n        cb;\r\n        var as = color2.alpha;\r\n        var // source\r\n        cs;\r\n        var ar;\r\n        var cr;\r\n        var r = [];\r\n        ar = as + ab * (1 - as);\r\n        for (var i_1 = 0; i_1 < 3; i_1++) {\r\n            cb = color1.rgb[i_1] / 255;\r\n            cs = color2.rgb[i_1] / 255;\r\n            cr = mode(cb, cs);\r\n            if (ar) {\r\n                cr = (as * cs + ab * (cb -\r\n                    as * (cb + cs - cr))) / ar;\r\n            }\r\n            r[i_1] = cr * 255;\r\n        }\r\n        return new Color(r, ar);\r\n    }\r\n    var colorBlendModeFunctions = {\r\n        multiply: function (cb, cs) {\r\n            return cb * cs;\r\n        },\r\n        screen: function (cb, cs) {\r\n            return cb + cs - cb * cs;\r\n        },\r\n        overlay: function (cb, cs) {\r\n            cb *= 2;\r\n            return (cb <= 1) ?\r\n                colorBlendModeFunctions.multiply(cb, cs) :\r\n                colorBlendModeFunctions.screen(cb - 1, cs);\r\n        },\r\n        softlight: function (cb, cs) {\r\n            var d = 1;\r\n            var e = cb;\r\n            if (cs > 0.5) {\r\n                e = 1;\r\n                d = (cb > 0.25) ? Math.sqrt(cb)\r\n                    : ((16 * cb - 12) * cb + 4) * cb;\r\n            }\r\n            return cb - (1 - 2 * cs) * e * (d - cb);\r\n        },\r\n        hardlight: function (cb, cs) {\r\n            return colorBlendModeFunctions.overlay(cs, cb);\r\n        },\r\n        difference: function (cb, cs) {\r\n            return Math.abs(cb - cs);\r\n        },\r\n        exclusion: function (cb, cs) {\r\n            return cb + cs - 2 * cb * cs;\r\n        },\r\n        // non-w3c functions:\r\n        average: function (cb, cs) {\r\n            return (cb + cs) / 2;\r\n        },\r\n        negation: function (cb, cs) {\r\n            return 1 - Math.abs(cb + cs - 1);\r\n        }\r\n    };\r\n    for (var f$1 in colorBlendModeFunctions) {\r\n        // eslint-disable-next-line no-prototype-builtins\r\n        if (colorBlendModeFunctions.hasOwnProperty(f$1)) {\r\n            colorBlend[f$1] = colorBlend.bind(null, colorBlendModeFunctions[f$1]);\r\n        }\r\n    }\n\n    var dataUri = (function (environment) {\r\n        var fallback = function (functionThis, node) { return new URL(node, functionThis.index, functionThis.currentFileInfo).eval(functionThis.context); };\r\n        return { 'data-uri': function (mimetypeNode, filePathNode) {\r\n                if (!filePathNode) {\r\n                    filePathNode = mimetypeNode;\r\n                    mimetypeNode = null;\r\n                }\r\n                var mimetype = mimetypeNode && mimetypeNode.value;\r\n                var filePath = filePathNode.value;\r\n                var currentFileInfo = this.currentFileInfo;\r\n                var currentDirectory = currentFileInfo.rewriteUrls ?\r\n                    currentFileInfo.currentDirectory : currentFileInfo.entryPath;\r\n                var fragmentStart = filePath.indexOf('#');\r\n                var fragment = '';\r\n                if (fragmentStart !== -1) {\r\n                    fragment = filePath.slice(fragmentStart);\r\n                    filePath = filePath.slice(0, fragmentStart);\r\n                }\r\n                var context = clone(this.context);\r\n                context.rawBuffer = true;\r\n                var fileManager = environment.getFileManager(filePath, currentDirectory, context, environment, true);\r\n                if (!fileManager) {\r\n                    return fallback(this, filePathNode);\r\n                }\r\n                var useBase64 = false;\r\n                // detect the mimetype if not given\r\n                if (!mimetypeNode) {\r\n                    mimetype = environment.mimeLookup(filePath);\r\n                    if (mimetype === 'image/svg+xml') {\r\n                        useBase64 = false;\r\n                    }\r\n                    else {\r\n                        // use base 64 unless it's an ASCII or UTF-8 format\r\n                        var charset = environment.charsetLookup(mimetype);\r\n                        useBase64 = ['US-ASCII', 'UTF-8'].indexOf(charset) < 0;\r\n                    }\r\n                    if (useBase64) {\r\n                        mimetype += ';base64';\r\n                    }\r\n                }\r\n                else {\r\n                    useBase64 = /;base64$/.test(mimetype);\r\n                }\r\n                var fileSync = fileManager.loadFileSync(filePath, currentDirectory, context, environment);\r\n                if (!fileSync.contents) {\r\n                    logger$1.warn(\"Skipped data-uri embedding of \".concat(filePath, \" because file not found\"));\r\n                    return fallback(this, filePathNode || mimetypeNode);\r\n                }\r\n                var buf = fileSync.contents;\r\n                if (useBase64 && !environment.encodeBase64) {\r\n                    return fallback(this, filePathNode);\r\n                }\r\n                buf = useBase64 ? environment.encodeBase64(buf) : encodeURIComponent(buf);\r\n                var uri = \"data:\".concat(mimetype, \",\").concat(buf).concat(fragment);\r\n                return new URL(new Quoted(\"\\\"\".concat(uri, \"\\\"\"), uri, false, this.index, this.currentFileInfo), this.index, this.currentFileInfo);\r\n            } };\r\n    });\n\n    var getItemsFromNode = function (node) {\r\n        // handle non-array values as an array of length 1\r\n        // return 'undefined' if index is invalid\r\n        var items = Array.isArray(node.value) ?\r\n            node.value : Array(node);\r\n        return items;\r\n    };\r\n    var list = {\r\n        _SELF: function (n) {\r\n            return n;\r\n        },\r\n        '~': function () {\r\n            var expr = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                expr[_i] = arguments[_i];\r\n            }\r\n            if (expr.length === 1) {\r\n                return expr[0];\r\n            }\r\n            return new Value(expr);\r\n        },\r\n        extract: function (values, index) {\r\n            // (1-based index)\r\n            index = index.value - 1;\r\n            return getItemsFromNode(values)[index];\r\n        },\r\n        length: function (values) {\r\n            return new Dimension(getItemsFromNode(values).length);\r\n        },\r\n        /**\r\n         * Creates a Less list of incremental values.\r\n         * Modeled after Lodash's range function, also exists natively in PHP\r\n         *\r\n         * @param {Dimension} [start=1]\r\n         * @param {Dimension} end  - e.g. 10 or 10px - unit is added to output\r\n         * @param {Dimension} [step=1]\r\n         */\r\n        range: function (start, end, step) {\r\n            var from;\r\n            var to;\r\n            var stepValue = 1;\r\n            var list = [];\r\n            if (end) {\r\n                to = end;\r\n                from = start.value;\r\n                if (step) {\r\n                    stepValue = step.value;\r\n                }\r\n            }\r\n            else {\r\n                from = 1;\r\n                to = start;\r\n            }\r\n            for (var i_1 = from; i_1 <= to.value; i_1 += stepValue) {\r\n                list.push(new Dimension(i_1, to.unit));\r\n            }\r\n            return new Expression(list);\r\n        },\r\n        each: function (list, rs) {\r\n            var _this = this;\r\n            var rules = [];\r\n            var newRules;\r\n            var iterator;\r\n            var tryEval = function (val) {\r\n                if (val instanceof Node) {\r\n                    return val.eval(_this.context);\r\n                }\r\n                return val;\r\n            };\r\n            if (list.value && !(list instanceof Quoted)) {\r\n                if (Array.isArray(list.value)) {\r\n                    iterator = list.value.map(tryEval);\r\n                }\r\n                else {\r\n                    iterator = [tryEval(list.value)];\r\n                }\r\n            }\r\n            else if (list.ruleset) {\r\n                iterator = tryEval(list.ruleset).rules;\r\n            }\r\n            else if (list.rules) {\r\n                iterator = list.rules.map(tryEval);\r\n            }\r\n            else if (Array.isArray(list)) {\r\n                iterator = list.map(tryEval);\r\n            }\r\n            else {\r\n                iterator = [tryEval(list)];\r\n            }\r\n            var valueName = '@value';\r\n            var keyName = '@key';\r\n            var indexName = '@index';\r\n            if (rs.params) {\r\n                valueName = rs.params[0] && rs.params[0].name;\r\n                keyName = rs.params[1] && rs.params[1].name;\r\n                indexName = rs.params[2] && rs.params[2].name;\r\n                rs = rs.rules;\r\n            }\r\n            else {\r\n                rs = rs.ruleset;\r\n            }\r\n            for (var i_2 = 0; i_2 < iterator.length; i_2++) {\r\n                var key = void 0;\r\n                var value = void 0;\r\n                var item = iterator[i_2];\r\n                if (item instanceof Declaration) {\r\n                    key = typeof item.name === 'string' ? item.name : item.name[0].value;\r\n                    value = item.value;\r\n                }\r\n                else {\r\n                    key = new Dimension(i_2 + 1);\r\n                    value = item;\r\n                }\r\n                if (item instanceof Comment) {\r\n                    continue;\r\n                }\r\n                newRules = rs.rules.slice(0);\r\n                if (valueName) {\r\n                    newRules.push(new Declaration(valueName, value, false, false, this.index, this.currentFileInfo));\r\n                }\r\n                if (indexName) {\r\n                    newRules.push(new Declaration(indexName, new Dimension(i_2 + 1), false, false, this.index, this.currentFileInfo));\r\n                }\r\n                if (keyName) {\r\n                    newRules.push(new Declaration(keyName, key, false, false, this.index, this.currentFileInfo));\r\n                }\r\n                rules.push(new Ruleset([new (Selector)([new Element('', '&')])], newRules, rs.strictImports, rs.visibilityInfo()));\r\n            }\r\n            return new Ruleset([new (Selector)([new Element('', '&')])], rules, rs.strictImports, rs.visibilityInfo()).eval(this.context);\r\n        }\r\n    };\n\n    var MathHelper = function (fn, unit, n) {\r\n        if (!(n instanceof Dimension)) {\r\n            throw { type: 'Argument', message: 'argument must be a number' };\r\n        }\r\n        if (unit === null) {\r\n            unit = n.unit;\r\n        }\r\n        else {\r\n            n = n.unify();\r\n        }\r\n        return new Dimension(fn(parseFloat(n.value)), unit);\r\n    };\n\n    var mathFunctions = {\r\n        // name,  unit\r\n        ceil: null,\r\n        floor: null,\r\n        sqrt: null,\r\n        abs: null,\r\n        tan: '',\r\n        sin: '',\r\n        cos: '',\r\n        atan: 'rad',\r\n        asin: 'rad',\r\n        acos: 'rad'\r\n    };\r\n    for (var f in mathFunctions) {\r\n        // eslint-disable-next-line no-prototype-builtins\r\n        if (mathFunctions.hasOwnProperty(f)) {\r\n            mathFunctions[f] = MathHelper.bind(null, Math[f], mathFunctions[f]);\r\n        }\r\n    }\r\n    mathFunctions.round = function (n, f) {\r\n        var fraction = typeof f === 'undefined' ? 0 : f.value;\r\n        return MathHelper(function (num) { return num.toFixed(fraction); }, null, n);\r\n    };\n\n    var minMax = function (isMin, args) {\r\n        var _this = this;\r\n        args = Array.prototype.slice.call(args);\r\n        switch (args.length) {\r\n            case 0: throw { type: 'Argument', message: 'one or more arguments required' };\r\n        }\r\n        var i; // key is the unit.toString() for unified Dimension values,\r\n        var j;\r\n        var current;\r\n        var currentUnified;\r\n        var referenceUnified;\r\n        var unit;\r\n        var unitStatic;\r\n        var unitClone;\r\n        var // elems only contains original argument values.\r\n        order = [];\r\n        var values = {};\r\n        // value is the index into the order array.\r\n        for (i = 0; i < args.length; i++) {\r\n            current = args[i];\r\n            if (!(current instanceof Dimension)) {\r\n                if (Array.isArray(args[i].value)) {\r\n                    Array.prototype.push.apply(args, Array.prototype.slice.call(args[i].value));\r\n                    continue;\r\n                }\r\n                else {\r\n                    throw { type: 'Argument', message: 'incompatible types' };\r\n                }\r\n            }\r\n            currentUnified = current.unit.toString() === '' && unitClone !== undefined ? new Dimension(current.value, unitClone).unify() : current.unify();\r\n            unit = currentUnified.unit.toString() === '' && unitStatic !== undefined ? unitStatic : currentUnified.unit.toString();\r\n            unitStatic = unit !== '' && unitStatic === undefined || unit !== '' && order[0].unify().unit.toString() === '' ? unit : unitStatic;\r\n            unitClone = unit !== '' && unitClone === undefined ? current.unit.toString() : unitClone;\r\n            j = values[''] !== undefined && unit !== '' && unit === unitStatic ? values[''] : values[unit];\r\n            if (j === undefined) {\r\n                if (unitStatic !== undefined && unit !== unitStatic) {\r\n                    throw { type: 'Argument', message: 'incompatible types' };\r\n                }\r\n                values[unit] = order.length;\r\n                order.push(current);\r\n                continue;\r\n            }\r\n            referenceUnified = order[j].unit.toString() === '' && unitClone !== undefined ? new Dimension(order[j].value, unitClone).unify() : order[j].unify();\r\n            if (isMin && currentUnified.value < referenceUnified.value ||\r\n                !isMin && currentUnified.value > referenceUnified.value) {\r\n                order[j] = current;\r\n            }\r\n        }\r\n        if (order.length == 1) {\r\n            return order[0];\r\n        }\r\n        args = order.map(function (a) { return a.toCSS(_this.context); }).join(this.context.compress ? ',' : ', ');\r\n        return new Anonymous(\"\".concat(isMin ? 'min' : 'max', \"(\").concat(args, \")\"));\r\n    };\r\n    var number = {\r\n        min: function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            try {\r\n                return minMax.call(this, true, args);\r\n            }\r\n            catch (e) { }\r\n        },\r\n        max: function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            try {\r\n                return minMax.call(this, false, args);\r\n            }\r\n            catch (e) { }\r\n        },\r\n        convert: function (val, unit) {\r\n            return val.convertTo(unit.value);\r\n        },\r\n        pi: function () {\r\n            return new Dimension(Math.PI);\r\n        },\r\n        mod: function (a, b) {\r\n            return new Dimension(a.value % b.value, a.unit);\r\n        },\r\n        pow: function (x, y) {\r\n            if (typeof x === 'number' && typeof y === 'number') {\r\n                x = new Dimension(x);\r\n                y = new Dimension(y);\r\n            }\r\n            else if (!(x instanceof Dimension) || !(y instanceof Dimension)) {\r\n                throw { type: 'Argument', message: 'arguments must be numbers' };\r\n            }\r\n            return new Dimension(Math.pow(x.value, y.value), x.unit);\r\n        },\r\n        percentage: function (n) {\r\n            var result = MathHelper(function (num) { return num * 100; }, '%', n);\r\n            return result;\r\n        }\r\n    };\n\n    var string = {\r\n        e: function (str) {\r\n            return new Quoted('\"', str instanceof JavaScript ? str.evaluated : str.value, true);\r\n        },\r\n        escape: function (str) {\r\n            return new Anonymous(encodeURI(str.value).replace(/=/g, '%3D').replace(/:/g, '%3A').replace(/#/g, '%23').replace(/;/g, '%3B')\r\n                .replace(/\\(/g, '%28').replace(/\\)/g, '%29'));\r\n        },\r\n        replace: function (string, pattern, replacement, flags) {\r\n            var result = string.value;\r\n            replacement = (replacement.type === 'Quoted') ?\r\n                replacement.value : replacement.toCSS();\r\n            result = result.replace(new RegExp(pattern.value, flags ? flags.value : ''), replacement);\r\n            return new Quoted(string.quote || '', result, string.escaped);\r\n        },\r\n        '%': function (string /* arg, arg, ... */) {\r\n            var args = Array.prototype.slice.call(arguments, 1);\r\n            var result = string.value;\r\n            var _loop_1 = function (i_1) {\r\n                /* jshint loopfunc:true */\r\n                result = result.replace(/%[sda]/i, function (token) {\r\n                    var value = ((args[i_1].type === 'Quoted') &&\r\n                        token.match(/s/i)) ? args[i_1].value : args[i_1].toCSS();\r\n                    return token.match(/[A-Z]$/) ? encodeURIComponent(value) : value;\r\n                });\r\n            };\r\n            for (var i_1 = 0; i_1 < args.length; i_1++) {\r\n                _loop_1(i_1);\r\n            }\r\n            result = result.replace(/%%/g, '%');\r\n            return new Quoted(string.quote || '', result, string.escaped);\r\n        }\r\n    };\n\n    var svg = (function () {\r\n        return { 'svg-gradient': function (direction) {\r\n                var stops;\r\n                var gradientDirectionSvg;\r\n                var gradientType = 'linear';\r\n                var rectangleDimension = 'x=\"0\" y=\"0\" width=\"1\" height=\"1\"';\r\n                var renderEnv = { compress: false };\r\n                var returner;\r\n                var directionValue = direction.toCSS(renderEnv);\r\n                var i;\r\n                var color;\r\n                var position;\r\n                var positionValue;\r\n                var alpha;\r\n                function throwArgumentDescriptor() {\r\n                    throw { type: 'Argument',\r\n                        message: 'svg-gradient expects direction, start_color [start_position], [color position,]...,' +\r\n                            ' end_color [end_position] or direction, color list' };\r\n                }\r\n                if (arguments.length == 2) {\r\n                    if (arguments[1].value.length < 2) {\r\n                        throwArgumentDescriptor();\r\n                    }\r\n                    stops = arguments[1].value;\r\n                }\r\n                else if (arguments.length < 3) {\r\n                    throwArgumentDescriptor();\r\n                }\r\n                else {\r\n                    stops = Array.prototype.slice.call(arguments, 1);\r\n                }\r\n                switch (directionValue) {\r\n                    case 'to bottom':\r\n                        gradientDirectionSvg = 'x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\"';\r\n                        break;\r\n                    case 'to right':\r\n                        gradientDirectionSvg = 'x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"';\r\n                        break;\r\n                    case 'to bottom right':\r\n                        gradientDirectionSvg = 'x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\"';\r\n                        break;\r\n                    case 'to top right':\r\n                        gradientDirectionSvg = 'x1=\"0%\" y1=\"100%\" x2=\"100%\" y2=\"0%\"';\r\n                        break;\r\n                    case 'ellipse':\r\n                    case 'ellipse at center':\r\n                        gradientType = 'radial';\r\n                        gradientDirectionSvg = 'cx=\"50%\" cy=\"50%\" r=\"75%\"';\r\n                        rectangleDimension = 'x=\"-50\" y=\"-50\" width=\"101\" height=\"101\"';\r\n                        break;\r\n                    default:\r\n                        throw { type: 'Argument', message: 'svg-gradient direction must be \\'to bottom\\', \\'to right\\',' +\r\n                                ' \\'to bottom right\\', \\'to top right\\' or \\'ellipse at center\\'' };\r\n                }\r\n                returner = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 1 1\\\"><\".concat(gradientType, \"Gradient id=\\\"g\\\" \").concat(gradientDirectionSvg, \">\");\r\n                for (i = 0; i < stops.length; i += 1) {\r\n                    if (stops[i] instanceof Expression) {\r\n                        color = stops[i].value[0];\r\n                        position = stops[i].value[1];\r\n                    }\r\n                    else {\r\n                        color = stops[i];\r\n                        position = undefined;\r\n                    }\r\n                    if (!(color instanceof Color) || (!((i === 0 || i + 1 === stops.length) && position === undefined) && !(position instanceof Dimension))) {\r\n                        throwArgumentDescriptor();\r\n                    }\r\n                    positionValue = position ? position.toCSS(renderEnv) : i === 0 ? '0%' : '100%';\r\n                    alpha = color.alpha;\r\n                    returner += \"<stop offset=\\\"\".concat(positionValue, \"\\\" stop-color=\\\"\").concat(color.toRGB(), \"\\\"\").concat(alpha < 1 ? \" stop-opacity=\\\"\".concat(alpha, \"\\\"\") : '', \"/>\");\r\n                }\r\n                returner += \"</\".concat(gradientType, \"Gradient><rect \").concat(rectangleDimension, \" fill=\\\"url(#g)\\\" /></svg>\");\r\n                returner = encodeURIComponent(returner);\r\n                returner = \"data:image/svg+xml,\".concat(returner);\r\n                return new URL(new Quoted(\"'\".concat(returner, \"'\"), returner, false, this.index, this.currentFileInfo), this.index, this.currentFileInfo);\r\n            } };\r\n    });\n\n    var isa = function (n, Type) { return (n instanceof Type) ? Keyword.True : Keyword.False; };\r\n    var isunit = function (n, unit) {\r\n        if (unit === undefined) {\r\n            throw { type: 'Argument', message: 'missing the required second argument to isunit.' };\r\n        }\r\n        unit = typeof unit.value === 'string' ? unit.value : unit;\r\n        if (typeof unit !== 'string') {\r\n            throw { type: 'Argument', message: 'Second argument to isunit should be a unit or a string.' };\r\n        }\r\n        return (n instanceof Dimension) && n.unit.is(unit) ? Keyword.True : Keyword.False;\r\n    };\r\n    var types = {\r\n        isruleset: function (n) {\r\n            return isa(n, DetachedRuleset);\r\n        },\r\n        iscolor: function (n) {\r\n            return isa(n, Color);\r\n        },\r\n        isnumber: function (n) {\r\n            return isa(n, Dimension);\r\n        },\r\n        isstring: function (n) {\r\n            return isa(n, Quoted);\r\n        },\r\n        iskeyword: function (n) {\r\n            return isa(n, Keyword);\r\n        },\r\n        isurl: function (n) {\r\n            return isa(n, URL);\r\n        },\r\n        ispixel: function (n) {\r\n            return isunit(n, 'px');\r\n        },\r\n        ispercentage: function (n) {\r\n            return isunit(n, '%');\r\n        },\r\n        isem: function (n) {\r\n            return isunit(n, 'em');\r\n        },\r\n        isunit: isunit,\r\n        unit: function (val, unit) {\r\n            if (!(val instanceof Dimension)) {\r\n                throw { type: 'Argument',\r\n                    message: \"the first argument to unit must be a number\".concat(val instanceof Operation ? '. Have you forgotten parenthesis?' : '') };\r\n            }\r\n            if (unit) {\r\n                if (unit instanceof Keyword) {\r\n                    unit = unit.value;\r\n                }\r\n                else {\r\n                    unit = unit.toCSS();\r\n                }\r\n            }\r\n            else {\r\n                unit = '';\r\n            }\r\n            return new Dimension(val.value, unit);\r\n        },\r\n        'get-unit': function (n) {\r\n            return new Anonymous(n.unit);\r\n        }\r\n    };\n\n    var styleExpression = function (args) {\r\n        var _this = this;\r\n        args = Array.prototype.slice.call(args);\r\n        switch (args.length) {\r\n            case 0: throw { type: 'Argument', message: 'one or more arguments required' };\r\n        }\r\n        var entityList = [new Variable(args[0].value, this.index, this.currentFileInfo).eval(this.context)];\r\n        args = entityList.map(function (a) { return a.toCSS(_this.context); }).join(this.context.compress ? ',' : ', ');\r\n        return new Variable(\"style(\".concat(args, \")\"));\r\n    };\r\n    var style$1 = {\r\n        style: function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            try {\r\n                return styleExpression.call(this, args);\r\n            }\r\n            catch (e) { }\r\n        },\r\n    };\n\n    var functions = (function (environment) {\r\n        var functions = { functionRegistry: functionRegistry, functionCaller: functionCaller };\r\n        // register functions\r\n        functionRegistry.addMultiple(boolean$1);\r\n        functionRegistry.add('default', defaultFunc.eval.bind(defaultFunc));\r\n        functionRegistry.addMultiple(color);\r\n        functionRegistry.addMultiple(colorBlend);\r\n        functionRegistry.addMultiple(dataUri(environment));\r\n        functionRegistry.addMultiple(list);\r\n        functionRegistry.addMultiple(mathFunctions);\r\n        functionRegistry.addMultiple(number);\r\n        functionRegistry.addMultiple(string);\r\n        functionRegistry.addMultiple(svg());\r\n        functionRegistry.addMultiple(types);\r\n        functionRegistry.addMultiple(style$1);\r\n        return functions;\r\n    });\n\n    function transformTree (root, options) {\r\n        options = options || {};\r\n        var evaldRoot;\r\n        var variables = options.variables;\r\n        var evalEnv = new contexts.Eval(options);\r\n        //\r\n        // Allows setting variables with a hash, so:\r\n        //\r\n        //   `{ color: new tree.Color('#f01') }` will become:\r\n        //\r\n        //   new tree.Declaration('@color',\r\n        //     new tree.Value([\r\n        //       new tree.Expression([\r\n        //         new tree.Color('#f01')\r\n        //       ])\r\n        //     ])\r\n        //   )\r\n        //\r\n        if (typeof variables === 'object' && !Array.isArray(variables)) {\r\n            variables = Object.keys(variables).map(function (k) {\r\n                var value = variables[k];\r\n                if (!(value instanceof tree.Value)) {\r\n                    if (!(value instanceof tree.Expression)) {\r\n                        value = new tree.Expression([value]);\r\n                    }\r\n                    value = new tree.Value([value]);\r\n                }\r\n                return new tree.Declaration(\"@\".concat(k), value, false, null, 0);\r\n            });\r\n            evalEnv.frames = [new tree.Ruleset(null, variables)];\r\n        }\r\n        var visitors$1 = [\r\n            new visitors.JoinSelectorVisitor(),\r\n            new visitors.MarkVisibleSelectorsVisitor(true),\r\n            new visitors.ExtendVisitor(),\r\n            new visitors.ToCSSVisitor({ compress: Boolean(options.compress) })\r\n        ];\r\n        var preEvalVisitors = [];\r\n        var v;\r\n        var visitorIterator;\r\n        /**\r\n         * first() / get() allows visitors to be added while visiting\r\n         *\r\n         * @todo Add scoping for visitors just like functions for @plugin; right now they're global\r\n         */\r\n        if (options.pluginManager) {\r\n            visitorIterator = options.pluginManager.visitor();\r\n            for (var i_1 = 0; i_1 < 2; i_1++) {\r\n                visitorIterator.first();\r\n                while ((v = visitorIterator.get())) {\r\n                    if (v.isPreEvalVisitor) {\r\n                        if (i_1 === 0 || preEvalVisitors.indexOf(v) === -1) {\r\n                            preEvalVisitors.push(v);\r\n                            v.run(root);\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (i_1 === 0 || visitors$1.indexOf(v) === -1) {\r\n                            if (v.isPreVisitor) {\r\n                                visitors$1.unshift(v);\r\n                            }\r\n                            else {\r\n                                visitors$1.push(v);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        evaldRoot = root.eval(evalEnv);\r\n        for (var i_2 = 0; i_2 < visitors$1.length; i_2++) {\r\n            visitors$1[i_2].run(evaldRoot);\r\n        }\r\n        // Run any remaining visitors added after eval pass\r\n        if (options.pluginManager) {\r\n            visitorIterator.first();\r\n            while ((v = visitorIterator.get())) {\r\n                if (visitors$1.indexOf(v) === -1 && preEvalVisitors.indexOf(v) === -1) {\r\n                    v.run(evaldRoot);\r\n                }\r\n            }\r\n        }\r\n        return evaldRoot;\r\n    }\n\n    /**\r\n     * Plugin Manager\r\n     */\r\n    var PluginManager = /** @class */ (function () {\r\n        function PluginManager(less) {\r\n            this.less = less;\r\n            this.visitors = [];\r\n            this.preProcessors = [];\r\n            this.postProcessors = [];\r\n            this.installedPlugins = [];\r\n            this.fileManagers = [];\r\n            this.iterator = -1;\r\n            this.pluginCache = {};\r\n            this.Loader = new less.PluginLoader(less);\r\n        }\r\n        /**\r\n         * Adds all the plugins in the array\r\n         * @param {Array} plugins\r\n         */\r\n        PluginManager.prototype.addPlugins = function (plugins) {\r\n            if (plugins) {\r\n                for (var i_1 = 0; i_1 < plugins.length; i_1++) {\r\n                    this.addPlugin(plugins[i_1]);\r\n                }\r\n            }\r\n        };\r\n        /**\r\n         *\r\n         * @param plugin\r\n         * @param {String} filename\r\n         */\r\n        PluginManager.prototype.addPlugin = function (plugin, filename, functionRegistry) {\r\n            this.installedPlugins.push(plugin);\r\n            if (filename) {\r\n                this.pluginCache[filename] = plugin;\r\n            }\r\n            if (plugin.install) {\r\n                plugin.install(this.less, this, functionRegistry || this.less.functions.functionRegistry);\r\n            }\r\n        };\r\n        /**\r\n         *\r\n         * @param filename\r\n         */\r\n        PluginManager.prototype.get = function (filename) {\r\n            return this.pluginCache[filename];\r\n        };\r\n        /**\r\n         * Adds a visitor. The visitor object has options on itself to determine\r\n         * when it should run.\r\n         * @param visitor\r\n         */\r\n        PluginManager.prototype.addVisitor = function (visitor) {\r\n            this.visitors.push(visitor);\r\n        };\r\n        /**\r\n         * Adds a pre processor object\r\n         * @param {object} preProcessor\r\n         * @param {number} priority - guidelines 1 = before import, 1000 = import, 2000 = after import\r\n         */\r\n        PluginManager.prototype.addPreProcessor = function (preProcessor, priority) {\r\n            var indexToInsertAt;\r\n            for (indexToInsertAt = 0; indexToInsertAt < this.preProcessors.length; indexToInsertAt++) {\r\n                if (this.preProcessors[indexToInsertAt].priority >= priority) {\r\n                    break;\r\n                }\r\n            }\r\n            this.preProcessors.splice(indexToInsertAt, 0, { preProcessor: preProcessor, priority: priority });\r\n        };\r\n        /**\r\n         * Adds a post processor object\r\n         * @param {object} postProcessor\r\n         * @param {number} priority - guidelines 1 = before compression, 1000 = compression, 2000 = after compression\r\n         */\r\n        PluginManager.prototype.addPostProcessor = function (postProcessor, priority) {\r\n            var indexToInsertAt;\r\n            for (indexToInsertAt = 0; indexToInsertAt < this.postProcessors.length; indexToInsertAt++) {\r\n                if (this.postProcessors[indexToInsertAt].priority >= priority) {\r\n                    break;\r\n                }\r\n            }\r\n            this.postProcessors.splice(indexToInsertAt, 0, { postProcessor: postProcessor, priority: priority });\r\n        };\r\n        /**\r\n         *\r\n         * @param manager\r\n         */\r\n        PluginManager.prototype.addFileManager = function (manager) {\r\n            this.fileManagers.push(manager);\r\n        };\r\n        /**\r\n         *\r\n         * @returns {Array}\r\n         * @private\r\n         */\r\n        PluginManager.prototype.getPreProcessors = function () {\r\n            var preProcessors = [];\r\n            for (var i_2 = 0; i_2 < this.preProcessors.length; i_2++) {\r\n                preProcessors.push(this.preProcessors[i_2].preProcessor);\r\n            }\r\n            return preProcessors;\r\n        };\r\n        /**\r\n         *\r\n         * @returns {Array}\r\n         * @private\r\n         */\r\n        PluginManager.prototype.getPostProcessors = function () {\r\n            var postProcessors = [];\r\n            for (var i_3 = 0; i_3 < this.postProcessors.length; i_3++) {\r\n                postProcessors.push(this.postProcessors[i_3].postProcessor);\r\n            }\r\n            return postProcessors;\r\n        };\r\n        /**\r\n         *\r\n         * @returns {Array}\r\n         * @private\r\n         */\r\n        PluginManager.prototype.getVisitors = function () {\r\n            return this.visitors;\r\n        };\r\n        PluginManager.prototype.visitor = function () {\r\n            var self = this;\r\n            return {\r\n                first: function () {\r\n                    self.iterator = -1;\r\n                    return self.visitors[self.iterator];\r\n                },\r\n                get: function () {\r\n                    self.iterator += 1;\r\n                    return self.visitors[self.iterator];\r\n                }\r\n            };\r\n        };\r\n        /**\r\n         *\r\n         * @returns {Array}\r\n         * @private\r\n         */\r\n        PluginManager.prototype.getFileManagers = function () {\r\n            return this.fileManagers;\r\n        };\r\n        return PluginManager;\r\n    }());\r\n    var pm;\r\n    var PluginManagerFactory = function (less, newFactory) {\r\n        if (newFactory || !pm) {\r\n            pm = new PluginManager(less);\r\n        }\r\n        return pm;\r\n    };\n\n    function SourceMapOutput (environment) {\r\n        var SourceMapOutput = /** @class */ (function () {\r\n            function SourceMapOutput(options) {\r\n                this._css = [];\r\n                this._rootNode = options.rootNode;\r\n                this._contentsMap = options.contentsMap;\r\n                this._contentsIgnoredCharsMap = options.contentsIgnoredCharsMap;\r\n                if (options.sourceMapFilename) {\r\n                    this._sourceMapFilename = options.sourceMapFilename.replace(/\\\\/g, '/');\r\n                }\r\n                this._outputFilename = options.outputFilename;\r\n                this.sourceMapURL = options.sourceMapURL;\r\n                if (options.sourceMapBasepath) {\r\n                    this._sourceMapBasepath = options.sourceMapBasepath.replace(/\\\\/g, '/');\r\n                }\r\n                if (options.sourceMapRootpath) {\r\n                    this._sourceMapRootpath = options.sourceMapRootpath.replace(/\\\\/g, '/');\r\n                    if (this._sourceMapRootpath.charAt(this._sourceMapRootpath.length - 1) !== '/') {\r\n                        this._sourceMapRootpath += '/';\r\n                    }\r\n                }\r\n                else {\r\n                    this._sourceMapRootpath = '';\r\n                }\r\n                this._outputSourceFiles = options.outputSourceFiles;\r\n                this._sourceMapGeneratorConstructor = environment.getSourceMapGenerator();\r\n                this._lineNumber = 0;\r\n                this._column = 0;\r\n            }\r\n            SourceMapOutput.prototype.removeBasepath = function (path) {\r\n                if (this._sourceMapBasepath && path.indexOf(this._sourceMapBasepath) === 0) {\r\n                    path = path.substring(this._sourceMapBasepath.length);\r\n                    if (path.charAt(0) === '\\\\' || path.charAt(0) === '/') {\r\n                        path = path.substring(1);\r\n                    }\r\n                }\r\n                return path;\r\n            };\r\n            SourceMapOutput.prototype.normalizeFilename = function (filename) {\r\n                filename = filename.replace(/\\\\/g, '/');\r\n                filename = this.removeBasepath(filename);\r\n                return (this._sourceMapRootpath || '') + filename;\r\n            };\r\n            SourceMapOutput.prototype.add = function (chunk, fileInfo, index, mapLines) {\r\n                // ignore adding empty strings\r\n                if (!chunk) {\r\n                    return;\r\n                }\r\n                var lines, sourceLines, columns, sourceColumns, i;\r\n                if (fileInfo && fileInfo.filename) {\r\n                    var inputSource = this._contentsMap[fileInfo.filename];\r\n                    // remove vars/banner added to the top of the file\r\n                    if (this._contentsIgnoredCharsMap[fileInfo.filename]) {\r\n                        // adjust the index\r\n                        index -= this._contentsIgnoredCharsMap[fileInfo.filename];\r\n                        if (index < 0) {\r\n                            index = 0;\r\n                        }\r\n                        // adjust the source\r\n                        inputSource = inputSource.slice(this._contentsIgnoredCharsMap[fileInfo.filename]);\r\n                    }\r\n                    /**\r\n                     * ignore empty content, or failsafe\r\n                     * if contents map is incorrect\r\n                     */\r\n                    if (inputSource === undefined) {\r\n                        this._css.push(chunk);\r\n                        return;\r\n                    }\r\n                    inputSource = inputSource.substring(0, index);\r\n                    sourceLines = inputSource.split('\\n');\r\n                    sourceColumns = sourceLines[sourceLines.length - 1];\r\n                }\r\n                lines = chunk.split('\\n');\r\n                columns = lines[lines.length - 1];\r\n                if (fileInfo && fileInfo.filename) {\r\n                    if (!mapLines) {\r\n                        this._sourceMapGenerator.addMapping({ generated: { line: this._lineNumber + 1, column: this._column },\r\n                            original: { line: sourceLines.length, column: sourceColumns.length },\r\n                            source: this.normalizeFilename(fileInfo.filename) });\r\n                    }\r\n                    else {\r\n                        for (i = 0; i < lines.length; i++) {\r\n                            this._sourceMapGenerator.addMapping({ generated: { line: this._lineNumber + i + 1, column: i === 0 ? this._column : 0 },\r\n                                original: { line: sourceLines.length + i, column: i === 0 ? sourceColumns.length : 0 },\r\n                                source: this.normalizeFilename(fileInfo.filename) });\r\n                        }\r\n                    }\r\n                }\r\n                if (lines.length === 1) {\r\n                    this._column += columns.length;\r\n                }\r\n                else {\r\n                    this._lineNumber += lines.length - 1;\r\n                    this._column = columns.length;\r\n                }\r\n                this._css.push(chunk);\r\n            };\r\n            SourceMapOutput.prototype.isEmpty = function () {\r\n                return this._css.length === 0;\r\n            };\r\n            SourceMapOutput.prototype.toCSS = function (context) {\r\n                this._sourceMapGenerator = new this._sourceMapGeneratorConstructor({ file: this._outputFilename, sourceRoot: null });\r\n                if (this._outputSourceFiles) {\r\n                    for (var filename in this._contentsMap) {\r\n                        // eslint-disable-next-line no-prototype-builtins\r\n                        if (this._contentsMap.hasOwnProperty(filename)) {\r\n                            var source = this._contentsMap[filename];\r\n                            if (this._contentsIgnoredCharsMap[filename]) {\r\n                                source = source.slice(this._contentsIgnoredCharsMap[filename]);\r\n                            }\r\n                            this._sourceMapGenerator.setSourceContent(this.normalizeFilename(filename), source);\r\n                        }\r\n                    }\r\n                }\r\n                this._rootNode.genCSS(context, this);\r\n                if (this._css.length > 0) {\r\n                    var sourceMapURL = void 0;\r\n                    var sourceMapContent = JSON.stringify(this._sourceMapGenerator.toJSON());\r\n                    if (this.sourceMapURL) {\r\n                        sourceMapURL = this.sourceMapURL;\r\n                    }\r\n                    else if (this._sourceMapFilename) {\r\n                        sourceMapURL = this._sourceMapFilename;\r\n                    }\r\n                    this.sourceMapURL = sourceMapURL;\r\n                    this.sourceMap = sourceMapContent;\r\n                }\r\n                return this._css.join('');\r\n            };\r\n            return SourceMapOutput;\r\n        }());\r\n        return SourceMapOutput;\r\n    }\n\n    function SourceMapBuilder (SourceMapOutput, environment) {\r\n        var SourceMapBuilder = /** @class */ (function () {\r\n            function SourceMapBuilder(options) {\r\n                this.options = options;\r\n            }\r\n            SourceMapBuilder.prototype.toCSS = function (rootNode, options, imports) {\r\n                var sourceMapOutput = new SourceMapOutput({\r\n                    contentsIgnoredCharsMap: imports.contentsIgnoredChars,\r\n                    rootNode: rootNode,\r\n                    contentsMap: imports.contents,\r\n                    sourceMapFilename: this.options.sourceMapFilename,\r\n                    sourceMapURL: this.options.sourceMapURL,\r\n                    outputFilename: this.options.sourceMapOutputFilename,\r\n                    sourceMapBasepath: this.options.sourceMapBasepath,\r\n                    sourceMapRootpath: this.options.sourceMapRootpath,\r\n                    outputSourceFiles: this.options.outputSourceFiles,\r\n                    sourceMapGenerator: this.options.sourceMapGenerator,\r\n                    sourceMapFileInline: this.options.sourceMapFileInline,\r\n                    disableSourcemapAnnotation: this.options.disableSourcemapAnnotation\r\n                });\r\n                var css = sourceMapOutput.toCSS(options);\r\n                this.sourceMap = sourceMapOutput.sourceMap;\r\n                this.sourceMapURL = sourceMapOutput.sourceMapURL;\r\n                if (this.options.sourceMapInputFilename) {\r\n                    this.sourceMapInputFilename = sourceMapOutput.normalizeFilename(this.options.sourceMapInputFilename);\r\n                }\r\n                if (this.options.sourceMapBasepath !== undefined && this.sourceMapURL !== undefined) {\r\n                    this.sourceMapURL = sourceMapOutput.removeBasepath(this.sourceMapURL);\r\n                }\r\n                return css + this.getCSSAppendage();\r\n            };\r\n            SourceMapBuilder.prototype.getCSSAppendage = function () {\r\n                var sourceMapURL = this.sourceMapURL;\r\n                if (this.options.sourceMapFileInline) {\r\n                    if (this.sourceMap === undefined) {\r\n                        return '';\r\n                    }\r\n                    sourceMapURL = \"data:application/json;base64,\".concat(environment.encodeBase64(this.sourceMap));\r\n                }\r\n                if (this.options.disableSourcemapAnnotation) {\r\n                    return '';\r\n                }\r\n                if (sourceMapURL) {\r\n                    return \"/*# sourceMappingURL=\".concat(sourceMapURL, \" */\");\r\n                }\r\n                return '';\r\n            };\r\n            SourceMapBuilder.prototype.getExternalSourceMap = function () {\r\n                return this.sourceMap;\r\n            };\r\n            SourceMapBuilder.prototype.setExternalSourceMap = function (sourceMap) {\r\n                this.sourceMap = sourceMap;\r\n            };\r\n            SourceMapBuilder.prototype.isInline = function () {\r\n                return this.options.sourceMapFileInline;\r\n            };\r\n            SourceMapBuilder.prototype.getSourceMapURL = function () {\r\n                return this.sourceMapURL;\r\n            };\r\n            SourceMapBuilder.prototype.getOutputFilename = function () {\r\n                return this.options.sourceMapOutputFilename;\r\n            };\r\n            SourceMapBuilder.prototype.getInputFilename = function () {\r\n                return this.sourceMapInputFilename;\r\n            };\r\n            return SourceMapBuilder;\r\n        }());\r\n        return SourceMapBuilder;\r\n    }\n\n    function ParseTree (SourceMapBuilder) {\r\n        var ParseTree = /** @class */ (function () {\r\n            function ParseTree(root, imports) {\r\n                this.root = root;\r\n                this.imports = imports;\r\n            }\r\n            ParseTree.prototype.toCSS = function (options) {\r\n                var evaldRoot;\r\n                var result = {};\r\n                var sourceMapBuilder;\r\n                try {\r\n                    evaldRoot = transformTree(this.root, options);\r\n                }\r\n                catch (e) {\r\n                    throw new LessError(e, this.imports);\r\n                }\r\n                try {\r\n                    var compress = Boolean(options.compress);\r\n                    if (compress) {\r\n                        logger$1.warn('The compress option has been deprecated. ' +\r\n                            'We recommend you use a dedicated css minifier, for instance see less-plugin-clean-css.');\r\n                    }\r\n                    var toCSSOptions = {\r\n                        compress: compress,\r\n                        dumpLineNumbers: options.dumpLineNumbers,\r\n                        strictUnits: Boolean(options.strictUnits),\r\n                        numPrecision: 8\r\n                    };\r\n                    if (options.sourceMap) {\r\n                        sourceMapBuilder = new SourceMapBuilder(options.sourceMap);\r\n                        result.css = sourceMapBuilder.toCSS(evaldRoot, toCSSOptions, this.imports);\r\n                    }\r\n                    else {\r\n                        result.css = evaldRoot.toCSS(toCSSOptions);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    throw new LessError(e, this.imports);\r\n                }\r\n                if (options.pluginManager) {\r\n                    var postProcessors = options.pluginManager.getPostProcessors();\r\n                    for (var i_1 = 0; i_1 < postProcessors.length; i_1++) {\r\n                        result.css = postProcessors[i_1].process(result.css, { sourceMap: sourceMapBuilder, options: options, imports: this.imports });\r\n                    }\r\n                }\r\n                if (options.sourceMap) {\r\n                    result.map = sourceMapBuilder.getExternalSourceMap();\r\n                }\r\n                result.imports = [];\r\n                for (var file_1 in this.imports.files) {\r\n                    if (Object.prototype.hasOwnProperty.call(this.imports.files, file_1) && file_1 !== this.imports.rootFilename) {\r\n                        result.imports.push(file_1);\r\n                    }\r\n                }\r\n                return result;\r\n            };\r\n            return ParseTree;\r\n        }());\r\n        return ParseTree;\r\n    }\n\n    function ImportManager (environment) {\r\n        // FileInfo = {\r\n        //  'rewriteUrls' - option - whether to adjust URL's to be relative\r\n        //  'filename' - full resolved filename of current file\r\n        //  'rootpath' - path to append to normal URLs for this node\r\n        //  'currentDirectory' - path to the current file, absolute\r\n        //  'rootFilename' - filename of the base file\r\n        //  'entryPath' - absolute path to the entry file\r\n        //  'reference' - whether the file should not be output and only output parts that are referenced\r\n        var ImportManager = /** @class */ (function () {\r\n            function ImportManager(less, context, rootFileInfo) {\r\n                this.less = less;\r\n                this.rootFilename = rootFileInfo.filename;\r\n                this.paths = context.paths || []; // Search paths, when importing\r\n                this.contents = {}; // map - filename to contents of all the files\r\n                this.contentsIgnoredChars = {}; // map - filename to lines at the beginning of each file to ignore\r\n                this.mime = context.mime;\r\n                this.error = null;\r\n                this.context = context;\r\n                // Deprecated? Unused outside of here, could be useful.\r\n                this.queue = []; // Files which haven't been imported yet\r\n                this.files = {}; // Holds the imported parse trees.\r\n            }\r\n            /**\r\n             * Add an import to be imported\r\n             * @param path - the raw path\r\n             * @param tryAppendExtension - whether to try appending a file extension (.less or .js if the path has no extension)\r\n             * @param currentFileInfo - the current file info (used for instance to work out relative paths)\r\n             * @param importOptions - import options\r\n             * @param callback - callback for when it is imported\r\n             */\r\n            ImportManager.prototype.push = function (path, tryAppendExtension, currentFileInfo, importOptions, callback) {\r\n                var importManager = this, pluginLoader = this.context.pluginManager.Loader;\r\n                this.queue.push(path);\r\n                var fileParsedFunc = function (e, root, fullPath) {\r\n                    importManager.queue.splice(importManager.queue.indexOf(path), 1); // Remove the path from the queue\r\n                    var importedEqualsRoot = fullPath === importManager.rootFilename;\r\n                    if (importOptions.optional && e) {\r\n                        callback(null, { rules: [] }, false, null);\r\n                        logger$1.info(\"The file \".concat(fullPath, \" was skipped because it was not found and the import was marked optional.\"));\r\n                    }\r\n                    else {\r\n                        // Inline imports aren't cached here.\r\n                        // If we start to cache them, please make sure they won't conflict with non-inline imports of the\r\n                        // same name as they used to do before this comment and the condition below have been added.\r\n                        if (!importManager.files[fullPath] && !importOptions.inline) {\r\n                            importManager.files[fullPath] = { root: root, options: importOptions };\r\n                        }\r\n                        if (e && !importManager.error) {\r\n                            importManager.error = e;\r\n                        }\r\n                        callback(e, root, importedEqualsRoot, fullPath);\r\n                    }\r\n                };\r\n                var newFileInfo = {\r\n                    rewriteUrls: this.context.rewriteUrls,\r\n                    entryPath: currentFileInfo.entryPath,\r\n                    rootpath: currentFileInfo.rootpath,\r\n                    rootFilename: currentFileInfo.rootFilename\r\n                };\r\n                var fileManager = environment.getFileManager(path, currentFileInfo.currentDirectory, this.context, environment);\r\n                if (!fileManager) {\r\n                    fileParsedFunc({ message: \"Could not find a file-manager for \".concat(path) });\r\n                    return;\r\n                }\r\n                var loadFileCallback = function (loadedFile) {\r\n                    var plugin;\r\n                    var resolvedFilename = loadedFile.filename;\r\n                    var contents = loadedFile.contents.replace(/^\\uFEFF/, '');\r\n                    // Pass on an updated rootpath if path of imported file is relative and file\r\n                    // is in a (sub|sup) directory\r\n                    //\r\n                    // Examples:\r\n                    // - If path of imported file is 'module/nav/nav.less' and rootpath is 'less/',\r\n                    //   then rootpath should become 'less/module/nav/'\r\n                    // - If path of imported file is '../mixins.less' and rootpath is 'less/',\r\n                    //   then rootpath should become 'less/../'\r\n                    newFileInfo.currentDirectory = fileManager.getPath(resolvedFilename);\r\n                    if (newFileInfo.rewriteUrls) {\r\n                        newFileInfo.rootpath = fileManager.join((importManager.context.rootpath || ''), fileManager.pathDiff(newFileInfo.currentDirectory, newFileInfo.entryPath));\r\n                        if (!fileManager.isPathAbsolute(newFileInfo.rootpath) && fileManager.alwaysMakePathsAbsolute()) {\r\n                            newFileInfo.rootpath = fileManager.join(newFileInfo.entryPath, newFileInfo.rootpath);\r\n                        }\r\n                    }\r\n                    newFileInfo.filename = resolvedFilename;\r\n                    var newEnv = new contexts.Parse(importManager.context);\r\n                    newEnv.processImports = false;\r\n                    importManager.contents[resolvedFilename] = contents;\r\n                    if (currentFileInfo.reference || importOptions.reference) {\r\n                        newFileInfo.reference = true;\r\n                    }\r\n                    if (importOptions.isPlugin) {\r\n                        plugin = pluginLoader.evalPlugin(contents, newEnv, importManager, importOptions.pluginArgs, newFileInfo);\r\n                        if (plugin instanceof LessError) {\r\n                            fileParsedFunc(plugin, null, resolvedFilename);\r\n                        }\r\n                        else {\r\n                            fileParsedFunc(null, plugin, resolvedFilename);\r\n                        }\r\n                    }\r\n                    else if (importOptions.inline) {\r\n                        fileParsedFunc(null, contents, resolvedFilename);\r\n                    }\r\n                    else {\r\n                        // import (multiple) parse trees apparently get altered and can't be cached.\r\n                        // TODO: investigate why this is\r\n                        if (importManager.files[resolvedFilename]\r\n                            && !importManager.files[resolvedFilename].options.multiple\r\n                            && !importOptions.multiple) {\r\n                            fileParsedFunc(null, importManager.files[resolvedFilename].root, resolvedFilename);\r\n                        }\r\n                        else {\r\n                            new Parser(newEnv, importManager, newFileInfo).parse(contents, function (e, root) {\r\n                                fileParsedFunc(e, root, resolvedFilename);\r\n                            });\r\n                        }\r\n                    }\r\n                };\r\n                var loadedFile;\r\n                var promise;\r\n                var context = clone(this.context);\r\n                if (tryAppendExtension) {\r\n                    context.ext = importOptions.isPlugin ? '.js' : '.less';\r\n                }\r\n                if (importOptions.isPlugin) {\r\n                    context.mime = 'application/javascript';\r\n                    if (context.syncImport) {\r\n                        loadedFile = pluginLoader.loadPluginSync(path, currentFileInfo.currentDirectory, context, environment, fileManager);\r\n                    }\r\n                    else {\r\n                        promise = pluginLoader.loadPlugin(path, currentFileInfo.currentDirectory, context, environment, fileManager);\r\n                    }\r\n                }\r\n                else {\r\n                    if (context.syncImport) {\r\n                        loadedFile = fileManager.loadFileSync(path, currentFileInfo.currentDirectory, context, environment);\r\n                    }\r\n                    else {\r\n                        promise = fileManager.loadFile(path, currentFileInfo.currentDirectory, context, environment, function (err, loadedFile) {\r\n                            if (err) {\r\n                                fileParsedFunc(err);\r\n                            }\r\n                            else {\r\n                                loadFileCallback(loadedFile);\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                if (loadedFile) {\r\n                    if (!loadedFile.filename) {\r\n                        fileParsedFunc(loadedFile);\r\n                    }\r\n                    else {\r\n                        loadFileCallback(loadedFile);\r\n                    }\r\n                }\r\n                else if (promise) {\r\n                    promise.then(loadFileCallback, fileParsedFunc);\r\n                }\r\n            };\r\n            return ImportManager;\r\n        }());\r\n        return ImportManager;\r\n    }\n\n    function Parse (environment, ParseTree, ImportManager) {\r\n        var parse = function (input, options, callback) {\r\n            if (typeof options === 'function') {\r\n                callback = options;\r\n                options = copyOptions(this.options, {});\r\n            }\r\n            else {\r\n                options = copyOptions(this.options, options || {});\r\n            }\r\n            if (!callback) {\r\n                var self_1 = this;\r\n                return new Promise(function (resolve, reject) {\r\n                    parse.call(self_1, input, options, function (err, output) {\r\n                        if (err) {\r\n                            reject(err);\r\n                        }\r\n                        else {\r\n                            resolve(output);\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n            else {\r\n                var context_1;\r\n                var rootFileInfo = void 0;\r\n                var pluginManager_1 = new PluginManagerFactory(this, !options.reUsePluginManager);\r\n                options.pluginManager = pluginManager_1;\r\n                context_1 = new contexts.Parse(options);\r\n                if (options.rootFileInfo) {\r\n                    rootFileInfo = options.rootFileInfo;\r\n                }\r\n                else {\r\n                    var filename = options.filename || 'input';\r\n                    var entryPath = filename.replace(/[^/\\\\]*$/, '');\r\n                    rootFileInfo = {\r\n                        filename: filename,\r\n                        rewriteUrls: context_1.rewriteUrls,\r\n                        rootpath: context_1.rootpath || '',\r\n                        currentDirectory: entryPath,\r\n                        entryPath: entryPath,\r\n                        rootFilename: filename\r\n                    };\r\n                    // add in a missing trailing slash\r\n                    if (rootFileInfo.rootpath && rootFileInfo.rootpath.slice(-1) !== '/') {\r\n                        rootFileInfo.rootpath += '/';\r\n                    }\r\n                }\r\n                var imports_1 = new ImportManager(this, context_1, rootFileInfo);\r\n                this.importManager = imports_1;\r\n                // TODO: allow the plugins to be just a list of paths or names\r\n                // Do an async plugin queue like lessc\r\n                if (options.plugins) {\r\n                    options.plugins.forEach(function (plugin) {\r\n                        var evalResult, contents;\r\n                        if (plugin.fileContent) {\r\n                            contents = plugin.fileContent.replace(/^\\uFEFF/, '');\r\n                            evalResult = pluginManager_1.Loader.evalPlugin(contents, context_1, imports_1, plugin.options, plugin.filename);\r\n                            if (evalResult instanceof LessError) {\r\n                                return callback(evalResult);\r\n                            }\r\n                        }\r\n                        else {\r\n                            pluginManager_1.addPlugin(plugin);\r\n                        }\r\n                    });\r\n                }\r\n                new Parser(context_1, imports_1, rootFileInfo)\r\n                    .parse(input, function (e, root) {\r\n                    if (e) {\r\n                        return callback(e);\r\n                    }\r\n                    callback(null, root, imports_1, options);\r\n                }, options);\r\n            }\r\n        };\r\n        return parse;\r\n    }\n\n    function Render (environment, ParseTree) {\r\n        var render = function (input, options, callback) {\r\n            if (typeof options === 'function') {\r\n                callback = options;\r\n                options = copyOptions(this.options, {});\r\n            }\r\n            else {\r\n                options = copyOptions(this.options, options || {});\r\n            }\r\n            if (!callback) {\r\n                var self_1 = this;\r\n                return new Promise(function (resolve, reject) {\r\n                    render.call(self_1, input, options, function (err, output) {\r\n                        if (err) {\r\n                            reject(err);\r\n                        }\r\n                        else {\r\n                            resolve(output);\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n            else {\r\n                this.parse(input, options, function (err, root, imports, options) {\r\n                    if (err) {\r\n                        return callback(err);\r\n                    }\r\n                    var result;\r\n                    try {\r\n                        var parseTree = new ParseTree(root, imports);\r\n                        result = parseTree.toCSS(options);\r\n                    }\r\n                    catch (err) {\r\n                        return callback(err);\r\n                    }\r\n                    callback(null, result);\r\n                });\r\n            }\r\n        };\r\n        return render;\r\n    }\n\n    var version = \"4.2.1\";\n\n    function parseNodeVersion(version) {\r\n        var match = version.match(/^v(\\d{1,2})\\.(\\d{1,2})\\.(\\d{1,2})(?:-([0-9A-Za-z-.]+))?(?:\\+([0-9A-Za-z-.]+))?$/); // eslint-disable-line max-len\r\n        if (!match) {\r\n            throw new Error('Unable to parse: ' + version);\r\n        }\r\n        var res = {\r\n            major: parseInt(match[1], 10),\r\n            minor: parseInt(match[2], 10),\r\n            patch: parseInt(match[3], 10),\r\n            pre: match[4] || '',\r\n            build: match[5] || '',\r\n        };\r\n        return res;\r\n    }\r\n    var parseNodeVersion_1 = parseNodeVersion;\n\n    function lessRoot (environment, fileManagers) {\r\n        var sourceMapOutput, sourceMapBuilder, parseTree, importManager;\r\n        environment = new Environment(environment, fileManagers);\r\n        sourceMapOutput = SourceMapOutput(environment);\r\n        sourceMapBuilder = SourceMapBuilder(sourceMapOutput, environment);\r\n        parseTree = ParseTree(sourceMapBuilder);\r\n        importManager = ImportManager(environment);\r\n        var render = Render(environment, parseTree);\r\n        var parse = Parse(environment, parseTree, importManager);\r\n        var v = parseNodeVersion_1(\"v\".concat(version));\r\n        var initial = {\r\n            version: [v.major, v.minor, v.patch],\r\n            data: data,\r\n            tree: tree,\r\n            Environment: Environment,\r\n            AbstractFileManager: AbstractFileManager,\r\n            AbstractPluginLoader: AbstractPluginLoader,\r\n            environment: environment,\r\n            visitors: visitors,\r\n            Parser: Parser,\r\n            functions: functions(environment),\r\n            contexts: contexts,\r\n            SourceMapOutput: sourceMapOutput,\r\n            SourceMapBuilder: sourceMapBuilder,\r\n            ParseTree: parseTree,\r\n            ImportManager: importManager,\r\n            render: render,\r\n            parse: parse,\r\n            LessError: LessError,\r\n            transformTree: transformTree,\r\n            utils: utils,\r\n            PluginManager: PluginManagerFactory,\r\n            logger: logger$1\r\n        };\r\n        // Create a public API\r\n        var ctor = function (t) {\r\n            return function () {\r\n                var obj = Object.create(t.prototype);\r\n                t.apply(obj, Array.prototype.slice.call(arguments, 0));\r\n                return obj;\r\n            };\r\n        };\r\n        var t;\r\n        var api = Object.create(initial);\r\n        for (var n in initial.tree) {\r\n            /* eslint guard-for-in: 0 */\r\n            t = initial.tree[n];\r\n            if (typeof t === 'function') {\r\n                api[n.toLowerCase()] = ctor(t);\r\n            }\r\n            else {\r\n                api[n] = Object.create(null);\r\n                for (var o in t) {\r\n                    /* eslint guard-for-in: 0 */\r\n                    api[n][o.toLowerCase()] = ctor(t[o]);\r\n                }\r\n            }\r\n        }\r\n        /**\r\n         * Some of the functions assume a `this` context of the API object,\r\n         * which causes it to fail when wrapped for ES6 imports.\r\n         *\r\n         * An assumed `this` should be removed in the future.\r\n         */\r\n        initial.parse = initial.parse.bind(api);\r\n        initial.render = initial.render.bind(api);\r\n        return api;\r\n    }\n\n    var options$1;\r\n    var logger;\r\n    var fileCache = {};\r\n    // TODOS - move log somewhere. pathDiff and doing something similar in node. use pathDiff in the other browser file for the initial load\r\n    var FileManager = function () { };\r\n    FileManager.prototype = Object.assign(new AbstractFileManager(), {\r\n        alwaysMakePathsAbsolute: function () {\r\n            return true;\r\n        },\r\n        join: function (basePath, laterPath) {\r\n            if (!basePath) {\r\n                return laterPath;\r\n            }\r\n            return this.extractUrlParts(laterPath, basePath).path;\r\n        },\r\n        doXHR: function (url, type, callback, errback) {\r\n            var xhr = new XMLHttpRequest();\r\n            var async = options$1.isFileProtocol ? options$1.fileAsync : true;\r\n            if (typeof xhr.overrideMimeType === 'function') {\r\n                xhr.overrideMimeType('text/css');\r\n            }\r\n            logger.debug(\"XHR: Getting '\".concat(url, \"'\"));\r\n            xhr.open('GET', url, async);\r\n            xhr.setRequestHeader('Accept', type || 'text/x-less, text/css; q=0.9, */*; q=0.5');\r\n            xhr.send(null);\r\n            function handleResponse(xhr, callback, errback) {\r\n                if (xhr.status >= 200 && xhr.status < 300) {\r\n                    callback(xhr.responseText, xhr.getResponseHeader('Last-Modified'));\r\n                }\r\n                else if (typeof errback === 'function') {\r\n                    errback(xhr.status, url);\r\n                }\r\n            }\r\n            if (options$1.isFileProtocol && !options$1.fileAsync) {\r\n                if (xhr.status === 0 || (xhr.status >= 200 && xhr.status < 300)) {\r\n                    callback(xhr.responseText);\r\n                }\r\n                else {\r\n                    errback(xhr.status, url);\r\n                }\r\n            }\r\n            else if (async) {\r\n                xhr.onreadystatechange = function () {\r\n                    if (xhr.readyState == 4) {\r\n                        handleResponse(xhr, callback, errback);\r\n                    }\r\n                };\r\n            }\r\n            else {\r\n                handleResponse(xhr, callback, errback);\r\n            }\r\n        },\r\n        supports: function () {\r\n            return true;\r\n        },\r\n        clearFileCache: function () {\r\n            fileCache = {};\r\n        },\r\n        loadFile: function (filename, currentDirectory, options) {\r\n            // TODO: Add prefix support like less-node?\r\n            // What about multiple paths?\r\n            if (currentDirectory && !this.isPathAbsolute(filename)) {\r\n                filename = currentDirectory + filename;\r\n            }\r\n            filename = options.ext ? this.tryAppendExtension(filename, options.ext) : filename;\r\n            options = options || {};\r\n            // sheet may be set to the stylesheet for the initial load or a collection of properties including\r\n            // some context variables for imports\r\n            var hrefParts = this.extractUrlParts(filename, window.location.href);\r\n            var href = hrefParts.url;\r\n            var self = this;\r\n            return new Promise(function (resolve, reject) {\r\n                if (options.useFileCache && fileCache[href]) {\r\n                    try {\r\n                        var lessText_1 = fileCache[href];\r\n                        return resolve({ contents: lessText_1, filename: href, webInfo: { lastModified: new Date() } });\r\n                    }\r\n                    catch (e) {\r\n                        return reject({ filename: href, message: \"Error loading file \".concat(href, \" error was \").concat(e.message) });\r\n                    }\r\n                }\r\n                self.doXHR(href, options.mime, function doXHRCallback(data, lastModified) {\r\n                    // per file cache\r\n                    fileCache[href] = data;\r\n                    // Use remote copy (re-parse)\r\n                    resolve({ contents: data, filename: href, webInfo: { lastModified: lastModified } });\r\n                }, function doXHRError(status, url) {\r\n                    reject({ type: 'File', message: \"'\".concat(url, \"' wasn't found (\").concat(status, \")\"), href: href });\r\n                });\r\n            });\r\n        }\r\n    });\r\n    var FM = (function (opts, log) {\r\n        options$1 = opts;\r\n        logger = log;\r\n        return FileManager;\r\n    });\n\n    /**\r\n     * @todo Add tests for browser `@plugin`\r\n     */\r\n    /**\r\n     * Browser Plugin Loader\r\n     */\r\n    var PluginLoader = function (less) {\r\n        this.less = less;\r\n        // Should we shim this.require for browser? Probably not?\r\n    };\r\n    PluginLoader.prototype = Object.assign(new AbstractPluginLoader(), {\r\n        loadPlugin: function (filename, basePath, context, environment, fileManager) {\r\n            return new Promise(function (fulfill, reject) {\r\n                fileManager.loadFile(filename, basePath, context, environment)\r\n                    .then(fulfill).catch(reject);\r\n            });\r\n        }\r\n    });\n\n    var LogListener = (function (less, options) {\r\n        var logLevel_debug = 4;\r\n        var logLevel_info = 3;\r\n        var logLevel_warn = 2;\r\n        var logLevel_error = 1;\r\n        // The amount of logging in the javascript console.\r\n        // 3 - Debug, information and errors\r\n        // 2 - Information and errors\r\n        // 1 - Errors\r\n        // 0 - None\r\n        // Defaults to 2\r\n        options.logLevel = typeof options.logLevel !== 'undefined' ? options.logLevel : (options.env === 'development' ? logLevel_info : logLevel_error);\r\n        if (!options.loggers) {\r\n            options.loggers = [{\r\n                    debug: function (msg) {\r\n                        if (options.logLevel >= logLevel_debug) {\r\n                            console.log(msg);\r\n                        }\r\n                    },\r\n                    info: function (msg) {\r\n                        if (options.logLevel >= logLevel_info) {\r\n                            console.log(msg);\r\n                        }\r\n                    },\r\n                    warn: function (msg) {\r\n                        if (options.logLevel >= logLevel_warn) {\r\n                            console.warn(msg);\r\n                        }\r\n                    },\r\n                    error: function (msg) {\r\n                        if (options.logLevel >= logLevel_error) {\r\n                            console.error(msg);\r\n                        }\r\n                    }\r\n                }];\r\n        }\r\n        for (var i_1 = 0; i_1 < options.loggers.length; i_1++) {\r\n            less.logger.addListener(options.loggers[i_1]);\r\n        }\r\n    });\n\n    var ErrorReporting = (function (window, less, options) {\r\n        function errorHTML(e, rootHref) {\r\n            var id = \"less-error-message:\".concat(extractId(rootHref || ''));\r\n            var template = '<li><label>{line}</label><pre class=\"{class}\">{content}</pre></li>';\r\n            var elem = window.document.createElement('div');\r\n            var timer;\r\n            var content;\r\n            var errors = [];\r\n            var filename = e.filename || rootHref;\r\n            var filenameNoPath = filename.match(/([^/]+(\\?.*)?)$/)[1];\r\n            elem.id = id;\r\n            elem.className = 'less-error-message';\r\n            content = \"<h3>\".concat(e.type || 'Syntax', \"Error: \").concat(e.message || 'There is an error in your .less file') +\r\n                \"</h3><p>in <a href=\\\"\".concat(filename, \"\\\">\").concat(filenameNoPath, \"</a> \");\r\n            var errorline = function (e, i, classname) {\r\n                if (e.extract[i] !== undefined) {\r\n                    errors.push(template.replace(/\\{line\\}/, (parseInt(e.line, 10) || 0) + (i - 1))\r\n                        .replace(/\\{class\\}/, classname)\r\n                        .replace(/\\{content\\}/, e.extract[i]));\r\n                }\r\n            };\r\n            if (e.line) {\r\n                errorline(e, 0, '');\r\n                errorline(e, 1, 'line');\r\n                errorline(e, 2, '');\r\n                content += \"on line \".concat(e.line, \", column \").concat(e.column + 1, \":</p><ul>\").concat(errors.join(''), \"</ul>\");\r\n            }\r\n            if (e.stack && (e.extract || options.logLevel >= 4)) {\r\n                content += \"<br/>Stack Trace</br />\".concat(e.stack.split('\\n').slice(1).join('<br/>'));\r\n            }\r\n            elem.innerHTML = content;\r\n            // CSS for error messages\r\n            browser.createCSS(window.document, [\r\n                '.less-error-message ul, .less-error-message li {',\r\n                'list-style-type: none;',\r\n                'margin-right: 15px;',\r\n                'padding: 4px 0;',\r\n                'margin: 0;',\r\n                '}',\r\n                '.less-error-message label {',\r\n                'font-size: 12px;',\r\n                'margin-right: 15px;',\r\n                'padding: 4px 0;',\r\n                'color: #cc7777;',\r\n                '}',\r\n                '.less-error-message pre {',\r\n                'color: #dd6666;',\r\n                'padding: 4px 0;',\r\n                'margin: 0;',\r\n                'display: inline-block;',\r\n                '}',\r\n                '.less-error-message pre.line {',\r\n                'color: #ff0000;',\r\n                '}',\r\n                '.less-error-message h3 {',\r\n                'font-size: 20px;',\r\n                'font-weight: bold;',\r\n                'padding: 15px 0 5px 0;',\r\n                'margin: 0;',\r\n                '}',\r\n                '.less-error-message a {',\r\n                'color: #10a',\r\n                '}',\r\n                '.less-error-message .error {',\r\n                'color: red;',\r\n                'font-weight: bold;',\r\n                'padding-bottom: 2px;',\r\n                'border-bottom: 1px dashed red;',\r\n                '}'\r\n            ].join('\\n'), { title: 'error-message' });\r\n            elem.style.cssText = [\r\n                'font-family: Arial, sans-serif',\r\n                'border: 1px solid #e00',\r\n                'background-color: #eee',\r\n                'border-radius: 5px',\r\n                '-webkit-border-radius: 5px',\r\n                '-moz-border-radius: 5px',\r\n                'color: #e00',\r\n                'padding: 15px',\r\n                'margin-bottom: 15px'\r\n            ].join(';');\r\n            if (options.env === 'development') {\r\n                timer = setInterval(function () {\r\n                    var document = window.document;\r\n                    var body = document.body;\r\n                    if (body) {\r\n                        if (document.getElementById(id)) {\r\n                            body.replaceChild(elem, document.getElementById(id));\r\n                        }\r\n                        else {\r\n                            body.insertBefore(elem, body.firstChild);\r\n                        }\r\n                        clearInterval(timer);\r\n                    }\r\n                }, 10);\r\n            }\r\n        }\r\n        function removeErrorHTML(path) {\r\n            var node = window.document.getElementById(\"less-error-message:\".concat(extractId(path)));\r\n            if (node) {\r\n                node.parentNode.removeChild(node);\r\n            }\r\n        }\r\n        function removeError(path) {\r\n            if (!options.errorReporting || options.errorReporting === 'html') {\r\n                removeErrorHTML(path);\r\n            }\r\n            else if (options.errorReporting === 'console') ;\r\n            else if (typeof options.errorReporting === 'function') {\r\n                options.errorReporting('remove', path);\r\n            }\r\n        }\r\n        function errorConsole(e, rootHref) {\r\n            var template = '{line} {content}';\r\n            var filename = e.filename || rootHref;\r\n            var errors = [];\r\n            var content = \"\".concat(e.type || 'Syntax', \"Error: \").concat(e.message || 'There is an error in your .less file', \" in \").concat(filename);\r\n            var errorline = function (e, i, classname) {\r\n                if (e.extract[i] !== undefined) {\r\n                    errors.push(template.replace(/\\{line\\}/, (parseInt(e.line, 10) || 0) + (i - 1))\r\n                        .replace(/\\{class\\}/, classname)\r\n                        .replace(/\\{content\\}/, e.extract[i]));\r\n                }\r\n            };\r\n            if (e.line) {\r\n                errorline(e, 0, '');\r\n                errorline(e, 1, 'line');\r\n                errorline(e, 2, '');\r\n                content += \" on line \".concat(e.line, \", column \").concat(e.column + 1, \":\\n\").concat(errors.join('\\n'));\r\n            }\r\n            if (e.stack && (e.extract || options.logLevel >= 4)) {\r\n                content += \"\\nStack Trace\\n\".concat(e.stack);\r\n            }\r\n            less.logger.error(content);\r\n        }\r\n        function error(e, rootHref) {\r\n            if (!options.errorReporting || options.errorReporting === 'html') {\r\n                errorHTML(e, rootHref);\r\n            }\r\n            else if (options.errorReporting === 'console') {\r\n                errorConsole(e, rootHref);\r\n            }\r\n            else if (typeof options.errorReporting === 'function') {\r\n                options.errorReporting('add', e, rootHref);\r\n            }\r\n        }\r\n        return {\r\n            add: error,\r\n            remove: removeError\r\n        };\r\n    });\n\n    // Cache system is a bit outdated and could do with work\r\n    var Cache = (function (window, options, logger) {\r\n        var cache = null;\r\n        if (options.env !== 'development') {\r\n            try {\r\n                cache = (typeof window.localStorage === 'undefined') ? null : window.localStorage;\r\n            }\r\n            catch (_) { }\r\n        }\r\n        return {\r\n            setCSS: function (path, lastModified, modifyVars, styles) {\r\n                if (cache) {\r\n                    logger.info(\"saving \".concat(path, \" to cache.\"));\r\n                    try {\r\n                        cache.setItem(path, styles);\r\n                        cache.setItem(\"\".concat(path, \":timestamp\"), lastModified);\r\n                        if (modifyVars) {\r\n                            cache.setItem(\"\".concat(path, \":vars\"), JSON.stringify(modifyVars));\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        // TODO - could do with adding more robust error handling\r\n                        logger.error(\"failed to save \\\"\".concat(path, \"\\\" to local storage for caching.\"));\r\n                    }\r\n                }\r\n            },\r\n            getCSS: function (path, webInfo, modifyVars) {\r\n                var css = cache && cache.getItem(path);\r\n                var timestamp = cache && cache.getItem(\"\".concat(path, \":timestamp\"));\r\n                var vars = cache && cache.getItem(\"\".concat(path, \":vars\"));\r\n                modifyVars = modifyVars || {};\r\n                vars = vars || '{}'; // if not set, treat as the JSON representation of an empty object\r\n                if (timestamp && webInfo.lastModified &&\r\n                    (new Date(webInfo.lastModified).valueOf() ===\r\n                        new Date(timestamp).valueOf()) &&\r\n                    JSON.stringify(modifyVars) === vars) {\r\n                    // Use local copy\r\n                    return css;\r\n                }\r\n            }\r\n        };\r\n    });\n\n    var ImageSize = (function () {\r\n        function imageSize() {\r\n            throw {\r\n                type: 'Runtime',\r\n                message: 'Image size functions are not supported in browser version of less'\r\n            };\r\n        }\r\n        var imageFunctions = {\r\n            'image-size': function (filePathNode) {\r\n                imageSize();\r\n                return -1;\r\n            },\r\n            'image-width': function (filePathNode) {\r\n                imageSize();\r\n                return -1;\r\n            },\r\n            'image-height': function (filePathNode) {\r\n                imageSize();\r\n                return -1;\r\n            }\r\n        };\r\n        functionRegistry.addMultiple(imageFunctions);\r\n    });\n\n    //\r\n    var root = (function (window, options) {\r\n        var document = window.document;\r\n        var less = lessRoot();\r\n        less.options = options;\r\n        var environment = less.environment;\r\n        var FileManager = FM(options, less.logger);\r\n        var fileManager = new FileManager();\r\n        environment.addFileManager(fileManager);\r\n        less.FileManager = FileManager;\r\n        less.PluginLoader = PluginLoader;\r\n        LogListener(less, options);\r\n        var errors = ErrorReporting(window, less, options);\r\n        var cache = less.cache = options.cache || Cache(window, options, less.logger);\r\n        ImageSize(less.environment);\r\n        // Setup user functions - Deprecate?\r\n        if (options.functions) {\r\n            less.functions.functionRegistry.addMultiple(options.functions);\r\n        }\r\n        var typePattern = /^text\\/(x-)?less$/;\r\n        function clone(obj) {\r\n            var cloned = {};\r\n            for (var prop in obj) {\r\n                if (Object.prototype.hasOwnProperty.call(obj, prop)) {\r\n                    cloned[prop] = obj[prop];\r\n                }\r\n            }\r\n            return cloned;\r\n        }\r\n        // only really needed for phantom\r\n        function bind(func, thisArg) {\r\n            var curryArgs = Array.prototype.slice.call(arguments, 2);\r\n            return function () {\r\n                var args = curryArgs.concat(Array.prototype.slice.call(arguments, 0));\r\n                return func.apply(thisArg, args);\r\n            };\r\n        }\r\n        function loadStyles(modifyVars) {\r\n            var styles = document.getElementsByTagName('style');\r\n            var style;\r\n            for (var i_1 = 0; i_1 < styles.length; i_1++) {\r\n                style = styles[i_1];\r\n                if (style.type.match(typePattern)) {\r\n                    var instanceOptions = clone(options);\r\n                    instanceOptions.modifyVars = modifyVars;\r\n                    var lessText_1 = style.innerHTML || '';\r\n                    instanceOptions.filename = document.location.href.replace(/#.*$/, '');\r\n                    /* jshint loopfunc:true */\r\n                    // use closure to store current style\r\n                    less.render(lessText_1, instanceOptions, bind(function (style, e, result) {\r\n                        if (e) {\r\n                            errors.add(e, 'inline');\r\n                        }\r\n                        else {\r\n                            style.type = 'text/css';\r\n                            if (style.styleSheet) {\r\n                                style.styleSheet.cssText = result.css;\r\n                            }\r\n                            else {\r\n                                style.innerHTML = result.css;\r\n                            }\r\n                        }\r\n                    }, null, style));\r\n                }\r\n            }\r\n        }\r\n        function loadStyleSheet(sheet, callback, reload, remaining, modifyVars) {\r\n            var instanceOptions = clone(options);\r\n            addDataAttr(instanceOptions, sheet);\r\n            instanceOptions.mime = sheet.type;\r\n            if (modifyVars) {\r\n                instanceOptions.modifyVars = modifyVars;\r\n            }\r\n            function loadInitialFileCallback(loadedFile) {\r\n                var data = loadedFile.contents;\r\n                var path = loadedFile.filename;\r\n                var webInfo = loadedFile.webInfo;\r\n                var newFileInfo = {\r\n                    currentDirectory: fileManager.getPath(path),\r\n                    filename: path,\r\n                    rootFilename: path,\r\n                    rewriteUrls: instanceOptions.rewriteUrls\r\n                };\r\n                newFileInfo.entryPath = newFileInfo.currentDirectory;\r\n                newFileInfo.rootpath = instanceOptions.rootpath || newFileInfo.currentDirectory;\r\n                if (webInfo) {\r\n                    webInfo.remaining = remaining;\r\n                    var css = cache.getCSS(path, webInfo, instanceOptions.modifyVars);\r\n                    if (!reload && css) {\r\n                        webInfo.local = true;\r\n                        callback(null, css, data, sheet, webInfo, path);\r\n                        return;\r\n                    }\r\n                }\r\n                // TODO add tests around how this behaves when reloading\r\n                errors.remove(path);\r\n                instanceOptions.rootFileInfo = newFileInfo;\r\n                less.render(data, instanceOptions, function (e, result) {\r\n                    if (e) {\r\n                        e.href = path;\r\n                        callback(e);\r\n                    }\r\n                    else {\r\n                        cache.setCSS(sheet.href, webInfo.lastModified, instanceOptions.modifyVars, result.css);\r\n                        callback(null, result.css, data, sheet, webInfo, path);\r\n                    }\r\n                });\r\n            }\r\n            fileManager.loadFile(sheet.href, null, instanceOptions, environment)\r\n                .then(function (loadedFile) {\r\n                loadInitialFileCallback(loadedFile);\r\n            }).catch(function (err) {\r\n                console.log(err);\r\n                callback(err);\r\n            });\r\n        }\r\n        function loadStyleSheets(callback, reload, modifyVars) {\r\n            for (var i_2 = 0; i_2 < less.sheets.length; i_2++) {\r\n                loadStyleSheet(less.sheets[i_2], callback, reload, less.sheets.length - (i_2 + 1), modifyVars);\r\n            }\r\n        }\r\n        function initRunningMode() {\r\n            if (less.env === 'development') {\r\n                less.watchTimer = setInterval(function () {\r\n                    if (less.watchMode) {\r\n                        fileManager.clearFileCache();\r\n                        /**\r\n                         * @todo remove when this is typed with JSDoc\r\n                         */\r\n                        // eslint-disable-next-line no-unused-vars\r\n                        loadStyleSheets(function (e, css, _, sheet, webInfo) {\r\n                            if (e) {\r\n                                errors.add(e, e.href || sheet.href);\r\n                            }\r\n                            else if (css) {\r\n                                browser.createCSS(window.document, css, sheet);\r\n                            }\r\n                        });\r\n                    }\r\n                }, options.poll);\r\n            }\r\n        }\r\n        //\r\n        // Watch mode\r\n        //\r\n        less.watch = function () {\r\n            if (!less.watchMode) {\r\n                less.env = 'development';\r\n                initRunningMode();\r\n            }\r\n            this.watchMode = true;\r\n            return true;\r\n        };\r\n        less.unwatch = function () { clearInterval(less.watchTimer); this.watchMode = false; return false; };\r\n        //\r\n        // Synchronously get all <link> tags with the 'rel' attribute set to\r\n        // \"stylesheet/less\".\r\n        //\r\n        less.registerStylesheetsImmediately = function () {\r\n            var links = document.getElementsByTagName('link');\r\n            less.sheets = [];\r\n            for (var i_3 = 0; i_3 < links.length; i_3++) {\r\n                if (links[i_3].rel === 'stylesheet/less' || (links[i_3].rel.match(/stylesheet/) &&\r\n                    (links[i_3].type.match(typePattern)))) {\r\n                    less.sheets.push(links[i_3]);\r\n                }\r\n            }\r\n        };\r\n        //\r\n        // Asynchronously get all <link> tags with the 'rel' attribute set to\r\n        // \"stylesheet/less\", returning a Promise.\r\n        //\r\n        less.registerStylesheets = function () { return new Promise(function (resolve) {\r\n            less.registerStylesheetsImmediately();\r\n            resolve();\r\n        }); };\r\n        //\r\n        // With this function, it's possible to alter variables and re-render\r\n        // CSS without reloading less-files\r\n        //\r\n        less.modifyVars = function (record) { return less.refresh(true, record, false); };\r\n        less.refresh = function (reload, modifyVars, clearFileCache) {\r\n            if ((reload || clearFileCache) && clearFileCache !== false) {\r\n                fileManager.clearFileCache();\r\n            }\r\n            return new Promise(function (resolve, reject) {\r\n                var startTime;\r\n                var endTime;\r\n                var totalMilliseconds;\r\n                var remainingSheets;\r\n                startTime = endTime = new Date();\r\n                // Set counter for remaining unprocessed sheets\r\n                remainingSheets = less.sheets.length;\r\n                if (remainingSheets === 0) {\r\n                    endTime = new Date();\r\n                    totalMilliseconds = endTime - startTime;\r\n                    less.logger.info('Less has finished and no sheets were loaded.');\r\n                    resolve({\r\n                        startTime: startTime,\r\n                        endTime: endTime,\r\n                        totalMilliseconds: totalMilliseconds,\r\n                        sheets: less.sheets.length\r\n                    });\r\n                }\r\n                else {\r\n                    // Relies on less.sheets array, callback seems to be guaranteed to be called for every element of the array\r\n                    loadStyleSheets(function (e, css, _, sheet, webInfo) {\r\n                        if (e) {\r\n                            errors.add(e, e.href || sheet.href);\r\n                            reject(e);\r\n                            return;\r\n                        }\r\n                        if (webInfo.local) {\r\n                            less.logger.info(\"Loading \".concat(sheet.href, \" from cache.\"));\r\n                        }\r\n                        else {\r\n                            less.logger.info(\"Rendered \".concat(sheet.href, \" successfully.\"));\r\n                        }\r\n                        browser.createCSS(window.document, css, sheet);\r\n                        less.logger.info(\"CSS for \".concat(sheet.href, \" generated in \").concat(new Date() - endTime, \"ms\"));\r\n                        // Count completed sheet\r\n                        remainingSheets--;\r\n                        // Check if the last remaining sheet was processed and then call the promise\r\n                        if (remainingSheets === 0) {\r\n                            totalMilliseconds = new Date() - startTime;\r\n                            less.logger.info(\"Less has finished. CSS generated in \".concat(totalMilliseconds, \"ms\"));\r\n                            resolve({\r\n                                startTime: startTime,\r\n                                endTime: endTime,\r\n                                totalMilliseconds: totalMilliseconds,\r\n                                sheets: less.sheets.length\r\n                            });\r\n                        }\r\n                        endTime = new Date();\r\n                    }, reload, modifyVars);\r\n                }\r\n                loadStyles(modifyVars);\r\n            });\r\n        };\r\n        less.refreshStyles = loadStyles;\r\n        return less;\r\n    });\n\n    /**\r\n     * Kicks off less and compiles any stylesheets\r\n     * used in the browser distributed version of less\r\n     * to kick-start less using the browser api\r\n     */\r\n    var options = defaultOptions();\r\n    if (window.less) {\r\n        for (var key in window.less) {\r\n            if (Object.prototype.hasOwnProperty.call(window.less, key)) {\r\n                options[key] = window.less[key];\r\n            }\r\n        }\r\n    }\r\n    addDefaultOptions(window, options);\r\n    options.plugins = options.plugins || [];\r\n    if (window.LESS_PLUGINS) {\r\n        options.plugins = options.plugins.concat(window.LESS_PLUGINS);\r\n    }\r\n    var less = root(window, options);\r\n    window.less = less;\r\n    var css;\r\n    var head;\r\n    var style;\r\n    // Always restore page visibility\r\n    function resolveOrReject(data) {\r\n        if (data.filename) {\r\n            console.warn(data);\r\n        }\r\n        if (!options.async) {\r\n            head.removeChild(style);\r\n        }\r\n    }\r\n    if (options.onReady) {\r\n        if (/!watch/.test(window.location.hash)) {\r\n            less.watch();\r\n        }\r\n        // Simulate synchronous stylesheet loading by hiding page rendering\r\n        if (!options.async) {\r\n            css = 'body { display: none !important }';\r\n            head = document.head || document.getElementsByTagName('head')[0];\r\n            style = document.createElement('style');\r\n            style.type = 'text/css';\r\n            if (style.styleSheet) {\r\n                style.styleSheet.cssText = css;\r\n            }\r\n            else {\r\n                style.appendChild(document.createTextNode(css));\r\n            }\r\n            head.appendChild(style);\r\n        }\r\n        less.registerStylesheetsImmediately();\r\n        less.pageLoadFinished = less.refresh(less.env === 'development').then(resolveOrReject, resolveOrReject);\r\n    }\n\n    return less;\n\n}));\n"],"names":["module","exports","extractId","href","replace","addDataAttr","options","tag","opt","dataset","Object","prototype","hasOwnProperty","call","JSON","parse","_","browser","document","styles","sheet","id","concat","title","oldStyleNode","getElementById","keepOldStyleNode","styleNode","createElement","setAttribute","media","styleSheet","appendChild","createTextNode","childNodes","length","firstChild","nodeValue","head","getElementsByTagName","nextEl","nextSibling","parentNode","insertBefore","removeChild","cssText","e","Error","window","scripts","currentScript","logger$1","error","msg","this","_fireEvent","warn","info","debug","addListener","listener","_listeners","push","removeListener","i_1","splice","type","i_2","logFunction","Environment","externalEnvironment","fileManagers","requiredFunctions","functions","propName","environmentFunc","bind","getFileManager","filename","currentDirectory","environment","isSync","undefined","pluginManager","getFileManagers","fileManager","addFileManager","clearFileManagers","colors","unitConversions","duration","angle","Math","PI","data","Node","parent","visibilityBlocks","nodeVisible","rootNode","parsed","defineProperty","get","fileInfo","enumerable","configurable","getIndex","setParent","nodes","set","node","Array","isArray","forEach","_index","_fileInfo","isRulesetLike","toCSS","context","strs","genCSS","add","chunk","index","isEmpty","join","output","value","accept","visitor","visit","eval","_operate","op","a","b","fround","precision","numPrecision","Number","toFixed","compare","numericCompare","blocksVisibility","addVisibilityBlock","removeVisibilityBlock","ensureVisibility","ensureInvisibility","isVisible","visibilityInfo","copyVisibilityInfo","Color","rgb","originalForm","self","match","map","c","i","parseInt","alpha","split","clamp$1","v","max","min","toHex","round","toString","assign","luma","r","g","pow","doNotCompress","color","colorFunction","compress","args","indexOf","toHSL","h","s","l","toRGB","splitcolor","operate","other","d","toHSV","toARGB","x","fromKeyword","keyword","key","toLowerCase","slice","Paren","_noSpaceCombinators","Combinator","emptyOrWhitespace","trim","spaceOrEmpty","Element","combinator","isVariable","currentFileInfo","clone","firstSelector","charAt","Math$1","ALWAYS","PARENS_DIVISION","PARENS","RewriteUrls","__assign","t","n","arguments","p","apply","__spreadArray","to","from","pack","ar","getType","payload","copy","target","item","constructor","getPrototypeOf","props","getOwnPropertyNames","symbols","getOwnPropertySymbols","reduce","carry","includes","newVal","originalObject","includeNonenumerable","propType","propertyIsEnumerable","writable","assignProp","nonenumerable","getLocation","inputStream","line","column","copyArray","arr","obj","cloned","prop","defaults","obj1","obj2","newObj","_defaults","defaults_1","copyOptions","opts","strictMath","math","relativeUrls","rewriteUrls","flattenArray","result","length_1","isNullOrUndefined","val","SuppressedError","utils","freeze","__proto__","merge","anonymousFunc","LessError","fileContentMap","currentFilename","message","stack","input","contents","loc","col","callLine","lines","found","func","Function","lineAdjust","callExtract","extract","create","F","stylize","str","errorTxt","substr","_visitArgs","visitDeeper","_hasIndexed","_noop","indexNodeTypes","ticker","child","typeIndex","Visitor","implementation","_implementation","_visitInCache","_visitOutCache","tree","nodeTypeIndex","fnName","impl","funcOut","visitArgs","newNode","isReplacing","cnt","visitArray","nonReplacing","out","evald","flatten","nestedCnt","j","nestedItem","contexts","copyFromOriginal","original","destination","propertiesToCopy","parseCopyProperties","Parse","paths","evalCopyProperties","isPathRelative","path","test","isPathLocalRelative","Eval","frames","importantScope","enterCalc","calcStack","inCalc","exitCalc","pop","inParenthesis","parensStack","outOfParenthesis","mathOn","isMathOn","pathRequiresRewrite","rewritePath","rootpath","newPath","normalizePath","segment","segments","reverse","ImportSequencer","onSequencerEmpty","imports","variableImports","_onSequencerEmpty","_currentDepth","addImport","callback","importSequencer","importItem","isReady","tryRun","addVariableImport","variableImport","ImportVisitor","importer","finish","_visitor","_importer","_finish","importCount","onceFileDetectionMap","recursionDetector","_sequencer","run","root","isFinished","visitImport","importNode","inlineCSS","inline","css","importParent","isVariableImport","processImportNode","evaldImportNode","evalForImport","multiple","importMultiple","tryAppendLessExtension","rules","onImported","sequencedOnImported","getPath","importedAtRoot","fullPath","importVisitor","isPlugin","isOptional","optional","duplicateImport","skip","importedFilename","oldContext","visitDeclaration","declNode","unshift","visitDeclarationOut","shift","visitAtRule","atRuleNode","visitAtRuleOut","visitMixinDefinition","mixinDefinitionNode","visitMixinDefinitionOut","visitRuleset","rulesetNode","visitRulesetOut","visitMedia","mediaNode","visitMediaOut","SetTreeVisibilityVisitor","visible","ExtendFinderVisitor","allExtendsStack","allExtends","extend","extendList","allSelectorsExtendList","ruleCnt","Extend","extendOnEveryPath","selectorPath","selExtendList","allSelectorsExtend","foundExtends","findSelfSelectors","ruleset","firstExtendOnThisSelectorPath","selectors","ProcessExtendsVisitor","extendFinder","extendIndices","doExtendChaining","newRoot","checkExtendsForNonMatched","indices","filter","hasFoundMatches","parent_ids","selector","extendsList","extendsListTarget","iterationCount","extendIndex","targetExtendIndex","matches","newSelector","targetExtend","newExtend","extendsToAdd","extendVisitor","object_id","selfSelectors","findMatch","selfSelector","extendSelector","option","extendChainCount","selectorOne","selectorTwo","ruleNode","visitSelector","selectorNode","pathIndex","selectorsToAdd","extendedSelectors","haystackSelectorPath","haystackSelectorIndex","hackstackSelector","hackstackElementIndex","haystackElement","targetCombinator","potentialMatch","needleElements","elements","potentialMatches","allowBefore","matched","initialCombinator","isElementValuesEqual","finished","allowAfter","endPathIndex","endPathElementIndex","elementValue1","elementValue2","Attribute","Selector","replacementSelector","matchIndex","firstElement","newElements","currentSelectorPathIndex","currentSelectorPathElementIndex","currentValue","derived","createDerived","newAllExtends","lastIndex","JoinSelectorVisitor","getIsOutput","joinSelectors","multiMedia","isRooted","CSSVisitorUtils","_context","containsSilentNonBlockedChild","bodyRules","rule","isSilent","keepOnlyVisibleChilds","owner","thing","hasVisibleSelector","resolveVisibility","compiledRulesBody","isVisibleRuleset","firstRoot","ToCSSVisitor","variable","mixinNode","visitExtend","extendNode","visitComment","commentNode","originalRules","visitAtRuleWithBody","visitAtRuleWithoutBody","visitAnonymous","anonymousNode","nodeRules","hasFakeRuleset","getBodyRules","_mergeRules","name","charset","debugInfo","comment","Comment","checkValidNodes","isRoot","Declaration","Call","allowRoot","rulesets","_compileRulesetPaths","nodeRuleCnt","_removeDuplicateRules","ruleList","ruleCache","ruleCSS","groups","groupsArr","i_3","group","result_1","space_1","comma_1","Expression","important","Value","visitors","MarkVisibleSelectorsVisitor","ExtendVisitor","getParserInput","furthest","furthestPossibleErrorMessage","chunks","current","currentPos","saveStack","parserInput","skipWhitespace","nextChar","oldi","oldj","curr","endIndex","mem","inp","charCodeAt","autoCommentAbsorb","isLineComment","nextNewLine","text","commentStore","nextStarSlash","save","restore","possibleErrorMessage","state","forget","isWhitespace","offset","pos","code","$re","tok","m","exec","$char","$peekChar","$str","tokLength","$quoted","startChar","currentPosition","$parseUntil","testChar","quote","returnVal","inComment","blockDepth","blockStack","parseGroups","startPos","lastPos","loop","char","expected","peek","peekChar","currentChar","prevChar","getInput","peekNotNumeric","start","chunkInput","failFunction","fail","lastOpening","lastOpeningParen","lastMultiComment","lastMultiCommentEndBrace","chunkerCurrentIndex","currentChunkStartIndex","cc","cc2","len","level","parenLevel","emitFrom","emitChunk","force","String","fromCharCode","chunker","end","furthestReachedEnd","furthestChar","functionRegistry","makeRegistry","base","_data","addMultiple","_this","keys","getLocalFunctions","inherit","MediaSyntaxOptions","queryInParens","ContainerSyntaxOptions","Parser","currentIndex","parsers","expect","arg","expectChar","getDebugInfo","lineNumber","fileName","parseNode","parseList","returnNodes","parser","additionalData","globalVars","modifyVars","ignored","err","preText","disablePluginRule","plugin","serializeVars","preProcessors","getPreProcessors","process","banner","contentsIgnoredChars","Ruleset","primary","endInfo","processImports","mixin","extendRule","definition","declaration","variableCall","entities","atrule","foundSemiColon","mixinLookup","quoted","forceEscaped","isEscaped","k","customFuncCall","stop","declarationCall","validCall","substring","ruleProperty","f","ieAlpha","boolean","condition","prevArgs","isSemiColonSeparated","argsComma","argsSemiColon","detachedRuleset","assignment","expression","literal","dimension","unicodeDescriptor","entity","url","property","Variable","Property","ch","variableCurly","curly","propertyCurly","colorKeyword","ud","javascript","js","escape","Boolean","parsedName","lookups","inValue","ruleLookups","VariableCall","NamespaceValue","isRule","element","getLookup","hasParens","elem","elemIndex","re","isCall","expressionContainsNamed","nameLoop","expand","returner","variadic","expressions","hasSep","throwAwayComments","cond","params","argInfo","conditions","block","lookupValue","Quoted","attribute","slashedCombinator","isLess","when","cif","content","blockRuleset","Definition","DetachedRuleset","dumpLineNumbers","strictImports","hasDR","permissiveValue","anonymousValue","untilTokens","done","testCurrentChar","Anonymous","variableRegex","propRegex","features","dir","importOptions","mediaFeatures","o","optionName","importOption","mediaFeature","syntaxOptions","rangeP","atomicCondition","rvalue","lvalue","prepareAndGetNestableAtRule","treeType","atRule","nestableAtRule","Media","Container","pluginArgs","nonVendorSpecificName","hasIdentifier","hasExpression","hasUnknown","hasBlock","sub","addition","parens","multiplication","operation","isSpaced","operand","parensInOp","needsParens","logical","next","conditionAnd","negatedCondition","parenthesisCondition","negate","body","me","tryConditionFollowedByParenthesis","preparsedCond","delim","simpleProperty","vars","name_1","evaldCondition","getElements","mixinElements_","mediaEmpty","els","importManager","createEmptySelectors","el","sels","olen","mixinElements","isJustParentSelector","Keyword","True","False","mapLines","rulesetLike","MATH$1","asComment","ctx","asMediaQuery","filenameWithProtocol","lineSeparator","lastRule","prevMath","evaldValue","mathBypass","evalName","importantResult","makeImportant","isCompressed","defaultFunc","value_","error_","reset","_lookups","_variables","_properties","isRuleset","selCnt","hasVariable","hasOnePassingSelector","toParseSelectors","startingIndex","selectorFileInfo","subRule","originalRuleset","allowImports","ctxFrames","ctxSelectors","evalImports","rsRules","evalFirst","mediaBlockCount","mediaBlocks","resetCache","bubbleSelectors","importRules","matchArgs","matchCondition","lastSelector","_rulesets","variables","hash","properties","name_2","decl","parseValue","lastDeclaration","toParse","transformDeclaration","nodes_1","filtRules","prependRule","find","foundMixins","debugInfo$1","ruleNodes","tabLevel","sep","tabRuleStr","tabSetStr","charsetNodeIndex","importNodeIndex","isCharset","pathCnt","pathSubCnt","currentLastRule","joinSelector","createParenthesis","elementsToPak","originalElement","replacementParen","insideParent","createSelector","containedElement","addReplacementIntoPath","beginningPath","addPath","replacedElement","originalSelector","newSelectorPath","newJoinedSelector","parentEl","restOfPath","addAllReplacementsIntoPath","addPaths","mergeElementsOnToSelectors","sel","deriveSelector","deriveFrom","newPaths","replaceParentSelector","inSelector","currentElements","newSelectors","selectorsMultiplied","maybeSelector","hadParentSelector","nestedSelector","replaced","nestedPaths","replacedNewSelectors","concatenated","AtRule","outputRuleset","mediaPathBackup","mediaBlocksBackup","mediaPath","callEval","Unit","numerator","denominator","backupUnit","sort","strictUnits","returnStr","is","unitString","toUpperCase","isLength","RegExp","isSingular","usedUnits","mapUnit","groupName","atomicUnit","cancel","counter","count","Dimension","unit","parseFloat","isNaN","toColor","strValue","convertTo","unify","conversions","targetUnit","applyUnit","derivedConversions","MATH","Operation","operands","noSpacing","returnValue","doubleParen","functionCaller","isValid","evalArgs","commentFilter","subNodes","calc","currentMathContext","funcCaller","columnNumber","evaluating","frame","fun","mergeRules","less","vArr","escaped","containsVariables","that","iterativeReplace","regexp","replacementFnc","evaluatedValue","URL","isEvald","urlArgs","NestableAtRulePrototype","evalTop","evalNested","permute","fragment","rest","Import","pathValue","reference","evalPath","doEval","registry","newImport","JsEvalNode","evaluateJavaScript","evalContext","javascriptEnabled","jsify","toJS","JavaScript","string","Assignment","Condition","QueryInParens","op2","mvalue","UnicodeDescriptor","Negative","next_id","selectorElements","selfElements","ruleCall","arity","optionalParameters","required","evalParams","mixinEnv","evaldArguments","varargs","isNamedFound","argIndex","argsLength","evalCall","_arguments","mixinFrames","allArgsCnt","requiredArgsCnt","MixinCall","mixins","mixinPath","argValue","isRecursive","isOneFound","candidate","defaultResult","noArgumentsFilter","candidates","conditionResult","calcDefGroup","namespace","format","newRules","_setVisibilityToReplacement","replacement","AbstractFileManager","lastIndexOf","tryAppendExtension","ext","supportsSync","alwaysMakePathsAbsolute","isPathAbsolute","basePath","laterPath","pathDiff","baseUrl","urlDirectories","baseUrlDirectories","urlParts","extractUrlParts","baseUrlParts","diff","hostPart","directories","urlPartsRegex","rawDirectories","rawPath","fileUrl","AbstractPluginLoader","require","evalPlugin","pluginOptions","pluginObj","localModule","shortname","FileManager","trySetOptions","use","loader","validatePlugin","minVersion","compareVersion","addPlugin","setOptions","version","versionToString","aVersion","bVersion","versionString","printUsage","plugins","If","trueValue","falseValue","isdefined","colorFunctions","boolean$1","clamp","hsla","origColor","hsl","number$1","rgba","size","m1","m2","hue","hsv","hsva","vs","floor","perm","saturation","lightness","hsvhue","hsvsaturation","hsvvalue","red","green","blue","luminance","saturate","amount","method","desaturate","lighten","darken","fadein","fadeout","fade","spin","mix","color1","color2","weight","w","w1","w2","greyscale","contrast","dark","light","threshold","argb","tint","shade","colorBlend","mode","cb","cs","cr","ab","as","colorBlendModeFunctions","multiply","screen","overlay","softlight","sqrt","hardlight","difference","abs","exclusion","average","negation","f$1","getItemsFromNode","list","_SELF","expr","_i","values","range","step","stepValue","each","rs","iterator","tryEval","valueName","keyName","indexName","MathHelper","fn","mathFunctions","ceil","tan","sin","cos","atan","asin","acos","fraction","num","minMax","isMin","currentUnified","referenceUnified","unitStatic","unitClone","order","number","convert","pi","mod","y","percentage","evaluated","encodeURI","pattern","flags","_loop_1","token","encodeURIComponent","isa","Type","isunit","types","isruleset","iscolor","isnumber","isstring","iskeyword","isurl","ispixel","ispercentage","isem","styleExpression","style$1","style","fallback","functionThis","mimetypeNode","filePathNode","mimetype","filePath","entryPath","fragmentStart","rawBuffer","useBase64","mimeLookup","charsetLookup","fileSync","loadFileSync","buf","encodeBase64","uri","dataUri","direction","stops","gradientDirectionSvg","position","positionValue","gradientType","rectangleDimension","renderEnv","directionValue","throwArgumentDescriptor","transformTree","evaldRoot","evalEnv","visitorIterator","visitors$1","preEvalVisitors","first","isPreEvalVisitor","isPreVisitor","pm","PluginManager","postProcessors","installedPlugins","pluginCache","Loader","PluginLoader","addPlugins","install","addVisitor","addPreProcessor","preProcessor","priority","indexToInsertAt","addPostProcessor","postProcessor","manager","getPostProcessors","getVisitors","PluginManagerFactory","newFactory","options$1","logger","parseNodeVersion_1","major","minor","patch","pre","build","lessRoot","sourceMapOutput","sourceMapBuilder","parseTree","SourceMapBuilder","ParseTree","toCSSOptions","sourceMap","file_1","getExternalSourceMap","files","rootFilename","SourceMapOutput","contentsIgnoredCharsMap","contentsMap","sourceMapFilename","sourceMapURL","outputFilename","sourceMapOutputFilename","sourceMapBasepath","sourceMapRootpath","outputSourceFiles","sourceMapGenerator","sourceMapFileInline","disableSourcemapAnnotation","sourceMapInputFilename","normalizeFilename","removeBasepath","getCSSAppendage","setExternalSourceMap","isInline","getSourceMapURL","getOutputFilename","getInputFilename","_css","_rootNode","_contentsMap","_contentsIgnoredCharsMap","_sourceMapFilename","_outputFilename","_sourceMapBasepath","_sourceMapRootpath","_outputSourceFiles","_sourceMapGeneratorConstructor","getSourceMapGenerator","_lineNumber","_column","sourceLines","columns","sourceColumns","inputSource","_sourceMapGenerator","addMapping","generated","source","file","sourceRoot","setSourceContent","sourceMapContent","stringify","toJSON","ImportManager","rootFileInfo","mime","queue","pluginLoader","fileParsedFunc","importedEqualsRoot","newFileInfo","loadedFile","promise","loadFileCallback","resolvedFilename","newEnv","syncImport","loadPluginSync","loadPlugin","loadFile","then","render","self_1","Promise","resolve","reject","Render","context_1","pluginManager_1","reUsePluginManager","imports_1","evalResult","fileContent","initial","ctor","api","fileCache","doXHR","errback","xhr","XMLHttpRequest","async","isFileProtocol","fileAsync","handleResponse","status","responseText","getResponseHeader","overrideMimeType","open","setRequestHeader","send","onreadystatechange","readyState","supports","clearFileCache","location","useFileCache","lessText_1","webInfo","lastModified","Date","FM","log","fulfill","catch","ErrorReporting","rootHref","errorReporting","errors","errorline","classname","logLevel","errorConsole","timer","filenameNoPath","className","innerHTML","env","setInterval","replaceChild","clearInterval","errorHTML","remove","removeErrorHTML","depends","lint","insecure","protocol","poll","hostname","port","onReady","addDefaultOptions","LESS_PLUGINS","loggers","console","LogListener","cache","localStorage","setCSS","setItem","getCSS","getItem","timestamp","valueOf","Cache","imageSize","imageFunctions","ImageSize","typePattern","thisArg","curryArgs","loadStyles","instanceOptions","loadStyleSheet","reload","remaining","local","loadInitialFileCallback","loadStyleSheets","sheets","watch","watchMode","watchTimer","unwatch","registerStylesheetsImmediately","links","rel","registerStylesheets","record","refresh","startTime","endTime","totalMilliseconds","remainingSheets","refreshStyles","resolveOrReject","pageLoadFinished","factory"],"sourceRoot":""}
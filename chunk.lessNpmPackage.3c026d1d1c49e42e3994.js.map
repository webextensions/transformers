{"version":3,"file":"chunk.lessNpmPackage.3c026d1d1c49e42e3994.js","mappings":"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","sources":["webpack://transformers/./node_modules/less/dist/less.js"],"sourcesContent":["/**\n * Less - Leaner CSS v4.2.0\n * http://lesscss.org\n * \n * Copyright (c) 2009-2023, Alexis Sellier <self@cloudhead.net>\n * Licensed under the Apache-2.0 License.\n *\n * @license Apache-2.0\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.less = factory());\n}(this, (function () { 'use strict';\n\n    // Export a new default each time\r\n    function defaultOptions () {\r\n        return {\r\n            /* Inline Javascript - @plugin still allowed */\r\n            javascriptEnabled: false,\r\n            /* Outputs a makefile import dependency list to stdout. */\r\n            depends: false,\r\n            /* (DEPRECATED) Compress using less built-in compression.\r\n             * This does an okay job but does not utilise all the tricks of\r\n             * dedicated css compression. */\r\n            compress: false,\r\n            /* Runs the less parser and just reports errors without any output. */\r\n            lint: false,\r\n            /* Sets available include paths.\r\n             * If the file in an @import rule does not exist at that exact location,\r\n             * less will look for it at the location(s) passed to this option.\r\n             * You might use this for instance to specify a path to a library which\r\n             * you want to be referenced simply and relatively in the less files. */\r\n            paths: [],\r\n            /* color output in the terminal */\r\n            color: true,\r\n            /* The strictImports controls whether the compiler will allow an @import inside of either\r\n             * @media blocks or (a later addition) other selector blocks.\r\n             * See: https://github.com/less/less.js/issues/656 */\r\n            strictImports: false,\r\n            /* Allow Imports from Insecure HTTPS Hosts */\r\n            insecure: false,\r\n            /* Allows you to add a path to every generated import and url in your css.\r\n             * This does not affect less import statements that are processed, just ones\r\n             * that are left in the output css. */\r\n            rootpath: '',\r\n            /* By default URLs are kept as-is, so if you import a file in a sub-directory\r\n             * that references an image, exactly the same URL will be output in the css.\r\n             * This option allows you to re-write URL's in imported files so that the\r\n             * URL is always relative to the base imported file */\r\n            rewriteUrls: false,\r\n            /* How to process math\r\n             *   0 always           - eagerly try to solve all operations\r\n             *   1 parens-division  - require parens for division \"/\"\r\n             *   2 parens | strict  - require parens for all operations\r\n             *   3 strict-legacy    - legacy strict behavior (super-strict)\r\n             */\r\n            math: 1,\r\n            /* Without this option, less attempts to guess at the output unit when it does maths. */\r\n            strictUnits: false,\r\n            /* Effectively the declaration is put at the top of your base Less file,\r\n             * meaning it can be used but it also can be overridden if this variable\r\n             * is defined in the file. */\r\n            globalVars: null,\r\n            /* As opposed to the global variable option, this puts the declaration at the\r\n             * end of your base file, meaning it will override anything defined in your Less file. */\r\n            modifyVars: null,\r\n            /* This option allows you to specify a argument to go on to every URL.  */\r\n            urlArgs: ''\r\n        };\r\n    }\n\n    function extractId(href) {\r\n        return href.replace(/^[a-z-]+:\\/+?[^/]+/, '') // Remove protocol & domain\r\n            .replace(/[?&]livereload=\\w+/, '') // Remove LiveReload cachebuster\r\n            .replace(/^\\//, '') // Remove root /\r\n            .replace(/\\.[a-zA-Z]+$/, '') // Remove simple extension\r\n            .replace(/[^.\\w-]+/g, '-') // Replace illegal characters\r\n            .replace(/\\./g, ':'); // Replace dots with colons(for valid id)\r\n    }\r\n    function addDataAttr(options, tag) {\r\n        if (!tag) {\r\n            return;\r\n        } // in case of tag is null or undefined\r\n        for (var opt in tag.dataset) {\r\n            if (Object.prototype.hasOwnProperty.call(tag.dataset, opt)) {\r\n                if (opt === 'env' || opt === 'dumpLineNumbers' || opt === 'rootpath' || opt === 'errorReporting') {\r\n                    options[opt] = tag.dataset[opt];\r\n                }\r\n                else {\r\n                    try {\r\n                        options[opt] = JSON.parse(tag.dataset[opt]);\r\n                    }\r\n                    catch (_) { }\r\n                }\r\n            }\r\n        }\r\n    }\n\n    var browser = {\r\n        createCSS: function (document, styles, sheet) {\r\n            // Strip the query-string\r\n            var href = sheet.href || '';\r\n            // If there is no title set, use the filename, minus the extension\r\n            var id = \"less:\" + (sheet.title || extractId(href));\r\n            // If this has already been inserted into the DOM, we may need to replace it\r\n            var oldStyleNode = document.getElementById(id);\r\n            var keepOldStyleNode = false;\r\n            // Create a new stylesheet node for insertion or (if necessary) replacement\r\n            var styleNode = document.createElement('style');\r\n            styleNode.setAttribute('type', 'text/css');\r\n            if (sheet.media) {\r\n                styleNode.setAttribute('media', sheet.media);\r\n            }\r\n            styleNode.id = id;\r\n            if (!styleNode.styleSheet) {\r\n                styleNode.appendChild(document.createTextNode(styles));\r\n                // If new contents match contents of oldStyleNode, don't replace oldStyleNode\r\n                keepOldStyleNode = (oldStyleNode !== null && oldStyleNode.childNodes.length > 0 && styleNode.childNodes.length > 0 &&\r\n                    oldStyleNode.firstChild.nodeValue === styleNode.firstChild.nodeValue);\r\n            }\r\n            var head = document.getElementsByTagName('head')[0];\r\n            // If there is no oldStyleNode, just append; otherwise, only append if we need\r\n            // to replace oldStyleNode with an updated stylesheet\r\n            if (oldStyleNode === null || keepOldStyleNode === false) {\r\n                var nextEl = sheet && sheet.nextSibling || null;\r\n                if (nextEl) {\r\n                    nextEl.parentNode.insertBefore(styleNode, nextEl);\r\n                }\r\n                else {\r\n                    head.appendChild(styleNode);\r\n                }\r\n            }\r\n            if (oldStyleNode && keepOldStyleNode === false) {\r\n                oldStyleNode.parentNode.removeChild(oldStyleNode);\r\n            }\r\n            // For IE.\r\n            // This needs to happen *after* the style element is added to the DOM, otherwise IE 7 and 8 may crash.\r\n            // See http://social.msdn.microsoft.com/Forums/en-US/7e081b65-878a-4c22-8e68-c10d39c2ed32/internet-explorer-crashes-appending-style-element-to-head\r\n            if (styleNode.styleSheet) {\r\n                try {\r\n                    styleNode.styleSheet.cssText = styles;\r\n                }\r\n                catch (e) {\r\n                    throw new Error('Couldn\\'t reassign styleSheet.cssText.');\r\n                }\r\n            }\r\n        },\r\n        currentScript: function (window) {\r\n            var document = window.document;\r\n            return document.currentScript || (function () {\r\n                var scripts = document.getElementsByTagName('script');\r\n                return scripts[scripts.length - 1];\r\n            })();\r\n        }\r\n    };\n\n    var addDefaultOptions = (function (window, options) {\r\n        // use options from the current script tag data attribues\r\n        addDataAttr(options, browser.currentScript(window));\r\n        if (options.isFileProtocol === undefined) {\r\n            options.isFileProtocol = /^(file|(chrome|safari)(-extension)?|resource|qrc|app):/.test(window.location.protocol);\r\n        }\r\n        // Load styles asynchronously (default: false)\r\n        //\r\n        // This is set to `false` by default, so that the body\r\n        // doesn't start loading before the stylesheets are parsed.\r\n        // Setting this to `true` can result in flickering.\r\n        //\r\n        options.async = options.async || false;\r\n        options.fileAsync = options.fileAsync || false;\r\n        // Interval between watch polls\r\n        options.poll = options.poll || (options.isFileProtocol ? 1000 : 1500);\r\n        options.env = options.env || (window.location.hostname == '127.0.0.1' ||\r\n            window.location.hostname == '0.0.0.0' ||\r\n            window.location.hostname == 'localhost' ||\r\n            (window.location.port &&\r\n                window.location.port.length > 0) ||\r\n            options.isFileProtocol ? 'development'\r\n            : 'production');\r\n        var dumpLineNumbers = /!dumpLineNumbers:(comments|mediaquery|all)/.exec(window.location.hash);\r\n        if (dumpLineNumbers) {\r\n            options.dumpLineNumbers = dumpLineNumbers[1];\r\n        }\r\n        if (options.useFileCache === undefined) {\r\n            options.useFileCache = true;\r\n        }\r\n        if (options.onReady === undefined) {\r\n            options.onReady = true;\r\n        }\r\n        if (options.relativeUrls) {\r\n            options.rewriteUrls = 'all';\r\n        }\r\n    });\n\n    var logger$1 = {\r\n        error: function (msg) {\r\n            this._fireEvent('error', msg);\r\n        },\r\n        warn: function (msg) {\r\n            this._fireEvent('warn', msg);\r\n        },\r\n        info: function (msg) {\r\n            this._fireEvent('info', msg);\r\n        },\r\n        debug: function (msg) {\r\n            this._fireEvent('debug', msg);\r\n        },\r\n        addListener: function (listener) {\r\n            this._listeners.push(listener);\r\n        },\r\n        removeListener: function (listener) {\r\n            for (var i_1 = 0; i_1 < this._listeners.length; i_1++) {\r\n                if (this._listeners[i_1] === listener) {\r\n                    this._listeners.splice(i_1, 1);\r\n                    return;\r\n                }\r\n            }\r\n        },\r\n        _fireEvent: function (type, msg) {\r\n            for (var i_2 = 0; i_2 < this._listeners.length; i_2++) {\r\n                var logFunction = this._listeners[i_2][type];\r\n                if (logFunction) {\r\n                    logFunction(msg);\r\n                }\r\n            }\r\n        },\r\n        _listeners: []\r\n    };\n\n    /**\r\n     * @todo Document why this abstraction exists, and the relationship between\r\n     *       environment, file managers, and plugin manager\r\n     */\r\n    var Environment = /** @class */ (function () {\r\n        function Environment(externalEnvironment, fileManagers) {\r\n            this.fileManagers = fileManagers || [];\r\n            externalEnvironment = externalEnvironment || {};\r\n            var optionalFunctions = ['encodeBase64', 'mimeLookup', 'charsetLookup', 'getSourceMapGenerator'];\r\n            var requiredFunctions = [];\r\n            var functions = requiredFunctions.concat(optionalFunctions);\r\n            for (var i_1 = 0; i_1 < functions.length; i_1++) {\r\n                var propName = functions[i_1];\r\n                var environmentFunc = externalEnvironment[propName];\r\n                if (environmentFunc) {\r\n                    this[propName] = environmentFunc.bind(externalEnvironment);\r\n                }\r\n                else if (i_1 < requiredFunctions.length) {\r\n                    this.warn(\"missing required function in environment - \" + propName);\r\n                }\r\n            }\r\n        }\r\n        Environment.prototype.getFileManager = function (filename, currentDirectory, options, environment, isSync) {\r\n            if (!filename) {\r\n                logger$1.warn('getFileManager called with no filename.. Please report this issue. continuing.');\r\n            }\r\n            if (currentDirectory === undefined) {\r\n                logger$1.warn('getFileManager called with null directory.. Please report this issue. continuing.');\r\n            }\r\n            var fileManagers = this.fileManagers;\r\n            if (options.pluginManager) {\r\n                fileManagers = [].concat(fileManagers).concat(options.pluginManager.getFileManagers());\r\n            }\r\n            for (var i_2 = fileManagers.length - 1; i_2 >= 0; i_2--) {\r\n                var fileManager = fileManagers[i_2];\r\n                if (fileManager[isSync ? 'supportsSync' : 'supports'](filename, currentDirectory, options, environment)) {\r\n                    return fileManager;\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        Environment.prototype.addFileManager = function (fileManager) {\r\n            this.fileManagers.push(fileManager);\r\n        };\r\n        Environment.prototype.clearFileManagers = function () {\r\n            this.fileManagers = [];\r\n        };\r\n        return Environment;\r\n    }());\n\n    var colors = {\r\n        'aliceblue': '#f0f8ff',\r\n        'antiquewhite': '#faebd7',\r\n        'aqua': '#00ffff',\r\n        'aquamarine': '#7fffd4',\r\n        'azure': '#f0ffff',\r\n        'beige': '#f5f5dc',\r\n        'bisque': '#ffe4c4',\r\n        'black': '#000000',\r\n        'blanchedalmond': '#ffebcd',\r\n        'blue': '#0000ff',\r\n        'blueviolet': '#8a2be2',\r\n        'brown': '#a52a2a',\r\n        'burlywood': '#deb887',\r\n        'cadetblue': '#5f9ea0',\r\n        'chartreuse': '#7fff00',\r\n        'chocolate': '#d2691e',\r\n        'coral': '#ff7f50',\r\n        'cornflowerblue': '#6495ed',\r\n        'cornsilk': '#fff8dc',\r\n        'crimson': '#dc143c',\r\n        'cyan': '#00ffff',\r\n        'darkblue': '#00008b',\r\n        'darkcyan': '#008b8b',\r\n        'darkgoldenrod': '#b8860b',\r\n        'darkgray': '#a9a9a9',\r\n        'darkgrey': '#a9a9a9',\r\n        'darkgreen': '#006400',\r\n        'darkkhaki': '#bdb76b',\r\n        'darkmagenta': '#8b008b',\r\n        'darkolivegreen': '#556b2f',\r\n        'darkorange': '#ff8c00',\r\n        'darkorchid': '#9932cc',\r\n        'darkred': '#8b0000',\r\n        'darksalmon': '#e9967a',\r\n        'darkseagreen': '#8fbc8f',\r\n        'darkslateblue': '#483d8b',\r\n        'darkslategray': '#2f4f4f',\r\n        'darkslategrey': '#2f4f4f',\r\n        'darkturquoise': '#00ced1',\r\n        'darkviolet': '#9400d3',\r\n        'deeppink': '#ff1493',\r\n        'deepskyblue': '#00bfff',\r\n        'dimgray': '#696969',\r\n        'dimgrey': '#696969',\r\n        'dodgerblue': '#1e90ff',\r\n        'firebrick': '#b22222',\r\n        'floralwhite': '#fffaf0',\r\n        'forestgreen': '#228b22',\r\n        'fuchsia': '#ff00ff',\r\n        'gainsboro': '#dcdcdc',\r\n        'ghostwhite': '#f8f8ff',\r\n        'gold': '#ffd700',\r\n        'goldenrod': '#daa520',\r\n        'gray': '#808080',\r\n        'grey': '#808080',\r\n        'green': '#008000',\r\n        'greenyellow': '#adff2f',\r\n        'honeydew': '#f0fff0',\r\n        'hotpink': '#ff69b4',\r\n        'indianred': '#cd5c5c',\r\n        'indigo': '#4b0082',\r\n        'ivory': '#fffff0',\r\n        'khaki': '#f0e68c',\r\n        'lavender': '#e6e6fa',\r\n        'lavenderblush': '#fff0f5',\r\n        'lawngreen': '#7cfc00',\r\n        'lemonchiffon': '#fffacd',\r\n        'lightblue': '#add8e6',\r\n        'lightcoral': '#f08080',\r\n        'lightcyan': '#e0ffff',\r\n        'lightgoldenrodyellow': '#fafad2',\r\n        'lightgray': '#d3d3d3',\r\n        'lightgrey': '#d3d3d3',\r\n        'lightgreen': '#90ee90',\r\n        'lightpink': '#ffb6c1',\r\n        'lightsalmon': '#ffa07a',\r\n        'lightseagreen': '#20b2aa',\r\n        'lightskyblue': '#87cefa',\r\n        'lightslategray': '#778899',\r\n        'lightslategrey': '#778899',\r\n        'lightsteelblue': '#b0c4de',\r\n        'lightyellow': '#ffffe0',\r\n        'lime': '#00ff00',\r\n        'limegreen': '#32cd32',\r\n        'linen': '#faf0e6',\r\n        'magenta': '#ff00ff',\r\n        'maroon': '#800000',\r\n        'mediumaquamarine': '#66cdaa',\r\n        'mediumblue': '#0000cd',\r\n        'mediumorchid': '#ba55d3',\r\n        'mediumpurple': '#9370d8',\r\n        'mediumseagreen': '#3cb371',\r\n        'mediumslateblue': '#7b68ee',\r\n        'mediumspringgreen': '#00fa9a',\r\n        'mediumturquoise': '#48d1cc',\r\n        'mediumvioletred': '#c71585',\r\n        'midnightblue': '#191970',\r\n        'mintcream': '#f5fffa',\r\n        'mistyrose': '#ffe4e1',\r\n        'moccasin': '#ffe4b5',\r\n        'navajowhite': '#ffdead',\r\n        'navy': '#000080',\r\n        'oldlace': '#fdf5e6',\r\n        'olive': '#808000',\r\n        'olivedrab': '#6b8e23',\r\n        'orange': '#ffa500',\r\n        'orangered': '#ff4500',\r\n        'orchid': '#da70d6',\r\n        'palegoldenrod': '#eee8aa',\r\n        'palegreen': '#98fb98',\r\n        'paleturquoise': '#afeeee',\r\n        'palevioletred': '#d87093',\r\n        'papayawhip': '#ffefd5',\r\n        'peachpuff': '#ffdab9',\r\n        'peru': '#cd853f',\r\n        'pink': '#ffc0cb',\r\n        'plum': '#dda0dd',\r\n        'powderblue': '#b0e0e6',\r\n        'purple': '#800080',\r\n        'rebeccapurple': '#663399',\r\n        'red': '#ff0000',\r\n        'rosybrown': '#bc8f8f',\r\n        'royalblue': '#4169e1',\r\n        'saddlebrown': '#8b4513',\r\n        'salmon': '#fa8072',\r\n        'sandybrown': '#f4a460',\r\n        'seagreen': '#2e8b57',\r\n        'seashell': '#fff5ee',\r\n        'sienna': '#a0522d',\r\n        'silver': '#c0c0c0',\r\n        'skyblue': '#87ceeb',\r\n        'slateblue': '#6a5acd',\r\n        'slategray': '#708090',\r\n        'slategrey': '#708090',\r\n        'snow': '#fffafa',\r\n        'springgreen': '#00ff7f',\r\n        'steelblue': '#4682b4',\r\n        'tan': '#d2b48c',\r\n        'teal': '#008080',\r\n        'thistle': '#d8bfd8',\r\n        'tomato': '#ff6347',\r\n        'turquoise': '#40e0d0',\r\n        'violet': '#ee82ee',\r\n        'wheat': '#f5deb3',\r\n        'white': '#ffffff',\r\n        'whitesmoke': '#f5f5f5',\r\n        'yellow': '#ffff00',\r\n        'yellowgreen': '#9acd32'\r\n    };\n\n    var unitConversions = {\r\n        length: {\r\n            'm': 1,\r\n            'cm': 0.01,\r\n            'mm': 0.001,\r\n            'in': 0.0254,\r\n            'px': 0.0254 / 96,\r\n            'pt': 0.0254 / 72,\r\n            'pc': 0.0254 / 72 * 12\r\n        },\r\n        duration: {\r\n            's': 1,\r\n            'ms': 0.001\r\n        },\r\n        angle: {\r\n            'rad': 1 / (2 * Math.PI),\r\n            'deg': 1 / 360,\r\n            'grad': 1 / 400,\r\n            'turn': 1\r\n        }\r\n    };\n\n    var data = { colors: colors, unitConversions: unitConversions };\n\n    /**\r\n     * The reason why Node is a class and other nodes simply do not extend\r\n     * from Node (since we're transpiling) is due to this issue:\r\n     *\r\n     * @see https://github.com/less/less.js/issues/3434\r\n     */\r\n    var Node = /** @class */ (function () {\r\n        function Node() {\r\n            this.parent = null;\r\n            this.visibilityBlocks = undefined;\r\n            this.nodeVisible = undefined;\r\n            this.rootNode = null;\r\n            this.parsed = null;\r\n        }\r\n        Object.defineProperty(Node.prototype, \"currentFileInfo\", {\r\n            get: function () {\r\n                return this.fileInfo();\r\n            },\r\n            enumerable: false,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(Node.prototype, \"index\", {\r\n            get: function () {\r\n                return this.getIndex();\r\n            },\r\n            enumerable: false,\r\n            configurable: true\r\n        });\r\n        Node.prototype.setParent = function (nodes, parent) {\r\n            function set(node) {\r\n                if (node && node instanceof Node) {\r\n                    node.parent = parent;\r\n                }\r\n            }\r\n            if (Array.isArray(nodes)) {\r\n                nodes.forEach(set);\r\n            }\r\n            else {\r\n                set(nodes);\r\n            }\r\n        };\r\n        Node.prototype.getIndex = function () {\r\n            return this._index || (this.parent && this.parent.getIndex()) || 0;\r\n        };\r\n        Node.prototype.fileInfo = function () {\r\n            return this._fileInfo || (this.parent && this.parent.fileInfo()) || {};\r\n        };\r\n        Node.prototype.isRulesetLike = function () { return false; };\r\n        Node.prototype.toCSS = function (context) {\r\n            var strs = [];\r\n            this.genCSS(context, {\r\n                // remove when genCSS has JSDoc types\r\n                // eslint-disable-next-line no-unused-vars\r\n                add: function (chunk, fileInfo, index) {\r\n                    strs.push(chunk);\r\n                },\r\n                isEmpty: function () {\r\n                    return strs.length === 0;\r\n                }\r\n            });\r\n            return strs.join('');\r\n        };\r\n        Node.prototype.genCSS = function (context, output) {\r\n            output.add(this.value);\r\n        };\r\n        Node.prototype.accept = function (visitor) {\r\n            this.value = visitor.visit(this.value);\r\n        };\r\n        Node.prototype.eval = function () { return this; };\r\n        Node.prototype._operate = function (context, op, a, b) {\r\n            switch (op) {\r\n                case '+': return a + b;\r\n                case '-': return a - b;\r\n                case '*': return a * b;\r\n                case '/': return a / b;\r\n            }\r\n        };\r\n        Node.prototype.fround = function (context, value) {\r\n            var precision = context && context.numPrecision;\r\n            // add \"epsilon\" to ensure numbers like 1.000000005 (represented as 1.000000004999...) are properly rounded:\r\n            return (precision) ? Number((value + 2e-16).toFixed(precision)) : value;\r\n        };\r\n        Node.compare = function (a, b) {\r\n            /* returns:\r\n             -1: a < b\r\n             0: a = b\r\n             1: a > b\r\n             and *any* other value for a != b (e.g. undefined, NaN, -2 etc.) */\r\n            if ((a.compare) &&\r\n                // for \"symmetric results\" force toCSS-based comparison\r\n                // of Quoted or Anonymous if either value is one of those\r\n                !(b.type === 'Quoted' || b.type === 'Anonymous')) {\r\n                return a.compare(b);\r\n            }\r\n            else if (b.compare) {\r\n                return -b.compare(a);\r\n            }\r\n            else if (a.type !== b.type) {\r\n                return undefined;\r\n            }\r\n            a = a.value;\r\n            b = b.value;\r\n            if (!Array.isArray(a)) {\r\n                return a === b ? 0 : undefined;\r\n            }\r\n            if (a.length !== b.length) {\r\n                return undefined;\r\n            }\r\n            for (var i_1 = 0; i_1 < a.length; i_1++) {\r\n                if (Node.compare(a[i_1], b[i_1]) !== 0) {\r\n                    return undefined;\r\n                }\r\n            }\r\n            return 0;\r\n        };\r\n        Node.numericCompare = function (a, b) {\r\n            return a < b ? -1\r\n                : a === b ? 0\r\n                    : a > b ? 1 : undefined;\r\n        };\r\n        // Returns true if this node represents root of ast imported by reference\r\n        Node.prototype.blocksVisibility = function () {\r\n            if (this.visibilityBlocks === undefined) {\r\n                this.visibilityBlocks = 0;\r\n            }\r\n            return this.visibilityBlocks !== 0;\r\n        };\r\n        Node.prototype.addVisibilityBlock = function () {\r\n            if (this.visibilityBlocks === undefined) {\r\n                this.visibilityBlocks = 0;\r\n            }\r\n            this.visibilityBlocks = this.visibilityBlocks + 1;\r\n        };\r\n        Node.prototype.removeVisibilityBlock = function () {\r\n            if (this.visibilityBlocks === undefined) {\r\n                this.visibilityBlocks = 0;\r\n            }\r\n            this.visibilityBlocks = this.visibilityBlocks - 1;\r\n        };\r\n        // Turns on node visibility - if called node will be shown in output regardless\r\n        // of whether it comes from import by reference or not\r\n        Node.prototype.ensureVisibility = function () {\r\n            this.nodeVisible = true;\r\n        };\r\n        // Turns off node visibility - if called node will NOT be shown in output regardless\r\n        // of whether it comes from import by reference or not\r\n        Node.prototype.ensureInvisibility = function () {\r\n            this.nodeVisible = false;\r\n        };\r\n        // return values:\r\n        // false - the node must not be visible\r\n        // true - the node must be visible\r\n        // undefined or null - the node has the same visibility as its parent\r\n        Node.prototype.isVisible = function () {\r\n            return this.nodeVisible;\r\n        };\r\n        Node.prototype.visibilityInfo = function () {\r\n            return {\r\n                visibilityBlocks: this.visibilityBlocks,\r\n                nodeVisible: this.nodeVisible\r\n            };\r\n        };\r\n        Node.prototype.copyVisibilityInfo = function (info) {\r\n            if (!info) {\r\n                return;\r\n            }\r\n            this.visibilityBlocks = info.visibilityBlocks;\r\n            this.nodeVisible = info.nodeVisible;\r\n        };\r\n        return Node;\r\n    }());\n\n    //\r\n    // RGB Colors - #ff0014, #eee\r\n    //\r\n    var Color = function (rgb, a, originalForm) {\r\n        var self = this;\r\n        //\r\n        // The end goal here, is to parse the arguments\r\n        // into an integer triplet, such as `128, 255, 0`\r\n        //\r\n        // This facilitates operations and conversions.\r\n        //\r\n        if (Array.isArray(rgb)) {\r\n            this.rgb = rgb;\r\n        }\r\n        else if (rgb.length >= 6) {\r\n            this.rgb = [];\r\n            rgb.match(/.{2}/g).map(function (c, i) {\r\n                if (i < 3) {\r\n                    self.rgb.push(parseInt(c, 16));\r\n                }\r\n                else {\r\n                    self.alpha = (parseInt(c, 16)) / 255;\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            this.rgb = [];\r\n            rgb.split('').map(function (c, i) {\r\n                if (i < 3) {\r\n                    self.rgb.push(parseInt(c + c, 16));\r\n                }\r\n                else {\r\n                    self.alpha = (parseInt(c + c, 16)) / 255;\r\n                }\r\n            });\r\n        }\r\n        this.alpha = this.alpha || (typeof a === 'number' ? a : 1);\r\n        if (typeof originalForm !== 'undefined') {\r\n            this.value = originalForm;\r\n        }\r\n    };\r\n    Color.prototype = Object.assign(new Node(), {\r\n        type: 'Color',\r\n        luma: function () {\r\n            var r = this.rgb[0] / 255, g = this.rgb[1] / 255, b = this.rgb[2] / 255;\r\n            r = (r <= 0.03928) ? r / 12.92 : Math.pow(((r + 0.055) / 1.055), 2.4);\r\n            g = (g <= 0.03928) ? g / 12.92 : Math.pow(((g + 0.055) / 1.055), 2.4);\r\n            b = (b <= 0.03928) ? b / 12.92 : Math.pow(((b + 0.055) / 1.055), 2.4);\r\n            return 0.2126 * r + 0.7152 * g + 0.0722 * b;\r\n        },\r\n        genCSS: function (context, output) {\r\n            output.add(this.toCSS(context));\r\n        },\r\n        toCSS: function (context, doNotCompress) {\r\n            var compress = context && context.compress && !doNotCompress;\r\n            var color;\r\n            var alpha;\r\n            var colorFunction;\r\n            var args = [];\r\n            // `value` is set if this color was originally\r\n            // converted from a named color string so we need\r\n            // to respect this and try to output named color too.\r\n            alpha = this.fround(context, this.alpha);\r\n            if (this.value) {\r\n                if (this.value.indexOf('rgb') === 0) {\r\n                    if (alpha < 1) {\r\n                        colorFunction = 'rgba';\r\n                    }\r\n                }\r\n                else if (this.value.indexOf('hsl') === 0) {\r\n                    if (alpha < 1) {\r\n                        colorFunction = 'hsla';\r\n                    }\r\n                    else {\r\n                        colorFunction = 'hsl';\r\n                    }\r\n                }\r\n                else {\r\n                    return this.value;\r\n                }\r\n            }\r\n            else {\r\n                if (alpha < 1) {\r\n                    colorFunction = 'rgba';\r\n                }\r\n            }\r\n            switch (colorFunction) {\r\n                case 'rgba':\r\n                    args = this.rgb.map(function (c) {\r\n                        return clamp$1(Math.round(c), 255);\r\n                    }).concat(clamp$1(alpha, 1));\r\n                    break;\r\n                case 'hsla':\r\n                    args.push(clamp$1(alpha, 1));\r\n                // eslint-disable-next-line no-fallthrough\r\n                case 'hsl':\r\n                    color = this.toHSL();\r\n                    args = [\r\n                        this.fround(context, color.h),\r\n                        this.fround(context, color.s * 100) + \"%\",\r\n                        this.fround(context, color.l * 100) + \"%\"\r\n                    ].concat(args);\r\n            }\r\n            if (colorFunction) {\r\n                // Values are capped between `0` and `255`, rounded and zero-padded.\r\n                return colorFunction + \"(\" + args.join(\",\" + (compress ? '' : ' ')) + \")\";\r\n            }\r\n            color = this.toRGB();\r\n            if (compress) {\r\n                var splitcolor = color.split('');\r\n                // Convert color to short format\r\n                if (splitcolor[1] === splitcolor[2] && splitcolor[3] === splitcolor[4] && splitcolor[5] === splitcolor[6]) {\r\n                    color = \"#\" + splitcolor[1] + splitcolor[3] + splitcolor[5];\r\n                }\r\n            }\r\n            return color;\r\n        },\r\n        //\r\n        // Operations have to be done per-channel, if not,\r\n        // channels will spill onto each other. Once we have\r\n        // our result, in the form of an integer triplet,\r\n        // we create a new Color node to hold the result.\r\n        //\r\n        operate: function (context, op, other) {\r\n            var rgb = new Array(3);\r\n            var alpha = this.alpha * (1 - other.alpha) + other.alpha;\r\n            for (var c = 0; c < 3; c++) {\r\n                rgb[c] = this._operate(context, op, this.rgb[c], other.rgb[c]);\r\n            }\r\n            return new Color(rgb, alpha);\r\n        },\r\n        toRGB: function () {\r\n            return toHex(this.rgb);\r\n        },\r\n        toHSL: function () {\r\n            var r = this.rgb[0] / 255, g = this.rgb[1] / 255, b = this.rgb[2] / 255, a = this.alpha;\r\n            var max = Math.max(r, g, b), min = Math.min(r, g, b);\r\n            var h;\r\n            var s;\r\n            var l = (max + min) / 2;\r\n            var d = max - min;\r\n            if (max === min) {\r\n                h = s = 0;\r\n            }\r\n            else {\r\n                s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n                switch (max) {\r\n                    case r:\r\n                        h = (g - b) / d + (g < b ? 6 : 0);\r\n                        break;\r\n                    case g:\r\n                        h = (b - r) / d + 2;\r\n                        break;\r\n                    case b:\r\n                        h = (r - g) / d + 4;\r\n                        break;\r\n                }\r\n                h /= 6;\r\n            }\r\n            return { h: h * 360, s: s, l: l, a: a };\r\n        },\r\n        // Adapted from http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript\r\n        toHSV: function () {\r\n            var r = this.rgb[0] / 255, g = this.rgb[1] / 255, b = this.rgb[2] / 255, a = this.alpha;\r\n            var max = Math.max(r, g, b), min = Math.min(r, g, b);\r\n            var h;\r\n            var s;\r\n            var v = max;\r\n            var d = max - min;\r\n            if (max === 0) {\r\n                s = 0;\r\n            }\r\n            else {\r\n                s = d / max;\r\n            }\r\n            if (max === min) {\r\n                h = 0;\r\n            }\r\n            else {\r\n                switch (max) {\r\n                    case r:\r\n                        h = (g - b) / d + (g < b ? 6 : 0);\r\n                        break;\r\n                    case g:\r\n                        h = (b - r) / d + 2;\r\n                        break;\r\n                    case b:\r\n                        h = (r - g) / d + 4;\r\n                        break;\r\n                }\r\n                h /= 6;\r\n            }\r\n            return { h: h * 360, s: s, v: v, a: a };\r\n        },\r\n        toARGB: function () {\r\n            return toHex([this.alpha * 255].concat(this.rgb));\r\n        },\r\n        compare: function (x) {\r\n            return (x.rgb &&\r\n                x.rgb[0] === this.rgb[0] &&\r\n                x.rgb[1] === this.rgb[1] &&\r\n                x.rgb[2] === this.rgb[2] &&\r\n                x.alpha === this.alpha) ? 0 : undefined;\r\n        }\r\n    });\r\n    Color.fromKeyword = function (keyword) {\r\n        var c;\r\n        var key = keyword.toLowerCase();\r\n        // eslint-disable-next-line no-prototype-builtins\r\n        if (colors.hasOwnProperty(key)) {\r\n            c = new Color(colors[key].slice(1));\r\n        }\r\n        else if (key === 'transparent') {\r\n            c = new Color([0, 0, 0], 0);\r\n        }\r\n        if (c) {\r\n            c.value = keyword;\r\n            return c;\r\n        }\r\n    };\r\n    function clamp$1(v, max) {\r\n        return Math.min(Math.max(v, 0), max);\r\n    }\r\n    function toHex(v) {\r\n        return \"#\" + v.map(function (c) {\r\n            c = clamp$1(Math.round(c), 255);\r\n            return (c < 16 ? '0' : '') + c.toString(16);\r\n        }).join('');\r\n    }\n\n    var Paren = function (node) {\r\n        this.value = node;\r\n    };\r\n    Paren.prototype = Object.assign(new Node(), {\r\n        type: 'Paren',\r\n        genCSS: function (context, output) {\r\n            output.add('(');\r\n            this.value.genCSS(context, output);\r\n            output.add(')');\r\n        },\r\n        eval: function (context) {\r\n            return new Paren(this.value.eval(context));\r\n        }\r\n    });\n\n    var _noSpaceCombinators = {\r\n        '': true,\r\n        ' ': true,\r\n        '|': true\r\n    };\r\n    var Combinator = function (value) {\r\n        if (value === ' ') {\r\n            this.value = ' ';\r\n            this.emptyOrWhitespace = true;\r\n        }\r\n        else {\r\n            this.value = value ? value.trim() : '';\r\n            this.emptyOrWhitespace = this.value === '';\r\n        }\r\n    };\r\n    Combinator.prototype = Object.assign(new Node(), {\r\n        type: 'Combinator',\r\n        genCSS: function (context, output) {\r\n            var spaceOrEmpty = (context.compress || _noSpaceCombinators[this.value]) ? '' : ' ';\r\n            output.add(spaceOrEmpty + this.value + spaceOrEmpty);\r\n        }\r\n    });\n\n    var Element = function (combinator, value, isVariable, index, currentFileInfo, visibilityInfo) {\r\n        this.combinator = combinator instanceof Combinator ?\r\n            combinator : new Combinator(combinator);\r\n        if (typeof value === 'string') {\r\n            this.value = value.trim();\r\n        }\r\n        else if (value) {\r\n            this.value = value;\r\n        }\r\n        else {\r\n            this.value = '';\r\n        }\r\n        this.isVariable = isVariable;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.copyVisibilityInfo(visibilityInfo);\r\n        this.setParent(this.combinator, this);\r\n    };\r\n    Element.prototype = Object.assign(new Node(), {\r\n        type: 'Element',\r\n        accept: function (visitor) {\r\n            var value = this.value;\r\n            this.combinator = visitor.visit(this.combinator);\r\n            if (typeof value === 'object') {\r\n                this.value = visitor.visit(value);\r\n            }\r\n        },\r\n        eval: function (context) {\r\n            return new Element(this.combinator, this.value.eval ? this.value.eval(context) : this.value, this.isVariable, this.getIndex(), this.fileInfo(), this.visibilityInfo());\r\n        },\r\n        clone: function () {\r\n            return new Element(this.combinator, this.value, this.isVariable, this.getIndex(), this.fileInfo(), this.visibilityInfo());\r\n        },\r\n        genCSS: function (context, output) {\r\n            output.add(this.toCSS(context), this.fileInfo(), this.getIndex());\r\n        },\r\n        toCSS: function (context) {\r\n            context = context || {};\r\n            var value = this.value;\r\n            var firstSelector = context.firstSelector;\r\n            if (value instanceof Paren) {\r\n                // selector in parens should not be affected by outer selector\r\n                // flags (breaks only interpolated selectors - see #1973)\r\n                context.firstSelector = true;\r\n            }\r\n            value = value.toCSS ? value.toCSS(context) : value;\r\n            context.firstSelector = firstSelector;\r\n            if (value === '' && this.combinator.value.charAt(0) === '&') {\r\n                return '';\r\n            }\r\n            else {\r\n                return this.combinator.toCSS(context) + value;\r\n            }\r\n        }\r\n    });\n\n    var Math$1 = {\r\n        ALWAYS: 0,\r\n        PARENS_DIVISION: 1,\r\n        PARENS: 2\r\n        // removed - STRICT_LEGACY: 3\r\n    };\r\n    var RewriteUrls = {\r\n        OFF: 0,\r\n        LOCAL: 1,\r\n        ALL: 2\r\n    };\n\n    /**\r\n     * Returns the object type of the given payload\r\n     *\r\n     * @param {*} payload\r\n     * @returns {string}\r\n     */\r\n    function getType(payload) {\r\n        return Object.prototype.toString.call(payload).slice(8, -1);\r\n    }\r\n    /**\r\n     * Returns whether the payload is a plain JavaScript object (excluding special classes or objects with other prototypes)\r\n     *\r\n     * @param {*} payload\r\n     * @returns {payload is Record<string, any>}\r\n     */\r\n    function isPlainObject(payload) {\r\n        if (getType(payload) !== 'Object')\r\n            return false;\r\n        return payload.constructor === Object && Object.getPrototypeOf(payload) === Object.prototype;\r\n    }\r\n    /**\r\n     * Returns whether the payload is an array\r\n     *\r\n     * @param {any} payload\r\n     * @returns {payload is any[]}\r\n     */\r\n    function isArray(payload) {\r\n        return getType(payload) === 'Array';\r\n    }\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    function __spreadArrays() {\r\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++)\r\n            s += arguments[i].length;\r\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n                r[k] = a[j];\r\n        return r;\r\n    }\r\n    function assignProp(carry, key, newVal, originalObject, includeNonenumerable) {\r\n        var propType = {}.propertyIsEnumerable.call(originalObject, key)\r\n            ? 'enumerable'\r\n            : 'nonenumerable';\r\n        if (propType === 'enumerable')\r\n            carry[key] = newVal;\r\n        if (includeNonenumerable && propType === 'nonenumerable') {\r\n            Object.defineProperty(carry, key, {\r\n                value: newVal,\r\n                enumerable: false,\r\n                writable: true,\r\n                configurable: true,\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Copy (clone) an object and all its props recursively to get rid of any prop referenced of the original object. Arrays are also cloned, however objects inside arrays are still linked.\r\n     *\r\n     * @export\r\n     * @template T\r\n     * @param {T} target Target can be anything\r\n     * @param {Options} [options={}] Options can be `props` or `nonenumerable`\r\n     * @returns {T} the target with replaced values\r\n     * @export\r\n     */\r\n    function copy(target, options) {\r\n        if (options === void 0) {\r\n            options = {};\r\n        }\r\n        if (isArray(target))\r\n            return target.map(function (i) { return copy(i, options); });\r\n        if (!isPlainObject(target))\r\n            return target;\r\n        var props = Object.getOwnPropertyNames(target);\r\n        var symbols = Object.getOwnPropertySymbols(target);\r\n        return __spreadArrays(props, symbols).reduce(function (carry, key) {\r\n            if (isArray(options.props) && !options.props.includes(key)) {\r\n                return carry;\r\n            }\r\n            var val = target[key];\r\n            var newVal = copy(val, options);\r\n            assignProp(carry, key, newVal, target, options.nonenumerable);\r\n            return carry;\r\n        }, {});\r\n    }\n\n    /* jshint proto: true */\r\n    function getLocation(index, inputStream) {\r\n        var n = index + 1;\r\n        var line = null;\r\n        var column = -1;\r\n        while (--n >= 0 && inputStream.charAt(n) !== '\\n') {\r\n            column++;\r\n        }\r\n        if (typeof index === 'number') {\r\n            line = (inputStream.slice(0, index).match(/\\n/g) || '').length;\r\n        }\r\n        return {\r\n            line: line,\r\n            column: column\r\n        };\r\n    }\r\n    function copyArray(arr) {\r\n        var i;\r\n        var length = arr.length;\r\n        var copy = new Array(length);\r\n        for (i = 0; i < length; i++) {\r\n            copy[i] = arr[i];\r\n        }\r\n        return copy;\r\n    }\r\n    function clone(obj) {\r\n        var cloned = {};\r\n        for (var prop in obj) {\r\n            if (Object.prototype.hasOwnProperty.call(obj, prop)) {\r\n                cloned[prop] = obj[prop];\r\n            }\r\n        }\r\n        return cloned;\r\n    }\r\n    function defaults(obj1, obj2) {\r\n        var newObj = obj2 || {};\r\n        if (!obj2._defaults) {\r\n            newObj = {};\r\n            var defaults_1 = copy(obj1);\r\n            newObj._defaults = defaults_1;\r\n            var cloned = obj2 ? copy(obj2) : {};\r\n            Object.assign(newObj, defaults_1, cloned);\r\n        }\r\n        return newObj;\r\n    }\r\n    function copyOptions(obj1, obj2) {\r\n        if (obj2 && obj2._defaults) {\r\n            return obj2;\r\n        }\r\n        var opts = defaults(obj1, obj2);\r\n        if (opts.strictMath) {\r\n            opts.math = Math$1.PARENS;\r\n        }\r\n        // Back compat with changed relativeUrls option\r\n        if (opts.relativeUrls) {\r\n            opts.rewriteUrls = RewriteUrls.ALL;\r\n        }\r\n        if (typeof opts.math === 'string') {\r\n            switch (opts.math.toLowerCase()) {\r\n                case 'always':\r\n                    opts.math = Math$1.ALWAYS;\r\n                    break;\r\n                case 'parens-division':\r\n                    opts.math = Math$1.PARENS_DIVISION;\r\n                    break;\r\n                case 'strict':\r\n                case 'parens':\r\n                    opts.math = Math$1.PARENS;\r\n                    break;\r\n                default:\r\n                    opts.math = Math$1.PARENS;\r\n            }\r\n        }\r\n        if (typeof opts.rewriteUrls === 'string') {\r\n            switch (opts.rewriteUrls.toLowerCase()) {\r\n                case 'off':\r\n                    opts.rewriteUrls = RewriteUrls.OFF;\r\n                    break;\r\n                case 'local':\r\n                    opts.rewriteUrls = RewriteUrls.LOCAL;\r\n                    break;\r\n                case 'all':\r\n                    opts.rewriteUrls = RewriteUrls.ALL;\r\n                    break;\r\n            }\r\n        }\r\n        return opts;\r\n    }\r\n    function merge(obj1, obj2) {\r\n        for (var prop in obj2) {\r\n            if (Object.prototype.hasOwnProperty.call(obj2, prop)) {\r\n                obj1[prop] = obj2[prop];\r\n            }\r\n        }\r\n        return obj1;\r\n    }\r\n    function flattenArray(arr, result) {\r\n        if (result === void 0) { result = []; }\r\n        for (var i_1 = 0, length_1 = arr.length; i_1 < length_1; i_1++) {\r\n            var value = arr[i_1];\r\n            if (Array.isArray(value)) {\r\n                flattenArray(value, result);\r\n            }\r\n            else {\r\n                if (value !== undefined) {\r\n                    result.push(value);\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    function isNullOrUndefined(val) {\r\n        return val === null || val === undefined;\r\n    }\n\n    var utils = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        getLocation: getLocation,\n        copyArray: copyArray,\n        clone: clone,\n        defaults: defaults,\n        copyOptions: copyOptions,\n        merge: merge,\n        flattenArray: flattenArray,\n        isNullOrUndefined: isNullOrUndefined\n    });\n\n    var anonymousFunc = /(<anonymous>|Function):(\\d+):(\\d+)/;\r\n    /**\r\n     * This is a centralized class of any error that could be thrown internally (mostly by the parser).\r\n     * Besides standard .message it keeps some additional data like a path to the file where the error\r\n     * occurred along with line and column numbers.\r\n     *\r\n     * @class\r\n     * @extends Error\r\n     * @type {module.LessError}\r\n     *\r\n     * @prop {string} type\r\n     * @prop {string} filename\r\n     * @prop {number} index\r\n     * @prop {number} line\r\n     * @prop {number} column\r\n     * @prop {number} callLine\r\n     * @prop {number} callExtract\r\n     * @prop {string[]} extract\r\n     *\r\n     * @param {Object} e              - An error object to wrap around or just a descriptive object\r\n     * @param {Object} fileContentMap - An object with file contents in 'contents' property (like importManager) @todo - move to fileManager?\r\n     * @param {string} [currentFilename]\r\n     */\r\n    var LessError = function (e, fileContentMap, currentFilename) {\r\n        Error.call(this);\r\n        var filename = e.filename || currentFilename;\r\n        this.message = e.message;\r\n        this.stack = e.stack;\r\n        if (fileContentMap && filename) {\r\n            var input = fileContentMap.contents[filename];\r\n            var loc = getLocation(e.index, input);\r\n            var line = loc.line;\r\n            var col = loc.column;\r\n            var callLine = e.call && getLocation(e.call, input).line;\r\n            var lines = input ? input.split('\\n') : '';\r\n            this.type = e.type || 'Syntax';\r\n            this.filename = filename;\r\n            this.index = e.index;\r\n            this.line = typeof line === 'number' ? line + 1 : null;\r\n            this.column = col;\r\n            if (!this.line && this.stack) {\r\n                var found = this.stack.match(anonymousFunc);\r\n                /**\r\n                 * We have to figure out how this environment stringifies anonymous functions\r\n                 * so we can correctly map plugin errors.\r\n                 *\r\n                 * Note, in Node 8, the output of anonymous funcs varied based on parameters\r\n                 * being present or not, so we inject dummy params.\r\n                 */\r\n                var func = new Function('a', 'throw new Error()');\r\n                var lineAdjust = 0;\r\n                try {\r\n                    func();\r\n                }\r\n                catch (e) {\r\n                    var match = e.stack.match(anonymousFunc);\r\n                    lineAdjust = 1 - parseInt(match[2]);\r\n                }\r\n                if (found) {\r\n                    if (found[2]) {\r\n                        this.line = parseInt(found[2]) + lineAdjust;\r\n                    }\r\n                    if (found[3]) {\r\n                        this.column = parseInt(found[3]);\r\n                    }\r\n                }\r\n            }\r\n            this.callLine = callLine + 1;\r\n            this.callExtract = lines[callLine];\r\n            this.extract = [\r\n                lines[this.line - 2],\r\n                lines[this.line - 1],\r\n                lines[this.line]\r\n            ];\r\n        }\r\n    };\r\n    if (typeof Object.create === 'undefined') {\r\n        var F = function () { };\r\n        F.prototype = Error.prototype;\r\n        LessError.prototype = new F();\r\n    }\r\n    else {\r\n        LessError.prototype = Object.create(Error.prototype);\r\n    }\r\n    LessError.prototype.constructor = LessError;\r\n    /**\r\n     * An overridden version of the default Object.prototype.toString\r\n     * which uses additional information to create a helpful message.\r\n     *\r\n     * @param {Object} options\r\n     * @returns {string}\r\n     */\r\n    LessError.prototype.toString = function (options) {\r\n        options = options || {};\r\n        var message = '';\r\n        var extract = this.extract || [];\r\n        var error = [];\r\n        var stylize = function (str) { return str; };\r\n        if (options.stylize) {\r\n            var type = typeof options.stylize;\r\n            if (type !== 'function') {\r\n                throw Error(\"options.stylize should be a function, got a \" + type + \"!\");\r\n            }\r\n            stylize = options.stylize;\r\n        }\r\n        if (this.line !== null) {\r\n            if (typeof extract[0] === 'string') {\r\n                error.push(stylize(this.line - 1 + \" \" + extract[0], 'grey'));\r\n            }\r\n            if (typeof extract[1] === 'string') {\r\n                var errorTxt = this.line + \" \";\r\n                if (extract[1]) {\r\n                    errorTxt += extract[1].slice(0, this.column) +\r\n                        stylize(stylize(stylize(extract[1].substr(this.column, 1), 'bold') +\r\n                            extract[1].slice(this.column + 1), 'red'), 'inverse');\r\n                }\r\n                error.push(errorTxt);\r\n            }\r\n            if (typeof extract[2] === 'string') {\r\n                error.push(stylize(this.line + 1 + \" \" + extract[2], 'grey'));\r\n            }\r\n            error = error.join('\\n') + stylize('', 'reset') + \"\\n\";\r\n        }\r\n        message += stylize(this.type + \"Error: \" + this.message, 'red');\r\n        if (this.filename) {\r\n            message += stylize(' in ', 'red') + this.filename;\r\n        }\r\n        if (this.line) {\r\n            message += stylize(\" on line \" + this.line + \", column \" + (this.column + 1) + \":\", 'grey');\r\n        }\r\n        message += \"\\n\" + error;\r\n        if (this.callLine) {\r\n            message += stylize('from ', 'red') + (this.filename || '') + \"/n\";\r\n            message += stylize(this.callLine, 'grey') + \" \" + this.callExtract + \"/n\";\r\n        }\r\n        return message;\r\n    };\n\n    var _visitArgs = { visitDeeper: true };\r\n    var _hasIndexed = false;\r\n    function _noop(node) {\r\n        return node;\r\n    }\r\n    function indexNodeTypes(parent, ticker) {\r\n        // add .typeIndex to tree node types for lookup table\r\n        var key, child;\r\n        for (key in parent) {\r\n            /* eslint guard-for-in: 0 */\r\n            child = parent[key];\r\n            switch (typeof child) {\r\n                case 'function':\r\n                    // ignore bound functions directly on tree which do not have a prototype\r\n                    // or aren't nodes\r\n                    if (child.prototype && child.prototype.type) {\r\n                        child.prototype.typeIndex = ticker++;\r\n                    }\r\n                    break;\r\n                case 'object':\r\n                    ticker = indexNodeTypes(child, ticker);\r\n                    break;\r\n            }\r\n        }\r\n        return ticker;\r\n    }\r\n    var Visitor = /** @class */ (function () {\r\n        function Visitor(implementation) {\r\n            this._implementation = implementation;\r\n            this._visitInCache = {};\r\n            this._visitOutCache = {};\r\n            if (!_hasIndexed) {\r\n                indexNodeTypes(tree, 1);\r\n                _hasIndexed = true;\r\n            }\r\n        }\r\n        Visitor.prototype.visit = function (node) {\r\n            if (!node) {\r\n                return node;\r\n            }\r\n            var nodeTypeIndex = node.typeIndex;\r\n            if (!nodeTypeIndex) {\r\n                // MixinCall args aren't a node type?\r\n                if (node.value && node.value.typeIndex) {\r\n                    this.visit(node.value);\r\n                }\r\n                return node;\r\n            }\r\n            var impl = this._implementation;\r\n            var func = this._visitInCache[nodeTypeIndex];\r\n            var funcOut = this._visitOutCache[nodeTypeIndex];\r\n            var visitArgs = _visitArgs;\r\n            var fnName;\r\n            visitArgs.visitDeeper = true;\r\n            if (!func) {\r\n                fnName = \"visit\" + node.type;\r\n                func = impl[fnName] || _noop;\r\n                funcOut = impl[fnName + \"Out\"] || _noop;\r\n                this._visitInCache[nodeTypeIndex] = func;\r\n                this._visitOutCache[nodeTypeIndex] = funcOut;\r\n            }\r\n            if (func !== _noop) {\r\n                var newNode = func.call(impl, node, visitArgs);\r\n                if (node && impl.isReplacing) {\r\n                    node = newNode;\r\n                }\r\n            }\r\n            if (visitArgs.visitDeeper && node) {\r\n                if (node.length) {\r\n                    for (var i_1 = 0, cnt = node.length; i_1 < cnt; i_1++) {\r\n                        if (node[i_1].accept) {\r\n                            node[i_1].accept(this);\r\n                        }\r\n                    }\r\n                }\r\n                else if (node.accept) {\r\n                    node.accept(this);\r\n                }\r\n            }\r\n            if (funcOut != _noop) {\r\n                funcOut.call(impl, node);\r\n            }\r\n            return node;\r\n        };\r\n        Visitor.prototype.visitArray = function (nodes, nonReplacing) {\r\n            if (!nodes) {\r\n                return nodes;\r\n            }\r\n            var cnt = nodes.length;\r\n            var i;\r\n            // Non-replacing\r\n            if (nonReplacing || !this._implementation.isReplacing) {\r\n                for (i = 0; i < cnt; i++) {\r\n                    this.visit(nodes[i]);\r\n                }\r\n                return nodes;\r\n            }\r\n            // Replacing\r\n            var out = [];\r\n            for (i = 0; i < cnt; i++) {\r\n                var evald = this.visit(nodes[i]);\r\n                if (evald === undefined) {\r\n                    continue;\r\n                }\r\n                if (!evald.splice) {\r\n                    out.push(evald);\r\n                }\r\n                else if (evald.length) {\r\n                    this.flatten(evald, out);\r\n                }\r\n            }\r\n            return out;\r\n        };\r\n        Visitor.prototype.flatten = function (arr, out) {\r\n            if (!out) {\r\n                out = [];\r\n            }\r\n            var cnt, i, item, nestedCnt, j, nestedItem;\r\n            for (i = 0, cnt = arr.length; i < cnt; i++) {\r\n                item = arr[i];\r\n                if (item === undefined) {\r\n                    continue;\r\n                }\r\n                if (!item.splice) {\r\n                    out.push(item);\r\n                    continue;\r\n                }\r\n                for (j = 0, nestedCnt = item.length; j < nestedCnt; j++) {\r\n                    nestedItem = item[j];\r\n                    if (nestedItem === undefined) {\r\n                        continue;\r\n                    }\r\n                    if (!nestedItem.splice) {\r\n                        out.push(nestedItem);\r\n                    }\r\n                    else if (nestedItem.length) {\r\n                        this.flatten(nestedItem, out);\r\n                    }\r\n                }\r\n            }\r\n            return out;\r\n        };\r\n        return Visitor;\r\n    }());\n\n    var contexts = {};\r\n    var copyFromOriginal = function copyFromOriginal(original, destination, propertiesToCopy) {\r\n        if (!original) {\r\n            return;\r\n        }\r\n        for (var i_1 = 0; i_1 < propertiesToCopy.length; i_1++) {\r\n            if (Object.prototype.hasOwnProperty.call(original, propertiesToCopy[i_1])) {\r\n                destination[propertiesToCopy[i_1]] = original[propertiesToCopy[i_1]];\r\n            }\r\n        }\r\n    };\r\n    /*\r\n     parse is used whilst parsing\r\n     */\r\n    var parseCopyProperties = [\r\n        // options\r\n        'paths',\r\n        'rewriteUrls',\r\n        'rootpath',\r\n        'strictImports',\r\n        'insecure',\r\n        'dumpLineNumbers',\r\n        'compress',\r\n        'syncImport',\r\n        'chunkInput',\r\n        'mime',\r\n        'useFileCache',\r\n        // context\r\n        'processImports',\r\n        // Used by the import manager to stop multiple import visitors being created.\r\n        'pluginManager' // Used as the plugin manager for the session\r\n    ];\r\n    contexts.Parse = function (options) {\r\n        copyFromOriginal(options, this, parseCopyProperties);\r\n        if (typeof this.paths === 'string') {\r\n            this.paths = [this.paths];\r\n        }\r\n    };\r\n    var evalCopyProperties = [\r\n        'paths',\r\n        'compress',\r\n        'math',\r\n        'strictUnits',\r\n        'sourceMap',\r\n        'importMultiple',\r\n        'urlArgs',\r\n        'javascriptEnabled',\r\n        'pluginManager',\r\n        'importantScope',\r\n        'rewriteUrls' // option - whether to adjust URL's to be relative\r\n    ];\r\n    contexts.Eval = function (options, frames) {\r\n        copyFromOriginal(options, this, evalCopyProperties);\r\n        if (typeof this.paths === 'string') {\r\n            this.paths = [this.paths];\r\n        }\r\n        this.frames = frames || [];\r\n        this.importantScope = this.importantScope || [];\r\n    };\r\n    contexts.Eval.prototype.enterCalc = function () {\r\n        if (!this.calcStack) {\r\n            this.calcStack = [];\r\n        }\r\n        this.calcStack.push(true);\r\n        this.inCalc = true;\r\n    };\r\n    contexts.Eval.prototype.exitCalc = function () {\r\n        this.calcStack.pop();\r\n        if (!this.calcStack.length) {\r\n            this.inCalc = false;\r\n        }\r\n    };\r\n    contexts.Eval.prototype.inParenthesis = function () {\r\n        if (!this.parensStack) {\r\n            this.parensStack = [];\r\n        }\r\n        this.parensStack.push(true);\r\n    };\r\n    contexts.Eval.prototype.outOfParenthesis = function () {\r\n        this.parensStack.pop();\r\n    };\r\n    contexts.Eval.prototype.inCalc = false;\r\n    contexts.Eval.prototype.mathOn = true;\r\n    contexts.Eval.prototype.isMathOn = function (op) {\r\n        if (!this.mathOn) {\r\n            return false;\r\n        }\r\n        if (op === '/' && this.math !== Math$1.ALWAYS && (!this.parensStack || !this.parensStack.length)) {\r\n            return false;\r\n        }\r\n        if (this.math > Math$1.PARENS_DIVISION) {\r\n            return this.parensStack && this.parensStack.length;\r\n        }\r\n        return true;\r\n    };\r\n    contexts.Eval.prototype.pathRequiresRewrite = function (path) {\r\n        var isRelative = this.rewriteUrls === RewriteUrls.LOCAL ? isPathLocalRelative : isPathRelative;\r\n        return isRelative(path);\r\n    };\r\n    contexts.Eval.prototype.rewritePath = function (path, rootpath) {\r\n        var newPath;\r\n        rootpath = rootpath || '';\r\n        newPath = this.normalizePath(rootpath + path);\r\n        // If a path was explicit relative and the rootpath was not an absolute path\r\n        // we must ensure that the new path is also explicit relative.\r\n        if (isPathLocalRelative(path) &&\r\n            isPathRelative(rootpath) &&\r\n            isPathLocalRelative(newPath) === false) {\r\n            newPath = \"./\" + newPath;\r\n        }\r\n        return newPath;\r\n    };\r\n    contexts.Eval.prototype.normalizePath = function (path) {\r\n        var segments = path.split('/').reverse();\r\n        var segment;\r\n        path = [];\r\n        while (segments.length !== 0) {\r\n            segment = segments.pop();\r\n            switch (segment) {\r\n                case '.':\r\n                    break;\r\n                case '..':\r\n                    if ((path.length === 0) || (path[path.length - 1] === '..')) {\r\n                        path.push(segment);\r\n                    }\r\n                    else {\r\n                        path.pop();\r\n                    }\r\n                    break;\r\n                default:\r\n                    path.push(segment);\r\n                    break;\r\n            }\r\n        }\r\n        return path.join('/');\r\n    };\r\n    function isPathRelative(path) {\r\n        return !/^(?:[a-z-]+:|\\/|#)/i.test(path);\r\n    }\r\n    function isPathLocalRelative(path) {\r\n        return path.charAt(0) === '.';\r\n    }\r\n    // todo - do the same for the toCSS ?\n\n    var ImportSequencer = /** @class */ (function () {\r\n        function ImportSequencer(onSequencerEmpty) {\r\n            this.imports = [];\r\n            this.variableImports = [];\r\n            this._onSequencerEmpty = onSequencerEmpty;\r\n            this._currentDepth = 0;\r\n        }\r\n        ImportSequencer.prototype.addImport = function (callback) {\r\n            var importSequencer = this, importItem = {\r\n                callback: callback,\r\n                args: null,\r\n                isReady: false\r\n            };\r\n            this.imports.push(importItem);\r\n            return function () {\r\n                importItem.args = Array.prototype.slice.call(arguments, 0);\r\n                importItem.isReady = true;\r\n                importSequencer.tryRun();\r\n            };\r\n        };\r\n        ImportSequencer.prototype.addVariableImport = function (callback) {\r\n            this.variableImports.push(callback);\r\n        };\r\n        ImportSequencer.prototype.tryRun = function () {\r\n            this._currentDepth++;\r\n            try {\r\n                while (true) {\r\n                    while (this.imports.length > 0) {\r\n                        var importItem = this.imports[0];\r\n                        if (!importItem.isReady) {\r\n                            return;\r\n                        }\r\n                        this.imports = this.imports.slice(1);\r\n                        importItem.callback.apply(null, importItem.args);\r\n                    }\r\n                    if (this.variableImports.length === 0) {\r\n                        break;\r\n                    }\r\n                    var variableImport = this.variableImports[0];\r\n                    this.variableImports = this.variableImports.slice(1);\r\n                    variableImport();\r\n                }\r\n            }\r\n            finally {\r\n                this._currentDepth--;\r\n            }\r\n            if (this._currentDepth === 0 && this._onSequencerEmpty) {\r\n                this._onSequencerEmpty();\r\n            }\r\n        };\r\n        return ImportSequencer;\r\n    }());\n\n    /* eslint-disable no-unused-vars */\r\n    var ImportVisitor = function (importer, finish) {\r\n        this._visitor = new Visitor(this);\r\n        this._importer = importer;\r\n        this._finish = finish;\r\n        this.context = new contexts.Eval();\r\n        this.importCount = 0;\r\n        this.onceFileDetectionMap = {};\r\n        this.recursionDetector = {};\r\n        this._sequencer = new ImportSequencer(this._onSequencerEmpty.bind(this));\r\n    };\r\n    ImportVisitor.prototype = {\r\n        isReplacing: false,\r\n        run: function (root) {\r\n            try {\r\n                // process the contents\r\n                this._visitor.visit(root);\r\n            }\r\n            catch (e) {\r\n                this.error = e;\r\n            }\r\n            this.isFinished = true;\r\n            this._sequencer.tryRun();\r\n        },\r\n        _onSequencerEmpty: function () {\r\n            if (!this.isFinished) {\r\n                return;\r\n            }\r\n            this._finish(this.error);\r\n        },\r\n        visitImport: function (importNode, visitArgs) {\r\n            var inlineCSS = importNode.options.inline;\r\n            if (!importNode.css || inlineCSS) {\r\n                var context = new contexts.Eval(this.context, copyArray(this.context.frames));\r\n                var importParent = context.frames[0];\r\n                this.importCount++;\r\n                if (importNode.isVariableImport()) {\r\n                    this._sequencer.addVariableImport(this.processImportNode.bind(this, importNode, context, importParent));\r\n                }\r\n                else {\r\n                    this.processImportNode(importNode, context, importParent);\r\n                }\r\n            }\r\n            visitArgs.visitDeeper = false;\r\n        },\r\n        processImportNode: function (importNode, context, importParent) {\r\n            var evaldImportNode;\r\n            var inlineCSS = importNode.options.inline;\r\n            try {\r\n                evaldImportNode = importNode.evalForImport(context);\r\n            }\r\n            catch (e) {\r\n                if (!e.filename) {\r\n                    e.index = importNode.getIndex();\r\n                    e.filename = importNode.fileInfo().filename;\r\n                }\r\n                // attempt to eval properly and treat as css\r\n                importNode.css = true;\r\n                // if that fails, this error will be thrown\r\n                importNode.error = e;\r\n            }\r\n            if (evaldImportNode && (!evaldImportNode.css || inlineCSS)) {\r\n                if (evaldImportNode.options.multiple) {\r\n                    context.importMultiple = true;\r\n                }\r\n                // try appending if we haven't determined if it is css or not\r\n                var tryAppendLessExtension = evaldImportNode.css === undefined;\r\n                for (var i_1 = 0; i_1 < importParent.rules.length; i_1++) {\r\n                    if (importParent.rules[i_1] === importNode) {\r\n                        importParent.rules[i_1] = evaldImportNode;\r\n                        break;\r\n                    }\r\n                }\r\n                var onImported = this.onImported.bind(this, evaldImportNode, context), sequencedOnImported = this._sequencer.addImport(onImported);\r\n                this._importer.push(evaldImportNode.getPath(), tryAppendLessExtension, evaldImportNode.fileInfo(), evaldImportNode.options, sequencedOnImported);\r\n            }\r\n            else {\r\n                this.importCount--;\r\n                if (this.isFinished) {\r\n                    this._sequencer.tryRun();\r\n                }\r\n            }\r\n        },\r\n        onImported: function (importNode, context, e, root, importedAtRoot, fullPath) {\r\n            if (e) {\r\n                if (!e.filename) {\r\n                    e.index = importNode.getIndex();\r\n                    e.filename = importNode.fileInfo().filename;\r\n                }\r\n                this.error = e;\r\n            }\r\n            var importVisitor = this, inlineCSS = importNode.options.inline, isPlugin = importNode.options.isPlugin, isOptional = importNode.options.optional, duplicateImport = importedAtRoot || fullPath in importVisitor.recursionDetector;\r\n            if (!context.importMultiple) {\r\n                if (duplicateImport) {\r\n                    importNode.skip = true;\r\n                }\r\n                else {\r\n                    importNode.skip = function () {\r\n                        if (fullPath in importVisitor.onceFileDetectionMap) {\r\n                            return true;\r\n                        }\r\n                        importVisitor.onceFileDetectionMap[fullPath] = true;\r\n                        return false;\r\n                    };\r\n                }\r\n            }\r\n            if (!fullPath && isOptional) {\r\n                importNode.skip = true;\r\n            }\r\n            if (root) {\r\n                importNode.root = root;\r\n                importNode.importedFilename = fullPath;\r\n                if (!inlineCSS && !isPlugin && (context.importMultiple || !duplicateImport)) {\r\n                    importVisitor.recursionDetector[fullPath] = true;\r\n                    var oldContext = this.context;\r\n                    this.context = context;\r\n                    try {\r\n                        this._visitor.visit(root);\r\n                    }\r\n                    catch (e) {\r\n                        this.error = e;\r\n                    }\r\n                    this.context = oldContext;\r\n                }\r\n            }\r\n            importVisitor.importCount--;\r\n            if (importVisitor.isFinished) {\r\n                importVisitor._sequencer.tryRun();\r\n            }\r\n        },\r\n        visitDeclaration: function (declNode, visitArgs) {\r\n            if (declNode.value.type === 'DetachedRuleset') {\r\n                this.context.frames.unshift(declNode);\r\n            }\r\n            else {\r\n                visitArgs.visitDeeper = false;\r\n            }\r\n        },\r\n        visitDeclarationOut: function (declNode) {\r\n            if (declNode.value.type === 'DetachedRuleset') {\r\n                this.context.frames.shift();\r\n            }\r\n        },\r\n        visitAtRule: function (atRuleNode, visitArgs) {\r\n            this.context.frames.unshift(atRuleNode);\r\n        },\r\n        visitAtRuleOut: function (atRuleNode) {\r\n            this.context.frames.shift();\r\n        },\r\n        visitMixinDefinition: function (mixinDefinitionNode, visitArgs) {\r\n            this.context.frames.unshift(mixinDefinitionNode);\r\n        },\r\n        visitMixinDefinitionOut: function (mixinDefinitionNode) {\r\n            this.context.frames.shift();\r\n        },\r\n        visitRuleset: function (rulesetNode, visitArgs) {\r\n            this.context.frames.unshift(rulesetNode);\r\n        },\r\n        visitRulesetOut: function (rulesetNode) {\r\n            this.context.frames.shift();\r\n        },\r\n        visitMedia: function (mediaNode, visitArgs) {\r\n            this.context.frames.unshift(mediaNode.rules[0]);\r\n        },\r\n        visitMediaOut: function (mediaNode) {\r\n            this.context.frames.shift();\r\n        }\r\n    };\n\n    var SetTreeVisibilityVisitor = /** @class */ (function () {\r\n        function SetTreeVisibilityVisitor(visible) {\r\n            this.visible = visible;\r\n        }\r\n        SetTreeVisibilityVisitor.prototype.run = function (root) {\r\n            this.visit(root);\r\n        };\r\n        SetTreeVisibilityVisitor.prototype.visitArray = function (nodes) {\r\n            if (!nodes) {\r\n                return nodes;\r\n            }\r\n            var cnt = nodes.length;\r\n            var i;\r\n            for (i = 0; i < cnt; i++) {\r\n                this.visit(nodes[i]);\r\n            }\r\n            return nodes;\r\n        };\r\n        SetTreeVisibilityVisitor.prototype.visit = function (node) {\r\n            if (!node) {\r\n                return node;\r\n            }\r\n            if (node.constructor === Array) {\r\n                return this.visitArray(node);\r\n            }\r\n            if (!node.blocksVisibility || node.blocksVisibility()) {\r\n                return node;\r\n            }\r\n            if (this.visible) {\r\n                node.ensureVisibility();\r\n            }\r\n            else {\r\n                node.ensureInvisibility();\r\n            }\r\n            node.accept(this);\r\n            return node;\r\n        };\r\n        return SetTreeVisibilityVisitor;\r\n    }());\n\n    /* eslint-disable no-unused-vars */\r\n    /* jshint loopfunc:true */\r\n    var ExtendFinderVisitor = /** @class */ (function () {\r\n        function ExtendFinderVisitor() {\r\n            this._visitor = new Visitor(this);\r\n            this.contexts = [];\r\n            this.allExtendsStack = [[]];\r\n        }\r\n        ExtendFinderVisitor.prototype.run = function (root) {\r\n            root = this._visitor.visit(root);\r\n            root.allExtends = this.allExtendsStack[0];\r\n            return root;\r\n        };\r\n        ExtendFinderVisitor.prototype.visitDeclaration = function (declNode, visitArgs) {\r\n            visitArgs.visitDeeper = false;\r\n        };\r\n        ExtendFinderVisitor.prototype.visitMixinDefinition = function (mixinDefinitionNode, visitArgs) {\r\n            visitArgs.visitDeeper = false;\r\n        };\r\n        ExtendFinderVisitor.prototype.visitRuleset = function (rulesetNode, visitArgs) {\r\n            if (rulesetNode.root) {\r\n                return;\r\n            }\r\n            var i;\r\n            var j;\r\n            var extend;\r\n            var allSelectorsExtendList = [];\r\n            var extendList;\r\n            // get &:extend(.a); rules which apply to all selectors in this ruleset\r\n            var rules = rulesetNode.rules, ruleCnt = rules ? rules.length : 0;\r\n            for (i = 0; i < ruleCnt; i++) {\r\n                if (rulesetNode.rules[i] instanceof tree.Extend) {\r\n                    allSelectorsExtendList.push(rules[i]);\r\n                    rulesetNode.extendOnEveryPath = true;\r\n                }\r\n            }\r\n            // now find every selector and apply the extends that apply to all extends\r\n            // and the ones which apply to an individual extend\r\n            var paths = rulesetNode.paths;\r\n            for (i = 0; i < paths.length; i++) {\r\n                var selectorPath = paths[i], selector = selectorPath[selectorPath.length - 1], selExtendList = selector.extendList;\r\n                extendList = selExtendList ? copyArray(selExtendList).concat(allSelectorsExtendList)\r\n                    : allSelectorsExtendList;\r\n                if (extendList) {\r\n                    extendList = extendList.map(function (allSelectorsExtend) {\r\n                        return allSelectorsExtend.clone();\r\n                    });\r\n                }\r\n                for (j = 0; j < extendList.length; j++) {\r\n                    this.foundExtends = true;\r\n                    extend = extendList[j];\r\n                    extend.findSelfSelectors(selectorPath);\r\n                    extend.ruleset = rulesetNode;\r\n                    if (j === 0) {\r\n                        extend.firstExtendOnThisSelectorPath = true;\r\n                    }\r\n                    this.allExtendsStack[this.allExtendsStack.length - 1].push(extend);\r\n                }\r\n            }\r\n            this.contexts.push(rulesetNode.selectors);\r\n        };\r\n        ExtendFinderVisitor.prototype.visitRulesetOut = function (rulesetNode) {\r\n            if (!rulesetNode.root) {\r\n                this.contexts.length = this.contexts.length - 1;\r\n            }\r\n        };\r\n        ExtendFinderVisitor.prototype.visitMedia = function (mediaNode, visitArgs) {\r\n            mediaNode.allExtends = [];\r\n            this.allExtendsStack.push(mediaNode.allExtends);\r\n        };\r\n        ExtendFinderVisitor.prototype.visitMediaOut = function (mediaNode) {\r\n            this.allExtendsStack.length = this.allExtendsStack.length - 1;\r\n        };\r\n        ExtendFinderVisitor.prototype.visitAtRule = function (atRuleNode, visitArgs) {\r\n            atRuleNode.allExtends = [];\r\n            this.allExtendsStack.push(atRuleNode.allExtends);\r\n        };\r\n        ExtendFinderVisitor.prototype.visitAtRuleOut = function (atRuleNode) {\r\n            this.allExtendsStack.length = this.allExtendsStack.length - 1;\r\n        };\r\n        return ExtendFinderVisitor;\r\n    }());\r\n    var ProcessExtendsVisitor = /** @class */ (function () {\r\n        function ProcessExtendsVisitor() {\r\n            this._visitor = new Visitor(this);\r\n        }\r\n        ProcessExtendsVisitor.prototype.run = function (root) {\r\n            var extendFinder = new ExtendFinderVisitor();\r\n            this.extendIndices = {};\r\n            extendFinder.run(root);\r\n            if (!extendFinder.foundExtends) {\r\n                return root;\r\n            }\r\n            root.allExtends = root.allExtends.concat(this.doExtendChaining(root.allExtends, root.allExtends));\r\n            this.allExtendsStack = [root.allExtends];\r\n            var newRoot = this._visitor.visit(root);\r\n            this.checkExtendsForNonMatched(root.allExtends);\r\n            return newRoot;\r\n        };\r\n        ProcessExtendsVisitor.prototype.checkExtendsForNonMatched = function (extendList) {\r\n            var indices = this.extendIndices;\r\n            extendList.filter(function (extend) {\r\n                return !extend.hasFoundMatches && extend.parent_ids.length == 1;\r\n            }).forEach(function (extend) {\r\n                var selector = '_unknown_';\r\n                try {\r\n                    selector = extend.selector.toCSS({});\r\n                }\r\n                catch (_) { }\r\n                if (!indices[extend.index + \" \" + selector]) {\r\n                    indices[extend.index + \" \" + selector] = true;\r\n                    logger$1.warn(\"extend '\" + selector + \"' has no matches\");\r\n                }\r\n            });\r\n        };\r\n        ProcessExtendsVisitor.prototype.doExtendChaining = function (extendsList, extendsListTarget, iterationCount) {\r\n            //\r\n            // chaining is different from normal extension.. if we extend an extend then we are not just copying, altering\r\n            // and pasting the selector we would do normally, but we are also adding an extend with the same target selector\r\n            // this means this new extend can then go and alter other extends\r\n            //\r\n            // this method deals with all the chaining work - without it, extend is flat and doesn't work on other extend selectors\r\n            // this is also the most expensive.. and a match on one selector can cause an extension of a selector we had already\r\n            // processed if we look at each selector at a time, as is done in visitRuleset\r\n            var extendIndex;\r\n            var targetExtendIndex;\r\n            var matches;\r\n            var extendsToAdd = [];\r\n            var newSelector;\r\n            var extendVisitor = this;\r\n            var selectorPath;\r\n            var extend;\r\n            var targetExtend;\r\n            var newExtend;\r\n            iterationCount = iterationCount || 0;\r\n            // loop through comparing every extend with every target extend.\r\n            // a target extend is the one on the ruleset we are looking at copy/edit/pasting in place\r\n            // e.g.  .a:extend(.b) {}  and .b:extend(.c) {} then the first extend extends the second one\r\n            // and the second is the target.\r\n            // the separation into two lists allows us to process a subset of chains with a bigger set, as is the\r\n            // case when processing media queries\r\n            for (extendIndex = 0; extendIndex < extendsList.length; extendIndex++) {\r\n                for (targetExtendIndex = 0; targetExtendIndex < extendsListTarget.length; targetExtendIndex++) {\r\n                    extend = extendsList[extendIndex];\r\n                    targetExtend = extendsListTarget[targetExtendIndex];\r\n                    // look for circular references\r\n                    if (extend.parent_ids.indexOf(targetExtend.object_id) >= 0) {\r\n                        continue;\r\n                    }\r\n                    // find a match in the target extends self selector (the bit before :extend)\r\n                    selectorPath = [targetExtend.selfSelectors[0]];\r\n                    matches = extendVisitor.findMatch(extend, selectorPath);\r\n                    if (matches.length) {\r\n                        extend.hasFoundMatches = true;\r\n                        // we found a match, so for each self selector..\r\n                        extend.selfSelectors.forEach(function (selfSelector) {\r\n                            var info = targetExtend.visibilityInfo();\r\n                            // process the extend as usual\r\n                            newSelector = extendVisitor.extendSelector(matches, selectorPath, selfSelector, extend.isVisible());\r\n                            // but now we create a new extend from it\r\n                            newExtend = new (tree.Extend)(targetExtend.selector, targetExtend.option, 0, targetExtend.fileInfo(), info);\r\n                            newExtend.selfSelectors = newSelector;\r\n                            // add the extend onto the list of extends for that selector\r\n                            newSelector[newSelector.length - 1].extendList = [newExtend];\r\n                            // record that we need to add it.\r\n                            extendsToAdd.push(newExtend);\r\n                            newExtend.ruleset = targetExtend.ruleset;\r\n                            // remember its parents for circular references\r\n                            newExtend.parent_ids = newExtend.parent_ids.concat(targetExtend.parent_ids, extend.parent_ids);\r\n                            // only process the selector once.. if we have :extend(.a,.b) then multiple\r\n                            // extends will look at the same selector path, so when extending\r\n                            // we know that any others will be duplicates in terms of what is added to the css\r\n                            if (targetExtend.firstExtendOnThisSelectorPath) {\r\n                                newExtend.firstExtendOnThisSelectorPath = true;\r\n                                targetExtend.ruleset.paths.push(newSelector);\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n            if (extendsToAdd.length) {\r\n                // try to detect circular references to stop a stack overflow.\r\n                // may no longer be needed.\r\n                this.extendChainCount++;\r\n                if (iterationCount > 100) {\r\n                    var selectorOne = '{unable to calculate}';\r\n                    var selectorTwo = '{unable to calculate}';\r\n                    try {\r\n                        selectorOne = extendsToAdd[0].selfSelectors[0].toCSS();\r\n                        selectorTwo = extendsToAdd[0].selector.toCSS();\r\n                    }\r\n                    catch (e) { }\r\n                    throw { message: \"extend circular reference detected. One of the circular extends is currently:\" + selectorOne + \":extend(\" + selectorTwo + \")\" };\r\n                }\r\n                // now process the new extends on the existing rules so that we can handle a extending b extending c extending\r\n                // d extending e...\r\n                return extendsToAdd.concat(extendVisitor.doExtendChaining(extendsToAdd, extendsListTarget, iterationCount + 1));\r\n            }\r\n            else {\r\n                return extendsToAdd;\r\n            }\r\n        };\r\n        ProcessExtendsVisitor.prototype.visitDeclaration = function (ruleNode, visitArgs) {\r\n            visitArgs.visitDeeper = false;\r\n        };\r\n        ProcessExtendsVisitor.prototype.visitMixinDefinition = function (mixinDefinitionNode, visitArgs) {\r\n            visitArgs.visitDeeper = false;\r\n        };\r\n        ProcessExtendsVisitor.prototype.visitSelector = function (selectorNode, visitArgs) {\r\n            visitArgs.visitDeeper = false;\r\n        };\r\n        ProcessExtendsVisitor.prototype.visitRuleset = function (rulesetNode, visitArgs) {\r\n            if (rulesetNode.root) {\r\n                return;\r\n            }\r\n            var matches;\r\n            var pathIndex;\r\n            var extendIndex;\r\n            var allExtends = this.allExtendsStack[this.allExtendsStack.length - 1];\r\n            var selectorsToAdd = [];\r\n            var extendVisitor = this;\r\n            var selectorPath;\r\n            // look at each selector path in the ruleset, find any extend matches and then copy, find and replace\r\n            for (extendIndex = 0; extendIndex < allExtends.length; extendIndex++) {\r\n                for (pathIndex = 0; pathIndex < rulesetNode.paths.length; pathIndex++) {\r\n                    selectorPath = rulesetNode.paths[pathIndex];\r\n                    // extending extends happens initially, before the main pass\r\n                    if (rulesetNode.extendOnEveryPath) {\r\n                        continue;\r\n                    }\r\n                    var extendList = selectorPath[selectorPath.length - 1].extendList;\r\n                    if (extendList && extendList.length) {\r\n                        continue;\r\n                    }\r\n                    matches = this.findMatch(allExtends[extendIndex], selectorPath);\r\n                    if (matches.length) {\r\n                        allExtends[extendIndex].hasFoundMatches = true;\r\n                        allExtends[extendIndex].selfSelectors.forEach(function (selfSelector) {\r\n                            var extendedSelectors;\r\n                            extendedSelectors = extendVisitor.extendSelector(matches, selectorPath, selfSelector, allExtends[extendIndex].isVisible());\r\n                            selectorsToAdd.push(extendedSelectors);\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n            rulesetNode.paths = rulesetNode.paths.concat(selectorsToAdd);\r\n        };\r\n        ProcessExtendsVisitor.prototype.findMatch = function (extend, haystackSelectorPath) {\r\n            //\r\n            // look through the haystack selector path to try and find the needle - extend.selector\r\n            // returns an array of selector matches that can then be replaced\r\n            //\r\n            var haystackSelectorIndex;\r\n            var hackstackSelector;\r\n            var hackstackElementIndex;\r\n            var haystackElement;\r\n            var targetCombinator;\r\n            var i;\r\n            var extendVisitor = this;\r\n            var needleElements = extend.selector.elements;\r\n            var potentialMatches = [];\r\n            var potentialMatch;\r\n            var matches = [];\r\n            // loop through the haystack elements\r\n            for (haystackSelectorIndex = 0; haystackSelectorIndex < haystackSelectorPath.length; haystackSelectorIndex++) {\r\n                hackstackSelector = haystackSelectorPath[haystackSelectorIndex];\r\n                for (hackstackElementIndex = 0; hackstackElementIndex < hackstackSelector.elements.length; hackstackElementIndex++) {\r\n                    haystackElement = hackstackSelector.elements[hackstackElementIndex];\r\n                    // if we allow elements before our match we can add a potential match every time. otherwise only at the first element.\r\n                    if (extend.allowBefore || (haystackSelectorIndex === 0 && hackstackElementIndex === 0)) {\r\n                        potentialMatches.push({ pathIndex: haystackSelectorIndex, index: hackstackElementIndex, matched: 0,\r\n                            initialCombinator: haystackElement.combinator });\r\n                    }\r\n                    for (i = 0; i < potentialMatches.length; i++) {\r\n                        potentialMatch = potentialMatches[i];\r\n                        // selectors add \" \" onto the first element. When we use & it joins the selectors together, but if we don't\r\n                        // then each selector in haystackSelectorPath has a space before it added in the toCSS phase. so we need to\r\n                        // work out what the resulting combinator will be\r\n                        targetCombinator = haystackElement.combinator.value;\r\n                        if (targetCombinator === '' && hackstackElementIndex === 0) {\r\n                            targetCombinator = ' ';\r\n                        }\r\n                        // if we don't match, null our match to indicate failure\r\n                        if (!extendVisitor.isElementValuesEqual(needleElements[potentialMatch.matched].value, haystackElement.value) ||\r\n                            (potentialMatch.matched > 0 && needleElements[potentialMatch.matched].combinator.value !== targetCombinator)) {\r\n                            potentialMatch = null;\r\n                        }\r\n                        else {\r\n                            potentialMatch.matched++;\r\n                        }\r\n                        // if we are still valid and have finished, test whether we have elements after and whether these are allowed\r\n                        if (potentialMatch) {\r\n                            potentialMatch.finished = potentialMatch.matched === needleElements.length;\r\n                            if (potentialMatch.finished &&\r\n                                (!extend.allowAfter &&\r\n                                    (hackstackElementIndex + 1 < hackstackSelector.elements.length || haystackSelectorIndex + 1 < haystackSelectorPath.length))) {\r\n                                potentialMatch = null;\r\n                            }\r\n                        }\r\n                        // if null we remove, if not, we are still valid, so either push as a valid match or continue\r\n                        if (potentialMatch) {\r\n                            if (potentialMatch.finished) {\r\n                                potentialMatch.length = needleElements.length;\r\n                                potentialMatch.endPathIndex = haystackSelectorIndex;\r\n                                potentialMatch.endPathElementIndex = hackstackElementIndex + 1; // index after end of match\r\n                                potentialMatches.length = 0; // we don't allow matches to overlap, so start matching again\r\n                                matches.push(potentialMatch);\r\n                            }\r\n                        }\r\n                        else {\r\n                            potentialMatches.splice(i, 1);\r\n                            i--;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return matches;\r\n        };\r\n        ProcessExtendsVisitor.prototype.isElementValuesEqual = function (elementValue1, elementValue2) {\r\n            if (typeof elementValue1 === 'string' || typeof elementValue2 === 'string') {\r\n                return elementValue1 === elementValue2;\r\n            }\r\n            if (elementValue1 instanceof tree.Attribute) {\r\n                if (elementValue1.op !== elementValue2.op || elementValue1.key !== elementValue2.key) {\r\n                    return false;\r\n                }\r\n                if (!elementValue1.value || !elementValue2.value) {\r\n                    if (elementValue1.value || elementValue2.value) {\r\n                        return false;\r\n                    }\r\n                    return true;\r\n                }\r\n                elementValue1 = elementValue1.value.value || elementValue1.value;\r\n                elementValue2 = elementValue2.value.value || elementValue2.value;\r\n                return elementValue1 === elementValue2;\r\n            }\r\n            elementValue1 = elementValue1.value;\r\n            elementValue2 = elementValue2.value;\r\n            if (elementValue1 instanceof tree.Selector) {\r\n                if (!(elementValue2 instanceof tree.Selector) || elementValue1.elements.length !== elementValue2.elements.length) {\r\n                    return false;\r\n                }\r\n                for (var i_1 = 0; i_1 < elementValue1.elements.length; i_1++) {\r\n                    if (elementValue1.elements[i_1].combinator.value !== elementValue2.elements[i_1].combinator.value) {\r\n                        if (i_1 !== 0 || (elementValue1.elements[i_1].combinator.value || ' ') !== (elementValue2.elements[i_1].combinator.value || ' ')) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                    if (!this.isElementValuesEqual(elementValue1.elements[i_1].value, elementValue2.elements[i_1].value)) {\r\n                        return false;\r\n                    }\r\n                }\r\n                return true;\r\n            }\r\n            return false;\r\n        };\r\n        ProcessExtendsVisitor.prototype.extendSelector = function (matches, selectorPath, replacementSelector, isVisible) {\r\n            // for a set of matches, replace each match with the replacement selector\r\n            var currentSelectorPathIndex = 0, currentSelectorPathElementIndex = 0, path = [], matchIndex, selector, firstElement, match, newElements;\r\n            for (matchIndex = 0; matchIndex < matches.length; matchIndex++) {\r\n                match = matches[matchIndex];\r\n                selector = selectorPath[match.pathIndex];\r\n                firstElement = new tree.Element(match.initialCombinator, replacementSelector.elements[0].value, replacementSelector.elements[0].isVariable, replacementSelector.elements[0].getIndex(), replacementSelector.elements[0].fileInfo());\r\n                if (match.pathIndex > currentSelectorPathIndex && currentSelectorPathElementIndex > 0) {\r\n                    path[path.length - 1].elements = path[path.length - 1]\r\n                        .elements.concat(selectorPath[currentSelectorPathIndex].elements.slice(currentSelectorPathElementIndex));\r\n                    currentSelectorPathElementIndex = 0;\r\n                    currentSelectorPathIndex++;\r\n                }\r\n                newElements = selector.elements\r\n                    .slice(currentSelectorPathElementIndex, match.index)\r\n                    .concat([firstElement])\r\n                    .concat(replacementSelector.elements.slice(1));\r\n                if (currentSelectorPathIndex === match.pathIndex && matchIndex > 0) {\r\n                    path[path.length - 1].elements =\r\n                        path[path.length - 1].elements.concat(newElements);\r\n                }\r\n                else {\r\n                    path = path.concat(selectorPath.slice(currentSelectorPathIndex, match.pathIndex));\r\n                    path.push(new tree.Selector(newElements));\r\n                }\r\n                currentSelectorPathIndex = match.endPathIndex;\r\n                currentSelectorPathElementIndex = match.endPathElementIndex;\r\n                if (currentSelectorPathElementIndex >= selectorPath[currentSelectorPathIndex].elements.length) {\r\n                    currentSelectorPathElementIndex = 0;\r\n                    currentSelectorPathIndex++;\r\n                }\r\n            }\r\n            if (currentSelectorPathIndex < selectorPath.length && currentSelectorPathElementIndex > 0) {\r\n                path[path.length - 1].elements = path[path.length - 1]\r\n                    .elements.concat(selectorPath[currentSelectorPathIndex].elements.slice(currentSelectorPathElementIndex));\r\n                currentSelectorPathIndex++;\r\n            }\r\n            path = path.concat(selectorPath.slice(currentSelectorPathIndex, selectorPath.length));\r\n            path = path.map(function (currentValue) {\r\n                // we can re-use elements here, because the visibility property matters only for selectors\r\n                var derived = currentValue.createDerived(currentValue.elements);\r\n                if (isVisible) {\r\n                    derived.ensureVisibility();\r\n                }\r\n                else {\r\n                    derived.ensureInvisibility();\r\n                }\r\n                return derived;\r\n            });\r\n            return path;\r\n        };\r\n        ProcessExtendsVisitor.prototype.visitMedia = function (mediaNode, visitArgs) {\r\n            var newAllExtends = mediaNode.allExtends.concat(this.allExtendsStack[this.allExtendsStack.length - 1]);\r\n            newAllExtends = newAllExtends.concat(this.doExtendChaining(newAllExtends, mediaNode.allExtends));\r\n            this.allExtendsStack.push(newAllExtends);\r\n        };\r\n        ProcessExtendsVisitor.prototype.visitMediaOut = function (mediaNode) {\r\n            var lastIndex = this.allExtendsStack.length - 1;\r\n            this.allExtendsStack.length = lastIndex;\r\n        };\r\n        ProcessExtendsVisitor.prototype.visitAtRule = function (atRuleNode, visitArgs) {\r\n            var newAllExtends = atRuleNode.allExtends.concat(this.allExtendsStack[this.allExtendsStack.length - 1]);\r\n            newAllExtends = newAllExtends.concat(this.doExtendChaining(newAllExtends, atRuleNode.allExtends));\r\n            this.allExtendsStack.push(newAllExtends);\r\n        };\r\n        ProcessExtendsVisitor.prototype.visitAtRuleOut = function (atRuleNode) {\r\n            var lastIndex = this.allExtendsStack.length - 1;\r\n            this.allExtendsStack.length = lastIndex;\r\n        };\r\n        return ProcessExtendsVisitor;\r\n    }());\n\n    /* eslint-disable no-unused-vars */\r\n    var JoinSelectorVisitor = /** @class */ (function () {\r\n        function JoinSelectorVisitor() {\r\n            this.contexts = [[]];\r\n            this._visitor = new Visitor(this);\r\n        }\r\n        JoinSelectorVisitor.prototype.run = function (root) {\r\n            return this._visitor.visit(root);\r\n        };\r\n        JoinSelectorVisitor.prototype.visitDeclaration = function (declNode, visitArgs) {\r\n            visitArgs.visitDeeper = false;\r\n        };\r\n        JoinSelectorVisitor.prototype.visitMixinDefinition = function (mixinDefinitionNode, visitArgs) {\r\n            visitArgs.visitDeeper = false;\r\n        };\r\n        JoinSelectorVisitor.prototype.visitRuleset = function (rulesetNode, visitArgs) {\r\n            var context = this.contexts[this.contexts.length - 1];\r\n            var paths = [];\r\n            var selectors;\r\n            this.contexts.push(paths);\r\n            if (!rulesetNode.root) {\r\n                selectors = rulesetNode.selectors;\r\n                if (selectors) {\r\n                    selectors = selectors.filter(function (selector) { return selector.getIsOutput(); });\r\n                    rulesetNode.selectors = selectors.length ? selectors : (selectors = null);\r\n                    if (selectors) {\r\n                        rulesetNode.joinSelectors(paths, context, selectors);\r\n                    }\r\n                }\r\n                if (!selectors) {\r\n                    rulesetNode.rules = null;\r\n                }\r\n                rulesetNode.paths = paths;\r\n            }\r\n        };\r\n        JoinSelectorVisitor.prototype.visitRulesetOut = function (rulesetNode) {\r\n            this.contexts.length = this.contexts.length - 1;\r\n        };\r\n        JoinSelectorVisitor.prototype.visitMedia = function (mediaNode, visitArgs) {\r\n            var context = this.contexts[this.contexts.length - 1];\r\n            mediaNode.rules[0].root = (context.length === 0 || context[0].multiMedia);\r\n        };\r\n        JoinSelectorVisitor.prototype.visitAtRule = function (atRuleNode, visitArgs) {\r\n            var context = this.contexts[this.contexts.length - 1];\r\n            if (atRuleNode.rules && atRuleNode.rules.length) {\r\n                atRuleNode.rules[0].root = (atRuleNode.isRooted || context.length === 0 || null);\r\n            }\r\n        };\r\n        return JoinSelectorVisitor;\r\n    }());\n\n    /* eslint-disable no-unused-vars */\r\n    var CSSVisitorUtils = /** @class */ (function () {\r\n        function CSSVisitorUtils(context) {\r\n            this._visitor = new Visitor(this);\r\n            this._context = context;\r\n        }\r\n        CSSVisitorUtils.prototype.containsSilentNonBlockedChild = function (bodyRules) {\r\n            var rule;\r\n            if (!bodyRules) {\r\n                return false;\r\n            }\r\n            for (var r = 0; r < bodyRules.length; r++) {\r\n                rule = bodyRules[r];\r\n                if (rule.isSilent && rule.isSilent(this._context) && !rule.blocksVisibility()) {\r\n                    // the atrule contains something that was referenced (likely by extend)\r\n                    // therefore it needs to be shown in output too\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        };\r\n        CSSVisitorUtils.prototype.keepOnlyVisibleChilds = function (owner) {\r\n            if (owner && owner.rules) {\r\n                owner.rules = owner.rules.filter(function (thing) { return thing.isVisible(); });\r\n            }\r\n        };\r\n        CSSVisitorUtils.prototype.isEmpty = function (owner) {\r\n            return (owner && owner.rules)\r\n                ? (owner.rules.length === 0) : true;\r\n        };\r\n        CSSVisitorUtils.prototype.hasVisibleSelector = function (rulesetNode) {\r\n            return (rulesetNode && rulesetNode.paths)\r\n                ? (rulesetNode.paths.length > 0) : false;\r\n        };\r\n        CSSVisitorUtils.prototype.resolveVisibility = function (node) {\r\n            if (!node.blocksVisibility()) {\r\n                if (this.isEmpty(node)) {\r\n                    return;\r\n                }\r\n                return node;\r\n            }\r\n            var compiledRulesBody = node.rules[0];\r\n            this.keepOnlyVisibleChilds(compiledRulesBody);\r\n            if (this.isEmpty(compiledRulesBody)) {\r\n                return;\r\n            }\r\n            node.ensureVisibility();\r\n            node.removeVisibilityBlock();\r\n            return node;\r\n        };\r\n        CSSVisitorUtils.prototype.isVisibleRuleset = function (rulesetNode) {\r\n            if (rulesetNode.firstRoot) {\r\n                return true;\r\n            }\r\n            if (this.isEmpty(rulesetNode)) {\r\n                return false;\r\n            }\r\n            if (!rulesetNode.root && !this.hasVisibleSelector(rulesetNode)) {\r\n                return false;\r\n            }\r\n            return true;\r\n        };\r\n        return CSSVisitorUtils;\r\n    }());\r\n    var ToCSSVisitor = function (context) {\r\n        this._visitor = new Visitor(this);\r\n        this._context = context;\r\n        this.utils = new CSSVisitorUtils(context);\r\n    };\r\n    ToCSSVisitor.prototype = {\r\n        isReplacing: true,\r\n        run: function (root) {\r\n            return this._visitor.visit(root);\r\n        },\r\n        visitDeclaration: function (declNode, visitArgs) {\r\n            if (declNode.blocksVisibility() || declNode.variable) {\r\n                return;\r\n            }\r\n            return declNode;\r\n        },\r\n        visitMixinDefinition: function (mixinNode, visitArgs) {\r\n            // mixin definitions do not get eval'd - this means they keep state\r\n            // so we have to clear that state here so it isn't used if toCSS is called twice\r\n            mixinNode.frames = [];\r\n        },\r\n        visitExtend: function (extendNode, visitArgs) {\r\n        },\r\n        visitComment: function (commentNode, visitArgs) {\r\n            if (commentNode.blocksVisibility() || commentNode.isSilent(this._context)) {\r\n                return;\r\n            }\r\n            return commentNode;\r\n        },\r\n        visitMedia: function (mediaNode, visitArgs) {\r\n            var originalRules = mediaNode.rules[0].rules;\r\n            mediaNode.accept(this._visitor);\r\n            visitArgs.visitDeeper = false;\r\n            return this.utils.resolveVisibility(mediaNode, originalRules);\r\n        },\r\n        visitImport: function (importNode, visitArgs) {\r\n            if (importNode.blocksVisibility()) {\r\n                return;\r\n            }\r\n            return importNode;\r\n        },\r\n        visitAtRule: function (atRuleNode, visitArgs) {\r\n            if (atRuleNode.rules && atRuleNode.rules.length) {\r\n                return this.visitAtRuleWithBody(atRuleNode, visitArgs);\r\n            }\r\n            else {\r\n                return this.visitAtRuleWithoutBody(atRuleNode, visitArgs);\r\n            }\r\n        },\r\n        visitAnonymous: function (anonymousNode, visitArgs) {\r\n            if (!anonymousNode.blocksVisibility()) {\r\n                anonymousNode.accept(this._visitor);\r\n                return anonymousNode;\r\n            }\r\n        },\r\n        visitAtRuleWithBody: function (atRuleNode, visitArgs) {\r\n            // if there is only one nested ruleset and that one has no path, then it is\r\n            // just fake ruleset\r\n            function hasFakeRuleset(atRuleNode) {\r\n                var bodyRules = atRuleNode.rules;\r\n                return bodyRules.length === 1 && (!bodyRules[0].paths || bodyRules[0].paths.length === 0);\r\n            }\r\n            function getBodyRules(atRuleNode) {\r\n                var nodeRules = atRuleNode.rules;\r\n                if (hasFakeRuleset(atRuleNode)) {\r\n                    return nodeRules[0].rules;\r\n                }\r\n                return nodeRules;\r\n            }\r\n            // it is still true that it is only one ruleset in array\r\n            // this is last such moment\r\n            // process childs\r\n            var originalRules = getBodyRules(atRuleNode);\r\n            atRuleNode.accept(this._visitor);\r\n            visitArgs.visitDeeper = false;\r\n            if (!this.utils.isEmpty(atRuleNode)) {\r\n                this._mergeRules(atRuleNode.rules[0].rules);\r\n            }\r\n            return this.utils.resolveVisibility(atRuleNode, originalRules);\r\n        },\r\n        visitAtRuleWithoutBody: function (atRuleNode, visitArgs) {\r\n            if (atRuleNode.blocksVisibility()) {\r\n                return;\r\n            }\r\n            if (atRuleNode.name === '@charset') {\r\n                // Only output the debug info together with subsequent @charset definitions\r\n                // a comment (or @media statement) before the actual @charset atrule would\r\n                // be considered illegal css as it has to be on the first line\r\n                if (this.charset) {\r\n                    if (atRuleNode.debugInfo) {\r\n                        var comment = new tree.Comment(\"/* \" + atRuleNode.toCSS(this._context).replace(/\\n/g, '') + \" */\\n\");\r\n                        comment.debugInfo = atRuleNode.debugInfo;\r\n                        return this._visitor.visit(comment);\r\n                    }\r\n                    return;\r\n                }\r\n                this.charset = true;\r\n            }\r\n            return atRuleNode;\r\n        },\r\n        checkValidNodes: function (rules, isRoot) {\r\n            if (!rules) {\r\n                return;\r\n            }\r\n            for (var i_1 = 0; i_1 < rules.length; i_1++) {\r\n                var ruleNode = rules[i_1];\r\n                if (isRoot && ruleNode instanceof tree.Declaration && !ruleNode.variable) {\r\n                    throw { message: 'Properties must be inside selector blocks. They cannot be in the root',\r\n                        index: ruleNode.getIndex(), filename: ruleNode.fileInfo() && ruleNode.fileInfo().filename };\r\n                }\r\n                if (ruleNode instanceof tree.Call) {\r\n                    throw { message: \"Function '\" + ruleNode.name + \"' did not return a root node\",\r\n                        index: ruleNode.getIndex(), filename: ruleNode.fileInfo() && ruleNode.fileInfo().filename };\r\n                }\r\n                if (ruleNode.type && !ruleNode.allowRoot) {\r\n                    throw { message: ruleNode.type + \" node returned by a function is not valid here\",\r\n                        index: ruleNode.getIndex(), filename: ruleNode.fileInfo() && ruleNode.fileInfo().filename };\r\n                }\r\n            }\r\n        },\r\n        visitRuleset: function (rulesetNode, visitArgs) {\r\n            // at this point rulesets are nested into each other\r\n            var rule;\r\n            var rulesets = [];\r\n            this.checkValidNodes(rulesetNode.rules, rulesetNode.firstRoot);\r\n            if (!rulesetNode.root) {\r\n                // remove invisible paths\r\n                this._compileRulesetPaths(rulesetNode);\r\n                // remove rulesets from this ruleset body and compile them separately\r\n                var nodeRules = rulesetNode.rules;\r\n                var nodeRuleCnt = nodeRules ? nodeRules.length : 0;\r\n                for (var i_2 = 0; i_2 < nodeRuleCnt;) {\r\n                    rule = nodeRules[i_2];\r\n                    if (rule && rule.rules) {\r\n                        // visit because we are moving them out from being a child\r\n                        rulesets.push(this._visitor.visit(rule));\r\n                        nodeRules.splice(i_2, 1);\r\n                        nodeRuleCnt--;\r\n                        continue;\r\n                    }\r\n                    i_2++;\r\n                }\r\n                // accept the visitor to remove rules and refactor itself\r\n                // then we can decide nogw whether we want it or not\r\n                // compile body\r\n                if (nodeRuleCnt > 0) {\r\n                    rulesetNode.accept(this._visitor);\r\n                }\r\n                else {\r\n                    rulesetNode.rules = null;\r\n                }\r\n                visitArgs.visitDeeper = false;\r\n            }\r\n            else { // if (! rulesetNode.root) {\r\n                rulesetNode.accept(this._visitor);\r\n                visitArgs.visitDeeper = false;\r\n            }\r\n            if (rulesetNode.rules) {\r\n                this._mergeRules(rulesetNode.rules);\r\n                this._removeDuplicateRules(rulesetNode.rules);\r\n            }\r\n            // now decide whether we keep the ruleset\r\n            if (this.utils.isVisibleRuleset(rulesetNode)) {\r\n                rulesetNode.ensureVisibility();\r\n                rulesets.splice(0, 0, rulesetNode);\r\n            }\r\n            if (rulesets.length === 1) {\r\n                return rulesets[0];\r\n            }\r\n            return rulesets;\r\n        },\r\n        _compileRulesetPaths: function (rulesetNode) {\r\n            if (rulesetNode.paths) {\r\n                rulesetNode.paths = rulesetNode.paths\r\n                    .filter(function (p) {\r\n                    var i;\r\n                    if (p[0].elements[0].combinator.value === ' ') {\r\n                        p[0].elements[0].combinator = new (tree.Combinator)('');\r\n                    }\r\n                    for (i = 0; i < p.length; i++) {\r\n                        if (p[i].isVisible() && p[i].getIsOutput()) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                    return false;\r\n                });\r\n            }\r\n        },\r\n        _removeDuplicateRules: function (rules) {\r\n            if (!rules) {\r\n                return;\r\n            }\r\n            // remove duplicates\r\n            var ruleCache = {};\r\n            var ruleList;\r\n            var rule;\r\n            var i;\r\n            for (i = rules.length - 1; i >= 0; i--) {\r\n                rule = rules[i];\r\n                if (rule instanceof tree.Declaration) {\r\n                    if (!ruleCache[rule.name]) {\r\n                        ruleCache[rule.name] = rule;\r\n                    }\r\n                    else {\r\n                        ruleList = ruleCache[rule.name];\r\n                        if (ruleList instanceof tree.Declaration) {\r\n                            ruleList = ruleCache[rule.name] = [ruleCache[rule.name].toCSS(this._context)];\r\n                        }\r\n                        var ruleCSS = rule.toCSS(this._context);\r\n                        if (ruleList.indexOf(ruleCSS) !== -1) {\r\n                            rules.splice(i, 1);\r\n                        }\r\n                        else {\r\n                            ruleList.push(ruleCSS);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        _mergeRules: function (rules) {\r\n            if (!rules) {\r\n                return;\r\n            }\r\n            var groups = {};\r\n            var groupsArr = [];\r\n            for (var i_3 = 0; i_3 < rules.length; i_3++) {\r\n                var rule = rules[i_3];\r\n                if (rule.merge) {\r\n                    var key = rule.name;\r\n                    groups[key] ? rules.splice(i_3--, 1) :\r\n                        groupsArr.push(groups[key] = []);\r\n                    groups[key].push(rule);\r\n                }\r\n            }\r\n            groupsArr.forEach(function (group) {\r\n                if (group.length > 0) {\r\n                    var result_1 = group[0];\r\n                    var space_1 = [];\r\n                    var comma_1 = [new tree.Expression(space_1)];\r\n                    group.forEach(function (rule) {\r\n                        if ((rule.merge === '+') && (space_1.length > 0)) {\r\n                            comma_1.push(new tree.Expression(space_1 = []));\r\n                        }\r\n                        space_1.push(rule.value);\r\n                        result_1.important = result_1.important || rule.important;\r\n                    });\r\n                    result_1.value = new tree.Value(comma_1);\r\n                }\r\n            });\r\n        }\r\n    };\n\n    var visitors = {\r\n        Visitor: Visitor,\r\n        ImportVisitor: ImportVisitor,\r\n        MarkVisibleSelectorsVisitor: SetTreeVisibilityVisitor,\r\n        ExtendVisitor: ProcessExtendsVisitor,\r\n        JoinSelectorVisitor: JoinSelectorVisitor,\r\n        ToCSSVisitor: ToCSSVisitor\r\n    };\n\n    // Split the input into chunks.\r\n    function chunker (input, fail) {\r\n        var len = input.length;\r\n        var level = 0;\r\n        var parenLevel = 0;\r\n        var lastOpening;\r\n        var lastOpeningParen;\r\n        var lastMultiComment;\r\n        var lastMultiCommentEndBrace;\r\n        var chunks = [];\r\n        var emitFrom = 0;\r\n        var chunkerCurrentIndex;\r\n        var currentChunkStartIndex;\r\n        var cc;\r\n        var cc2;\r\n        var matched;\r\n        function emitChunk(force) {\r\n            var len = chunkerCurrentIndex - emitFrom;\r\n            if (((len < 512) && !force) || !len) {\r\n                return;\r\n            }\r\n            chunks.push(input.slice(emitFrom, chunkerCurrentIndex + 1));\r\n            emitFrom = chunkerCurrentIndex + 1;\r\n        }\r\n        for (chunkerCurrentIndex = 0; chunkerCurrentIndex < len; chunkerCurrentIndex++) {\r\n            cc = input.charCodeAt(chunkerCurrentIndex);\r\n            if (((cc >= 97) && (cc <= 122)) || (cc < 34)) {\r\n                // a-z or whitespace\r\n                continue;\r\n            }\r\n            switch (cc) {\r\n                case 40: // (\r\n                    parenLevel++;\r\n                    lastOpeningParen = chunkerCurrentIndex;\r\n                    continue;\r\n                case 41: // )\r\n                    if (--parenLevel < 0) {\r\n                        return fail('missing opening `(`', chunkerCurrentIndex);\r\n                    }\r\n                    continue;\r\n                case 59: // ;\r\n                    if (!parenLevel) {\r\n                        emitChunk();\r\n                    }\r\n                    continue;\r\n                case 123: // {\r\n                    level++;\r\n                    lastOpening = chunkerCurrentIndex;\r\n                    continue;\r\n                case 125: // }\r\n                    if (--level < 0) {\r\n                        return fail('missing opening `{`', chunkerCurrentIndex);\r\n                    }\r\n                    if (!level && !parenLevel) {\r\n                        emitChunk();\r\n                    }\r\n                    continue;\r\n                case 92: // \\\r\n                    if (chunkerCurrentIndex < len - 1) {\r\n                        chunkerCurrentIndex++;\r\n                        continue;\r\n                    }\r\n                    return fail('unescaped `\\\\`', chunkerCurrentIndex);\r\n                case 34:\r\n                case 39:\r\n                case 96: // \", ' and `\r\n                    matched = 0;\r\n                    currentChunkStartIndex = chunkerCurrentIndex;\r\n                    for (chunkerCurrentIndex = chunkerCurrentIndex + 1; chunkerCurrentIndex < len; chunkerCurrentIndex++) {\r\n                        cc2 = input.charCodeAt(chunkerCurrentIndex);\r\n                        if (cc2 > 96) {\r\n                            continue;\r\n                        }\r\n                        if (cc2 == cc) {\r\n                            matched = 1;\r\n                            break;\r\n                        }\r\n                        if (cc2 == 92) { // \\\r\n                            if (chunkerCurrentIndex == len - 1) {\r\n                                return fail('unescaped `\\\\`', chunkerCurrentIndex);\r\n                            }\r\n                            chunkerCurrentIndex++;\r\n                        }\r\n                    }\r\n                    if (matched) {\r\n                        continue;\r\n                    }\r\n                    return fail(\"unmatched `\" + String.fromCharCode(cc) + \"`\", currentChunkStartIndex);\r\n                case 47: // /, check for comment\r\n                    if (parenLevel || (chunkerCurrentIndex == len - 1)) {\r\n                        continue;\r\n                    }\r\n                    cc2 = input.charCodeAt(chunkerCurrentIndex + 1);\r\n                    if (cc2 == 47) {\r\n                        // //, find lnfeed\r\n                        for (chunkerCurrentIndex = chunkerCurrentIndex + 2; chunkerCurrentIndex < len; chunkerCurrentIndex++) {\r\n                            cc2 = input.charCodeAt(chunkerCurrentIndex);\r\n                            if ((cc2 <= 13) && ((cc2 == 10) || (cc2 == 13))) {\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    else if (cc2 == 42) {\r\n                        // /*, find */\r\n                        lastMultiComment = currentChunkStartIndex = chunkerCurrentIndex;\r\n                        for (chunkerCurrentIndex = chunkerCurrentIndex + 2; chunkerCurrentIndex < len - 1; chunkerCurrentIndex++) {\r\n                            cc2 = input.charCodeAt(chunkerCurrentIndex);\r\n                            if (cc2 == 125) {\r\n                                lastMultiCommentEndBrace = chunkerCurrentIndex;\r\n                            }\r\n                            if (cc2 != 42) {\r\n                                continue;\r\n                            }\r\n                            if (input.charCodeAt(chunkerCurrentIndex + 1) == 47) {\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (chunkerCurrentIndex == len - 1) {\r\n                            return fail('missing closing `*/`', currentChunkStartIndex);\r\n                        }\r\n                        chunkerCurrentIndex++;\r\n                    }\r\n                    continue;\r\n                case 42: // *, check for unmatched */\r\n                    if ((chunkerCurrentIndex < len - 1) && (input.charCodeAt(chunkerCurrentIndex + 1) == 47)) {\r\n                        return fail('unmatched `/*`', chunkerCurrentIndex);\r\n                    }\r\n                    continue;\r\n            }\r\n        }\r\n        if (level !== 0) {\r\n            if ((lastMultiComment > lastOpening) && (lastMultiCommentEndBrace > lastMultiComment)) {\r\n                return fail('missing closing `}` or `*/`', lastOpening);\r\n            }\r\n            else {\r\n                return fail('missing closing `}`', lastOpening);\r\n            }\r\n        }\r\n        else if (parenLevel !== 0) {\r\n            return fail('missing closing `)`', lastOpeningParen);\r\n        }\r\n        emitChunk(true);\r\n        return chunks;\r\n    }\n\n    var getParserInput = (function () {\r\n        var // Less input string\r\n        input;\r\n        var // current chunk\r\n        j;\r\n        var // holds state for backtracking\r\n        saveStack = [];\r\n        var // furthest index the parser has gone to\r\n        furthest;\r\n        var // if this is furthest we got to, this is the probably cause\r\n        furthestPossibleErrorMessage;\r\n        var // chunkified input\r\n        chunks;\r\n        var // current chunk\r\n        current;\r\n        var // index of current chunk, in `input`\r\n        currentPos;\r\n        var parserInput = {};\r\n        var CHARCODE_SPACE = 32;\r\n        var CHARCODE_TAB = 9;\r\n        var CHARCODE_LF = 10;\r\n        var CHARCODE_CR = 13;\r\n        var CHARCODE_PLUS = 43;\r\n        var CHARCODE_COMMA = 44;\r\n        var CHARCODE_FORWARD_SLASH = 47;\r\n        var CHARCODE_9 = 57;\r\n        function skipWhitespace(length) {\r\n            var oldi = parserInput.i;\r\n            var oldj = j;\r\n            var curr = parserInput.i - currentPos;\r\n            var endIndex = parserInput.i + current.length - curr;\r\n            var mem = (parserInput.i += length);\r\n            var inp = input;\r\n            var c;\r\n            var nextChar;\r\n            var comment;\r\n            for (; parserInput.i < endIndex; parserInput.i++) {\r\n                c = inp.charCodeAt(parserInput.i);\r\n                if (parserInput.autoCommentAbsorb && c === CHARCODE_FORWARD_SLASH) {\r\n                    nextChar = inp.charAt(parserInput.i + 1);\r\n                    if (nextChar === '/') {\r\n                        comment = { index: parserInput.i, isLineComment: true };\r\n                        var nextNewLine = inp.indexOf('\\n', parserInput.i + 2);\r\n                        if (nextNewLine < 0) {\r\n                            nextNewLine = endIndex;\r\n                        }\r\n                        parserInput.i = nextNewLine;\r\n                        comment.text = inp.substr(comment.index, parserInput.i - comment.index);\r\n                        parserInput.commentStore.push(comment);\r\n                        continue;\r\n                    }\r\n                    else if (nextChar === '*') {\r\n                        var nextStarSlash = inp.indexOf('*/', parserInput.i + 2);\r\n                        if (nextStarSlash >= 0) {\r\n                            comment = {\r\n                                index: parserInput.i,\r\n                                text: inp.substr(parserInput.i, nextStarSlash + 2 - parserInput.i),\r\n                                isLineComment: false\r\n                            };\r\n                            parserInput.i += comment.text.length - 1;\r\n                            parserInput.commentStore.push(comment);\r\n                            continue;\r\n                        }\r\n                    }\r\n                    break;\r\n                }\r\n                if ((c !== CHARCODE_SPACE) && (c !== CHARCODE_LF) && (c !== CHARCODE_TAB) && (c !== CHARCODE_CR)) {\r\n                    break;\r\n                }\r\n            }\r\n            current = current.slice(length + parserInput.i - mem + curr);\r\n            currentPos = parserInput.i;\r\n            if (!current.length) {\r\n                if (j < chunks.length - 1) {\r\n                    current = chunks[++j];\r\n                    skipWhitespace(0); // skip space at the beginning of a chunk\r\n                    return true; // things changed\r\n                }\r\n                parserInput.finished = true;\r\n            }\r\n            return oldi !== parserInput.i || oldj !== j;\r\n        }\r\n        parserInput.save = function () {\r\n            currentPos = parserInput.i;\r\n            saveStack.push({ current: current, i: parserInput.i, j: j });\r\n        };\r\n        parserInput.restore = function (possibleErrorMessage) {\r\n            if (parserInput.i > furthest || (parserInput.i === furthest && possibleErrorMessage && !furthestPossibleErrorMessage)) {\r\n                furthest = parserInput.i;\r\n                furthestPossibleErrorMessage = possibleErrorMessage;\r\n            }\r\n            var state = saveStack.pop();\r\n            current = state.current;\r\n            currentPos = parserInput.i = state.i;\r\n            j = state.j;\r\n        };\r\n        parserInput.forget = function () {\r\n            saveStack.pop();\r\n        };\r\n        parserInput.isWhitespace = function (offset) {\r\n            var pos = parserInput.i + (offset || 0);\r\n            var code = input.charCodeAt(pos);\r\n            return (code === CHARCODE_SPACE || code === CHARCODE_CR || code === CHARCODE_TAB || code === CHARCODE_LF);\r\n        };\r\n        // Specialization of $(tok)\r\n        parserInput.$re = function (tok) {\r\n            if (parserInput.i > currentPos) {\r\n                current = current.slice(parserInput.i - currentPos);\r\n                currentPos = parserInput.i;\r\n            }\r\n            var m = tok.exec(current);\r\n            if (!m) {\r\n                return null;\r\n            }\r\n            skipWhitespace(m[0].length);\r\n            if (typeof m === 'string') {\r\n                return m;\r\n            }\r\n            return m.length === 1 ? m[0] : m;\r\n        };\r\n        parserInput.$char = function (tok) {\r\n            if (input.charAt(parserInput.i) !== tok) {\r\n                return null;\r\n            }\r\n            skipWhitespace(1);\r\n            return tok;\r\n        };\r\n        parserInput.$peekChar = function (tok) {\r\n            if (input.charAt(parserInput.i) !== tok) {\r\n                return null;\r\n            }\r\n            return tok;\r\n        };\r\n        parserInput.$str = function (tok) {\r\n            var tokLength = tok.length;\r\n            // https://jsperf.com/string-startswith/21\r\n            for (var i_1 = 0; i_1 < tokLength; i_1++) {\r\n                if (input.charAt(parserInput.i + i_1) !== tok.charAt(i_1)) {\r\n                    return null;\r\n                }\r\n            }\r\n            skipWhitespace(tokLength);\r\n            return tok;\r\n        };\r\n        parserInput.$quoted = function (loc) {\r\n            var pos = loc || parserInput.i;\r\n            var startChar = input.charAt(pos);\r\n            if (startChar !== '\\'' && startChar !== '\"') {\r\n                return;\r\n            }\r\n            var length = input.length;\r\n            var currentPosition = pos;\r\n            for (var i_2 = 1; i_2 + currentPosition < length; i_2++) {\r\n                var nextChar = input.charAt(i_2 + currentPosition);\r\n                switch (nextChar) {\r\n                    case '\\\\':\r\n                        i_2++;\r\n                        continue;\r\n                    case '\\r':\r\n                    case '\\n':\r\n                        break;\r\n                    case startChar: {\r\n                        var str = input.substr(currentPosition, i_2 + 1);\r\n                        if (!loc && loc !== 0) {\r\n                            skipWhitespace(i_2 + 1);\r\n                            return str;\r\n                        }\r\n                        return [startChar, str];\r\n                    }\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        /**\r\n         * Permissive parsing. Ignores everything except matching {} [] () and quotes\r\n         * until matching token (outside of blocks)\r\n         */\r\n        parserInput.$parseUntil = function (tok) {\r\n            var quote = '';\r\n            var returnVal = null;\r\n            var inComment = false;\r\n            var blockDepth = 0;\r\n            var blockStack = [];\r\n            var parseGroups = [];\r\n            var length = input.length;\r\n            var startPos = parserInput.i;\r\n            var lastPos = parserInput.i;\r\n            var i = parserInput.i;\r\n            var loop = true;\r\n            var testChar;\r\n            if (typeof tok === 'string') {\r\n                testChar = function (char) { return char === tok; };\r\n            }\r\n            else {\r\n                testChar = function (char) { return tok.test(char); };\r\n            }\r\n            do {\r\n                var nextChar = input.charAt(i);\r\n                if (blockDepth === 0 && testChar(nextChar)) {\r\n                    returnVal = input.substr(lastPos, i - lastPos);\r\n                    if (returnVal) {\r\n                        parseGroups.push(returnVal);\r\n                    }\r\n                    else {\r\n                        parseGroups.push(' ');\r\n                    }\r\n                    returnVal = parseGroups;\r\n                    skipWhitespace(i - startPos);\r\n                    loop = false;\r\n                }\r\n                else {\r\n                    if (inComment) {\r\n                        if (nextChar === '*' &&\r\n                            input.charAt(i + 1) === '/') {\r\n                            i++;\r\n                            blockDepth--;\r\n                            inComment = false;\r\n                        }\r\n                        i++;\r\n                        continue;\r\n                    }\r\n                    switch (nextChar) {\r\n                        case '\\\\':\r\n                            i++;\r\n                            nextChar = input.charAt(i);\r\n                            parseGroups.push(input.substr(lastPos, i - lastPos + 1));\r\n                            lastPos = i + 1;\r\n                            break;\r\n                        case '/':\r\n                            if (input.charAt(i + 1) === '*') {\r\n                                i++;\r\n                                inComment = true;\r\n                                blockDepth++;\r\n                            }\r\n                            break;\r\n                        case '\\'':\r\n                        case '\"':\r\n                            quote = parserInput.$quoted(i);\r\n                            if (quote) {\r\n                                parseGroups.push(input.substr(lastPos, i - lastPos), quote);\r\n                                i += quote[1].length - 1;\r\n                                lastPos = i + 1;\r\n                            }\r\n                            else {\r\n                                skipWhitespace(i - startPos);\r\n                                returnVal = nextChar;\r\n                                loop = false;\r\n                            }\r\n                            break;\r\n                        case '{':\r\n                            blockStack.push('}');\r\n                            blockDepth++;\r\n                            break;\r\n                        case '(':\r\n                            blockStack.push(')');\r\n                            blockDepth++;\r\n                            break;\r\n                        case '[':\r\n                            blockStack.push(']');\r\n                            blockDepth++;\r\n                            break;\r\n                        case '}':\r\n                        case ')':\r\n                        case ']': {\r\n                            var expected = blockStack.pop();\r\n                            if (nextChar === expected) {\r\n                                blockDepth--;\r\n                            }\r\n                            else {\r\n                                // move the parser to the error and return expected\r\n                                skipWhitespace(i - startPos);\r\n                                returnVal = expected;\r\n                                loop = false;\r\n                            }\r\n                        }\r\n                    }\r\n                    i++;\r\n                    if (i > length) {\r\n                        loop = false;\r\n                    }\r\n                }\r\n            } while (loop);\r\n            return returnVal ? returnVal : null;\r\n        };\r\n        parserInput.autoCommentAbsorb = true;\r\n        parserInput.commentStore = [];\r\n        parserInput.finished = false;\r\n        // Same as $(), but don't change the state of the parser,\r\n        // just return the match.\r\n        parserInput.peek = function (tok) {\r\n            if (typeof tok === 'string') {\r\n                // https://jsperf.com/string-startswith/21\r\n                for (var i_3 = 0; i_3 < tok.length; i_3++) {\r\n                    if (input.charAt(parserInput.i + i_3) !== tok.charAt(i_3)) {\r\n                        return false;\r\n                    }\r\n                }\r\n                return true;\r\n            }\r\n            else {\r\n                return tok.test(current);\r\n            }\r\n        };\r\n        // Specialization of peek()\r\n        // TODO remove or change some currentChar calls to peekChar\r\n        parserInput.peekChar = function (tok) { return input.charAt(parserInput.i) === tok; };\r\n        parserInput.currentChar = function () { return input.charAt(parserInput.i); };\r\n        parserInput.prevChar = function () { return input.charAt(parserInput.i - 1); };\r\n        parserInput.getInput = function () { return input; };\r\n        parserInput.peekNotNumeric = function () {\r\n            var c = input.charCodeAt(parserInput.i);\r\n            // Is the first char of the dimension 0-9, '.', '+' or '-'\r\n            return (c > CHARCODE_9 || c < CHARCODE_PLUS) || c === CHARCODE_FORWARD_SLASH || c === CHARCODE_COMMA;\r\n        };\r\n        parserInput.start = function (str, chunkInput, failFunction) {\r\n            input = str;\r\n            parserInput.i = j = currentPos = furthest = 0;\r\n            // chunking apparently makes things quicker (but my tests indicate\r\n            // it might actually make things slower in node at least)\r\n            // and it is a non-perfect parse - it can't recognise\r\n            // unquoted urls, meaning it can't distinguish comments\r\n            // meaning comments with quotes or {}() in them get 'counted'\r\n            // and then lead to parse errors.\r\n            // In addition if the chunking chunks in the wrong place we might\r\n            // not be able to parse a parser statement in one go\r\n            // this is officially deprecated but can be switched on via an option\r\n            // in the case it causes too much performance issues.\r\n            if (chunkInput) {\r\n                chunks = chunker(str, failFunction);\r\n            }\r\n            else {\r\n                chunks = [str];\r\n            }\r\n            current = chunks[0];\r\n            skipWhitespace(0);\r\n        };\r\n        parserInput.end = function () {\r\n            var message;\r\n            var isFinished = parserInput.i >= input.length;\r\n            if (parserInput.i < furthest) {\r\n                message = furthestPossibleErrorMessage;\r\n                parserInput.i = furthest;\r\n            }\r\n            return {\r\n                isFinished: isFinished,\r\n                furthest: parserInput.i,\r\n                furthestPossibleErrorMessage: message,\r\n                furthestReachedEnd: parserInput.i >= input.length - 1,\r\n                furthestChar: input[parserInput.i]\r\n            };\r\n        };\r\n        return parserInput;\r\n    });\n\n    function makeRegistry(base) {\r\n        return {\r\n            _data: {},\r\n            add: function (name, func) {\r\n                // precautionary case conversion, as later querying of\r\n                // the registry by function-caller uses lower case as well.\r\n                name = name.toLowerCase();\r\n                // eslint-disable-next-line no-prototype-builtins\r\n                if (this._data.hasOwnProperty(name)) ;\r\n                this._data[name] = func;\r\n            },\r\n            addMultiple: function (functions) {\r\n                var _this = this;\r\n                Object.keys(functions).forEach(function (name) {\r\n                    _this.add(name, functions[name]);\r\n                });\r\n            },\r\n            get: function (name) {\r\n                return this._data[name] || (base && base.get(name));\r\n            },\r\n            getLocalFunctions: function () {\r\n                return this._data;\r\n            },\r\n            inherit: function () {\r\n                return makeRegistry(this);\r\n            },\r\n            create: function (base) {\r\n                return makeRegistry(base);\r\n            }\r\n        };\r\n    }\r\n    var functionRegistry = makeRegistry(null);\n\n    var MediaSyntaxOptions = {\r\n        queryInParens: true\r\n    };\r\n    var ContainerSyntaxOptions = {\r\n        queryInParens: true\r\n    };\n\n    //\r\n    // less.js - parser\r\n    //\r\n    //    A relatively straight-forward predictive parser.\r\n    //    There is no tokenization/lexing stage, the input is parsed\r\n    //    in one sweep.\r\n    //\r\n    //    To make the parser fast enough to run in the browser, several\r\n    //    optimization had to be made:\r\n    //\r\n    //    - Matching and slicing on a huge input is often cause of slowdowns.\r\n    //      The solution is to chunkify the input into smaller strings.\r\n    //      The chunks are stored in the `chunks` var,\r\n    //      `j` holds the current chunk index, and `currentPos` holds\r\n    //      the index of the current chunk in relation to `input`.\r\n    //      This gives us an almost 4x speed-up.\r\n    //\r\n    //    - In many cases, we don't need to match individual tokens;\r\n    //      for example, if a value doesn't hold any variables, operations\r\n    //      or dynamic references, the parser can effectively 'skip' it,\r\n    //      treating it as a literal.\r\n    //      An example would be '1px solid #000' - which evaluates to itself,\r\n    //      we don't need to know what the individual components are.\r\n    //      The drawback, of course is that you don't get the benefits of\r\n    //      syntax-checking on the CSS. This gives us a 50% speed-up in the parser,\r\n    //      and a smaller speed-up in the code-gen.\r\n    //\r\n    //\r\n    //    Token matching is done with the `$` function, which either takes\r\n    //    a terminal string or regexp, or a non-terminal function to call.\r\n    //    It also takes care of moving all the indices forwards.\r\n    //\r\n    var Parser = function Parser(context, imports, fileInfo, currentIndex) {\r\n        currentIndex = currentIndex || 0;\r\n        var parsers;\r\n        var parserInput = getParserInput();\r\n        function error(msg, type) {\r\n            throw new LessError({\r\n                index: parserInput.i,\r\n                filename: fileInfo.filename,\r\n                type: type || 'Syntax',\r\n                message: msg\r\n            }, imports);\r\n        }\r\n        function expect(arg, msg) {\r\n            // some older browsers return typeof 'function' for RegExp\r\n            var result = (arg instanceof Function) ? arg.call(parsers) : parserInput.$re(arg);\r\n            if (result) {\r\n                return result;\r\n            }\r\n            error(msg || (typeof arg === 'string'\r\n                ? \"expected '\" + arg + \"' got '\" + parserInput.currentChar() + \"'\"\r\n                : 'unexpected token'));\r\n        }\r\n        // Specialization of expect()\r\n        function expectChar(arg, msg) {\r\n            if (parserInput.$char(arg)) {\r\n                return arg;\r\n            }\r\n            error(msg || \"expected '\" + arg + \"' got '\" + parserInput.currentChar() + \"'\");\r\n        }\r\n        function getDebugInfo(index) {\r\n            var filename = fileInfo.filename;\r\n            return {\r\n                lineNumber: getLocation(index, parserInput.getInput()).line + 1,\r\n                fileName: filename\r\n            };\r\n        }\r\n        /**\r\n         *  Used after initial parsing to create nodes on the fly\r\n         *\r\n         *  @param {String} str          - string to parse\r\n         *  @param {Array}  parseList    - array of parsers to run input through e.g. [\"value\", \"important\"]\r\n         *  @param {Number} currentIndex - start number to begin indexing\r\n         *  @param {Object} fileInfo     - fileInfo to attach to created nodes\r\n         */\r\n        function parseNode(str, parseList, callback) {\r\n            var result;\r\n            var returnNodes = [];\r\n            var parser = parserInput;\r\n            try {\r\n                parser.start(str, false, function fail(msg, index) {\r\n                    callback({\r\n                        message: msg,\r\n                        index: index + currentIndex\r\n                    });\r\n                });\r\n                for (var x = 0, p = void 0; (p = parseList[x]); x++) {\r\n                    result = parsers[p]();\r\n                    returnNodes.push(result || null);\r\n                }\r\n                var endInfo = parser.end();\r\n                if (endInfo.isFinished) {\r\n                    callback(null, returnNodes);\r\n                }\r\n                else {\r\n                    callback(true, null);\r\n                }\r\n            }\r\n            catch (e) {\r\n                throw new LessError({\r\n                    index: e.index + currentIndex,\r\n                    message: e.message\r\n                }, imports, fileInfo.filename);\r\n            }\r\n        }\r\n        //\r\n        // The Parser\r\n        //\r\n        return {\r\n            parserInput: parserInput,\r\n            imports: imports,\r\n            fileInfo: fileInfo,\r\n            parseNode: parseNode,\r\n            //\r\n            // Parse an input string into an abstract syntax tree,\r\n            // @param str A string containing 'less' markup\r\n            // @param callback call `callback` when done.\r\n            // @param [additionalData] An optional map which can contains vars - a map (key, value) of variables to apply\r\n            //\r\n            parse: function (str, callback, additionalData) {\r\n                var root;\r\n                var err = null;\r\n                var globalVars;\r\n                var modifyVars;\r\n                var ignored;\r\n                var preText = '';\r\n                // Optionally disable @plugin parsing\r\n                if (additionalData && additionalData.disablePluginRule) {\r\n                    parsers.plugin = function () {\r\n                        var dir = parserInput.$re(/^@plugin?\\s+/);\r\n                        if (dir) {\r\n                            error('@plugin statements are not allowed when disablePluginRule is set to true');\r\n                        }\r\n                    };\r\n                }\r\n                globalVars = (additionalData && additionalData.globalVars) ? Parser.serializeVars(additionalData.globalVars) + \"\\n\" : '';\r\n                modifyVars = (additionalData && additionalData.modifyVars) ? \"\\n\" + Parser.serializeVars(additionalData.modifyVars) : '';\r\n                if (context.pluginManager) {\r\n                    var preProcessors = context.pluginManager.getPreProcessors();\r\n                    for (var i_1 = 0; i_1 < preProcessors.length; i_1++) {\r\n                        str = preProcessors[i_1].process(str, { context: context, imports: imports, fileInfo: fileInfo });\r\n                    }\r\n                }\r\n                if (globalVars || (additionalData && additionalData.banner)) {\r\n                    preText = ((additionalData && additionalData.banner) ? additionalData.banner : '') + globalVars;\r\n                    ignored = imports.contentsIgnoredChars;\r\n                    ignored[fileInfo.filename] = ignored[fileInfo.filename] || 0;\r\n                    ignored[fileInfo.filename] += preText.length;\r\n                }\r\n                str = str.replace(/\\r\\n?/g, '\\n');\r\n                // Remove potential UTF Byte Order Mark\r\n                str = preText + str.replace(/^\\uFEFF/, '') + modifyVars;\r\n                imports.contents[fileInfo.filename] = str;\r\n                // Start with the primary rule.\r\n                // The whole syntax tree is held under a Ruleset node,\r\n                // with the `root` property set to true, so no `{}` are\r\n                // output. The callback is called when the input is parsed.\r\n                try {\r\n                    parserInput.start(str, context.chunkInput, function fail(msg, index) {\r\n                        throw new LessError({\r\n                            index: index,\r\n                            type: 'Parse',\r\n                            message: msg,\r\n                            filename: fileInfo.filename\r\n                        }, imports);\r\n                    });\r\n                    tree.Node.prototype.parse = this;\r\n                    root = new tree.Ruleset(null, this.parsers.primary());\r\n                    tree.Node.prototype.rootNode = root;\r\n                    root.root = true;\r\n                    root.firstRoot = true;\r\n                    root.functionRegistry = functionRegistry.inherit();\r\n                }\r\n                catch (e) {\r\n                    return callback(new LessError(e, imports, fileInfo.filename));\r\n                }\r\n                // If `i` is smaller than the `input.length - 1`,\r\n                // it means the parser wasn't able to parse the whole\r\n                // string, so we've got a parsing error.\r\n                //\r\n                // We try to extract a \\n delimited string,\r\n                // showing the line where the parse error occurred.\r\n                // We split it up into two parts (the part which parsed,\r\n                // and the part which didn't), so we can color them differently.\r\n                var endInfo = parserInput.end();\r\n                if (!endInfo.isFinished) {\r\n                    var message = endInfo.furthestPossibleErrorMessage;\r\n                    if (!message) {\r\n                        message = 'Unrecognised input';\r\n                        if (endInfo.furthestChar === '}') {\r\n                            message += '. Possibly missing opening \\'{\\'';\r\n                        }\r\n                        else if (endInfo.furthestChar === ')') {\r\n                            message += '. Possibly missing opening \\'(\\'';\r\n                        }\r\n                        else if (endInfo.furthestReachedEnd) {\r\n                            message += '. Possibly missing something';\r\n                        }\r\n                    }\r\n                    err = new LessError({\r\n                        type: 'Parse',\r\n                        message: message,\r\n                        index: endInfo.furthest,\r\n                        filename: fileInfo.filename\r\n                    }, imports);\r\n                }\r\n                var finish = function (e) {\r\n                    e = err || e || imports.error;\r\n                    if (e) {\r\n                        if (!(e instanceof LessError)) {\r\n                            e = new LessError(e, imports, fileInfo.filename);\r\n                        }\r\n                        return callback(e);\r\n                    }\r\n                    else {\r\n                        return callback(null, root);\r\n                    }\r\n                };\r\n                if (context.processImports !== false) {\r\n                    new visitors.ImportVisitor(imports, finish)\r\n                        .run(root);\r\n                }\r\n                else {\r\n                    return finish();\r\n                }\r\n            },\r\n            //\r\n            // Here in, the parsing rules/functions\r\n            //\r\n            // The basic structure of the syntax tree generated is as follows:\r\n            //\r\n            //   Ruleset ->  Declaration -> Value -> Expression -> Entity\r\n            //\r\n            // Here's some Less code:\r\n            //\r\n            //    .class {\r\n            //      color: #fff;\r\n            //      border: 1px solid #000;\r\n            //      width: @w + 4px;\r\n            //      > .child {...}\r\n            //    }\r\n            //\r\n            // And here's what the parse tree might look like:\r\n            //\r\n            //     Ruleset (Selector '.class', [\r\n            //         Declaration (\"color\",  Value ([Expression [Color #fff]]))\r\n            //         Declaration (\"border\", Value ([Expression [Dimension 1px][Keyword \"solid\"][Color #000]]))\r\n            //         Declaration (\"width\",  Value ([Expression [Operation \" + \" [Variable \"@w\"][Dimension 4px]]]))\r\n            //         Ruleset (Selector [Element '>', '.child'], [...])\r\n            //     ])\r\n            //\r\n            //  In general, most rules will try to parse a token with the `$re()` function, and if the return\r\n            //  value is truly, will return a new node, of the relevant type. Sometimes, we need to check\r\n            //  first, before parsing, that's when we use `peek()`.\r\n            //\r\n            parsers: parsers = {\r\n                //\r\n                // The `primary` rule is the *entry* and *exit* point of the parser.\r\n                // The rules here can appear at any level of the parse tree.\r\n                //\r\n                // The recursive nature of the grammar is an interplay between the `block`\r\n                // rule, which represents `{ ... }`, the `ruleset` rule, and this `primary` rule,\r\n                // as represented by this simplified grammar:\r\n                //\r\n                //     primary  →  (ruleset | declaration)+\r\n                //     ruleset  →  selector+ block\r\n                //     block    →  '{' primary '}'\r\n                //\r\n                // Only at one point is the primary rule not called from the\r\n                // block rule: at the root level.\r\n                //\r\n                primary: function () {\r\n                    var mixin = this.mixin;\r\n                    var root = [];\r\n                    var node;\r\n                    while (true) {\r\n                        while (true) {\r\n                            node = this.comment();\r\n                            if (!node) {\r\n                                break;\r\n                            }\r\n                            root.push(node);\r\n                        }\r\n                        // always process comments before deciding if finished\r\n                        if (parserInput.finished) {\r\n                            break;\r\n                        }\r\n                        if (parserInput.peek('}')) {\r\n                            break;\r\n                        }\r\n                        node = this.extendRule();\r\n                        if (node) {\r\n                            root = root.concat(node);\r\n                            continue;\r\n                        }\r\n                        node = mixin.definition() || this.declaration() || mixin.call(false, false) ||\r\n                            this.ruleset() || this.variableCall() || this.entities.call() || this.atrule();\r\n                        if (node) {\r\n                            root.push(node);\r\n                        }\r\n                        else {\r\n                            var foundSemiColon = false;\r\n                            while (parserInput.$char(';')) {\r\n                                foundSemiColon = true;\r\n                            }\r\n                            if (!foundSemiColon) {\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    return root;\r\n                },\r\n                // comments are collected by the main parsing mechanism and then assigned to nodes\r\n                // where the current structure allows it\r\n                comment: function () {\r\n                    if (parserInput.commentStore.length) {\r\n                        var comment = parserInput.commentStore.shift();\r\n                        return new (tree.Comment)(comment.text, comment.isLineComment, comment.index + currentIndex, fileInfo);\r\n                    }\r\n                },\r\n                //\r\n                // Entities are tokens which can be found inside an Expression\r\n                //\r\n                entities: {\r\n                    mixinLookup: function () {\r\n                        return parsers.mixin.call(true, true);\r\n                    },\r\n                    //\r\n                    // A string, which supports escaping \" and '\r\n                    //\r\n                    //     \"milky way\" 'he\\'s the one!'\r\n                    //\r\n                    quoted: function (forceEscaped) {\r\n                        var str;\r\n                        var index = parserInput.i;\r\n                        var isEscaped = false;\r\n                        parserInput.save();\r\n                        if (parserInput.$char('~')) {\r\n                            isEscaped = true;\r\n                        }\r\n                        else if (forceEscaped) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                        str = parserInput.$quoted();\r\n                        if (!str) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                        parserInput.forget();\r\n                        return new (tree.Quoted)(str.charAt(0), str.substr(1, str.length - 2), isEscaped, index + currentIndex, fileInfo);\r\n                    },\r\n                    //\r\n                    // A catch-all word, such as:\r\n                    //\r\n                    //     black border-collapse\r\n                    //\r\n                    keyword: function () {\r\n                        var k = parserInput.$char('%') || parserInput.$re(/^\\[?(?:[\\w-]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+\\]?/);\r\n                        if (k) {\r\n                            return tree.Color.fromKeyword(k) || new (tree.Keyword)(k);\r\n                        }\r\n                    },\r\n                    //\r\n                    // A function call\r\n                    //\r\n                    //     rgb(255, 0, 255)\r\n                    //\r\n                    // The arguments are parsed with the `entities.arguments` parser.\r\n                    //\r\n                    call: function () {\r\n                        var name;\r\n                        var args;\r\n                        var func;\r\n                        var index = parserInput.i;\r\n                        // http://jsperf.com/case-insensitive-regex-vs-strtolower-then-regex/18\r\n                        if (parserInput.peek(/^url\\(/i)) {\r\n                            return;\r\n                        }\r\n                        parserInput.save();\r\n                        name = parserInput.$re(/^([\\w-]+|%|~|progid:[\\w.]+)\\(/);\r\n                        if (!name) {\r\n                            parserInput.forget();\r\n                            return;\r\n                        }\r\n                        name = name[1];\r\n                        func = this.customFuncCall(name);\r\n                        if (func) {\r\n                            args = func.parse();\r\n                            if (args && func.stop) {\r\n                                parserInput.forget();\r\n                                return args;\r\n                            }\r\n                        }\r\n                        args = this.arguments(args);\r\n                        if (!parserInput.$char(')')) {\r\n                            parserInput.restore('Could not parse call arguments or missing \\')\\'');\r\n                            return;\r\n                        }\r\n                        parserInput.forget();\r\n                        return new (tree.Call)(name, args, index + currentIndex, fileInfo);\r\n                    },\r\n                    //\r\n                    // Parsing rules for functions with non-standard args, e.g.:\r\n                    //\r\n                    //     boolean(not(2 > 1))\r\n                    //\r\n                    //     This is a quick prototype, to be modified/improved when\r\n                    //     more custom-parsed funcs come (e.g. `selector(...)`)\r\n                    //\r\n                    customFuncCall: function (name) {\r\n                        /* Ideally the table is to be moved out of here for faster perf.,\r\n                           but it's quite tricky since it relies on all these `parsers`\r\n                           and `expect` available only here */\r\n                        return {\r\n                            alpha: f(parsers.ieAlpha, true),\r\n                            boolean: f(condition),\r\n                            'if': f(condition)\r\n                        }[name.toLowerCase()];\r\n                        function f(parse, stop) {\r\n                            return {\r\n                                parse: parse,\r\n                                stop: stop // when true - stop after parse() and return its result,\r\n                                // otherwise continue for plain args\r\n                            };\r\n                        }\r\n                        function condition() {\r\n                            return [expect(parsers.condition, 'expected condition')];\r\n                        }\r\n                    },\r\n                    arguments: function (prevArgs) {\r\n                        var argsComma = prevArgs || [];\r\n                        var argsSemiColon = [];\r\n                        var isSemiColonSeparated;\r\n                        var value;\r\n                        parserInput.save();\r\n                        while (true) {\r\n                            if (prevArgs) {\r\n                                prevArgs = false;\r\n                            }\r\n                            else {\r\n                                value = parsers.detachedRuleset() || this.assignment() || parsers.expression();\r\n                                if (!value) {\r\n                                    break;\r\n                                }\r\n                                if (value.value && value.value.length == 1) {\r\n                                    value = value.value[0];\r\n                                }\r\n                                argsComma.push(value);\r\n                            }\r\n                            if (parserInput.$char(',')) {\r\n                                continue;\r\n                            }\r\n                            if (parserInput.$char(';') || isSemiColonSeparated) {\r\n                                isSemiColonSeparated = true;\r\n                                value = (argsComma.length < 1) ? argsComma[0]\r\n                                    : new tree.Value(argsComma);\r\n                                argsSemiColon.push(value);\r\n                                argsComma = [];\r\n                            }\r\n                        }\r\n                        parserInput.forget();\r\n                        return isSemiColonSeparated ? argsSemiColon : argsComma;\r\n                    },\r\n                    literal: function () {\r\n                        return this.dimension() ||\r\n                            this.color() ||\r\n                            this.quoted() ||\r\n                            this.unicodeDescriptor();\r\n                    },\r\n                    // Assignments are argument entities for calls.\r\n                    // They are present in ie filter properties as shown below.\r\n                    //\r\n                    //     filter: progid:DXImageTransform.Microsoft.Alpha( *opacity=50* )\r\n                    //\r\n                    assignment: function () {\r\n                        var key;\r\n                        var value;\r\n                        parserInput.save();\r\n                        key = parserInput.$re(/^\\w+(?=\\s?=)/i);\r\n                        if (!key) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                        if (!parserInput.$char('=')) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                        value = parsers.entity();\r\n                        if (value) {\r\n                            parserInput.forget();\r\n                            return new (tree.Assignment)(key, value);\r\n                        }\r\n                        else {\r\n                            parserInput.restore();\r\n                        }\r\n                    },\r\n                    //\r\n                    // Parse url() tokens\r\n                    //\r\n                    // We use a specific rule for urls, because they don't really behave like\r\n                    // standard function calls. The difference is that the argument doesn't have\r\n                    // to be enclosed within a string, so it can't be parsed as an Expression.\r\n                    //\r\n                    url: function () {\r\n                        var value;\r\n                        var index = parserInput.i;\r\n                        parserInput.autoCommentAbsorb = false;\r\n                        if (!parserInput.$str('url(')) {\r\n                            parserInput.autoCommentAbsorb = true;\r\n                            return;\r\n                        }\r\n                        value = this.quoted() || this.variable() || this.property() ||\r\n                            parserInput.$re(/^(?:(?:\\\\[()'\"])|[^()'\"])+/) || '';\r\n                        parserInput.autoCommentAbsorb = true;\r\n                        expectChar(')');\r\n                        return new (tree.URL)((value.value !== undefined ||\r\n                            value instanceof tree.Variable ||\r\n                            value instanceof tree.Property) ?\r\n                            value : new (tree.Anonymous)(value, index), index + currentIndex, fileInfo);\r\n                    },\r\n                    //\r\n                    // A Variable entity, such as `@fink`, in\r\n                    //\r\n                    //     width: @fink + 2px\r\n                    //\r\n                    // We use a different parser for variable definitions,\r\n                    // see `parsers.variable`.\r\n                    //\r\n                    variable: function () {\r\n                        var ch;\r\n                        var name;\r\n                        var index = parserInput.i;\r\n                        parserInput.save();\r\n                        if (parserInput.currentChar() === '@' && (name = parserInput.$re(/^@@?[\\w-]+/))) {\r\n                            ch = parserInput.currentChar();\r\n                            if (ch === '(' || ch === '[' && !parserInput.prevChar().match(/^\\s/)) {\r\n                                // this may be a VariableCall lookup\r\n                                var result = parsers.variableCall(name);\r\n                                if (result) {\r\n                                    parserInput.forget();\r\n                                    return result;\r\n                                }\r\n                            }\r\n                            parserInput.forget();\r\n                            return new (tree.Variable)(name, index + currentIndex, fileInfo);\r\n                        }\r\n                        parserInput.restore();\r\n                    },\r\n                    // A variable entity using the protective {} e.g. @{var}\r\n                    variableCurly: function () {\r\n                        var curly;\r\n                        var index = parserInput.i;\r\n                        if (parserInput.currentChar() === '@' && (curly = parserInput.$re(/^@\\{([\\w-]+)\\}/))) {\r\n                            return new (tree.Variable)(\"@\" + curly[1], index + currentIndex, fileInfo);\r\n                        }\r\n                    },\r\n                    //\r\n                    // A Property accessor, such as `$color`, in\r\n                    //\r\n                    //     background-color: $color\r\n                    //\r\n                    property: function () {\r\n                        var name;\r\n                        var index = parserInput.i;\r\n                        if (parserInput.currentChar() === '$' && (name = parserInput.$re(/^\\$[\\w-]+/))) {\r\n                            return new (tree.Property)(name, index + currentIndex, fileInfo);\r\n                        }\r\n                    },\r\n                    // A property entity useing the protective {} e.g. ${prop}\r\n                    propertyCurly: function () {\r\n                        var curly;\r\n                        var index = parserInput.i;\r\n                        if (parserInput.currentChar() === '$' && (curly = parserInput.$re(/^\\$\\{([\\w-]+)\\}/))) {\r\n                            return new (tree.Property)(\"$\" + curly[1], index + currentIndex, fileInfo);\r\n                        }\r\n                    },\r\n                    //\r\n                    // A Hexadecimal color\r\n                    //\r\n                    //     #4F3C2F\r\n                    //\r\n                    // `rgb` and `hsl` colors are parsed through the `entities.call` parser.\r\n                    //\r\n                    color: function () {\r\n                        var rgb;\r\n                        parserInput.save();\r\n                        if (parserInput.currentChar() === '#' && (rgb = parserInput.$re(/^#([A-Fa-f0-9]{8}|[A-Fa-f0-9]{6}|[A-Fa-f0-9]{3,4})([\\w.#[])?/))) {\r\n                            if (!rgb[2]) {\r\n                                parserInput.forget();\r\n                                return new (tree.Color)(rgb[1], undefined, rgb[0]);\r\n                            }\r\n                        }\r\n                        parserInput.restore();\r\n                    },\r\n                    colorKeyword: function () {\r\n                        parserInput.save();\r\n                        var autoCommentAbsorb = parserInput.autoCommentAbsorb;\r\n                        parserInput.autoCommentAbsorb = false;\r\n                        var k = parserInput.$re(/^[_A-Za-z-][_A-Za-z0-9-]+/);\r\n                        parserInput.autoCommentAbsorb = autoCommentAbsorb;\r\n                        if (!k) {\r\n                            parserInput.forget();\r\n                            return;\r\n                        }\r\n                        parserInput.restore();\r\n                        var color = tree.Color.fromKeyword(k);\r\n                        if (color) {\r\n                            parserInput.$str(k);\r\n                            return color;\r\n                        }\r\n                    },\r\n                    //\r\n                    // A Dimension, that is, a number and a unit\r\n                    //\r\n                    //     0.5em 95%\r\n                    //\r\n                    dimension: function () {\r\n                        if (parserInput.peekNotNumeric()) {\r\n                            return;\r\n                        }\r\n                        var value = parserInput.$re(/^([+-]?\\d*\\.?\\d+)(%|[a-z_]+)?/i);\r\n                        if (value) {\r\n                            return new (tree.Dimension)(value[1], value[2]);\r\n                        }\r\n                    },\r\n                    //\r\n                    // A unicode descriptor, as is used in unicode-range\r\n                    //\r\n                    // U+0??  or U+00A1-00A9\r\n                    //\r\n                    unicodeDescriptor: function () {\r\n                        var ud;\r\n                        ud = parserInput.$re(/^U\\+[0-9a-fA-F?]+(-[0-9a-fA-F?]+)?/);\r\n                        if (ud) {\r\n                            return new (tree.UnicodeDescriptor)(ud[0]);\r\n                        }\r\n                    },\r\n                    //\r\n                    // JavaScript code to be evaluated\r\n                    //\r\n                    //     `window.location.href`\r\n                    //\r\n                    javascript: function () {\r\n                        var js;\r\n                        var index = parserInput.i;\r\n                        parserInput.save();\r\n                        var escape = parserInput.$char('~');\r\n                        var jsQuote = parserInput.$char('`');\r\n                        if (!jsQuote) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                        js = parserInput.$re(/^[^`]*`/);\r\n                        if (js) {\r\n                            parserInput.forget();\r\n                            return new (tree.JavaScript)(js.substr(0, js.length - 1), Boolean(escape), index + currentIndex, fileInfo);\r\n                        }\r\n                        parserInput.restore('invalid javascript definition');\r\n                    }\r\n                },\r\n                //\r\n                // The variable part of a variable definition. Used in the `rule` parser\r\n                //\r\n                //     @fink:\r\n                //\r\n                variable: function () {\r\n                    var name;\r\n                    if (parserInput.currentChar() === '@' && (name = parserInput.$re(/^(@[\\w-]+)\\s*:/))) {\r\n                        return name[1];\r\n                    }\r\n                },\r\n                //\r\n                // Call a variable value to retrieve a detached ruleset\r\n                // or a value from a detached ruleset's rules.\r\n                //\r\n                //     @fink();\r\n                //     @fink;\r\n                //     color: @fink[@color];\r\n                //\r\n                variableCall: function (parsedName) {\r\n                    var lookups;\r\n                    var i = parserInput.i;\r\n                    var inValue = !!parsedName;\r\n                    var name = parsedName;\r\n                    parserInput.save();\r\n                    if (name || (parserInput.currentChar() === '@'\r\n                        && (name = parserInput.$re(/^(@[\\w-]+)(\\(\\s*\\))?/)))) {\r\n                        lookups = this.mixin.ruleLookups();\r\n                        if (!lookups && ((inValue && parserInput.$str('()') !== '()') || (name[2] !== '()'))) {\r\n                            parserInput.restore('Missing \\'[...]\\' lookup in variable call');\r\n                            return;\r\n                        }\r\n                        if (!inValue) {\r\n                            name = name[1];\r\n                        }\r\n                        var call = new tree.VariableCall(name, i, fileInfo);\r\n                        if (!inValue && parsers.end()) {\r\n                            parserInput.forget();\r\n                            return call;\r\n                        }\r\n                        else {\r\n                            parserInput.forget();\r\n                            return new tree.NamespaceValue(call, lookups, i, fileInfo);\r\n                        }\r\n                    }\r\n                    parserInput.restore();\r\n                },\r\n                //\r\n                // extend syntax - used to extend selectors\r\n                //\r\n                extend: function (isRule) {\r\n                    var elements;\r\n                    var e;\r\n                    var index = parserInput.i;\r\n                    var option;\r\n                    var extendList;\r\n                    var extend;\r\n                    if (!parserInput.$str(isRule ? '&:extend(' : ':extend(')) {\r\n                        return;\r\n                    }\r\n                    do {\r\n                        option = null;\r\n                        elements = null;\r\n                        while (!(option = parserInput.$re(/^(all)(?=\\s*(\\)|,))/))) {\r\n                            e = this.element();\r\n                            if (!e) {\r\n                                break;\r\n                            }\r\n                            if (elements) {\r\n                                elements.push(e);\r\n                            }\r\n                            else {\r\n                                elements = [e];\r\n                            }\r\n                        }\r\n                        option = option && option[1];\r\n                        if (!elements) {\r\n                            error('Missing target selector for :extend().');\r\n                        }\r\n                        extend = new (tree.Extend)(new (tree.Selector)(elements), option, index + currentIndex, fileInfo);\r\n                        if (extendList) {\r\n                            extendList.push(extend);\r\n                        }\r\n                        else {\r\n                            extendList = [extend];\r\n                        }\r\n                    } while (parserInput.$char(','));\r\n                    expect(/^\\)/);\r\n                    if (isRule) {\r\n                        expect(/^;/);\r\n                    }\r\n                    return extendList;\r\n                },\r\n                //\r\n                // extendRule - used in a rule to extend all the parent selectors\r\n                //\r\n                extendRule: function () {\r\n                    return this.extend(true);\r\n                },\r\n                //\r\n                // Mixins\r\n                //\r\n                mixin: {\r\n                    //\r\n                    // A Mixin call, with an optional argument list\r\n                    //\r\n                    //     #mixins > .square(#fff);\r\n                    //     #mixins.square(#fff);\r\n                    //     .rounded(4px, black);\r\n                    //     .button;\r\n                    //\r\n                    // We can lookup / return a value using the lookup syntax:\r\n                    //\r\n                    //     color: #mixin.square(#fff)[@color];\r\n                    //\r\n                    // The `while` loop is there because mixins can be\r\n                    // namespaced, but we only support the child and descendant\r\n                    // selector for now.\r\n                    //\r\n                    call: function (inValue, getLookup) {\r\n                        var s = parserInput.currentChar();\r\n                        var important = false;\r\n                        var lookups;\r\n                        var index = parserInput.i;\r\n                        var elements;\r\n                        var args;\r\n                        var hasParens;\r\n                        if (s !== '.' && s !== '#') {\r\n                            return;\r\n                        }\r\n                        parserInput.save(); // stop us absorbing part of an invalid selector\r\n                        elements = this.elements();\r\n                        if (elements) {\r\n                            if (parserInput.$char('(')) {\r\n                                args = this.args(true).args;\r\n                                expectChar(')');\r\n                                hasParens = true;\r\n                            }\r\n                            if (getLookup !== false) {\r\n                                lookups = this.ruleLookups();\r\n                            }\r\n                            if (getLookup === true && !lookups) {\r\n                                parserInput.restore();\r\n                                return;\r\n                            }\r\n                            if (inValue && !lookups && !hasParens) {\r\n                                // This isn't a valid in-value mixin call\r\n                                parserInput.restore();\r\n                                return;\r\n                            }\r\n                            if (!inValue && parsers.important()) {\r\n                                important = true;\r\n                            }\r\n                            if (inValue || parsers.end()) {\r\n                                parserInput.forget();\r\n                                var mixin = new (tree.mixin.Call)(elements, args, index + currentIndex, fileInfo, !lookups && important);\r\n                                if (lookups) {\r\n                                    return new tree.NamespaceValue(mixin, lookups);\r\n                                }\r\n                                else {\r\n                                    return mixin;\r\n                                }\r\n                            }\r\n                        }\r\n                        parserInput.restore();\r\n                    },\r\n                    /**\r\n                     * Matching elements for mixins\r\n                     * (Start with . or # and can have > )\r\n                     */\r\n                    elements: function () {\r\n                        var elements;\r\n                        var e;\r\n                        var c;\r\n                        var elem;\r\n                        var elemIndex;\r\n                        var re = /^[#.](?:[\\w-]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+/;\r\n                        while (true) {\r\n                            elemIndex = parserInput.i;\r\n                            e = parserInput.$re(re);\r\n                            if (!e) {\r\n                                break;\r\n                            }\r\n                            elem = new (tree.Element)(c, e, false, elemIndex + currentIndex, fileInfo);\r\n                            if (elements) {\r\n                                elements.push(elem);\r\n                            }\r\n                            else {\r\n                                elements = [elem];\r\n                            }\r\n                            c = parserInput.$char('>');\r\n                        }\r\n                        return elements;\r\n                    },\r\n                    args: function (isCall) {\r\n                        var entities = parsers.entities;\r\n                        var returner = { args: null, variadic: false };\r\n                        var expressions = [];\r\n                        var argsSemiColon = [];\r\n                        var argsComma = [];\r\n                        var isSemiColonSeparated;\r\n                        var expressionContainsNamed;\r\n                        var name;\r\n                        var nameLoop;\r\n                        var value;\r\n                        var arg;\r\n                        var expand;\r\n                        var hasSep = true;\r\n                        parserInput.save();\r\n                        while (true) {\r\n                            if (isCall) {\r\n                                arg = parsers.detachedRuleset() || parsers.expression();\r\n                            }\r\n                            else {\r\n                                parserInput.commentStore.length = 0;\r\n                                if (parserInput.$str('...')) {\r\n                                    returner.variadic = true;\r\n                                    if (parserInput.$char(';') && !isSemiColonSeparated) {\r\n                                        isSemiColonSeparated = true;\r\n                                    }\r\n                                    (isSemiColonSeparated ? argsSemiColon : argsComma)\r\n                                        .push({ variadic: true });\r\n                                    break;\r\n                                }\r\n                                arg = entities.variable() || entities.property() || entities.literal() || entities.keyword() || this.call(true);\r\n                            }\r\n                            if (!arg || !hasSep) {\r\n                                break;\r\n                            }\r\n                            nameLoop = null;\r\n                            if (arg.throwAwayComments) {\r\n                                arg.throwAwayComments();\r\n                            }\r\n                            value = arg;\r\n                            var val = null;\r\n                            if (isCall) {\r\n                                // Variable\r\n                                if (arg.value && arg.value.length == 1) {\r\n                                    val = arg.value[0];\r\n                                }\r\n                            }\r\n                            else {\r\n                                val = arg;\r\n                            }\r\n                            if (val && (val instanceof tree.Variable || val instanceof tree.Property)) {\r\n                                if (parserInput.$char(':')) {\r\n                                    if (expressions.length > 0) {\r\n                                        if (isSemiColonSeparated) {\r\n                                            error('Cannot mix ; and , as delimiter types');\r\n                                        }\r\n                                        expressionContainsNamed = true;\r\n                                    }\r\n                                    value = parsers.detachedRuleset() || parsers.expression();\r\n                                    if (!value) {\r\n                                        if (isCall) {\r\n                                            error('could not understand value for named argument');\r\n                                        }\r\n                                        else {\r\n                                            parserInput.restore();\r\n                                            returner.args = [];\r\n                                            return returner;\r\n                                        }\r\n                                    }\r\n                                    nameLoop = (name = val.name);\r\n                                }\r\n                                else if (parserInput.$str('...')) {\r\n                                    if (!isCall) {\r\n                                        returner.variadic = true;\r\n                                        if (parserInput.$char(';') && !isSemiColonSeparated) {\r\n                                            isSemiColonSeparated = true;\r\n                                        }\r\n                                        (isSemiColonSeparated ? argsSemiColon : argsComma)\r\n                                            .push({ name: arg.name, variadic: true });\r\n                                        break;\r\n                                    }\r\n                                    else {\r\n                                        expand = true;\r\n                                    }\r\n                                }\r\n                                else if (!isCall) {\r\n                                    name = nameLoop = val.name;\r\n                                    value = null;\r\n                                }\r\n                            }\r\n                            if (value) {\r\n                                expressions.push(value);\r\n                            }\r\n                            argsComma.push({ name: nameLoop, value: value, expand: expand });\r\n                            if (parserInput.$char(',')) {\r\n                                hasSep = true;\r\n                                continue;\r\n                            }\r\n                            hasSep = parserInput.$char(';') === ';';\r\n                            if (hasSep || isSemiColonSeparated) {\r\n                                if (expressionContainsNamed) {\r\n                                    error('Cannot mix ; and , as delimiter types');\r\n                                }\r\n                                isSemiColonSeparated = true;\r\n                                if (expressions.length > 1) {\r\n                                    value = new (tree.Value)(expressions);\r\n                                }\r\n                                argsSemiColon.push({ name: name, value: value, expand: expand });\r\n                                name = null;\r\n                                expressions = [];\r\n                                expressionContainsNamed = false;\r\n                            }\r\n                        }\r\n                        parserInput.forget();\r\n                        returner.args = isSemiColonSeparated ? argsSemiColon : argsComma;\r\n                        return returner;\r\n                    },\r\n                    //\r\n                    // A Mixin definition, with a list of parameters\r\n                    //\r\n                    //     .rounded (@radius: 2px, @color) {\r\n                    //        ...\r\n                    //     }\r\n                    //\r\n                    // Until we have a finer grained state-machine, we have to\r\n                    // do a look-ahead, to make sure we don't have a mixin call.\r\n                    // See the `rule` function for more information.\r\n                    //\r\n                    // We start by matching `.rounded (`, and then proceed on to\r\n                    // the argument list, which has optional default values.\r\n                    // We store the parameters in `params`, with a `value` key,\r\n                    // if there is a value, such as in the case of `@radius`.\r\n                    //\r\n                    // Once we've got our params list, and a closing `)`, we parse\r\n                    // the `{...}` block.\r\n                    //\r\n                    definition: function () {\r\n                        var name;\r\n                        var params = [];\r\n                        var match;\r\n                        var ruleset;\r\n                        var cond;\r\n                        var variadic = false;\r\n                        if ((parserInput.currentChar() !== '.' && parserInput.currentChar() !== '#') ||\r\n                            parserInput.peek(/^[^{]*\\}/)) {\r\n                            return;\r\n                        }\r\n                        parserInput.save();\r\n                        match = parserInput.$re(/^([#.](?:[\\w-]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+)\\s*\\(/);\r\n                        if (match) {\r\n                            name = match[1];\r\n                            var argInfo = this.args(false);\r\n                            params = argInfo.args;\r\n                            variadic = argInfo.variadic;\r\n                            // .mixincall(\"@{a}\");\r\n                            // looks a bit like a mixin definition..\r\n                            // also\r\n                            // .mixincall(@a: {rule: set;});\r\n                            // so we have to be nice and restore\r\n                            if (!parserInput.$char(')')) {\r\n                                parserInput.restore('Missing closing \\')\\'');\r\n                                return;\r\n                            }\r\n                            parserInput.commentStore.length = 0;\r\n                            if (parserInput.$str('when')) { // Guard\r\n                                cond = expect(parsers.conditions, 'expected condition');\r\n                            }\r\n                            ruleset = parsers.block();\r\n                            if (ruleset) {\r\n                                parserInput.forget();\r\n                                return new (tree.mixin.Definition)(name, params, ruleset, cond, variadic);\r\n                            }\r\n                            else {\r\n                                parserInput.restore();\r\n                            }\r\n                        }\r\n                        else {\r\n                            parserInput.restore();\r\n                        }\r\n                    },\r\n                    ruleLookups: function () {\r\n                        var rule;\r\n                        var lookups = [];\r\n                        if (parserInput.currentChar() !== '[') {\r\n                            return;\r\n                        }\r\n                        while (true) {\r\n                            parserInput.save();\r\n                            rule = this.lookupValue();\r\n                            if (!rule && rule !== '') {\r\n                                parserInput.restore();\r\n                                break;\r\n                            }\r\n                            lookups.push(rule);\r\n                            parserInput.forget();\r\n                        }\r\n                        if (lookups.length > 0) {\r\n                            return lookups;\r\n                        }\r\n                    },\r\n                    lookupValue: function () {\r\n                        parserInput.save();\r\n                        if (!parserInput.$char('[')) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                        var name = parserInput.$re(/^(?:[@$]{0,2})[_a-zA-Z0-9-]*/);\r\n                        if (!parserInput.$char(']')) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                        if (name || name === '') {\r\n                            parserInput.forget();\r\n                            return name;\r\n                        }\r\n                        parserInput.restore();\r\n                    }\r\n                },\r\n                //\r\n                // Entities are the smallest recognized token,\r\n                // and can be found inside a rule's value.\r\n                //\r\n                entity: function () {\r\n                    var entities = this.entities;\r\n                    return this.comment() || entities.literal() || entities.variable() || entities.url() ||\r\n                        entities.property() || entities.call() || entities.keyword() || this.mixin.call(true) ||\r\n                        entities.javascript();\r\n                },\r\n                //\r\n                // A Declaration terminator. Note that we use `peek()` to check for '}',\r\n                // because the `block` rule will be expecting it, but we still need to make sure\r\n                // it's there, if ';' was omitted.\r\n                //\r\n                end: function () {\r\n                    return parserInput.$char(';') || parserInput.peek('}');\r\n                },\r\n                //\r\n                // IE's alpha function\r\n                //\r\n                //     alpha(opacity=88)\r\n                //\r\n                ieAlpha: function () {\r\n                    var value;\r\n                    // http://jsperf.com/case-insensitive-regex-vs-strtolower-then-regex/18\r\n                    if (!parserInput.$re(/^opacity=/i)) {\r\n                        return;\r\n                    }\r\n                    value = parserInput.$re(/^\\d+/);\r\n                    if (!value) {\r\n                        value = expect(parsers.entities.variable, 'Could not parse alpha');\r\n                        value = \"@{\" + value.name.slice(1) + \"}\";\r\n                    }\r\n                    expectChar(')');\r\n                    return new tree.Quoted('', \"alpha(opacity=\" + value + \")\");\r\n                },\r\n                //\r\n                // A Selector Element\r\n                //\r\n                //     div\r\n                //     + h1\r\n                //     #socks\r\n                //     input[type=\"text\"]\r\n                //\r\n                // Elements are the building blocks for Selectors,\r\n                // they are made out of a `Combinator` (see combinator rule),\r\n                // and an element name, such as a tag a class, or `*`.\r\n                //\r\n                element: function () {\r\n                    var e;\r\n                    var c;\r\n                    var v;\r\n                    var index = parserInput.i;\r\n                    c = this.combinator();\r\n                    e = parserInput.$re(/^(?:\\d+\\.\\d+|\\d+)%/) ||\r\n                        // eslint-disable-next-line no-control-regex\r\n                        parserInput.$re(/^(?:[.#]?|:*)(?:[\\w-]|[^\\x00-\\x9f]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+/) ||\r\n                        parserInput.$char('*') || parserInput.$char('&') || this.attribute() ||\r\n                        parserInput.$re(/^\\([^&()@]+\\)/) || parserInput.$re(/^[.#:](?=@)/) ||\r\n                        this.entities.variableCurly();\r\n                    if (!e) {\r\n                        parserInput.save();\r\n                        if (parserInput.$char('(')) {\r\n                            if ((v = this.selector(false)) && parserInput.$char(')')) {\r\n                                e = new (tree.Paren)(v);\r\n                                parserInput.forget();\r\n                            }\r\n                            else {\r\n                                parserInput.restore('Missing closing \\')\\'');\r\n                            }\r\n                        }\r\n                        else {\r\n                            parserInput.forget();\r\n                        }\r\n                    }\r\n                    if (e) {\r\n                        return new (tree.Element)(c, e, e instanceof tree.Variable, index + currentIndex, fileInfo);\r\n                    }\r\n                },\r\n                //\r\n                // Combinators combine elements together, in a Selector.\r\n                //\r\n                // Because our parser isn't white-space sensitive, special care\r\n                // has to be taken, when parsing the descendant combinator, ` `,\r\n                // as it's an empty space. We have to check the previous character\r\n                // in the input, to see if it's a ` ` character. More info on how\r\n                // we deal with this in *combinator.js*.\r\n                //\r\n                combinator: function () {\r\n                    var c = parserInput.currentChar();\r\n                    if (c === '/') {\r\n                        parserInput.save();\r\n                        var slashedCombinator = parserInput.$re(/^\\/[a-z]+\\//i);\r\n                        if (slashedCombinator) {\r\n                            parserInput.forget();\r\n                            return new (tree.Combinator)(slashedCombinator);\r\n                        }\r\n                        parserInput.restore();\r\n                    }\r\n                    if (c === '>' || c === '+' || c === '~' || c === '|' || c === '^') {\r\n                        parserInput.i++;\r\n                        if (c === '^' && parserInput.currentChar() === '^') {\r\n                            c = '^^';\r\n                            parserInput.i++;\r\n                        }\r\n                        while (parserInput.isWhitespace()) {\r\n                            parserInput.i++;\r\n                        }\r\n                        return new (tree.Combinator)(c);\r\n                    }\r\n                    else if (parserInput.isWhitespace(-1)) {\r\n                        return new (tree.Combinator)(' ');\r\n                    }\r\n                    else {\r\n                        return new (tree.Combinator)(null);\r\n                    }\r\n                },\r\n                //\r\n                // A CSS Selector\r\n                // with less extensions e.g. the ability to extend and guard\r\n                //\r\n                //     .class > div + h1\r\n                //     li a:hover\r\n                //\r\n                // Selectors are made out of one or more Elements, see above.\r\n                //\r\n                selector: function (isLess) {\r\n                    var index = parserInput.i;\r\n                    var elements;\r\n                    var extendList;\r\n                    var c;\r\n                    var e;\r\n                    var allExtends;\r\n                    var when;\r\n                    var condition;\r\n                    isLess = isLess !== false;\r\n                    while ((isLess && (extendList = this.extend())) || (isLess && (when = parserInput.$str('when'))) || (e = this.element())) {\r\n                        if (when) {\r\n                            condition = expect(this.conditions, 'expected condition');\r\n                        }\r\n                        else if (condition) {\r\n                            error('CSS guard can only be used at the end of selector');\r\n                        }\r\n                        else if (extendList) {\r\n                            if (allExtends) {\r\n                                allExtends = allExtends.concat(extendList);\r\n                            }\r\n                            else {\r\n                                allExtends = extendList;\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (allExtends) {\r\n                                error('Extend can only be used at the end of selector');\r\n                            }\r\n                            c = parserInput.currentChar();\r\n                            if (elements) {\r\n                                elements.push(e);\r\n                            }\r\n                            else {\r\n                                elements = [e];\r\n                            }\r\n                            e = null;\r\n                        }\r\n                        if (c === '{' || c === '}' || c === ';' || c === ',' || c === ')') {\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (elements) {\r\n                        return new (tree.Selector)(elements, allExtends, condition, index + currentIndex, fileInfo);\r\n                    }\r\n                    if (allExtends) {\r\n                        error('Extend must be used to extend a selector, it cannot be used on its own');\r\n                    }\r\n                },\r\n                selectors: function () {\r\n                    var s;\r\n                    var selectors;\r\n                    while (true) {\r\n                        s = this.selector();\r\n                        if (!s) {\r\n                            break;\r\n                        }\r\n                        if (selectors) {\r\n                            selectors.push(s);\r\n                        }\r\n                        else {\r\n                            selectors = [s];\r\n                        }\r\n                        parserInput.commentStore.length = 0;\r\n                        if (s.condition && selectors.length > 1) {\r\n                            error('Guards are only currently allowed on a single selector.');\r\n                        }\r\n                        if (!parserInput.$char(',')) {\r\n                            break;\r\n                        }\r\n                        if (s.condition) {\r\n                            error('Guards are only currently allowed on a single selector.');\r\n                        }\r\n                        parserInput.commentStore.length = 0;\r\n                    }\r\n                    return selectors;\r\n                },\r\n                attribute: function () {\r\n                    if (!parserInput.$char('[')) {\r\n                        return;\r\n                    }\r\n                    var entities = this.entities;\r\n                    var key;\r\n                    var val;\r\n                    var op;\r\n                    //\r\n                    // case-insensitive flag\r\n                    // e.g. [attr operator value i]\r\n                    //\r\n                    var cif;\r\n                    if (!(key = entities.variableCurly())) {\r\n                        key = expect(/^(?:[_A-Za-z0-9-*]*\\|)?(?:[_A-Za-z0-9-]|\\\\.)+/);\r\n                    }\r\n                    op = parserInput.$re(/^[|~*$^]?=/);\r\n                    if (op) {\r\n                        val = entities.quoted() || parserInput.$re(/^[0-9]+%/) || parserInput.$re(/^[\\w-]+/) || entities.variableCurly();\r\n                        if (val) {\r\n                            cif = parserInput.$re(/^[iIsS]/);\r\n                        }\r\n                    }\r\n                    expectChar(']');\r\n                    return new (tree.Attribute)(key, op, val, cif);\r\n                },\r\n                //\r\n                // The `block` rule is used by `ruleset` and `mixin.definition`.\r\n                // It's a wrapper around the `primary` rule, with added `{}`.\r\n                //\r\n                block: function () {\r\n                    var content;\r\n                    if (parserInput.$char('{') && (content = this.primary()) && parserInput.$char('}')) {\r\n                        return content;\r\n                    }\r\n                },\r\n                blockRuleset: function () {\r\n                    var block = this.block();\r\n                    if (block) {\r\n                        block = new tree.Ruleset(null, block);\r\n                    }\r\n                    return block;\r\n                },\r\n                detachedRuleset: function () {\r\n                    var argInfo;\r\n                    var params;\r\n                    var variadic;\r\n                    parserInput.save();\r\n                    if (parserInput.$re(/^[.#]\\(/)) {\r\n                        /**\r\n                         * DR args currently only implemented for each() function, and not\r\n                         * yet settable as `@dr: #(@arg) {}`\r\n                         * This should be done when DRs are merged with mixins.\r\n                         * See: https://github.com/less/less-meta/issues/16\r\n                         */\r\n                        argInfo = this.mixin.args(false);\r\n                        params = argInfo.args;\r\n                        variadic = argInfo.variadic;\r\n                        if (!parserInput.$char(')')) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                    }\r\n                    var blockRuleset = this.blockRuleset();\r\n                    if (blockRuleset) {\r\n                        parserInput.forget();\r\n                        if (params) {\r\n                            return new tree.mixin.Definition(null, params, blockRuleset, null, variadic);\r\n                        }\r\n                        return new tree.DetachedRuleset(blockRuleset);\r\n                    }\r\n                    parserInput.restore();\r\n                },\r\n                //\r\n                // div, .class, body > p {...}\r\n                //\r\n                ruleset: function () {\r\n                    var selectors;\r\n                    var rules;\r\n                    var debugInfo;\r\n                    parserInput.save();\r\n                    if (context.dumpLineNumbers) {\r\n                        debugInfo = getDebugInfo(parserInput.i);\r\n                    }\r\n                    selectors = this.selectors();\r\n                    if (selectors && (rules = this.block())) {\r\n                        parserInput.forget();\r\n                        var ruleset = new (tree.Ruleset)(selectors, rules, context.strictImports);\r\n                        if (context.dumpLineNumbers) {\r\n                            ruleset.debugInfo = debugInfo;\r\n                        }\r\n                        return ruleset;\r\n                    }\r\n                    else {\r\n                        parserInput.restore();\r\n                    }\r\n                },\r\n                declaration: function () {\r\n                    var name;\r\n                    var value;\r\n                    var index = parserInput.i;\r\n                    var hasDR;\r\n                    var c = parserInput.currentChar();\r\n                    var important;\r\n                    var merge;\r\n                    var isVariable;\r\n                    if (c === '.' || c === '#' || c === '&' || c === ':') {\r\n                        return;\r\n                    }\r\n                    parserInput.save();\r\n                    name = this.variable() || this.ruleProperty();\r\n                    if (name) {\r\n                        isVariable = typeof name === 'string';\r\n                        if (isVariable) {\r\n                            value = this.detachedRuleset();\r\n                            if (value) {\r\n                                hasDR = true;\r\n                            }\r\n                        }\r\n                        parserInput.commentStore.length = 0;\r\n                        if (!value) {\r\n                            // a name returned by this.ruleProperty() is always an array of the form:\r\n                            // [string-1, ..., string-n, \"\"] or [string-1, ..., string-n, \"+\"]\r\n                            // where each item is a tree.Keyword or tree.Variable\r\n                            merge = !isVariable && name.length > 1 && name.pop().value;\r\n                            // Custom property values get permissive parsing\r\n                            if (name[0].value && name[0].value.slice(0, 2) === '--') {\r\n                                value = this.permissiveValue(/[;}]/);\r\n                            }\r\n                            // Try to store values as anonymous\r\n                            // If we need the value later we'll re-parse it in ruleset.parseValue\r\n                            else {\r\n                                value = this.anonymousValue();\r\n                            }\r\n                            if (value) {\r\n                                parserInput.forget();\r\n                                // anonymous values absorb the end ';' which is required for them to work\r\n                                return new (tree.Declaration)(name, value, false, merge, index + currentIndex, fileInfo);\r\n                            }\r\n                            if (!value) {\r\n                                value = this.value();\r\n                            }\r\n                            if (value) {\r\n                                important = this.important();\r\n                            }\r\n                            else if (isVariable) {\r\n                                // As a last resort, try permissiveValue\r\n                                value = this.permissiveValue();\r\n                            }\r\n                        }\r\n                        if (value && (this.end() || hasDR)) {\r\n                            parserInput.forget();\r\n                            return new (tree.Declaration)(name, value, important, merge, index + currentIndex, fileInfo);\r\n                        }\r\n                        else {\r\n                            parserInput.restore();\r\n                        }\r\n                    }\r\n                    else {\r\n                        parserInput.restore();\r\n                    }\r\n                },\r\n                anonymousValue: function () {\r\n                    var index = parserInput.i;\r\n                    var match = parserInput.$re(/^([^.#@$+/'\"*`(;{}-]*);/);\r\n                    if (match) {\r\n                        return new (tree.Anonymous)(match[1], index + currentIndex);\r\n                    }\r\n                },\r\n                /**\r\n                 * Used for custom properties, at-rules, and variables (as fallback)\r\n                 * Parses almost anything inside of {} [] () \"\" blocks\r\n                 * until it reaches outer-most tokens.\r\n                 *\r\n                 * First, it will try to parse comments and entities to reach\r\n                 * the end. This is mostly like the Expression parser except no\r\n                 * math is allowed.\r\n                 */\r\n                permissiveValue: function (untilTokens) {\r\n                    var i;\r\n                    var e;\r\n                    var done;\r\n                    var value;\r\n                    var tok = untilTokens || ';';\r\n                    var index = parserInput.i;\r\n                    var result = [];\r\n                    function testCurrentChar() {\r\n                        var char = parserInput.currentChar();\r\n                        if (typeof tok === 'string') {\r\n                            return char === tok;\r\n                        }\r\n                        else {\r\n                            return tok.test(char);\r\n                        }\r\n                    }\r\n                    if (testCurrentChar()) {\r\n                        return;\r\n                    }\r\n                    value = [];\r\n                    do {\r\n                        e = this.comment();\r\n                        if (e) {\r\n                            value.push(e);\r\n                            continue;\r\n                        }\r\n                        e = this.entity();\r\n                        if (e) {\r\n                            value.push(e);\r\n                        }\r\n                    } while (e);\r\n                    done = testCurrentChar();\r\n                    if (value.length > 0) {\r\n                        value = new (tree.Expression)(value);\r\n                        if (done) {\r\n                            return value;\r\n                        }\r\n                        else {\r\n                            result.push(value);\r\n                        }\r\n                        // Preserve space before $parseUntil as it will not\r\n                        if (parserInput.prevChar() === ' ') {\r\n                            result.push(new tree.Anonymous(' ', index));\r\n                        }\r\n                    }\r\n                    parserInput.save();\r\n                    value = parserInput.$parseUntil(tok);\r\n                    if (value) {\r\n                        if (typeof value === 'string') {\r\n                            error(\"Expected '\" + value + \"'\", 'Parse');\r\n                        }\r\n                        if (value.length === 1 && value[0] === ' ') {\r\n                            parserInput.forget();\r\n                            return new tree.Anonymous('', index);\r\n                        }\r\n                        var item = void 0;\r\n                        for (i = 0; i < value.length; i++) {\r\n                            item = value[i];\r\n                            if (Array.isArray(item)) {\r\n                                // Treat actual quotes as normal quoted values\r\n                                result.push(new tree.Quoted(item[0], item[1], true, index, fileInfo));\r\n                            }\r\n                            else {\r\n                                if (i === value.length - 1) {\r\n                                    item = item.trim();\r\n                                }\r\n                                // Treat like quoted values, but replace vars like unquoted expressions\r\n                                var quote = new tree.Quoted('\\'', item, true, index, fileInfo);\r\n                                quote.variableRegex = /@([\\w-]+)/g;\r\n                                quote.propRegex = /\\$([\\w-]+)/g;\r\n                                result.push(quote);\r\n                            }\r\n                        }\r\n                        parserInput.forget();\r\n                        return new tree.Expression(result, true);\r\n                    }\r\n                    parserInput.restore();\r\n                },\r\n                //\r\n                // An @import atrule\r\n                //\r\n                //     @import \"lib\";\r\n                //\r\n                // Depending on our environment, importing is done differently:\r\n                // In the browser, it's an XHR request, in Node, it would be a\r\n                // file-system operation. The function used for importing is\r\n                // stored in `import`, which we pass to the Import constructor.\r\n                //\r\n                'import': function () {\r\n                    var path;\r\n                    var features;\r\n                    var index = parserInput.i;\r\n                    var dir = parserInput.$re(/^@import\\s+/);\r\n                    if (dir) {\r\n                        var options = (dir ? this.importOptions() : null) || {};\r\n                        if ((path = this.entities.quoted() || this.entities.url())) {\r\n                            features = this.mediaFeatures({});\r\n                            if (!parserInput.$char(';')) {\r\n                                parserInput.i = index;\r\n                                error('missing semi-colon or unrecognised media features on import');\r\n                            }\r\n                            features = features && new (tree.Value)(features);\r\n                            return new (tree.Import)(path, features, options, index + currentIndex, fileInfo);\r\n                        }\r\n                        else {\r\n                            parserInput.i = index;\r\n                            error('malformed import statement');\r\n                        }\r\n                    }\r\n                },\r\n                importOptions: function () {\r\n                    var o;\r\n                    var options = {};\r\n                    var optionName;\r\n                    var value;\r\n                    // list of options, surrounded by parens\r\n                    if (!parserInput.$char('(')) {\r\n                        return null;\r\n                    }\r\n                    do {\r\n                        o = this.importOption();\r\n                        if (o) {\r\n                            optionName = o;\r\n                            value = true;\r\n                            switch (optionName) {\r\n                                case 'css':\r\n                                    optionName = 'less';\r\n                                    value = false;\r\n                                    break;\r\n                                case 'once':\r\n                                    optionName = 'multiple';\r\n                                    value = false;\r\n                                    break;\r\n                            }\r\n                            options[optionName] = value;\r\n                            if (!parserInput.$char(',')) {\r\n                                break;\r\n                            }\r\n                        }\r\n                    } while (o);\r\n                    expectChar(')');\r\n                    return options;\r\n                },\r\n                importOption: function () {\r\n                    var opt = parserInput.$re(/^(less|css|multiple|once|inline|reference|optional)/);\r\n                    if (opt) {\r\n                        return opt[1];\r\n                    }\r\n                },\r\n                mediaFeature: function (syntaxOptions) {\r\n                    var entities = this.entities;\r\n                    var nodes = [];\r\n                    var e;\r\n                    var p;\r\n                    var rangeP;\r\n                    parserInput.save();\r\n                    do {\r\n                        e = entities.keyword() || entities.variable() || entities.mixinLookup();\r\n                        if (e) {\r\n                            nodes.push(e);\r\n                        }\r\n                        else if (parserInput.$char('(')) {\r\n                            p = this.property();\r\n                            parserInput.save();\r\n                            if (!p && syntaxOptions.queryInParens && parserInput.$re(/^[0-9a-z-]*\\s*([<>]=|<=|>=|[<>]|=)/)) {\r\n                                parserInput.restore();\r\n                                p = this.condition();\r\n                                parserInput.save();\r\n                                rangeP = this.atomicCondition(null, p.rvalue);\r\n                                if (!rangeP) {\r\n                                    parserInput.restore();\r\n                                }\r\n                            }\r\n                            else {\r\n                                parserInput.restore();\r\n                                e = this.value();\r\n                            }\r\n                            if (parserInput.$char(')')) {\r\n                                if (p && !e) {\r\n                                    nodes.push(new (tree.Paren)(new (tree.QueryInParens)(p.op, p.lvalue, p.rvalue, rangeP ? rangeP.op : null, rangeP ? rangeP.rvalue : null, p._index)));\r\n                                    e = p;\r\n                                }\r\n                                else if (p && e) {\r\n                                    nodes.push(new (tree.Paren)(new (tree.Declaration)(p, e, null, null, parserInput.i + currentIndex, fileInfo, true)));\r\n                                }\r\n                                else if (e) {\r\n                                    nodes.push(new (tree.Paren)(e));\r\n                                }\r\n                                else {\r\n                                    error('badly formed media feature definition');\r\n                                }\r\n                            }\r\n                            else {\r\n                                error('Missing closing \\')\\'', 'Parse');\r\n                            }\r\n                        }\r\n                    } while (e);\r\n                    parserInput.forget();\r\n                    if (nodes.length > 0) {\r\n                        return new (tree.Expression)(nodes);\r\n                    }\r\n                },\r\n                mediaFeatures: function (syntaxOptions) {\r\n                    var entities = this.entities;\r\n                    var features = [];\r\n                    var e;\r\n                    do {\r\n                        e = this.mediaFeature(syntaxOptions);\r\n                        if (e) {\r\n                            features.push(e);\r\n                            if (!parserInput.$char(',')) {\r\n                                break;\r\n                            }\r\n                        }\r\n                        else {\r\n                            e = entities.variable() || entities.mixinLookup();\r\n                            if (e) {\r\n                                features.push(e);\r\n                                if (!parserInput.$char(',')) {\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                    } while (e);\r\n                    return features.length > 0 ? features : null;\r\n                },\r\n                prepareAndGetNestableAtRule: function (treeType, index, debugInfo, syntaxOptions) {\r\n                    var features = this.mediaFeatures(syntaxOptions);\r\n                    var rules = this.block();\r\n                    if (!rules) {\r\n                        error('media definitions require block statements after any features');\r\n                    }\r\n                    parserInput.forget();\r\n                    var atRule = new (treeType)(rules, features, index + currentIndex, fileInfo);\r\n                    if (context.dumpLineNumbers) {\r\n                        atRule.debugInfo = debugInfo;\r\n                    }\r\n                    return atRule;\r\n                },\r\n                nestableAtRule: function () {\r\n                    var debugInfo;\r\n                    var index = parserInput.i;\r\n                    if (context.dumpLineNumbers) {\r\n                        debugInfo = getDebugInfo(index);\r\n                    }\r\n                    parserInput.save();\r\n                    if (parserInput.$peekChar('@')) {\r\n                        if (parserInput.$str('@media')) {\r\n                            return this.prepareAndGetNestableAtRule(tree.Media, index, debugInfo, MediaSyntaxOptions);\r\n                        }\r\n                        if (parserInput.$str('@container')) {\r\n                            return this.prepareAndGetNestableAtRule(tree.Container, index, debugInfo, ContainerSyntaxOptions);\r\n                        }\r\n                    }\r\n                    parserInput.restore();\r\n                },\r\n                //\r\n                // A @plugin directive, used to import plugins dynamically.\r\n                //\r\n                //     @plugin (args) \"lib\";\r\n                //\r\n                plugin: function () {\r\n                    var path;\r\n                    var args;\r\n                    var options;\r\n                    var index = parserInput.i;\r\n                    var dir = parserInput.$re(/^@plugin\\s+/);\r\n                    if (dir) {\r\n                        args = this.pluginArgs();\r\n                        if (args) {\r\n                            options = {\r\n                                pluginArgs: args,\r\n                                isPlugin: true\r\n                            };\r\n                        }\r\n                        else {\r\n                            options = { isPlugin: true };\r\n                        }\r\n                        if ((path = this.entities.quoted() || this.entities.url())) {\r\n                            if (!parserInput.$char(';')) {\r\n                                parserInput.i = index;\r\n                                error('missing semi-colon on @plugin');\r\n                            }\r\n                            return new (tree.Import)(path, null, options, index + currentIndex, fileInfo);\r\n                        }\r\n                        else {\r\n                            parserInput.i = index;\r\n                            error('malformed @plugin statement');\r\n                        }\r\n                    }\r\n                },\r\n                pluginArgs: function () {\r\n                    // list of options, surrounded by parens\r\n                    parserInput.save();\r\n                    if (!parserInput.$char('(')) {\r\n                        parserInput.restore();\r\n                        return null;\r\n                    }\r\n                    var args = parserInput.$re(/^\\s*([^);]+)\\)\\s*/);\r\n                    if (args[1]) {\r\n                        parserInput.forget();\r\n                        return args[1].trim();\r\n                    }\r\n                    else {\r\n                        parserInput.restore();\r\n                        return null;\r\n                    }\r\n                },\r\n                //\r\n                // A CSS AtRule\r\n                //\r\n                //     @charset \"utf-8\";\r\n                //\r\n                atrule: function () {\r\n                    var index = parserInput.i;\r\n                    var name;\r\n                    var value;\r\n                    var rules;\r\n                    var nonVendorSpecificName;\r\n                    var hasIdentifier;\r\n                    var hasExpression;\r\n                    var hasUnknown;\r\n                    var hasBlock = true;\r\n                    var isRooted = true;\r\n                    if (parserInput.currentChar() !== '@') {\r\n                        return;\r\n                    }\r\n                    value = this['import']() || this.plugin() || this.nestableAtRule();\r\n                    if (value) {\r\n                        return value;\r\n                    }\r\n                    parserInput.save();\r\n                    name = parserInput.$re(/^@[a-z-]+/);\r\n                    if (!name) {\r\n                        return;\r\n                    }\r\n                    nonVendorSpecificName = name;\r\n                    if (name.charAt(1) == '-' && name.indexOf('-', 2) > 0) {\r\n                        nonVendorSpecificName = \"@\" + name.slice(name.indexOf('-', 2) + 1);\r\n                    }\r\n                    switch (nonVendorSpecificName) {\r\n                        case '@charset':\r\n                            hasIdentifier = true;\r\n                            hasBlock = false;\r\n                            break;\r\n                        case '@namespace':\r\n                            hasExpression = true;\r\n                            hasBlock = false;\r\n                            break;\r\n                        case '@keyframes':\r\n                        case '@counter-style':\r\n                            hasIdentifier = true;\r\n                            break;\r\n                        case '@document':\r\n                        case '@supports':\r\n                            hasUnknown = true;\r\n                            isRooted = false;\r\n                            break;\r\n                        default:\r\n                            hasUnknown = true;\r\n                            break;\r\n                    }\r\n                    parserInput.commentStore.length = 0;\r\n                    if (hasIdentifier) {\r\n                        value = this.entity();\r\n                        if (!value) {\r\n                            error(\"expected \" + name + \" identifier\");\r\n                        }\r\n                    }\r\n                    else if (hasExpression) {\r\n                        value = this.expression();\r\n                        if (!value) {\r\n                            error(\"expected \" + name + \" expression\");\r\n                        }\r\n                    }\r\n                    else if (hasUnknown) {\r\n                        value = this.permissiveValue(/^[{;]/);\r\n                        hasBlock = (parserInput.currentChar() === '{');\r\n                        if (!value) {\r\n                            if (!hasBlock && parserInput.currentChar() !== ';') {\r\n                                error(name + \" rule is missing block or ending semi-colon\");\r\n                            }\r\n                        }\r\n                        else if (!value.value) {\r\n                            value = null;\r\n                        }\r\n                    }\r\n                    if (hasBlock) {\r\n                        rules = this.blockRuleset();\r\n                    }\r\n                    if (rules || (!hasBlock && value && parserInput.$char(';'))) {\r\n                        parserInput.forget();\r\n                        return new (tree.AtRule)(name, value, rules, index + currentIndex, fileInfo, context.dumpLineNumbers ? getDebugInfo(index) : null, isRooted);\r\n                    }\r\n                    parserInput.restore('at-rule options not recognised');\r\n                },\r\n                //\r\n                // A Value is a comma-delimited list of Expressions\r\n                //\r\n                //     font-family: Baskerville, Georgia, serif;\r\n                //\r\n                // In a Rule, a Value represents everything after the `:`,\r\n                // and before the `;`.\r\n                //\r\n                value: function () {\r\n                    var e;\r\n                    var expressions = [];\r\n                    var index = parserInput.i;\r\n                    do {\r\n                        e = this.expression();\r\n                        if (e) {\r\n                            expressions.push(e);\r\n                            if (!parserInput.$char(',')) {\r\n                                break;\r\n                            }\r\n                        }\r\n                    } while (e);\r\n                    if (expressions.length > 0) {\r\n                        return new (tree.Value)(expressions, index + currentIndex);\r\n                    }\r\n                },\r\n                important: function () {\r\n                    if (parserInput.currentChar() === '!') {\r\n                        return parserInput.$re(/^! *important/);\r\n                    }\r\n                },\r\n                sub: function () {\r\n                    var a;\r\n                    var e;\r\n                    parserInput.save();\r\n                    if (parserInput.$char('(')) {\r\n                        a = this.addition();\r\n                        if (a && parserInput.$char(')')) {\r\n                            parserInput.forget();\r\n                            e = new (tree.Expression)([a]);\r\n                            e.parens = true;\r\n                            return e;\r\n                        }\r\n                        parserInput.restore('Expected \\')\\'');\r\n                        return;\r\n                    }\r\n                    parserInput.restore();\r\n                },\r\n                multiplication: function () {\r\n                    var m;\r\n                    var a;\r\n                    var op;\r\n                    var operation;\r\n                    var isSpaced;\r\n                    m = this.operand();\r\n                    if (m) {\r\n                        isSpaced = parserInput.isWhitespace(-1);\r\n                        while (true) {\r\n                            if (parserInput.peek(/^\\/[*/]/)) {\r\n                                break;\r\n                            }\r\n                            parserInput.save();\r\n                            op = parserInput.$char('/') || parserInput.$char('*') || parserInput.$str('./');\r\n                            if (!op) {\r\n                                parserInput.forget();\r\n                                break;\r\n                            }\r\n                            a = this.operand();\r\n                            if (!a) {\r\n                                parserInput.restore();\r\n                                break;\r\n                            }\r\n                            parserInput.forget();\r\n                            m.parensInOp = true;\r\n                            a.parensInOp = true;\r\n                            operation = new (tree.Operation)(op, [operation || m, a], isSpaced);\r\n                            isSpaced = parserInput.isWhitespace(-1);\r\n                        }\r\n                        return operation || m;\r\n                    }\r\n                },\r\n                addition: function () {\r\n                    var m;\r\n                    var a;\r\n                    var op;\r\n                    var operation;\r\n                    var isSpaced;\r\n                    m = this.multiplication();\r\n                    if (m) {\r\n                        isSpaced = parserInput.isWhitespace(-1);\r\n                        while (true) {\r\n                            op = parserInput.$re(/^[-+]\\s+/) || (!isSpaced && (parserInput.$char('+') || parserInput.$char('-')));\r\n                            if (!op) {\r\n                                break;\r\n                            }\r\n                            a = this.multiplication();\r\n                            if (!a) {\r\n                                break;\r\n                            }\r\n                            m.parensInOp = true;\r\n                            a.parensInOp = true;\r\n                            operation = new (tree.Operation)(op, [operation || m, a], isSpaced);\r\n                            isSpaced = parserInput.isWhitespace(-1);\r\n                        }\r\n                        return operation || m;\r\n                    }\r\n                },\r\n                conditions: function () {\r\n                    var a;\r\n                    var b;\r\n                    var index = parserInput.i;\r\n                    var condition;\r\n                    a = this.condition(true);\r\n                    if (a) {\r\n                        while (true) {\r\n                            if (!parserInput.peek(/^,\\s*(not\\s*)?\\(/) || !parserInput.$char(',')) {\r\n                                break;\r\n                            }\r\n                            b = this.condition(true);\r\n                            if (!b) {\r\n                                break;\r\n                            }\r\n                            condition = new (tree.Condition)('or', condition || a, b, index + currentIndex);\r\n                        }\r\n                        return condition || a;\r\n                    }\r\n                },\r\n                condition: function (needsParens) {\r\n                    var result;\r\n                    var logical;\r\n                    var next;\r\n                    function or() {\r\n                        return parserInput.$str('or');\r\n                    }\r\n                    result = this.conditionAnd(needsParens);\r\n                    if (!result) {\r\n                        return;\r\n                    }\r\n                    logical = or();\r\n                    if (logical) {\r\n                        next = this.condition(needsParens);\r\n                        if (next) {\r\n                            result = new (tree.Condition)(logical, result, next);\r\n                        }\r\n                        else {\r\n                            return;\r\n                        }\r\n                    }\r\n                    return result;\r\n                },\r\n                conditionAnd: function (needsParens) {\r\n                    var result;\r\n                    var logical;\r\n                    var next;\r\n                    var self = this;\r\n                    function insideCondition() {\r\n                        var cond = self.negatedCondition(needsParens) || self.parenthesisCondition(needsParens);\r\n                        if (!cond && !needsParens) {\r\n                            return self.atomicCondition(needsParens);\r\n                        }\r\n                        return cond;\r\n                    }\r\n                    function and() {\r\n                        return parserInput.$str('and');\r\n                    }\r\n                    result = insideCondition();\r\n                    if (!result) {\r\n                        return;\r\n                    }\r\n                    logical = and();\r\n                    if (logical) {\r\n                        next = this.conditionAnd(needsParens);\r\n                        if (next) {\r\n                            result = new (tree.Condition)(logical, result, next);\r\n                        }\r\n                        else {\r\n                            return;\r\n                        }\r\n                    }\r\n                    return result;\r\n                },\r\n                negatedCondition: function (needsParens) {\r\n                    if (parserInput.$str('not')) {\r\n                        var result = this.parenthesisCondition(needsParens);\r\n                        if (result) {\r\n                            result.negate = !result.negate;\r\n                        }\r\n                        return result;\r\n                    }\r\n                },\r\n                parenthesisCondition: function (needsParens) {\r\n                    function tryConditionFollowedByParenthesis(me) {\r\n                        var body;\r\n                        parserInput.save();\r\n                        body = me.condition(needsParens);\r\n                        if (!body) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                        if (!parserInput.$char(')')) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                        parserInput.forget();\r\n                        return body;\r\n                    }\r\n                    var body;\r\n                    parserInput.save();\r\n                    if (!parserInput.$str('(')) {\r\n                        parserInput.restore();\r\n                        return;\r\n                    }\r\n                    body = tryConditionFollowedByParenthesis(this);\r\n                    if (body) {\r\n                        parserInput.forget();\r\n                        return body;\r\n                    }\r\n                    body = this.atomicCondition(needsParens);\r\n                    if (!body) {\r\n                        parserInput.restore();\r\n                        return;\r\n                    }\r\n                    if (!parserInput.$char(')')) {\r\n                        parserInput.restore(\"expected ')' got '\" + parserInput.currentChar() + \"'\");\r\n                        return;\r\n                    }\r\n                    parserInput.forget();\r\n                    return body;\r\n                },\r\n                atomicCondition: function (needsParens, preparsedCond) {\r\n                    var entities = this.entities;\r\n                    var index = parserInput.i;\r\n                    var a;\r\n                    var b;\r\n                    var c;\r\n                    var op;\r\n                    var cond = (function () {\r\n                        return this.addition() || entities.keyword() || entities.quoted() || entities.mixinLookup();\r\n                    }).bind(this);\r\n                    if (preparsedCond) {\r\n                        a = preparsedCond;\r\n                    }\r\n                    else {\r\n                        a = cond();\r\n                    }\r\n                    if (a) {\r\n                        if (parserInput.$char('>')) {\r\n                            if (parserInput.$char('=')) {\r\n                                op = '>=';\r\n                            }\r\n                            else {\r\n                                op = '>';\r\n                            }\r\n                        }\r\n                        else if (parserInput.$char('<')) {\r\n                            if (parserInput.$char('=')) {\r\n                                op = '<=';\r\n                            }\r\n                            else {\r\n                                op = '<';\r\n                            }\r\n                        }\r\n                        else if (parserInput.$char('=')) {\r\n                            if (parserInput.$char('>')) {\r\n                                op = '=>';\r\n                            }\r\n                            else if (parserInput.$char('<')) {\r\n                                op = '=<';\r\n                            }\r\n                            else {\r\n                                op = '=';\r\n                            }\r\n                        }\r\n                        if (op) {\r\n                            b = cond();\r\n                            if (b) {\r\n                                c = new (tree.Condition)(op, a, b, index + currentIndex, false);\r\n                            }\r\n                            else {\r\n                                error('expected expression');\r\n                            }\r\n                        }\r\n                        else if (!preparsedCond) {\r\n                            c = new (tree.Condition)('=', a, new (tree.Keyword)('true'), index + currentIndex, false);\r\n                        }\r\n                        return c;\r\n                    }\r\n                },\r\n                //\r\n                // An operand is anything that can be part of an operation,\r\n                // such as a Color, or a Variable\r\n                //\r\n                operand: function () {\r\n                    var entities = this.entities;\r\n                    var negate;\r\n                    if (parserInput.peek(/^-[@$(]/)) {\r\n                        negate = parserInput.$char('-');\r\n                    }\r\n                    var o = this.sub() || entities.dimension() ||\r\n                        entities.color() || entities.variable() ||\r\n                        entities.property() || entities.call() ||\r\n                        entities.quoted(true) || entities.colorKeyword() ||\r\n                        entities.mixinLookup();\r\n                    if (negate) {\r\n                        o.parensInOp = true;\r\n                        o = new (tree.Negative)(o);\r\n                    }\r\n                    return o;\r\n                },\r\n                //\r\n                // Expressions either represent mathematical operations,\r\n                // or white-space delimited Entities.\r\n                //\r\n                //     1px solid black\r\n                //     @var * 2\r\n                //\r\n                expression: function () {\r\n                    var entities = [];\r\n                    var e;\r\n                    var delim;\r\n                    var index = parserInput.i;\r\n                    do {\r\n                        e = this.comment();\r\n                        if (e) {\r\n                            entities.push(e);\r\n                            continue;\r\n                        }\r\n                        e = this.addition() || this.entity();\r\n                        if (e instanceof tree.Comment) {\r\n                            e = null;\r\n                        }\r\n                        if (e) {\r\n                            entities.push(e);\r\n                            // operations do not allow keyword \"/\" dimension (e.g. small/20px) so we support that here\r\n                            if (!parserInput.peek(/^\\/[/*]/)) {\r\n                                delim = parserInput.$char('/');\r\n                                if (delim) {\r\n                                    entities.push(new (tree.Anonymous)(delim, index + currentIndex));\r\n                                }\r\n                            }\r\n                        }\r\n                    } while (e);\r\n                    if (entities.length > 0) {\r\n                        return new (tree.Expression)(entities);\r\n                    }\r\n                },\r\n                property: function () {\r\n                    var name = parserInput.$re(/^(\\*?-?[_a-zA-Z0-9-]+)\\s*:/);\r\n                    if (name) {\r\n                        return name[1];\r\n                    }\r\n                },\r\n                ruleProperty: function () {\r\n                    var name = [];\r\n                    var index = [];\r\n                    var s;\r\n                    var k;\r\n                    parserInput.save();\r\n                    var simpleProperty = parserInput.$re(/^([_a-zA-Z0-9-]+)\\s*:/);\r\n                    if (simpleProperty) {\r\n                        name = [new (tree.Keyword)(simpleProperty[1])];\r\n                        parserInput.forget();\r\n                        return name;\r\n                    }\r\n                    function match(re) {\r\n                        var i = parserInput.i;\r\n                        var chunk = parserInput.$re(re);\r\n                        if (chunk) {\r\n                            index.push(i);\r\n                            return name.push(chunk[1]);\r\n                        }\r\n                    }\r\n                    match(/^(\\*?)/);\r\n                    while (true) {\r\n                        if (!match(/^((?:[\\w-]+)|(?:[@$]\\{[\\w-]+\\}))/)) {\r\n                            break;\r\n                        }\r\n                    }\r\n                    if ((name.length > 1) && match(/^((?:\\+_|\\+)?)\\s*:/)) {\r\n                        parserInput.forget();\r\n                        // at last, we have the complete match now. move forward,\r\n                        // convert name particles to tree objects and return:\r\n                        if (name[0] === '') {\r\n                            name.shift();\r\n                            index.shift();\r\n                        }\r\n                        for (k = 0; k < name.length; k++) {\r\n                            s = name[k];\r\n                            name[k] = (s.charAt(0) !== '@' && s.charAt(0) !== '$') ?\r\n                                new (tree.Keyword)(s) :\r\n                                (s.charAt(0) === '@' ?\r\n                                    new (tree.Variable)(\"@\" + s.slice(2, -1), index[k] + currentIndex, fileInfo) :\r\n                                    new (tree.Property)(\"$\" + s.slice(2, -1), index[k] + currentIndex, fileInfo));\r\n                        }\r\n                        return name;\r\n                    }\r\n                    parserInput.restore();\r\n                }\r\n            }\r\n        };\r\n    };\r\n    Parser.serializeVars = function (vars) {\r\n        var s = '';\r\n        for (var name_1 in vars) {\r\n            if (Object.hasOwnProperty.call(vars, name_1)) {\r\n                var value = vars[name_1];\r\n                s += ((name_1[0] === '@') ? '' : '@') + name_1 + \": \" + value + ((String(value).slice(-1) === ';') ? '' : ';');\r\n            }\r\n        }\r\n        return s;\r\n    };\n\n    var Selector = function (elements, extendList, condition, index, currentFileInfo, visibilityInfo) {\r\n        this.extendList = extendList;\r\n        this.condition = condition;\r\n        this.evaldCondition = !condition;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.elements = this.getElements(elements);\r\n        this.mixinElements_ = undefined;\r\n        this.copyVisibilityInfo(visibilityInfo);\r\n        this.setParent(this.elements, this);\r\n    };\r\n    Selector.prototype = Object.assign(new Node(), {\r\n        type: 'Selector',\r\n        accept: function (visitor) {\r\n            if (this.elements) {\r\n                this.elements = visitor.visitArray(this.elements);\r\n            }\r\n            if (this.extendList) {\r\n                this.extendList = visitor.visitArray(this.extendList);\r\n            }\r\n            if (this.condition) {\r\n                this.condition = visitor.visit(this.condition);\r\n            }\r\n        },\r\n        createDerived: function (elements, extendList, evaldCondition) {\r\n            elements = this.getElements(elements);\r\n            var newSelector = new Selector(elements, extendList || this.extendList, null, this.getIndex(), this.fileInfo(), this.visibilityInfo());\r\n            newSelector.evaldCondition = (!isNullOrUndefined(evaldCondition)) ? evaldCondition : this.evaldCondition;\r\n            newSelector.mediaEmpty = this.mediaEmpty;\r\n            return newSelector;\r\n        },\r\n        getElements: function (els) {\r\n            if (!els) {\r\n                return [new Element('', '&', false, this._index, this._fileInfo)];\r\n            }\r\n            if (typeof els === 'string') {\r\n                new Parser(this.parse.context, this.parse.importManager, this._fileInfo, this._index).parseNode(els, ['selector'], function (err, result) {\r\n                    if (err) {\r\n                        throw new LessError({\r\n                            index: err.index,\r\n                            message: err.message\r\n                        }, this.parse.imports, this._fileInfo.filename);\r\n                    }\r\n                    els = result[0].elements;\r\n                });\r\n            }\r\n            return els;\r\n        },\r\n        createEmptySelectors: function () {\r\n            var el = new Element('', '&', false, this._index, this._fileInfo), sels = [new Selector([el], null, null, this._index, this._fileInfo)];\r\n            sels[0].mediaEmpty = true;\r\n            return sels;\r\n        },\r\n        match: function (other) {\r\n            var elements = this.elements;\r\n            var len = elements.length;\r\n            var olen;\r\n            var i;\r\n            other = other.mixinElements();\r\n            olen = other.length;\r\n            if (olen === 0 || len < olen) {\r\n                return 0;\r\n            }\r\n            else {\r\n                for (i = 0; i < olen; i++) {\r\n                    if (elements[i].value !== other[i]) {\r\n                        return 0;\r\n                    }\r\n                }\r\n            }\r\n            return olen; // return number of matched elements\r\n        },\r\n        mixinElements: function () {\r\n            if (this.mixinElements_) {\r\n                return this.mixinElements_;\r\n            }\r\n            var elements = this.elements.map(function (v) {\r\n                return v.combinator.value + (v.value.value || v.value);\r\n            }).join('').match(/[,&#*.\\w-]([\\w-]|(\\\\.))*/g);\r\n            if (elements) {\r\n                if (elements[0] === '&') {\r\n                    elements.shift();\r\n                }\r\n            }\r\n            else {\r\n                elements = [];\r\n            }\r\n            return (this.mixinElements_ = elements);\r\n        },\r\n        isJustParentSelector: function () {\r\n            return !this.mediaEmpty &&\r\n                this.elements.length === 1 &&\r\n                this.elements[0].value === '&' &&\r\n                (this.elements[0].combinator.value === ' ' || this.elements[0].combinator.value === '');\r\n        },\r\n        eval: function (context) {\r\n            var evaldCondition = this.condition && this.condition.eval(context);\r\n            var elements = this.elements;\r\n            var extendList = this.extendList;\r\n            elements = elements && elements.map(function (e) { return e.eval(context); });\r\n            extendList = extendList && extendList.map(function (extend) { return extend.eval(context); });\r\n            return this.createDerived(elements, extendList, evaldCondition);\r\n        },\r\n        genCSS: function (context, output) {\r\n            var i, element;\r\n            if ((!context || !context.firstSelector) && this.elements[0].combinator.value === '') {\r\n                output.add(' ', this.fileInfo(), this.getIndex());\r\n            }\r\n            for (i = 0; i < this.elements.length; i++) {\r\n                element = this.elements[i];\r\n                element.genCSS(context, output);\r\n            }\r\n        },\r\n        getIsOutput: function () {\r\n            return this.evaldCondition;\r\n        }\r\n    });\n\n    var Value = function (value) {\r\n        if (!value) {\r\n            throw new Error('Value requires an array argument');\r\n        }\r\n        if (!Array.isArray(value)) {\r\n            this.value = [value];\r\n        }\r\n        else {\r\n            this.value = value;\r\n        }\r\n    };\r\n    Value.prototype = Object.assign(new Node(), {\r\n        type: 'Value',\r\n        accept: function (visitor) {\r\n            if (this.value) {\r\n                this.value = visitor.visitArray(this.value);\r\n            }\r\n        },\r\n        eval: function (context) {\r\n            if (this.value.length === 1) {\r\n                return this.value[0].eval(context);\r\n            }\r\n            else {\r\n                return new Value(this.value.map(function (v) {\r\n                    return v.eval(context);\r\n                }));\r\n            }\r\n        },\r\n        genCSS: function (context, output) {\r\n            var i;\r\n            for (i = 0; i < this.value.length; i++) {\r\n                this.value[i].genCSS(context, output);\r\n                if (i + 1 < this.value.length) {\r\n                    output.add((context && context.compress) ? ',' : ', ');\r\n                }\r\n            }\r\n        }\r\n    });\n\n    var Keyword = function (value) {\r\n        this.value = value;\r\n    };\r\n    Keyword.prototype = Object.assign(new Node(), {\r\n        type: 'Keyword',\r\n        genCSS: function (context, output) {\r\n            if (this.value === '%') {\r\n                throw { type: 'Syntax', message: 'Invalid % without number' };\r\n            }\r\n            output.add(this.value);\r\n        }\r\n    });\r\n    Keyword.True = new Keyword('true');\r\n    Keyword.False = new Keyword('false');\n\n    var Anonymous = function (value, index, currentFileInfo, mapLines, rulesetLike, visibilityInfo) {\r\n        this.value = value;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.mapLines = mapLines;\r\n        this.rulesetLike = (typeof rulesetLike === 'undefined') ? false : rulesetLike;\r\n        this.allowRoot = true;\r\n        this.copyVisibilityInfo(visibilityInfo);\r\n    };\r\n    Anonymous.prototype = Object.assign(new Node(), {\r\n        type: 'Anonymous',\r\n        eval: function () {\r\n            return new Anonymous(this.value, this._index, this._fileInfo, this.mapLines, this.rulesetLike, this.visibilityInfo());\r\n        },\r\n        compare: function (other) {\r\n            return other.toCSS && this.toCSS() === other.toCSS() ? 0 : undefined;\r\n        },\r\n        isRulesetLike: function () {\r\n            return this.rulesetLike;\r\n        },\r\n        genCSS: function (context, output) {\r\n            this.nodeVisible = Boolean(this.value);\r\n            if (this.nodeVisible) {\r\n                output.add(this.value, this._fileInfo, this._index, this.mapLines);\r\n            }\r\n        }\r\n    });\n\n    var MATH$1 = Math$1;\r\n    function evalName(context, name) {\r\n        var value = '';\r\n        var i;\r\n        var n = name.length;\r\n        var output = { add: function (s) { value += s; } };\r\n        for (i = 0; i < n; i++) {\r\n            name[i].eval(context).genCSS(context, output);\r\n        }\r\n        return value;\r\n    }\r\n    var Declaration = function (name, value, important, merge, index, currentFileInfo, inline, variable) {\r\n        this.name = name;\r\n        this.value = (value instanceof Node) ? value : new Value([value ? new Anonymous(value) : null]);\r\n        this.important = important ? \" \" + important.trim() : '';\r\n        this.merge = merge;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.inline = inline || false;\r\n        this.variable = (variable !== undefined) ? variable\r\n            : (name.charAt && (name.charAt(0) === '@'));\r\n        this.allowRoot = true;\r\n        this.setParent(this.value, this);\r\n    };\r\n    Declaration.prototype = Object.assign(new Node(), {\r\n        type: 'Declaration',\r\n        genCSS: function (context, output) {\r\n            output.add(this.name + (context.compress ? ':' : ': '), this.fileInfo(), this.getIndex());\r\n            try {\r\n                this.value.genCSS(context, output);\r\n            }\r\n            catch (e) {\r\n                e.index = this._index;\r\n                e.filename = this._fileInfo.filename;\r\n                throw e;\r\n            }\r\n            output.add(this.important + ((this.inline || (context.lastRule && context.compress)) ? '' : ';'), this._fileInfo, this._index);\r\n        },\r\n        eval: function (context) {\r\n            var mathBypass = false, prevMath, name = this.name, evaldValue, variable = this.variable;\r\n            if (typeof name !== 'string') {\r\n                // expand 'primitive' name directly to get\r\n                // things faster (~10% for benchmark.less):\r\n                name = (name.length === 1) && (name[0] instanceof Keyword) ?\r\n                    name[0].value : evalName(context, name);\r\n                variable = false; // never treat expanded interpolation as new variable name\r\n            }\r\n            // @todo remove when parens-division is default\r\n            if (name === 'font' && context.math === MATH$1.ALWAYS) {\r\n                mathBypass = true;\r\n                prevMath = context.math;\r\n                context.math = MATH$1.PARENS_DIVISION;\r\n            }\r\n            try {\r\n                context.importantScope.push({});\r\n                evaldValue = this.value.eval(context);\r\n                if (!this.variable && evaldValue.type === 'DetachedRuleset') {\r\n                    throw { message: 'Rulesets cannot be evaluated on a property.',\r\n                        index: this.getIndex(), filename: this.fileInfo().filename };\r\n                }\r\n                var important = this.important;\r\n                var importantResult = context.importantScope.pop();\r\n                if (!important && importantResult.important) {\r\n                    important = importantResult.important;\r\n                }\r\n                return new Declaration(name, evaldValue, important, this.merge, this.getIndex(), this.fileInfo(), this.inline, variable);\r\n            }\r\n            catch (e) {\r\n                if (typeof e.index !== 'number') {\r\n                    e.index = this.getIndex();\r\n                    e.filename = this.fileInfo().filename;\r\n                }\r\n                throw e;\r\n            }\r\n            finally {\r\n                if (mathBypass) {\r\n                    context.math = prevMath;\r\n                }\r\n            }\r\n        },\r\n        makeImportant: function () {\r\n            return new Declaration(this.name, this.value, '!important', this.merge, this.getIndex(), this.fileInfo(), this.inline);\r\n        }\r\n    });\n\n    function asComment(ctx) {\r\n        return \"/* line \" + ctx.debugInfo.lineNumber + \", \" + ctx.debugInfo.fileName + \" */\\n\";\r\n    }\r\n    function asMediaQuery(ctx) {\r\n        var filenameWithProtocol = ctx.debugInfo.fileName;\r\n        if (!/^[a-z]+:\\/\\//i.test(filenameWithProtocol)) {\r\n            filenameWithProtocol = \"file://\" + filenameWithProtocol;\r\n        }\r\n        return \"@media -sass-debug-info{filename{font-family:\" + filenameWithProtocol.replace(/([.:/\\\\])/g, function (a) {\r\n            if (a == '\\\\') {\r\n                a = '/';\r\n            }\r\n            return \"\\\\\" + a;\r\n        }) + \"}line{font-family:\\\\00003\" + ctx.debugInfo.lineNumber + \"}}\\n\";\r\n    }\r\n    function debugInfo(context, ctx, lineSeparator) {\r\n        var result = '';\r\n        if (context.dumpLineNumbers && !context.compress) {\r\n            switch (context.dumpLineNumbers) {\r\n                case 'comments':\r\n                    result = asComment(ctx);\r\n                    break;\r\n                case 'mediaquery':\r\n                    result = asMediaQuery(ctx);\r\n                    break;\r\n                case 'all':\r\n                    result = asComment(ctx) + (lineSeparator || '') + asMediaQuery(ctx);\r\n                    break;\r\n            }\r\n        }\r\n        return result;\r\n    }\n\n    var Comment = function (value, isLineComment, index, currentFileInfo) {\r\n        this.value = value;\r\n        this.isLineComment = isLineComment;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.allowRoot = true;\r\n    };\r\n    Comment.prototype = Object.assign(new Node(), {\r\n        type: 'Comment',\r\n        genCSS: function (context, output) {\r\n            if (this.debugInfo) {\r\n                output.add(debugInfo(context, this), this.fileInfo(), this.getIndex());\r\n            }\r\n            output.add(this.value);\r\n        },\r\n        isSilent: function (context) {\r\n            var isCompressed = context.compress && this.value[2] !== '!';\r\n            return this.isLineComment || isCompressed;\r\n        }\r\n    });\n\n    var defaultFunc = {\r\n        eval: function () {\r\n            var v = this.value_;\r\n            var e = this.error_;\r\n            if (e) {\r\n                throw e;\r\n            }\r\n            if (!isNullOrUndefined(v)) {\r\n                return v ? Keyword.True : Keyword.False;\r\n            }\r\n        },\r\n        value: function (v) {\r\n            this.value_ = v;\r\n        },\r\n        error: function (e) {\r\n            this.error_ = e;\r\n        },\r\n        reset: function () {\r\n            this.value_ = this.error_ = null;\r\n        }\r\n    };\n\n    var Ruleset = function (selectors, rules, strictImports, visibilityInfo) {\r\n        this.selectors = selectors;\r\n        this.rules = rules;\r\n        this._lookups = {};\r\n        this._variables = null;\r\n        this._properties = null;\r\n        this.strictImports = strictImports;\r\n        this.copyVisibilityInfo(visibilityInfo);\r\n        this.allowRoot = true;\r\n        this.setParent(this.selectors, this);\r\n        this.setParent(this.rules, this);\r\n    };\r\n    Ruleset.prototype = Object.assign(new Node(), {\r\n        type: 'Ruleset',\r\n        isRuleset: true,\r\n        isRulesetLike: function () { return true; },\r\n        accept: function (visitor) {\r\n            if (this.paths) {\r\n                this.paths = visitor.visitArray(this.paths, true);\r\n            }\r\n            else if (this.selectors) {\r\n                this.selectors = visitor.visitArray(this.selectors);\r\n            }\r\n            if (this.rules && this.rules.length) {\r\n                this.rules = visitor.visitArray(this.rules);\r\n            }\r\n        },\r\n        eval: function (context) {\r\n            var selectors;\r\n            var selCnt;\r\n            var selector;\r\n            var i;\r\n            var hasVariable;\r\n            var hasOnePassingSelector = false;\r\n            if (this.selectors && (selCnt = this.selectors.length)) {\r\n                selectors = new Array(selCnt);\r\n                defaultFunc.error({\r\n                    type: 'Syntax',\r\n                    message: 'it is currently only allowed in parametric mixin guards,'\r\n                });\r\n                for (i = 0; i < selCnt; i++) {\r\n                    selector = this.selectors[i].eval(context);\r\n                    for (var j = 0; j < selector.elements.length; j++) {\r\n                        if (selector.elements[j].isVariable) {\r\n                            hasVariable = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                    selectors[i] = selector;\r\n                    if (selector.evaldCondition) {\r\n                        hasOnePassingSelector = true;\r\n                    }\r\n                }\r\n                if (hasVariable) {\r\n                    var toParseSelectors = new Array(selCnt);\r\n                    for (i = 0; i < selCnt; i++) {\r\n                        selector = selectors[i];\r\n                        toParseSelectors[i] = selector.toCSS(context);\r\n                    }\r\n                    var startingIndex = selectors[0].getIndex();\r\n                    var selectorFileInfo = selectors[0].fileInfo();\r\n                    new Parser(context, this.parse.importManager, selectorFileInfo, startingIndex).parseNode(toParseSelectors.join(','), ['selectors'], function (err, result) {\r\n                        if (result) {\r\n                            selectors = flattenArray(result);\r\n                        }\r\n                    });\r\n                }\r\n                defaultFunc.reset();\r\n            }\r\n            else {\r\n                hasOnePassingSelector = true;\r\n            }\r\n            var rules = this.rules ? copyArray(this.rules) : null;\r\n            var ruleset = new Ruleset(selectors, rules, this.strictImports, this.visibilityInfo());\r\n            var rule;\r\n            var subRule;\r\n            ruleset.originalRuleset = this;\r\n            ruleset.root = this.root;\r\n            ruleset.firstRoot = this.firstRoot;\r\n            ruleset.allowImports = this.allowImports;\r\n            if (this.debugInfo) {\r\n                ruleset.debugInfo = this.debugInfo;\r\n            }\r\n            if (!hasOnePassingSelector) {\r\n                rules.length = 0;\r\n            }\r\n            // inherit a function registry from the frames stack when possible;\r\n            // otherwise from the global registry\r\n            ruleset.functionRegistry = (function (frames) {\r\n                var i = 0;\r\n                var n = frames.length;\r\n                var found;\r\n                for (; i !== n; ++i) {\r\n                    found = frames[i].functionRegistry;\r\n                    if (found) {\r\n                        return found;\r\n                    }\r\n                }\r\n                return functionRegistry;\r\n            }(context.frames)).inherit();\r\n            // push the current ruleset to the frames stack\r\n            var ctxFrames = context.frames;\r\n            ctxFrames.unshift(ruleset);\r\n            // currrent selectors\r\n            var ctxSelectors = context.selectors;\r\n            if (!ctxSelectors) {\r\n                context.selectors = ctxSelectors = [];\r\n            }\r\n            ctxSelectors.unshift(this.selectors);\r\n            // Evaluate imports\r\n            if (ruleset.root || ruleset.allowImports || !ruleset.strictImports) {\r\n                ruleset.evalImports(context);\r\n            }\r\n            // Store the frames around mixin definitions,\r\n            // so they can be evaluated like closures when the time comes.\r\n            var rsRules = ruleset.rules;\r\n            for (i = 0; (rule = rsRules[i]); i++) {\r\n                if (rule.evalFirst) {\r\n                    rsRules[i] = rule.eval(context);\r\n                }\r\n            }\r\n            var mediaBlockCount = (context.mediaBlocks && context.mediaBlocks.length) || 0;\r\n            // Evaluate mixin calls.\r\n            for (i = 0; (rule = rsRules[i]); i++) {\r\n                if (rule.type === 'MixinCall') {\r\n                    /* jshint loopfunc:true */\r\n                    rules = rule.eval(context).filter(function (r) {\r\n                        if ((r instanceof Declaration) && r.variable) {\r\n                            // do not pollute the scope if the variable is\r\n                            // already there. consider returning false here\r\n                            // but we need a way to \"return\" variable from mixins\r\n                            return !(ruleset.variable(r.name));\r\n                        }\r\n                        return true;\r\n                    });\r\n                    rsRules.splice.apply(rsRules, [i, 1].concat(rules));\r\n                    i += rules.length - 1;\r\n                    ruleset.resetCache();\r\n                }\r\n                else if (rule.type === 'VariableCall') {\r\n                    /* jshint loopfunc:true */\r\n                    rules = rule.eval(context).rules.filter(function (r) {\r\n                        if ((r instanceof Declaration) && r.variable) {\r\n                            // do not pollute the scope at all\r\n                            return false;\r\n                        }\r\n                        return true;\r\n                    });\r\n                    rsRules.splice.apply(rsRules, [i, 1].concat(rules));\r\n                    i += rules.length - 1;\r\n                    ruleset.resetCache();\r\n                }\r\n            }\r\n            // Evaluate everything else\r\n            for (i = 0; (rule = rsRules[i]); i++) {\r\n                if (!rule.evalFirst) {\r\n                    rsRules[i] = rule = rule.eval ? rule.eval(context) : rule;\r\n                }\r\n            }\r\n            // Evaluate everything else\r\n            for (i = 0; (rule = rsRules[i]); i++) {\r\n                // for rulesets, check if it is a css guard and can be removed\r\n                if (rule instanceof Ruleset && rule.selectors && rule.selectors.length === 1) {\r\n                    // check if it can be folded in (e.g. & where)\r\n                    if (rule.selectors[0] && rule.selectors[0].isJustParentSelector()) {\r\n                        rsRules.splice(i--, 1);\r\n                        for (var j = 0; (subRule = rule.rules[j]); j++) {\r\n                            if (subRule instanceof Node) {\r\n                                subRule.copyVisibilityInfo(rule.visibilityInfo());\r\n                                if (!(subRule instanceof Declaration) || !subRule.variable) {\r\n                                    rsRules.splice(++i, 0, subRule);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // Pop the stack\r\n            ctxFrames.shift();\r\n            ctxSelectors.shift();\r\n            if (context.mediaBlocks) {\r\n                for (i = mediaBlockCount; i < context.mediaBlocks.length; i++) {\r\n                    context.mediaBlocks[i].bubbleSelectors(selectors);\r\n                }\r\n            }\r\n            return ruleset;\r\n        },\r\n        evalImports: function (context) {\r\n            var rules = this.rules;\r\n            var i;\r\n            var importRules;\r\n            if (!rules) {\r\n                return;\r\n            }\r\n            for (i = 0; i < rules.length; i++) {\r\n                if (rules[i].type === 'Import') {\r\n                    importRules = rules[i].eval(context);\r\n                    if (importRules && (importRules.length || importRules.length === 0)) {\r\n                        rules.splice.apply(rules, [i, 1].concat(importRules));\r\n                        i += importRules.length - 1;\r\n                    }\r\n                    else {\r\n                        rules.splice(i, 1, importRules);\r\n                    }\r\n                    this.resetCache();\r\n                }\r\n            }\r\n        },\r\n        makeImportant: function () {\r\n            var result = new Ruleset(this.selectors, this.rules.map(function (r) {\r\n                if (r.makeImportant) {\r\n                    return r.makeImportant();\r\n                }\r\n                else {\r\n                    return r;\r\n                }\r\n            }), this.strictImports, this.visibilityInfo());\r\n            return result;\r\n        },\r\n        matchArgs: function (args) {\r\n            return !args || args.length === 0;\r\n        },\r\n        // lets you call a css selector with a guard\r\n        matchCondition: function (args, context) {\r\n            var lastSelector = this.selectors[this.selectors.length - 1];\r\n            if (!lastSelector.evaldCondition) {\r\n                return false;\r\n            }\r\n            if (lastSelector.condition &&\r\n                !lastSelector.condition.eval(new contexts.Eval(context, context.frames))) {\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n        resetCache: function () {\r\n            this._rulesets = null;\r\n            this._variables = null;\r\n            this._properties = null;\r\n            this._lookups = {};\r\n        },\r\n        variables: function () {\r\n            if (!this._variables) {\r\n                this._variables = !this.rules ? {} : this.rules.reduce(function (hash, r) {\r\n                    if (r instanceof Declaration && r.variable === true) {\r\n                        hash[r.name] = r;\r\n                    }\r\n                    // when evaluating variables in an import statement, imports have not been eval'd\r\n                    // so we need to go inside import statements.\r\n                    // guard against root being a string (in the case of inlined less)\r\n                    if (r.type === 'Import' && r.root && r.root.variables) {\r\n                        var vars = r.root.variables();\r\n                        for (var name_1 in vars) {\r\n                            // eslint-disable-next-line no-prototype-builtins\r\n                            if (vars.hasOwnProperty(name_1)) {\r\n                                hash[name_1] = r.root.variable(name_1);\r\n                            }\r\n                        }\r\n                    }\r\n                    return hash;\r\n                }, {});\r\n            }\r\n            return this._variables;\r\n        },\r\n        properties: function () {\r\n            if (!this._properties) {\r\n                this._properties = !this.rules ? {} : this.rules.reduce(function (hash, r) {\r\n                    if (r instanceof Declaration && r.variable !== true) {\r\n                        var name_2 = (r.name.length === 1) && (r.name[0] instanceof Keyword) ?\r\n                            r.name[0].value : r.name;\r\n                        // Properties don't overwrite as they can merge\r\n                        if (!hash[\"$\" + name_2]) {\r\n                            hash[\"$\" + name_2] = [r];\r\n                        }\r\n                        else {\r\n                            hash[\"$\" + name_2].push(r);\r\n                        }\r\n                    }\r\n                    return hash;\r\n                }, {});\r\n            }\r\n            return this._properties;\r\n        },\r\n        variable: function (name) {\r\n            var decl = this.variables()[name];\r\n            if (decl) {\r\n                return this.parseValue(decl);\r\n            }\r\n        },\r\n        property: function (name) {\r\n            var decl = this.properties()[name];\r\n            if (decl) {\r\n                return this.parseValue(decl);\r\n            }\r\n        },\r\n        lastDeclaration: function () {\r\n            for (var i_1 = this.rules.length; i_1 > 0; i_1--) {\r\n                var decl = this.rules[i_1 - 1];\r\n                if (decl instanceof Declaration) {\r\n                    return this.parseValue(decl);\r\n                }\r\n            }\r\n        },\r\n        parseValue: function (toParse) {\r\n            var self = this;\r\n            function transformDeclaration(decl) {\r\n                if (decl.value instanceof Anonymous && !decl.parsed) {\r\n                    if (typeof decl.value.value === 'string') {\r\n                        new Parser(this.parse.context, this.parse.importManager, decl.fileInfo(), decl.value.getIndex()).parseNode(decl.value.value, ['value', 'important'], function (err, result) {\r\n                            if (err) {\r\n                                decl.parsed = true;\r\n                            }\r\n                            if (result) {\r\n                                decl.value = result[0];\r\n                                decl.important = result[1] || '';\r\n                                decl.parsed = true;\r\n                            }\r\n                        });\r\n                    }\r\n                    else {\r\n                        decl.parsed = true;\r\n                    }\r\n                    return decl;\r\n                }\r\n                else {\r\n                    return decl;\r\n                }\r\n            }\r\n            if (!Array.isArray(toParse)) {\r\n                return transformDeclaration.call(self, toParse);\r\n            }\r\n            else {\r\n                var nodes_1 = [];\r\n                toParse.forEach(function (n) {\r\n                    nodes_1.push(transformDeclaration.call(self, n));\r\n                });\r\n                return nodes_1;\r\n            }\r\n        },\r\n        rulesets: function () {\r\n            if (!this.rules) {\r\n                return [];\r\n            }\r\n            var filtRules = [];\r\n            var rules = this.rules;\r\n            var i;\r\n            var rule;\r\n            for (i = 0; (rule = rules[i]); i++) {\r\n                if (rule.isRuleset) {\r\n                    filtRules.push(rule);\r\n                }\r\n            }\r\n            return filtRules;\r\n        },\r\n        prependRule: function (rule) {\r\n            var rules = this.rules;\r\n            if (rules) {\r\n                rules.unshift(rule);\r\n            }\r\n            else {\r\n                this.rules = [rule];\r\n            }\r\n            this.setParent(rule, this);\r\n        },\r\n        find: function (selector, self, filter) {\r\n            self = self || this;\r\n            var rules = [];\r\n            var match;\r\n            var foundMixins;\r\n            var key = selector.toCSS();\r\n            if (key in this._lookups) {\r\n                return this._lookups[key];\r\n            }\r\n            this.rulesets().forEach(function (rule) {\r\n                if (rule !== self) {\r\n                    for (var j = 0; j < rule.selectors.length; j++) {\r\n                        match = selector.match(rule.selectors[j]);\r\n                        if (match) {\r\n                            if (selector.elements.length > match) {\r\n                                if (!filter || filter(rule)) {\r\n                                    foundMixins = rule.find(new Selector(selector.elements.slice(match)), self, filter);\r\n                                    for (var i_2 = 0; i_2 < foundMixins.length; ++i_2) {\r\n                                        foundMixins[i_2].path.push(rule);\r\n                                    }\r\n                                    Array.prototype.push.apply(rules, foundMixins);\r\n                                }\r\n                            }\r\n                            else {\r\n                                rules.push({ rule: rule, path: [] });\r\n                            }\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            this._lookups[key] = rules;\r\n            return rules;\r\n        },\r\n        genCSS: function (context, output) {\r\n            var i;\r\n            var j;\r\n            var charsetRuleNodes = [];\r\n            var ruleNodes = [];\r\n            var // Line number debugging\r\n            debugInfo$1;\r\n            var rule;\r\n            var path;\r\n            context.tabLevel = (context.tabLevel || 0);\r\n            if (!this.root) {\r\n                context.tabLevel++;\r\n            }\r\n            var tabRuleStr = context.compress ? '' : Array(context.tabLevel + 1).join('  ');\r\n            var tabSetStr = context.compress ? '' : Array(context.tabLevel).join('  ');\r\n            var sep;\r\n            var charsetNodeIndex = 0;\r\n            var importNodeIndex = 0;\r\n            for (i = 0; (rule = this.rules[i]); i++) {\r\n                if (rule instanceof Comment) {\r\n                    if (importNodeIndex === i) {\r\n                        importNodeIndex++;\r\n                    }\r\n                    ruleNodes.push(rule);\r\n                }\r\n                else if (rule.isCharset && rule.isCharset()) {\r\n                    ruleNodes.splice(charsetNodeIndex, 0, rule);\r\n                    charsetNodeIndex++;\r\n                    importNodeIndex++;\r\n                }\r\n                else if (rule.type === 'Import') {\r\n                    ruleNodes.splice(importNodeIndex, 0, rule);\r\n                    importNodeIndex++;\r\n                }\r\n                else {\r\n                    ruleNodes.push(rule);\r\n                }\r\n            }\r\n            ruleNodes = charsetRuleNodes.concat(ruleNodes);\r\n            // If this is the root node, we don't render\r\n            // a selector, or {}.\r\n            if (!this.root) {\r\n                debugInfo$1 = debugInfo(context, this, tabSetStr);\r\n                if (debugInfo$1) {\r\n                    output.add(debugInfo$1);\r\n                    output.add(tabSetStr);\r\n                }\r\n                var paths = this.paths;\r\n                var pathCnt = paths.length;\r\n                var pathSubCnt = void 0;\r\n                sep = context.compress ? ',' : (\",\\n\" + tabSetStr);\r\n                for (i = 0; i < pathCnt; i++) {\r\n                    path = paths[i];\r\n                    if (!(pathSubCnt = path.length)) {\r\n                        continue;\r\n                    }\r\n                    if (i > 0) {\r\n                        output.add(sep);\r\n                    }\r\n                    context.firstSelector = true;\r\n                    path[0].genCSS(context, output);\r\n                    context.firstSelector = false;\r\n                    for (j = 1; j < pathSubCnt; j++) {\r\n                        path[j].genCSS(context, output);\r\n                    }\r\n                }\r\n                output.add((context.compress ? '{' : ' {\\n') + tabRuleStr);\r\n            }\r\n            // Compile rules and rulesets\r\n            for (i = 0; (rule = ruleNodes[i]); i++) {\r\n                if (i + 1 === ruleNodes.length) {\r\n                    context.lastRule = true;\r\n                }\r\n                var currentLastRule = context.lastRule;\r\n                if (rule.isRulesetLike(rule)) {\r\n                    context.lastRule = false;\r\n                }\r\n                if (rule.genCSS) {\r\n                    rule.genCSS(context, output);\r\n                }\r\n                else if (rule.value) {\r\n                    output.add(rule.value.toString());\r\n                }\r\n                context.lastRule = currentLastRule;\r\n                if (!context.lastRule && rule.isVisible()) {\r\n                    output.add(context.compress ? '' : (\"\\n\" + tabRuleStr));\r\n                }\r\n                else {\r\n                    context.lastRule = false;\r\n                }\r\n            }\r\n            if (!this.root) {\r\n                output.add((context.compress ? '}' : \"\\n\" + tabSetStr + \"}\"));\r\n                context.tabLevel--;\r\n            }\r\n            if (!output.isEmpty() && !context.compress && this.firstRoot) {\r\n                output.add('\\n');\r\n            }\r\n        },\r\n        joinSelectors: function (paths, context, selectors) {\r\n            for (var s = 0; s < selectors.length; s++) {\r\n                this.joinSelector(paths, context, selectors[s]);\r\n            }\r\n        },\r\n        joinSelector: function (paths, context, selector) {\r\n            function createParenthesis(elementsToPak, originalElement) {\r\n                var replacementParen, j;\r\n                if (elementsToPak.length === 0) {\r\n                    replacementParen = new Paren(elementsToPak[0]);\r\n                }\r\n                else {\r\n                    var insideParent = new Array(elementsToPak.length);\r\n                    for (j = 0; j < elementsToPak.length; j++) {\r\n                        insideParent[j] = new Element(null, elementsToPak[j], originalElement.isVariable, originalElement._index, originalElement._fileInfo);\r\n                    }\r\n                    replacementParen = new Paren(new Selector(insideParent));\r\n                }\r\n                return replacementParen;\r\n            }\r\n            function createSelector(containedElement, originalElement) {\r\n                var element, selector;\r\n                element = new Element(null, containedElement, originalElement.isVariable, originalElement._index, originalElement._fileInfo);\r\n                selector = new Selector([element]);\r\n                return selector;\r\n            }\r\n            // joins selector path from `beginningPath` with selector path in `addPath`\r\n            // `replacedElement` contains element that is being replaced by `addPath`\r\n            // returns concatenated path\r\n            function addReplacementIntoPath(beginningPath, addPath, replacedElement, originalSelector) {\r\n                var newSelectorPath, lastSelector, newJoinedSelector;\r\n                // our new selector path\r\n                newSelectorPath = [];\r\n                // construct the joined selector - if & is the first thing this will be empty,\r\n                // if not newJoinedSelector will be the last set of elements in the selector\r\n                if (beginningPath.length > 0) {\r\n                    newSelectorPath = copyArray(beginningPath);\r\n                    lastSelector = newSelectorPath.pop();\r\n                    newJoinedSelector = originalSelector.createDerived(copyArray(lastSelector.elements));\r\n                }\r\n                else {\r\n                    newJoinedSelector = originalSelector.createDerived([]);\r\n                }\r\n                if (addPath.length > 0) {\r\n                    // /deep/ is a CSS4 selector - (removed, so should deprecate)\r\n                    // that is valid without anything in front of it\r\n                    // so if the & does not have a combinator that is \"\" or \" \" then\r\n                    // and there is a combinator on the parent, then grab that.\r\n                    // this also allows + a { & .b { .a & { ... though not sure why you would want to do that\r\n                    var combinator = replacedElement.combinator;\r\n                    var parentEl = addPath[0].elements[0];\r\n                    if (combinator.emptyOrWhitespace && !parentEl.combinator.emptyOrWhitespace) {\r\n                        combinator = parentEl.combinator;\r\n                    }\r\n                    // join the elements so far with the first part of the parent\r\n                    newJoinedSelector.elements.push(new Element(combinator, parentEl.value, replacedElement.isVariable, replacedElement._index, replacedElement._fileInfo));\r\n                    newJoinedSelector.elements = newJoinedSelector.elements.concat(addPath[0].elements.slice(1));\r\n                }\r\n                // now add the joined selector - but only if it is not empty\r\n                if (newJoinedSelector.elements.length !== 0) {\r\n                    newSelectorPath.push(newJoinedSelector);\r\n                }\r\n                // put together the parent selectors after the join (e.g. the rest of the parent)\r\n                if (addPath.length > 1) {\r\n                    var restOfPath = addPath.slice(1);\r\n                    restOfPath = restOfPath.map(function (selector) {\r\n                        return selector.createDerived(selector.elements, []);\r\n                    });\r\n                    newSelectorPath = newSelectorPath.concat(restOfPath);\r\n                }\r\n                return newSelectorPath;\r\n            }\r\n            // joins selector path from `beginningPath` with every selector path in `addPaths` array\r\n            // `replacedElement` contains element that is being replaced by `addPath`\r\n            // returns array with all concatenated paths\r\n            function addAllReplacementsIntoPath(beginningPath, addPaths, replacedElement, originalSelector, result) {\r\n                var j;\r\n                for (j = 0; j < beginningPath.length; j++) {\r\n                    var newSelectorPath = addReplacementIntoPath(beginningPath[j], addPaths, replacedElement, originalSelector);\r\n                    result.push(newSelectorPath);\r\n                }\r\n                return result;\r\n            }\r\n            function mergeElementsOnToSelectors(elements, selectors) {\r\n                var i, sel;\r\n                if (elements.length === 0) {\r\n                    return;\r\n                }\r\n                if (selectors.length === 0) {\r\n                    selectors.push([new Selector(elements)]);\r\n                    return;\r\n                }\r\n                for (i = 0; (sel = selectors[i]); i++) {\r\n                    // if the previous thing in sel is a parent this needs to join on to it\r\n                    if (sel.length > 0) {\r\n                        sel[sel.length - 1] = sel[sel.length - 1].createDerived(sel[sel.length - 1].elements.concat(elements));\r\n                    }\r\n                    else {\r\n                        sel.push(new Selector(elements));\r\n                    }\r\n                }\r\n            }\r\n            // replace all parent selectors inside `inSelector` by content of `context` array\r\n            // resulting selectors are returned inside `paths` array\r\n            // returns true if `inSelector` contained at least one parent selector\r\n            function replaceParentSelector(paths, context, inSelector) {\r\n                // The paths are [[Selector]]\r\n                // The first list is a list of comma separated selectors\r\n                // The inner list is a list of inheritance separated selectors\r\n                // e.g.\r\n                // .a, .b {\r\n                //   .c {\r\n                //   }\r\n                // }\r\n                // == [[.a] [.c]] [[.b] [.c]]\r\n                //\r\n                var i, j, k, currentElements, newSelectors, selectorsMultiplied, sel, el, hadParentSelector = false, length, lastSelector;\r\n                function findNestedSelector(element) {\r\n                    var maybeSelector;\r\n                    if (!(element.value instanceof Paren)) {\r\n                        return null;\r\n                    }\r\n                    maybeSelector = element.value.value;\r\n                    if (!(maybeSelector instanceof Selector)) {\r\n                        return null;\r\n                    }\r\n                    return maybeSelector;\r\n                }\r\n                // the elements from the current selector so far\r\n                currentElements = [];\r\n                // the current list of new selectors to add to the path.\r\n                // We will build it up. We initiate it with one empty selector as we \"multiply\" the new selectors\r\n                // by the parents\r\n                newSelectors = [\r\n                    []\r\n                ];\r\n                for (i = 0; (el = inSelector.elements[i]); i++) {\r\n                    // non parent reference elements just get added\r\n                    if (el.value !== '&') {\r\n                        var nestedSelector = findNestedSelector(el);\r\n                        if (nestedSelector !== null) {\r\n                            // merge the current list of non parent selector elements\r\n                            // on to the current list of selectors to add\r\n                            mergeElementsOnToSelectors(currentElements, newSelectors);\r\n                            var nestedPaths = [];\r\n                            var replaced = void 0;\r\n                            var replacedNewSelectors = [];\r\n                            replaced = replaceParentSelector(nestedPaths, context, nestedSelector);\r\n                            hadParentSelector = hadParentSelector || replaced;\r\n                            // the nestedPaths array should have only one member - replaceParentSelector does not multiply selectors\r\n                            for (k = 0; k < nestedPaths.length; k++) {\r\n                                var replacementSelector = createSelector(createParenthesis(nestedPaths[k], el), el);\r\n                                addAllReplacementsIntoPath(newSelectors, [replacementSelector], el, inSelector, replacedNewSelectors);\r\n                            }\r\n                            newSelectors = replacedNewSelectors;\r\n                            currentElements = [];\r\n                        }\r\n                        else {\r\n                            currentElements.push(el);\r\n                        }\r\n                    }\r\n                    else {\r\n                        hadParentSelector = true;\r\n                        // the new list of selectors to add\r\n                        selectorsMultiplied = [];\r\n                        // merge the current list of non parent selector elements\r\n                        // on to the current list of selectors to add\r\n                        mergeElementsOnToSelectors(currentElements, newSelectors);\r\n                        // loop through our current selectors\r\n                        for (j = 0; j < newSelectors.length; j++) {\r\n                            sel = newSelectors[j];\r\n                            // if we don't have any parent paths, the & might be in a mixin so that it can be used\r\n                            // whether there are parents or not\r\n                            if (context.length === 0) {\r\n                                // the combinator used on el should now be applied to the next element instead so that\r\n                                // it is not lost\r\n                                if (sel.length > 0) {\r\n                                    sel[0].elements.push(new Element(el.combinator, '', el.isVariable, el._index, el._fileInfo));\r\n                                }\r\n                                selectorsMultiplied.push(sel);\r\n                            }\r\n                            else {\r\n                                // and the parent selectors\r\n                                for (k = 0; k < context.length; k++) {\r\n                                    // We need to put the current selectors\r\n                                    // then join the last selector's elements on to the parents selectors\r\n                                    var newSelectorPath = addReplacementIntoPath(sel, context[k], el, inSelector);\r\n                                    // add that to our new set of selectors\r\n                                    selectorsMultiplied.push(newSelectorPath);\r\n                                }\r\n                            }\r\n                        }\r\n                        // our new selectors has been multiplied, so reset the state\r\n                        newSelectors = selectorsMultiplied;\r\n                        currentElements = [];\r\n                    }\r\n                }\r\n                // if we have any elements left over (e.g. .a& .b == .b)\r\n                // add them on to all the current selectors\r\n                mergeElementsOnToSelectors(currentElements, newSelectors);\r\n                for (i = 0; i < newSelectors.length; i++) {\r\n                    length = newSelectors[i].length;\r\n                    if (length > 0) {\r\n                        paths.push(newSelectors[i]);\r\n                        lastSelector = newSelectors[i][length - 1];\r\n                        newSelectors[i][length - 1] = lastSelector.createDerived(lastSelector.elements, inSelector.extendList);\r\n                    }\r\n                }\r\n                return hadParentSelector;\r\n            }\r\n            function deriveSelector(visibilityInfo, deriveFrom) {\r\n                var newSelector = deriveFrom.createDerived(deriveFrom.elements, deriveFrom.extendList, deriveFrom.evaldCondition);\r\n                newSelector.copyVisibilityInfo(visibilityInfo);\r\n                return newSelector;\r\n            }\r\n            // joinSelector code follows\r\n            var i, newPaths, hadParentSelector;\r\n            newPaths = [];\r\n            hadParentSelector = replaceParentSelector(newPaths, context, selector);\r\n            if (!hadParentSelector) {\r\n                if (context.length > 0) {\r\n                    newPaths = [];\r\n                    for (i = 0; i < context.length; i++) {\r\n                        var concatenated = context[i].map(deriveSelector.bind(this, selector.visibilityInfo()));\r\n                        concatenated.push(selector);\r\n                        newPaths.push(concatenated);\r\n                    }\r\n                }\r\n                else {\r\n                    newPaths = [[selector]];\r\n                }\r\n            }\r\n            for (i = 0; i < newPaths.length; i++) {\r\n                paths.push(newPaths[i]);\r\n            }\r\n        }\r\n    });\n\n    var AtRule = function (name, value, rules, index, currentFileInfo, debugInfo, isRooted, visibilityInfo) {\r\n        var i;\r\n        this.name = name;\r\n        this.value = (value instanceof Node) ? value : (value ? new Anonymous(value) : value);\r\n        if (rules) {\r\n            if (Array.isArray(rules)) {\r\n                this.rules = rules;\r\n            }\r\n            else {\r\n                this.rules = [rules];\r\n                this.rules[0].selectors = (new Selector([], null, null, index, currentFileInfo)).createEmptySelectors();\r\n            }\r\n            for (i = 0; i < this.rules.length; i++) {\r\n                this.rules[i].allowImports = true;\r\n            }\r\n            this.setParent(this.rules, this);\r\n        }\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.debugInfo = debugInfo;\r\n        this.isRooted = isRooted || false;\r\n        this.copyVisibilityInfo(visibilityInfo);\r\n        this.allowRoot = true;\r\n    };\r\n    AtRule.prototype = Object.assign(new Node(), {\r\n        type: 'AtRule',\r\n        accept: function (visitor) {\r\n            var value = this.value, rules = this.rules;\r\n            if (rules) {\r\n                this.rules = visitor.visitArray(rules);\r\n            }\r\n            if (value) {\r\n                this.value = visitor.visit(value);\r\n            }\r\n        },\r\n        isRulesetLike: function () {\r\n            return this.rules || !this.isCharset();\r\n        },\r\n        isCharset: function () {\r\n            return '@charset' === this.name;\r\n        },\r\n        genCSS: function (context, output) {\r\n            var value = this.value, rules = this.rules;\r\n            output.add(this.name, this.fileInfo(), this.getIndex());\r\n            if (value) {\r\n                output.add(' ');\r\n                value.genCSS(context, output);\r\n            }\r\n            if (rules) {\r\n                this.outputRuleset(context, output, rules);\r\n            }\r\n            else {\r\n                output.add(';');\r\n            }\r\n        },\r\n        eval: function (context) {\r\n            var mediaPathBackup, mediaBlocksBackup, value = this.value, rules = this.rules;\r\n            // media stored inside other atrule should not bubble over it\r\n            // backpup media bubbling information\r\n            mediaPathBackup = context.mediaPath;\r\n            mediaBlocksBackup = context.mediaBlocks;\r\n            // deleted media bubbling information\r\n            context.mediaPath = [];\r\n            context.mediaBlocks = [];\r\n            if (value) {\r\n                value = value.eval(context);\r\n            }\r\n            if (rules) {\r\n                // assuming that there is only one rule at this point - that is how parser constructs the rule\r\n                rules = [rules[0].eval(context)];\r\n                rules[0].root = true;\r\n            }\r\n            // restore media bubbling information\r\n            context.mediaPath = mediaPathBackup;\r\n            context.mediaBlocks = mediaBlocksBackup;\r\n            return new AtRule(this.name, value, rules, this.getIndex(), this.fileInfo(), this.debugInfo, this.isRooted, this.visibilityInfo());\r\n        },\r\n        variable: function (name) {\r\n            if (this.rules) {\r\n                // assuming that there is only one rule at this point - that is how parser constructs the rule\r\n                return Ruleset.prototype.variable.call(this.rules[0], name);\r\n            }\r\n        },\r\n        find: function () {\r\n            if (this.rules) {\r\n                // assuming that there is only one rule at this point - that is how parser constructs the rule\r\n                return Ruleset.prototype.find.apply(this.rules[0], arguments);\r\n            }\r\n        },\r\n        rulesets: function () {\r\n            if (this.rules) {\r\n                // assuming that there is only one rule at this point - that is how parser constructs the rule\r\n                return Ruleset.prototype.rulesets.apply(this.rules[0]);\r\n            }\r\n        },\r\n        outputRuleset: function (context, output, rules) {\r\n            var ruleCnt = rules.length;\r\n            var i;\r\n            context.tabLevel = (context.tabLevel | 0) + 1;\r\n            // Compressed\r\n            if (context.compress) {\r\n                output.add('{');\r\n                for (i = 0; i < ruleCnt; i++) {\r\n                    rules[i].genCSS(context, output);\r\n                }\r\n                output.add('}');\r\n                context.tabLevel--;\r\n                return;\r\n            }\r\n            // Non-compressed\r\n            var tabSetStr = \"\\n\" + Array(context.tabLevel).join('  '), tabRuleStr = tabSetStr + \"  \";\r\n            if (!ruleCnt) {\r\n                output.add(\" {\" + tabSetStr + \"}\");\r\n            }\r\n            else {\r\n                output.add(\" {\" + tabRuleStr);\r\n                rules[0].genCSS(context, output);\r\n                for (i = 1; i < ruleCnt; i++) {\r\n                    output.add(tabRuleStr);\r\n                    rules[i].genCSS(context, output);\r\n                }\r\n                output.add(tabSetStr + \"}\");\r\n            }\r\n            context.tabLevel--;\r\n        }\r\n    });\n\n    var DetachedRuleset = function (ruleset, frames) {\r\n        this.ruleset = ruleset;\r\n        this.frames = frames;\r\n        this.setParent(this.ruleset, this);\r\n    };\r\n    DetachedRuleset.prototype = Object.assign(new Node(), {\r\n        type: 'DetachedRuleset',\r\n        evalFirst: true,\r\n        accept: function (visitor) {\r\n            this.ruleset = visitor.visit(this.ruleset);\r\n        },\r\n        eval: function (context) {\r\n            var frames = this.frames || copyArray(context.frames);\r\n            return new DetachedRuleset(this.ruleset, frames);\r\n        },\r\n        callEval: function (context) {\r\n            return this.ruleset.eval(this.frames ? new contexts.Eval(context, this.frames.concat(context.frames)) : context);\r\n        }\r\n    });\n\n    var Unit = function (numerator, denominator, backupUnit) {\r\n        this.numerator = numerator ? copyArray(numerator).sort() : [];\r\n        this.denominator = denominator ? copyArray(denominator).sort() : [];\r\n        if (backupUnit) {\r\n            this.backupUnit = backupUnit;\r\n        }\r\n        else if (numerator && numerator.length) {\r\n            this.backupUnit = numerator[0];\r\n        }\r\n    };\r\n    Unit.prototype = Object.assign(new Node(), {\r\n        type: 'Unit',\r\n        clone: function () {\r\n            return new Unit(copyArray(this.numerator), copyArray(this.denominator), this.backupUnit);\r\n        },\r\n        genCSS: function (context, output) {\r\n            // Dimension checks the unit is singular and throws an error if in strict math mode.\r\n            var strictUnits = context && context.strictUnits;\r\n            if (this.numerator.length === 1) {\r\n                output.add(this.numerator[0]); // the ideal situation\r\n            }\r\n            else if (!strictUnits && this.backupUnit) {\r\n                output.add(this.backupUnit);\r\n            }\r\n            else if (!strictUnits && this.denominator.length) {\r\n                output.add(this.denominator[0]);\r\n            }\r\n        },\r\n        toString: function () {\r\n            var i, returnStr = this.numerator.join('*');\r\n            for (i = 0; i < this.denominator.length; i++) {\r\n                returnStr += \"/\" + this.denominator[i];\r\n            }\r\n            return returnStr;\r\n        },\r\n        compare: function (other) {\r\n            return this.is(other.toString()) ? 0 : undefined;\r\n        },\r\n        is: function (unitString) {\r\n            return this.toString().toUpperCase() === unitString.toUpperCase();\r\n        },\r\n        isLength: function () {\r\n            return RegExp('^(px|em|ex|ch|rem|in|cm|mm|pc|pt|ex|vw|vh|vmin|vmax)$', 'gi').test(this.toCSS());\r\n        },\r\n        isEmpty: function () {\r\n            return this.numerator.length === 0 && this.denominator.length === 0;\r\n        },\r\n        isSingular: function () {\r\n            return this.numerator.length <= 1 && this.denominator.length === 0;\r\n        },\r\n        map: function (callback) {\r\n            var i;\r\n            for (i = 0; i < this.numerator.length; i++) {\r\n                this.numerator[i] = callback(this.numerator[i], false);\r\n            }\r\n            for (i = 0; i < this.denominator.length; i++) {\r\n                this.denominator[i] = callback(this.denominator[i], true);\r\n            }\r\n        },\r\n        usedUnits: function () {\r\n            var group;\r\n            var result = {};\r\n            var mapUnit;\r\n            var groupName;\r\n            mapUnit = function (atomicUnit) {\r\n                // eslint-disable-next-line no-prototype-builtins\r\n                if (group.hasOwnProperty(atomicUnit) && !result[groupName]) {\r\n                    result[groupName] = atomicUnit;\r\n                }\r\n                return atomicUnit;\r\n            };\r\n            for (groupName in unitConversions) {\r\n                // eslint-disable-next-line no-prototype-builtins\r\n                if (unitConversions.hasOwnProperty(groupName)) {\r\n                    group = unitConversions[groupName];\r\n                    this.map(mapUnit);\r\n                }\r\n            }\r\n            return result;\r\n        },\r\n        cancel: function () {\r\n            var counter = {};\r\n            var atomicUnit;\r\n            var i;\r\n            for (i = 0; i < this.numerator.length; i++) {\r\n                atomicUnit = this.numerator[i];\r\n                counter[atomicUnit] = (counter[atomicUnit] || 0) + 1;\r\n            }\r\n            for (i = 0; i < this.denominator.length; i++) {\r\n                atomicUnit = this.denominator[i];\r\n                counter[atomicUnit] = (counter[atomicUnit] || 0) - 1;\r\n            }\r\n            this.numerator = [];\r\n            this.denominator = [];\r\n            for (atomicUnit in counter) {\r\n                // eslint-disable-next-line no-prototype-builtins\r\n                if (counter.hasOwnProperty(atomicUnit)) {\r\n                    var count = counter[atomicUnit];\r\n                    if (count > 0) {\r\n                        for (i = 0; i < count; i++) {\r\n                            this.numerator.push(atomicUnit);\r\n                        }\r\n                    }\r\n                    else if (count < 0) {\r\n                        for (i = 0; i < -count; i++) {\r\n                            this.denominator.push(atomicUnit);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this.numerator.sort();\r\n            this.denominator.sort();\r\n        }\r\n    });\n\n    /* eslint-disable no-prototype-builtins */\r\n    //\r\n    // A number with a unit\r\n    //\r\n    var Dimension = function (value, unit) {\r\n        this.value = parseFloat(value);\r\n        if (isNaN(this.value)) {\r\n            throw new Error('Dimension is not a number.');\r\n        }\r\n        this.unit = (unit && unit instanceof Unit) ? unit :\r\n            new Unit(unit ? [unit] : undefined);\r\n        this.setParent(this.unit, this);\r\n    };\r\n    Dimension.prototype = Object.assign(new Node(), {\r\n        type: 'Dimension',\r\n        accept: function (visitor) {\r\n            this.unit = visitor.visit(this.unit);\r\n        },\r\n        // remove when Nodes have JSDoc types\r\n        // eslint-disable-next-line no-unused-vars\r\n        eval: function (context) {\r\n            return this;\r\n        },\r\n        toColor: function () {\r\n            return new Color([this.value, this.value, this.value]);\r\n        },\r\n        genCSS: function (context, output) {\r\n            if ((context && context.strictUnits) && !this.unit.isSingular()) {\r\n                throw new Error(\"Multiple units in dimension. Correct the units or use the unit function. Bad unit: \" + this.unit.toString());\r\n            }\r\n            var value = this.fround(context, this.value);\r\n            var strValue = String(value);\r\n            if (value !== 0 && value < 0.000001 && value > -0.000001) {\r\n                // would be output 1e-6 etc.\r\n                strValue = value.toFixed(20).replace(/0+$/, '');\r\n            }\r\n            if (context && context.compress) {\r\n                // Zero values doesn't need a unit\r\n                if (value === 0 && this.unit.isLength()) {\r\n                    output.add(strValue);\r\n                    return;\r\n                }\r\n                // Float values doesn't need a leading zero\r\n                if (value > 0 && value < 1) {\r\n                    strValue = (strValue).substr(1);\r\n                }\r\n            }\r\n            output.add(strValue);\r\n            this.unit.genCSS(context, output);\r\n        },\r\n        // In an operation between two Dimensions,\r\n        // we default to the first Dimension's unit,\r\n        // so `1px + 2` will yield `3px`.\r\n        operate: function (context, op, other) {\r\n            /* jshint noempty:false */\r\n            var value = this._operate(context, op, this.value, other.value);\r\n            var unit = this.unit.clone();\r\n            if (op === '+' || op === '-') {\r\n                if (unit.numerator.length === 0 && unit.denominator.length === 0) {\r\n                    unit = other.unit.clone();\r\n                    if (this.unit.backupUnit) {\r\n                        unit.backupUnit = this.unit.backupUnit;\r\n                    }\r\n                }\r\n                else if (other.unit.numerator.length === 0 && unit.denominator.length === 0) ;\r\n                else {\r\n                    other = other.convertTo(this.unit.usedUnits());\r\n                    if (context.strictUnits && other.unit.toString() !== unit.toString()) {\r\n                        throw new Error('Incompatible units. Change the units or use the unit function. '\r\n                            + (\"Bad units: '\" + unit.toString() + \"' and '\" + other.unit.toString() + \"'.\"));\r\n                    }\r\n                    value = this._operate(context, op, this.value, other.value);\r\n                }\r\n            }\r\n            else if (op === '*') {\r\n                unit.numerator = unit.numerator.concat(other.unit.numerator).sort();\r\n                unit.denominator = unit.denominator.concat(other.unit.denominator).sort();\r\n                unit.cancel();\r\n            }\r\n            else if (op === '/') {\r\n                unit.numerator = unit.numerator.concat(other.unit.denominator).sort();\r\n                unit.denominator = unit.denominator.concat(other.unit.numerator).sort();\r\n                unit.cancel();\r\n            }\r\n            return new Dimension(value, unit);\r\n        },\r\n        compare: function (other) {\r\n            var a, b;\r\n            if (!(other instanceof Dimension)) {\r\n                return undefined;\r\n            }\r\n            if (this.unit.isEmpty() || other.unit.isEmpty()) {\r\n                a = this;\r\n                b = other;\r\n            }\r\n            else {\r\n                a = this.unify();\r\n                b = other.unify();\r\n                if (a.unit.compare(b.unit) !== 0) {\r\n                    return undefined;\r\n                }\r\n            }\r\n            return Node.numericCompare(a.value, b.value);\r\n        },\r\n        unify: function () {\r\n            return this.convertTo({ length: 'px', duration: 's', angle: 'rad' });\r\n        },\r\n        convertTo: function (conversions) {\r\n            var value = this.value;\r\n            var unit = this.unit.clone();\r\n            var i;\r\n            var groupName;\r\n            var group;\r\n            var targetUnit;\r\n            var derivedConversions = {};\r\n            var applyUnit;\r\n            if (typeof conversions === 'string') {\r\n                for (i in unitConversions) {\r\n                    if (unitConversions[i].hasOwnProperty(conversions)) {\r\n                        derivedConversions = {};\r\n                        derivedConversions[i] = conversions;\r\n                    }\r\n                }\r\n                conversions = derivedConversions;\r\n            }\r\n            applyUnit = function (atomicUnit, denominator) {\r\n                if (group.hasOwnProperty(atomicUnit)) {\r\n                    if (denominator) {\r\n                        value = value / (group[atomicUnit] / group[targetUnit]);\r\n                    }\r\n                    else {\r\n                        value = value * (group[atomicUnit] / group[targetUnit]);\r\n                    }\r\n                    return targetUnit;\r\n                }\r\n                return atomicUnit;\r\n            };\r\n            for (groupName in conversions) {\r\n                if (conversions.hasOwnProperty(groupName)) {\r\n                    targetUnit = conversions[groupName];\r\n                    group = unitConversions[groupName];\r\n                    unit.map(applyUnit);\r\n                }\r\n            }\r\n            unit.cancel();\r\n            return new Dimension(value, unit);\r\n        }\r\n    });\n\n    var MATH = Math$1;\r\n    var Operation = function (op, operands, isSpaced) {\r\n        this.op = op.trim();\r\n        this.operands = operands;\r\n        this.isSpaced = isSpaced;\r\n    };\r\n    Operation.prototype = Object.assign(new Node(), {\r\n        type: 'Operation',\r\n        accept: function (visitor) {\r\n            this.operands = visitor.visitArray(this.operands);\r\n        },\r\n        eval: function (context) {\r\n            var a = this.operands[0].eval(context), b = this.operands[1].eval(context), op;\r\n            if (context.isMathOn(this.op)) {\r\n                op = this.op === './' ? '/' : this.op;\r\n                if (a instanceof Dimension && b instanceof Color) {\r\n                    a = a.toColor();\r\n                }\r\n                if (b instanceof Dimension && a instanceof Color) {\r\n                    b = b.toColor();\r\n                }\r\n                if (!a.operate || !b.operate) {\r\n                    if ((a instanceof Operation || b instanceof Operation)\r\n                        && a.op === '/' && context.math === MATH.PARENS_DIVISION) {\r\n                        return new Operation(this.op, [a, b], this.isSpaced);\r\n                    }\r\n                    throw { type: 'Operation',\r\n                        message: 'Operation on an invalid type' };\r\n                }\r\n                return a.operate(context, op, b);\r\n            }\r\n            else {\r\n                return new Operation(this.op, [a, b], this.isSpaced);\r\n            }\r\n        },\r\n        genCSS: function (context, output) {\r\n            this.operands[0].genCSS(context, output);\r\n            if (this.isSpaced) {\r\n                output.add(' ');\r\n            }\r\n            output.add(this.op);\r\n            if (this.isSpaced) {\r\n                output.add(' ');\r\n            }\r\n            this.operands[1].genCSS(context, output);\r\n        }\r\n    });\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation.\r\n\n    Permission to use, copy, modify, and/or distribute this software for any\r\n    purpose with or without fee is hereby granted.\r\n\n    THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\n    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\n    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\n    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\n    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\n    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\n    PERFORMANCE OF THIS SOFTWARE.\r\n    ***************************************************************************** */\r\n    var __assign = function () {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s)\r\n                    if (Object.prototype.hasOwnProperty.call(s, p))\r\n                        t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n    function __spreadArray(to, from, pack) {\r\n        if (pack || arguments.length === 2)\r\n            for (var i = 0, l = from.length, ar; i < l; i++) {\r\n                if (ar || !(i in from)) {\r\n                    if (!ar)\r\n                        ar = Array.prototype.slice.call(from, 0, i);\r\n                    ar[i] = from[i];\r\n                }\r\n            }\r\n        return to.concat(ar || from);\r\n    }\n\n    var Expression = function (value, noSpacing) {\r\n        this.value = value;\r\n        this.noSpacing = noSpacing;\r\n        if (!value) {\r\n            throw new Error('Expression requires an array parameter');\r\n        }\r\n    };\r\n    Expression.prototype = Object.assign(new Node(), {\r\n        type: 'Expression',\r\n        accept: function (visitor) {\r\n            this.value = visitor.visitArray(this.value);\r\n        },\r\n        eval: function (context) {\r\n            var returnValue;\r\n            var mathOn = context.isMathOn();\r\n            var inParenthesis = this.parens;\r\n            var doubleParen = false;\r\n            if (inParenthesis) {\r\n                context.inParenthesis();\r\n            }\r\n            if (this.value.length > 1) {\r\n                returnValue = new Expression(this.value.map(function (e) {\r\n                    if (!e.eval) {\r\n                        return e;\r\n                    }\r\n                    return e.eval(context);\r\n                }), this.noSpacing);\r\n            }\r\n            else if (this.value.length === 1) {\r\n                if (this.value[0].parens && !this.value[0].parensInOp && !context.inCalc) {\r\n                    doubleParen = true;\r\n                }\r\n                returnValue = this.value[0].eval(context);\r\n            }\r\n            else {\r\n                returnValue = this;\r\n            }\r\n            if (inParenthesis) {\r\n                context.outOfParenthesis();\r\n            }\r\n            if (this.parens && this.parensInOp && !mathOn && !doubleParen\r\n                && (!(returnValue instanceof Dimension))) {\r\n                returnValue = new Paren(returnValue);\r\n            }\r\n            return returnValue;\r\n        },\r\n        genCSS: function (context, output) {\r\n            for (var i_1 = 0; i_1 < this.value.length; i_1++) {\r\n                this.value[i_1].genCSS(context, output);\r\n                if (!this.noSpacing && i_1 + 1 < this.value.length) {\r\n                    output.add(' ');\r\n                }\r\n            }\r\n        },\r\n        throwAwayComments: function () {\r\n            this.value = this.value.filter(function (v) {\r\n                return !(v instanceof Comment);\r\n            });\r\n        }\r\n    });\n\n    var functionCaller = /** @class */ (function () {\r\n        function functionCaller(name, context, index, currentFileInfo) {\r\n            this.name = name.toLowerCase();\r\n            this.index = index;\r\n            this.context = context;\r\n            this.currentFileInfo = currentFileInfo;\r\n            this.func = context.frames[0].functionRegistry.get(this.name);\r\n        }\r\n        functionCaller.prototype.isValid = function () {\r\n            return Boolean(this.func);\r\n        };\r\n        functionCaller.prototype.call = function (args) {\r\n            var _this = this;\r\n            if (!(Array.isArray(args))) {\r\n                args = [args];\r\n            }\r\n            var evalArgs = this.func.evalArgs;\r\n            if (evalArgs !== false) {\r\n                args = args.map(function (a) { return a.eval(_this.context); });\r\n            }\r\n            var commentFilter = function (item) { return !(item.type === 'Comment'); };\r\n            // This code is terrible and should be replaced as per this issue...\r\n            // https://github.com/less/less.js/issues/2477\r\n            args = args\r\n                .filter(commentFilter)\r\n                .map(function (item) {\r\n                if (item.type === 'Expression') {\r\n                    var subNodes = item.value.filter(commentFilter);\r\n                    if (subNodes.length === 1) {\r\n                        // https://github.com/less/less.js/issues/3616\r\n                        if (item.parens && subNodes[0].op === '/') {\r\n                            return item;\r\n                        }\r\n                        return subNodes[0];\r\n                    }\r\n                    else {\r\n                        return new Expression(subNodes);\r\n                    }\r\n                }\r\n                return item;\r\n            });\r\n            if (evalArgs === false) {\r\n                return this.func.apply(this, __spreadArray([this.context], args));\r\n            }\r\n            return this.func.apply(this, args);\r\n        };\r\n        return functionCaller;\r\n    }());\n\n    //\r\n    // A function call node.\r\n    //\r\n    var Call = function (name, args, index, currentFileInfo) {\r\n        this.name = name;\r\n        this.args = args;\r\n        this.calc = name === 'calc';\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n    };\r\n    Call.prototype = Object.assign(new Node(), {\r\n        type: 'Call',\r\n        accept: function (visitor) {\r\n            if (this.args) {\r\n                this.args = visitor.visitArray(this.args);\r\n            }\r\n        },\r\n        //\r\n        // When evaluating a function call,\r\n        // we either find the function in the functionRegistry,\r\n        // in which case we call it, passing the  evaluated arguments,\r\n        // if this returns null or we cannot find the function, we\r\n        // simply print it out as it appeared originally [2].\r\n        //\r\n        // The reason why we evaluate the arguments, is in the case where\r\n        // we try to pass a variable to a function, like: `saturate(@color)`.\r\n        // The function should receive the value, not the variable.\r\n        //\r\n        eval: function (context) {\r\n            var _this = this;\r\n            /**\r\n             * Turn off math for calc(), and switch back on for evaluating nested functions\r\n             */\r\n            var currentMathContext = context.mathOn;\r\n            context.mathOn = !this.calc;\r\n            if (this.calc || context.inCalc) {\r\n                context.enterCalc();\r\n            }\r\n            var exitCalc = function () {\r\n                if (_this.calc || context.inCalc) {\r\n                    context.exitCalc();\r\n                }\r\n                context.mathOn = currentMathContext;\r\n            };\r\n            var result;\r\n            var funcCaller = new functionCaller(this.name, context, this.getIndex(), this.fileInfo());\r\n            if (funcCaller.isValid()) {\r\n                try {\r\n                    result = funcCaller.call(this.args);\r\n                    exitCalc();\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-prototype-builtins\r\n                    if (e.hasOwnProperty('line') && e.hasOwnProperty('column')) {\r\n                        throw e;\r\n                    }\r\n                    throw {\r\n                        type: e.type || 'Runtime',\r\n                        message: \"Error evaluating function `\" + this.name + \"`\" + (e.message ? \": \" + e.message : ''),\r\n                        index: this.getIndex(),\r\n                        filename: this.fileInfo().filename,\r\n                        line: e.lineNumber,\r\n                        column: e.columnNumber\r\n                    };\r\n                }\r\n            }\r\n            if (result !== null && result !== undefined) {\r\n                // Results that that are not nodes are cast as Anonymous nodes\r\n                // Falsy values or booleans are returned as empty nodes\r\n                if (!(result instanceof Node)) {\r\n                    if (!result || result === true) {\r\n                        result = new Anonymous(null);\r\n                    }\r\n                    else {\r\n                        result = new Anonymous(result.toString());\r\n                    }\r\n                }\r\n                result._index = this._index;\r\n                result._fileInfo = this._fileInfo;\r\n                return result;\r\n            }\r\n            var args = this.args.map(function (a) { return a.eval(context); });\r\n            exitCalc();\r\n            return new Call(this.name, args, this.getIndex(), this.fileInfo());\r\n        },\r\n        genCSS: function (context, output) {\r\n            output.add(this.name + \"(\", this.fileInfo(), this.getIndex());\r\n            for (var i_1 = 0; i_1 < this.args.length; i_1++) {\r\n                this.args[i_1].genCSS(context, output);\r\n                if (i_1 + 1 < this.args.length) {\r\n                    output.add(', ');\r\n                }\r\n            }\r\n            output.add(')');\r\n        }\r\n    });\n\n    var Variable = function (name, index, currentFileInfo) {\r\n        this.name = name;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n    };\r\n    Variable.prototype = Object.assign(new Node(), {\r\n        type: 'Variable',\r\n        eval: function (context) {\r\n            var variable, name = this.name;\r\n            if (name.indexOf('@@') === 0) {\r\n                name = \"@\" + new Variable(name.slice(1), this.getIndex(), this.fileInfo()).eval(context).value;\r\n            }\r\n            if (this.evaluating) {\r\n                throw { type: 'Name',\r\n                    message: \"Recursive variable definition for \" + name,\r\n                    filename: this.fileInfo().filename,\r\n                    index: this.getIndex() };\r\n            }\r\n            this.evaluating = true;\r\n            variable = this.find(context.frames, function (frame) {\r\n                var v = frame.variable(name);\r\n                if (v) {\r\n                    if (v.important) {\r\n                        var importantScope = context.importantScope[context.importantScope.length - 1];\r\n                        importantScope.important = v.important;\r\n                    }\r\n                    // If in calc, wrap vars in a function call to cascade evaluate args first\r\n                    if (context.inCalc) {\r\n                        return (new Call('_SELF', [v.value])).eval(context);\r\n                    }\r\n                    else {\r\n                        return v.value.eval(context);\r\n                    }\r\n                }\r\n            });\r\n            if (variable) {\r\n                this.evaluating = false;\r\n                return variable;\r\n            }\r\n            else {\r\n                throw { type: 'Name',\r\n                    message: \"variable \" + name + \" is undefined\",\r\n                    filename: this.fileInfo().filename,\r\n                    index: this.getIndex() };\r\n            }\r\n        },\r\n        find: function (obj, fun) {\r\n            for (var i_1 = 0, r = void 0; i_1 < obj.length; i_1++) {\r\n                r = fun.call(obj, obj[i_1]);\r\n                if (r) {\r\n                    return r;\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n    });\n\n    var Property = function (name, index, currentFileInfo) {\r\n        this.name = name;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n    };\r\n    Property.prototype = Object.assign(new Node(), {\r\n        type: 'Property',\r\n        eval: function (context) {\r\n            var property;\r\n            var name = this.name;\r\n            // TODO: shorten this reference\r\n            var mergeRules = context.pluginManager.less.visitors.ToCSSVisitor.prototype._mergeRules;\r\n            if (this.evaluating) {\r\n                throw { type: 'Name',\r\n                    message: \"Recursive property reference for \" + name,\r\n                    filename: this.fileInfo().filename,\r\n                    index: this.getIndex() };\r\n            }\r\n            this.evaluating = true;\r\n            property = this.find(context.frames, function (frame) {\r\n                var v;\r\n                var vArr = frame.property(name);\r\n                if (vArr) {\r\n                    for (var i_1 = 0; i_1 < vArr.length; i_1++) {\r\n                        v = vArr[i_1];\r\n                        vArr[i_1] = new Declaration(v.name, v.value, v.important, v.merge, v.index, v.currentFileInfo, v.inline, v.variable);\r\n                    }\r\n                    mergeRules(vArr);\r\n                    v = vArr[vArr.length - 1];\r\n                    if (v.important) {\r\n                        var importantScope = context.importantScope[context.importantScope.length - 1];\r\n                        importantScope.important = v.important;\r\n                    }\r\n                    v = v.value.eval(context);\r\n                    return v;\r\n                }\r\n            });\r\n            if (property) {\r\n                this.evaluating = false;\r\n                return property;\r\n            }\r\n            else {\r\n                throw { type: 'Name',\r\n                    message: \"Property '\" + name + \"' is undefined\",\r\n                    filename: this.currentFileInfo.filename,\r\n                    index: this.index };\r\n            }\r\n        },\r\n        find: function (obj, fun) {\r\n            for (var i_2 = 0, r = void 0; i_2 < obj.length; i_2++) {\r\n                r = fun.call(obj, obj[i_2]);\r\n                if (r) {\r\n                    return r;\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n    });\n\n    var Attribute = function (key, op, value, cif) {\r\n        this.key = key;\r\n        this.op = op;\r\n        this.value = value;\r\n        this.cif = cif;\r\n    };\r\n    Attribute.prototype = Object.assign(new Node(), {\r\n        type: 'Attribute',\r\n        eval: function (context) {\r\n            return new Attribute(this.key.eval ? this.key.eval(context) : this.key, this.op, (this.value && this.value.eval) ? this.value.eval(context) : this.value, this.cif);\r\n        },\r\n        genCSS: function (context, output) {\r\n            output.add(this.toCSS(context));\r\n        },\r\n        toCSS: function (context) {\r\n            var value = this.key.toCSS ? this.key.toCSS(context) : this.key;\r\n            if (this.op) {\r\n                value += this.op;\r\n                value += (this.value.toCSS ? this.value.toCSS(context) : this.value);\r\n            }\r\n            if (this.cif) {\r\n                value = value + ' ' + this.cif;\r\n            }\r\n            return \"[\" + value + \"]\";\r\n        }\r\n    });\n\n    var Quoted = function (str, content, escaped, index, currentFileInfo) {\r\n        this.escaped = (escaped === undefined) ? true : escaped;\r\n        this.value = content || '';\r\n        this.quote = str.charAt(0);\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.variableRegex = /@\\{([\\w-]+)\\}/g;\r\n        this.propRegex = /\\$\\{([\\w-]+)\\}/g;\r\n        this.allowRoot = escaped;\r\n    };\r\n    Quoted.prototype = Object.assign(new Node(), {\r\n        type: 'Quoted',\r\n        genCSS: function (context, output) {\r\n            if (!this.escaped) {\r\n                output.add(this.quote, this.fileInfo(), this.getIndex());\r\n            }\r\n            output.add(this.value);\r\n            if (!this.escaped) {\r\n                output.add(this.quote);\r\n            }\r\n        },\r\n        containsVariables: function () {\r\n            return this.value.match(this.variableRegex);\r\n        },\r\n        eval: function (context) {\r\n            var that = this;\r\n            var value = this.value;\r\n            var variableReplacement = function (_, name) {\r\n                var v = new Variable(\"@\" + name, that.getIndex(), that.fileInfo()).eval(context, true);\r\n                return (v instanceof Quoted) ? v.value : v.toCSS();\r\n            };\r\n            var propertyReplacement = function (_, name) {\r\n                var v = new Property(\"$\" + name, that.getIndex(), that.fileInfo()).eval(context, true);\r\n                return (v instanceof Quoted) ? v.value : v.toCSS();\r\n            };\r\n            function iterativeReplace(value, regexp, replacementFnc) {\r\n                var evaluatedValue = value;\r\n                do {\r\n                    value = evaluatedValue.toString();\r\n                    evaluatedValue = value.replace(regexp, replacementFnc);\r\n                } while (value !== evaluatedValue);\r\n                return evaluatedValue;\r\n            }\r\n            value = iterativeReplace(value, this.variableRegex, variableReplacement);\r\n            value = iterativeReplace(value, this.propRegex, propertyReplacement);\r\n            return new Quoted(this.quote + value + this.quote, value, this.escaped, this.getIndex(), this.fileInfo());\r\n        },\r\n        compare: function (other) {\r\n            // when comparing quoted strings allow the quote to differ\r\n            if (other.type === 'Quoted' && !this.escaped && !other.escaped) {\r\n                return Node.numericCompare(this.value, other.value);\r\n            }\r\n            else {\r\n                return other.toCSS && this.toCSS() === other.toCSS() ? 0 : undefined;\r\n            }\r\n        }\r\n    });\n\n    function escapePath(path) {\r\n        return path.replace(/[()'\"\\s]/g, function (match) { return \"\\\\\" + match; });\r\n    }\r\n    var URL = function (val, index, currentFileInfo, isEvald) {\r\n        this.value = val;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.isEvald = isEvald;\r\n    };\r\n    URL.prototype = Object.assign(new Node(), {\r\n        type: 'Url',\r\n        accept: function (visitor) {\r\n            this.value = visitor.visit(this.value);\r\n        },\r\n        genCSS: function (context, output) {\r\n            output.add('url(');\r\n            this.value.genCSS(context, output);\r\n            output.add(')');\r\n        },\r\n        eval: function (context) {\r\n            var val = this.value.eval(context);\r\n            var rootpath;\r\n            if (!this.isEvald) {\r\n                // Add the rootpath if the URL requires a rewrite\r\n                rootpath = this.fileInfo() && this.fileInfo().rootpath;\r\n                if (typeof rootpath === 'string' &&\r\n                    typeof val.value === 'string' &&\r\n                    context.pathRequiresRewrite(val.value)) {\r\n                    if (!val.quote) {\r\n                        rootpath = escapePath(rootpath);\r\n                    }\r\n                    val.value = context.rewritePath(val.value, rootpath);\r\n                }\r\n                else {\r\n                    val.value = context.normalizePath(val.value);\r\n                }\r\n                // Add url args if enabled\r\n                if (context.urlArgs) {\r\n                    if (!val.value.match(/^\\s*data:/)) {\r\n                        var delimiter = val.value.indexOf('?') === -1 ? '?' : '&';\r\n                        var urlArgs = delimiter + context.urlArgs;\r\n                        if (val.value.indexOf('#') !== -1) {\r\n                            val.value = val.value.replace('#', urlArgs + \"#\");\r\n                        }\r\n                        else {\r\n                            val.value += urlArgs;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return new URL(val, this.getIndex(), this.fileInfo(), true);\r\n        }\r\n    });\n\n    var NestableAtRulePrototype = {\r\n        isRulesetLike: function () {\r\n            return true;\r\n        },\r\n        accept: function (visitor) {\r\n            if (this.features) {\r\n                this.features = visitor.visit(this.features);\r\n            }\r\n            if (this.rules) {\r\n                this.rules = visitor.visitArray(this.rules);\r\n            }\r\n        },\r\n        evalTop: function (context) {\r\n            var result = this;\r\n            // Render all dependent Media blocks.\r\n            if (context.mediaBlocks.length > 1) {\r\n                var selectors = (new Selector([], null, null, this.getIndex(), this.fileInfo())).createEmptySelectors();\r\n                result = new Ruleset(selectors, context.mediaBlocks);\r\n                result.multiMedia = true;\r\n                result.copyVisibilityInfo(this.visibilityInfo());\r\n                this.setParent(result, this);\r\n            }\r\n            delete context.mediaBlocks;\r\n            delete context.mediaPath;\r\n            return result;\r\n        },\r\n        evalNested: function (context) {\r\n            var i;\r\n            var value;\r\n            var path = context.mediaPath.concat([this]);\r\n            // Extract the media-query conditions separated with `,` (OR).\r\n            for (i = 0; i < path.length; i++) {\r\n                value = path[i].features instanceof Value ?\r\n                    path[i].features.value : path[i].features;\r\n                path[i] = Array.isArray(value) ? value : [value];\r\n            }\r\n            // Trace all permutations to generate the resulting media-query.\r\n            //\r\n            // (a, b and c) with nested (d, e) ->\r\n            //    a and d\r\n            //    a and e\r\n            //    b and c and d\r\n            //    b and c and e\r\n            this.features = new Value(this.permute(path).map(function (path) {\r\n                path = path.map(function (fragment) { return fragment.toCSS ? fragment : new Anonymous(fragment); });\r\n                for (i = path.length - 1; i > 0; i--) {\r\n                    path.splice(i, 0, new Anonymous('and'));\r\n                }\r\n                return new Expression(path);\r\n            }));\r\n            this.setParent(this.features, this);\r\n            // Fake a tree-node that doesn't output anything.\r\n            return new Ruleset([], []);\r\n        },\r\n        permute: function (arr) {\r\n            if (arr.length === 0) {\r\n                return [];\r\n            }\r\n            else if (arr.length === 1) {\r\n                return arr[0];\r\n            }\r\n            else {\r\n                var result = [];\r\n                var rest = this.permute(arr.slice(1));\r\n                for (var i_1 = 0; i_1 < rest.length; i_1++) {\r\n                    for (var j = 0; j < arr[0].length; j++) {\r\n                        result.push([arr[0][j]].concat(rest[i_1]));\r\n                    }\r\n                }\r\n                return result;\r\n            }\r\n        },\r\n        bubbleSelectors: function (selectors) {\r\n            if (!selectors) {\r\n                return;\r\n            }\r\n            this.rules = [new Ruleset(copyArray(selectors), [this.rules[0]])];\r\n            this.setParent(this.rules, this);\r\n        }\r\n    };\n\n    var Media = function (value, features, index, currentFileInfo, visibilityInfo) {\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        var selectors = (new Selector([], null, null, this._index, this._fileInfo)).createEmptySelectors();\r\n        this.features = new Value(features);\r\n        this.rules = [new Ruleset(selectors, value)];\r\n        this.rules[0].allowImports = true;\r\n        this.copyVisibilityInfo(visibilityInfo);\r\n        this.allowRoot = true;\r\n        this.setParent(selectors, this);\r\n        this.setParent(this.features, this);\r\n        this.setParent(this.rules, this);\r\n    };\r\n    Media.prototype = Object.assign(new AtRule(), __assign(__assign({ type: 'Media' }, NestableAtRulePrototype), { genCSS: function (context, output) {\r\n            output.add('@media ', this._fileInfo, this._index);\r\n            this.features.genCSS(context, output);\r\n            this.outputRuleset(context, output, this.rules);\r\n        }, eval: function (context) {\r\n            if (!context.mediaBlocks) {\r\n                context.mediaBlocks = [];\r\n                context.mediaPath = [];\r\n            }\r\n            var media = new Media(null, [], this._index, this._fileInfo, this.visibilityInfo());\r\n            if (this.debugInfo) {\r\n                this.rules[0].debugInfo = this.debugInfo;\r\n                media.debugInfo = this.debugInfo;\r\n            }\r\n            media.features = this.features.eval(context);\r\n            context.mediaPath.push(media);\r\n            context.mediaBlocks.push(media);\r\n            this.rules[0].functionRegistry = context.frames[0].functionRegistry.inherit();\r\n            context.frames.unshift(this.rules[0]);\r\n            media.rules = [this.rules[0].eval(context)];\r\n            context.frames.shift();\r\n            context.mediaPath.pop();\r\n            return context.mediaPath.length === 0 ? media.evalTop(context) :\r\n                media.evalNested(context);\r\n        } }));\n\n    //\r\n    // CSS @import node\r\n    //\r\n    // The general strategy here is that we don't want to wait\r\n    // for the parsing to be completed, before we start importing\r\n    // the file. That's because in the context of a browser,\r\n    // most of the time will be spent waiting for the server to respond.\r\n    //\r\n    // On creation, we push the import path to our import queue, though\r\n    // `import,push`, we also pass it a callback, which it'll call once\r\n    // the file has been fetched, and parsed.\r\n    //\r\n    var Import = function (path, features, options, index, currentFileInfo, visibilityInfo) {\r\n        this.options = options;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.path = path;\r\n        this.features = features;\r\n        this.allowRoot = true;\r\n        if (this.options.less !== undefined || this.options.inline) {\r\n            this.css = !this.options.less || this.options.inline;\r\n        }\r\n        else {\r\n            var pathValue = this.getPath();\r\n            if (pathValue && /[#.&?]css([?;].*)?$/.test(pathValue)) {\r\n                this.css = true;\r\n            }\r\n        }\r\n        this.copyVisibilityInfo(visibilityInfo);\r\n        this.setParent(this.features, this);\r\n        this.setParent(this.path, this);\r\n    };\r\n    Import.prototype = Object.assign(new Node(), {\r\n        type: 'Import',\r\n        accept: function (visitor) {\r\n            if (this.features) {\r\n                this.features = visitor.visit(this.features);\r\n            }\r\n            this.path = visitor.visit(this.path);\r\n            if (!this.options.isPlugin && !this.options.inline && this.root) {\r\n                this.root = visitor.visit(this.root);\r\n            }\r\n        },\r\n        genCSS: function (context, output) {\r\n            if (this.css && this.path._fileInfo.reference === undefined) {\r\n                output.add('@import ', this._fileInfo, this._index);\r\n                this.path.genCSS(context, output);\r\n                if (this.features) {\r\n                    output.add(' ');\r\n                    this.features.genCSS(context, output);\r\n                }\r\n                output.add(';');\r\n            }\r\n        },\r\n        getPath: function () {\r\n            return (this.path instanceof URL) ?\r\n                this.path.value.value : this.path.value;\r\n        },\r\n        isVariableImport: function () {\r\n            var path = this.path;\r\n            if (path instanceof URL) {\r\n                path = path.value;\r\n            }\r\n            if (path instanceof Quoted) {\r\n                return path.containsVariables();\r\n            }\r\n            return true;\r\n        },\r\n        evalForImport: function (context) {\r\n            var path = this.path;\r\n            if (path instanceof URL) {\r\n                path = path.value;\r\n            }\r\n            return new Import(path.eval(context), this.features, this.options, this._index, this._fileInfo, this.visibilityInfo());\r\n        },\r\n        evalPath: function (context) {\r\n            var path = this.path.eval(context);\r\n            var fileInfo = this._fileInfo;\r\n            if (!(path instanceof URL)) {\r\n                // Add the rootpath if the URL requires a rewrite\r\n                var pathValue = path.value;\r\n                if (fileInfo &&\r\n                    pathValue &&\r\n                    context.pathRequiresRewrite(pathValue)) {\r\n                    path.value = context.rewritePath(pathValue, fileInfo.rootpath);\r\n                }\r\n                else {\r\n                    path.value = context.normalizePath(path.value);\r\n                }\r\n            }\r\n            return path;\r\n        },\r\n        eval: function (context) {\r\n            var result = this.doEval(context);\r\n            if (this.options.reference || this.blocksVisibility()) {\r\n                if (result.length || result.length === 0) {\r\n                    result.forEach(function (node) {\r\n                        node.addVisibilityBlock();\r\n                    });\r\n                }\r\n                else {\r\n                    result.addVisibilityBlock();\r\n                }\r\n            }\r\n            return result;\r\n        },\r\n        doEval: function (context) {\r\n            var ruleset;\r\n            var registry;\r\n            var features = this.features && this.features.eval(context);\r\n            if (this.options.isPlugin) {\r\n                if (this.root && this.root.eval) {\r\n                    try {\r\n                        this.root.eval(context);\r\n                    }\r\n                    catch (e) {\r\n                        e.message = 'Plugin error during evaluation';\r\n                        throw new LessError(e, this.root.imports, this.root.filename);\r\n                    }\r\n                }\r\n                registry = context.frames[0] && context.frames[0].functionRegistry;\r\n                if (registry && this.root && this.root.functions) {\r\n                    registry.addMultiple(this.root.functions);\r\n                }\r\n                return [];\r\n            }\r\n            if (this.skip) {\r\n                if (typeof this.skip === 'function') {\r\n                    this.skip = this.skip();\r\n                }\r\n                if (this.skip) {\r\n                    return [];\r\n                }\r\n            }\r\n            if (this.options.inline) {\r\n                var contents = new Anonymous(this.root, 0, {\r\n                    filename: this.importedFilename,\r\n                    reference: this.path._fileInfo && this.path._fileInfo.reference\r\n                }, true, true);\r\n                return this.features ? new Media([contents], this.features.value) : [contents];\r\n            }\r\n            else if (this.css) {\r\n                var newImport = new Import(this.evalPath(context), features, this.options, this._index);\r\n                if (!newImport.css && this.error) {\r\n                    throw this.error;\r\n                }\r\n                return newImport;\r\n            }\r\n            else if (this.root) {\r\n                ruleset = new Ruleset(null, copyArray(this.root.rules));\r\n                ruleset.evalImports(context);\r\n                return this.features ? new Media(ruleset.rules, this.features.value) : ruleset.rules;\r\n            }\r\n            else {\r\n                return [];\r\n            }\r\n        }\r\n    });\n\n    var JsEvalNode = function () { };\r\n    JsEvalNode.prototype = Object.assign(new Node(), {\r\n        evaluateJavaScript: function (expression, context) {\r\n            var result;\r\n            var that = this;\r\n            var evalContext = {};\r\n            if (!context.javascriptEnabled) {\r\n                throw { message: 'Inline JavaScript is not enabled. Is it set in your options?',\r\n                    filename: this.fileInfo().filename,\r\n                    index: this.getIndex() };\r\n            }\r\n            expression = expression.replace(/@\\{([\\w-]+)\\}/g, function (_, name) {\r\n                return that.jsify(new Variable(\"@\" + name, that.getIndex(), that.fileInfo()).eval(context));\r\n            });\r\n            try {\r\n                expression = new Function(\"return (\" + expression + \")\");\r\n            }\r\n            catch (e) {\r\n                throw { message: \"JavaScript evaluation error: \" + e.message + \" from `\" + expression + \"`\",\r\n                    filename: this.fileInfo().filename,\r\n                    index: this.getIndex() };\r\n            }\r\n            var variables = context.frames[0].variables();\r\n            for (var k in variables) {\r\n                // eslint-disable-next-line no-prototype-builtins\r\n                if (variables.hasOwnProperty(k)) {\r\n                    evalContext[k.slice(1)] = {\r\n                        value: variables[k].value,\r\n                        toJS: function () {\r\n                            return this.value.eval(context).toCSS();\r\n                        }\r\n                    };\r\n                }\r\n            }\r\n            try {\r\n                result = expression.call(evalContext);\r\n            }\r\n            catch (e) {\r\n                throw { message: \"JavaScript evaluation error: '\" + e.name + \": \" + e.message.replace(/[\"]/g, '\\'') + \"'\",\r\n                    filename: this.fileInfo().filename,\r\n                    index: this.getIndex() };\r\n            }\r\n            return result;\r\n        },\r\n        jsify: function (obj) {\r\n            if (Array.isArray(obj.value) && (obj.value.length > 1)) {\r\n                return \"[\" + obj.value.map(function (v) { return v.toCSS(); }).join(', ') + \"]\";\r\n            }\r\n            else {\r\n                return obj.toCSS();\r\n            }\r\n        }\r\n    });\n\n    var JavaScript = function (string, escaped, index, currentFileInfo) {\r\n        this.escaped = escaped;\r\n        this.expression = string;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n    };\r\n    JavaScript.prototype = Object.assign(new JsEvalNode(), {\r\n        type: 'JavaScript',\r\n        eval: function (context) {\r\n            var result = this.evaluateJavaScript(this.expression, context);\r\n            var type = typeof result;\r\n            if (type === 'number' && !isNaN(result)) {\r\n                return new Dimension(result);\r\n            }\r\n            else if (type === 'string') {\r\n                return new Quoted(\"\\\"\" + result + \"\\\"\", result, this.escaped, this._index);\r\n            }\r\n            else if (Array.isArray(result)) {\r\n                return new Anonymous(result.join(', '));\r\n            }\r\n            else {\r\n                return new Anonymous(result);\r\n            }\r\n        }\r\n    });\n\n    var Assignment = function (key, val) {\r\n        this.key = key;\r\n        this.value = val;\r\n    };\r\n    Assignment.prototype = Object.assign(new Node(), {\r\n        type: 'Assignment',\r\n        accept: function (visitor) {\r\n            this.value = visitor.visit(this.value);\r\n        },\r\n        eval: function (context) {\r\n            if (this.value.eval) {\r\n                return new Assignment(this.key, this.value.eval(context));\r\n            }\r\n            return this;\r\n        },\r\n        genCSS: function (context, output) {\r\n            output.add(this.key + \"=\");\r\n            if (this.value.genCSS) {\r\n                this.value.genCSS(context, output);\r\n            }\r\n            else {\r\n                output.add(this.value);\r\n            }\r\n        }\r\n    });\n\n    var Condition = function (op, l, r, i, negate) {\r\n        this.op = op.trim();\r\n        this.lvalue = l;\r\n        this.rvalue = r;\r\n        this._index = i;\r\n        this.negate = negate;\r\n    };\r\n    Condition.prototype = Object.assign(new Node(), {\r\n        type: 'Condition',\r\n        accept: function (visitor) {\r\n            this.lvalue = visitor.visit(this.lvalue);\r\n            this.rvalue = visitor.visit(this.rvalue);\r\n        },\r\n        eval: function (context) {\r\n            var result = (function (op, a, b) {\r\n                switch (op) {\r\n                    case 'and': return a && b;\r\n                    case 'or': return a || b;\r\n                    default:\r\n                        switch (Node.compare(a, b)) {\r\n                            case -1:\r\n                                return op === '<' || op === '=<' || op === '<=';\r\n                            case 0:\r\n                                return op === '=' || op === '>=' || op === '=<' || op === '<=';\r\n                            case 1:\r\n                                return op === '>' || op === '>=';\r\n                            default:\r\n                                return false;\r\n                        }\r\n                }\r\n            })(this.op, this.lvalue.eval(context), this.rvalue.eval(context));\r\n            return this.negate ? !result : result;\r\n        }\r\n    });\n\n    var QueryInParens = function (op, l, m, op2, r, i) {\r\n        this.op = op.trim();\r\n        this.lvalue = l;\r\n        this.mvalue = m;\r\n        this.op2 = op2 ? op2.trim() : null;\r\n        this.rvalue = r;\r\n        this._index = i;\r\n    };\r\n    QueryInParens.prototype = Object.assign(new Node(), {\r\n        type: 'QueryInParens',\r\n        accept: function (visitor) {\r\n            this.lvalue = visitor.visit(this.lvalue);\r\n            this.mvalue = visitor.visit(this.mvalue);\r\n            if (this.rvalue) {\r\n                this.rvalue = visitor.visit(this.rvalue);\r\n            }\r\n        },\r\n        eval: function (context) {\r\n            this.lvalue = this.lvalue.eval(context);\r\n            this.mvalue = this.mvalue.eval(context);\r\n            if (this.rvalue) {\r\n                this.rvalue = this.rvalue.eval(context);\r\n            }\r\n            return this;\r\n        },\r\n        genCSS: function (context, output) {\r\n            this.lvalue.genCSS(context, output);\r\n            output.add(' ' + this.op + ' ');\r\n            this.mvalue.genCSS(context, output);\r\n            if (this.rvalue) {\r\n                output.add(' ' + this.op2 + ' ');\r\n                this.rvalue.genCSS(context, output);\r\n            }\r\n        },\r\n    });\n\n    var Container = function (value, features, index, currentFileInfo, visibilityInfo) {\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        var selectors = (new Selector([], null, null, this._index, this._fileInfo)).createEmptySelectors();\r\n        this.features = new Value(features);\r\n        this.rules = [new Ruleset(selectors, value)];\r\n        this.rules[0].allowImports = true;\r\n        this.copyVisibilityInfo(visibilityInfo);\r\n        this.allowRoot = true;\r\n        this.setParent(selectors, this);\r\n        this.setParent(this.features, this);\r\n        this.setParent(this.rules, this);\r\n    };\r\n    Container.prototype = Object.assign(new AtRule(), __assign(__assign({ type: 'Container' }, NestableAtRulePrototype), { genCSS: function (context, output) {\r\n            output.add('@container ', this._fileInfo, this._index);\r\n            this.features.genCSS(context, output);\r\n            this.outputRuleset(context, output, this.rules);\r\n        }, eval: function (context) {\r\n            if (!context.mediaBlocks) {\r\n                context.mediaBlocks = [];\r\n                context.mediaPath = [];\r\n            }\r\n            var media = new Container(null, [], this._index, this._fileInfo, this.visibilityInfo());\r\n            if (this.debugInfo) {\r\n                this.rules[0].debugInfo = this.debugInfo;\r\n                media.debugInfo = this.debugInfo;\r\n            }\r\n            media.features = this.features.eval(context);\r\n            context.mediaPath.push(media);\r\n            context.mediaBlocks.push(media);\r\n            this.rules[0].functionRegistry = context.frames[0].functionRegistry.inherit();\r\n            context.frames.unshift(this.rules[0]);\r\n            media.rules = [this.rules[0].eval(context)];\r\n            context.frames.shift();\r\n            context.mediaPath.pop();\r\n            return context.mediaPath.length === 0 ? media.evalTop(context) :\r\n                media.evalNested(context);\r\n        } }));\n\n    var UnicodeDescriptor = function (value) {\r\n        this.value = value;\r\n    };\r\n    UnicodeDescriptor.prototype = Object.assign(new Node(), {\r\n        type: 'UnicodeDescriptor'\r\n    });\n\n    var Negative = function (node) {\r\n        this.value = node;\r\n    };\r\n    Negative.prototype = Object.assign(new Node(), {\r\n        type: 'Negative',\r\n        genCSS: function (context, output) {\r\n            output.add('-');\r\n            this.value.genCSS(context, output);\r\n        },\r\n        eval: function (context) {\r\n            if (context.isMathOn()) {\r\n                return (new Operation('*', [new Dimension(-1), this.value])).eval(context);\r\n            }\r\n            return new Negative(this.value.eval(context));\r\n        }\r\n    });\n\n    var Extend = function (selector, option, index, currentFileInfo, visibilityInfo) {\r\n        this.selector = selector;\r\n        this.option = option;\r\n        this.object_id = Extend.next_id++;\r\n        this.parent_ids = [this.object_id];\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.copyVisibilityInfo(visibilityInfo);\r\n        this.allowRoot = true;\r\n        switch (option) {\r\n            case 'all':\r\n                this.allowBefore = true;\r\n                this.allowAfter = true;\r\n                break;\r\n            default:\r\n                this.allowBefore = false;\r\n                this.allowAfter = false;\r\n                break;\r\n        }\r\n        this.setParent(this.selector, this);\r\n    };\r\n    Extend.prototype = Object.assign(new Node(), {\r\n        type: 'Extend',\r\n        accept: function (visitor) {\r\n            this.selector = visitor.visit(this.selector);\r\n        },\r\n        eval: function (context) {\r\n            return new Extend(this.selector.eval(context), this.option, this.getIndex(), this.fileInfo(), this.visibilityInfo());\r\n        },\r\n        // remove when Nodes have JSDoc types\r\n        // eslint-disable-next-line no-unused-vars\r\n        clone: function (context) {\r\n            return new Extend(this.selector, this.option, this.getIndex(), this.fileInfo(), this.visibilityInfo());\r\n        },\r\n        // it concatenates (joins) all selectors in selector array\r\n        findSelfSelectors: function (selectors) {\r\n            var selfElements = [], i, selectorElements;\r\n            for (i = 0; i < selectors.length; i++) {\r\n                selectorElements = selectors[i].elements;\r\n                // duplicate the logic in genCSS function inside the selector node.\r\n                // future TODO - move both logics into the selector joiner visitor\r\n                if (i > 0 && selectorElements.length && selectorElements[0].combinator.value === '') {\r\n                    selectorElements[0].combinator.value = ' ';\r\n                }\r\n                selfElements = selfElements.concat(selectors[i].elements);\r\n            }\r\n            this.selfSelectors = [new Selector(selfElements)];\r\n            this.selfSelectors[0].copyVisibilityInfo(this.visibilityInfo());\r\n        }\r\n    });\r\n    Extend.next_id = 0;\n\n    var VariableCall = function (variable, index, currentFileInfo) {\r\n        this.variable = variable;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.allowRoot = true;\r\n    };\r\n    VariableCall.prototype = Object.assign(new Node(), {\r\n        type: 'VariableCall',\r\n        eval: function (context) {\r\n            var rules;\r\n            var detachedRuleset = new Variable(this.variable, this.getIndex(), this.fileInfo()).eval(context);\r\n            var error = new LessError({ message: \"Could not evaluate variable call \" + this.variable });\r\n            if (!detachedRuleset.ruleset) {\r\n                if (detachedRuleset.rules) {\r\n                    rules = detachedRuleset;\r\n                }\r\n                else if (Array.isArray(detachedRuleset)) {\r\n                    rules = new Ruleset('', detachedRuleset);\r\n                }\r\n                else if (Array.isArray(detachedRuleset.value)) {\r\n                    rules = new Ruleset('', detachedRuleset.value);\r\n                }\r\n                else {\r\n                    throw error;\r\n                }\r\n                detachedRuleset = new DetachedRuleset(rules);\r\n            }\r\n            if (detachedRuleset.ruleset) {\r\n                return detachedRuleset.callEval(context);\r\n            }\r\n            throw error;\r\n        }\r\n    });\n\n    var NamespaceValue = function (ruleCall, lookups, index, fileInfo) {\r\n        this.value = ruleCall;\r\n        this.lookups = lookups;\r\n        this._index = index;\r\n        this._fileInfo = fileInfo;\r\n    };\r\n    NamespaceValue.prototype = Object.assign(new Node(), {\r\n        type: 'NamespaceValue',\r\n        eval: function (context) {\r\n            var i, name, rules = this.value.eval(context);\r\n            for (i = 0; i < this.lookups.length; i++) {\r\n                name = this.lookups[i];\r\n                /**\r\n                 * Eval'd DRs return rulesets.\r\n                 * Eval'd mixins return rules, so let's make a ruleset if we need it.\r\n                 * We need to do this because of late parsing of values\r\n                 */\r\n                if (Array.isArray(rules)) {\r\n                    rules = new Ruleset([new Selector()], rules);\r\n                }\r\n                if (name === '') {\r\n                    rules = rules.lastDeclaration();\r\n                }\r\n                else if (name.charAt(0) === '@') {\r\n                    if (name.charAt(1) === '@') {\r\n                        name = \"@\" + new Variable(name.substr(1)).eval(context).value;\r\n                    }\r\n                    if (rules.variables) {\r\n                        rules = rules.variable(name);\r\n                    }\r\n                    if (!rules) {\r\n                        throw { type: 'Name',\r\n                            message: \"variable \" + name + \" not found\",\r\n                            filename: this.fileInfo().filename,\r\n                            index: this.getIndex() };\r\n                    }\r\n                }\r\n                else {\r\n                    if (name.substring(0, 2) === '$@') {\r\n                        name = \"$\" + new Variable(name.substr(1)).eval(context).value;\r\n                    }\r\n                    else {\r\n                        name = name.charAt(0) === '$' ? name : \"$\" + name;\r\n                    }\r\n                    if (rules.properties) {\r\n                        rules = rules.property(name);\r\n                    }\r\n                    if (!rules) {\r\n                        throw { type: 'Name',\r\n                            message: \"property \\\"\" + name.substr(1) + \"\\\" not found\",\r\n                            filename: this.fileInfo().filename,\r\n                            index: this.getIndex() };\r\n                    }\r\n                    // Properties are an array of values, since a ruleset can have multiple props.\r\n                    // We pick the last one (the \"cascaded\" value)\r\n                    rules = rules[rules.length - 1];\r\n                }\r\n                if (rules.value) {\r\n                    rules = rules.eval(context).value;\r\n                }\r\n                if (rules.ruleset) {\r\n                    rules = rules.ruleset.eval(context);\r\n                }\r\n            }\r\n            return rules;\r\n        }\r\n    });\n\n    var Definition = function (name, params, rules, condition, variadic, frames, visibilityInfo) {\r\n        this.name = name || 'anonymous mixin';\r\n        this.selectors = [new Selector([new Element(null, name, false, this._index, this._fileInfo)])];\r\n        this.params = params;\r\n        this.condition = condition;\r\n        this.variadic = variadic;\r\n        this.arity = params.length;\r\n        this.rules = rules;\r\n        this._lookups = {};\r\n        var optionalParameters = [];\r\n        this.required = params.reduce(function (count, p) {\r\n            if (!p.name || (p.name && !p.value)) {\r\n                return count + 1;\r\n            }\r\n            else {\r\n                optionalParameters.push(p.name);\r\n                return count;\r\n            }\r\n        }, 0);\r\n        this.optionalParameters = optionalParameters;\r\n        this.frames = frames;\r\n        this.copyVisibilityInfo(visibilityInfo);\r\n        this.allowRoot = true;\r\n    };\r\n    Definition.prototype = Object.assign(new Ruleset(), {\r\n        type: 'MixinDefinition',\r\n        evalFirst: true,\r\n        accept: function (visitor) {\r\n            if (this.params && this.params.length) {\r\n                this.params = visitor.visitArray(this.params);\r\n            }\r\n            this.rules = visitor.visitArray(this.rules);\r\n            if (this.condition) {\r\n                this.condition = visitor.visit(this.condition);\r\n            }\r\n        },\r\n        evalParams: function (context, mixinEnv, args, evaldArguments) {\r\n            /* jshint boss:true */\r\n            var frame = new Ruleset(null, null);\r\n            var varargs;\r\n            var arg;\r\n            var params = copyArray(this.params);\r\n            var i;\r\n            var j;\r\n            var val;\r\n            var name;\r\n            var isNamedFound;\r\n            var argIndex;\r\n            var argsLength = 0;\r\n            if (mixinEnv.frames && mixinEnv.frames[0] && mixinEnv.frames[0].functionRegistry) {\r\n                frame.functionRegistry = mixinEnv.frames[0].functionRegistry.inherit();\r\n            }\r\n            mixinEnv = new contexts.Eval(mixinEnv, [frame].concat(mixinEnv.frames));\r\n            if (args) {\r\n                args = copyArray(args);\r\n                argsLength = args.length;\r\n                for (i = 0; i < argsLength; i++) {\r\n                    arg = args[i];\r\n                    if (name = (arg && arg.name)) {\r\n                        isNamedFound = false;\r\n                        for (j = 0; j < params.length; j++) {\r\n                            if (!evaldArguments[j] && name === params[j].name) {\r\n                                evaldArguments[j] = arg.value.eval(context);\r\n                                frame.prependRule(new Declaration(name, arg.value.eval(context)));\r\n                                isNamedFound = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (isNamedFound) {\r\n                            args.splice(i, 1);\r\n                            i--;\r\n                            continue;\r\n                        }\r\n                        else {\r\n                            throw { type: 'Runtime', message: \"Named argument for \" + this.name + \" \" + args[i].name + \" not found\" };\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            argIndex = 0;\r\n            for (i = 0; i < params.length; i++) {\r\n                if (evaldArguments[i]) {\r\n                    continue;\r\n                }\r\n                arg = args && args[argIndex];\r\n                if (name = params[i].name) {\r\n                    if (params[i].variadic) {\r\n                        varargs = [];\r\n                        for (j = argIndex; j < argsLength; j++) {\r\n                            varargs.push(args[j].value.eval(context));\r\n                        }\r\n                        frame.prependRule(new Declaration(name, new Expression(varargs).eval(context)));\r\n                    }\r\n                    else {\r\n                        val = arg && arg.value;\r\n                        if (val) {\r\n                            // This was a mixin call, pass in a detached ruleset of it's eval'd rules\r\n                            if (Array.isArray(val)) {\r\n                                val = new DetachedRuleset(new Ruleset('', val));\r\n                            }\r\n                            else {\r\n                                val = val.eval(context);\r\n                            }\r\n                        }\r\n                        else if (params[i].value) {\r\n                            val = params[i].value.eval(mixinEnv);\r\n                            frame.resetCache();\r\n                        }\r\n                        else {\r\n                            throw { type: 'Runtime', message: \"wrong number of arguments for \" + this.name + \" (\" + argsLength + \" for \" + this.arity + \")\" };\r\n                        }\r\n                        frame.prependRule(new Declaration(name, val));\r\n                        evaldArguments[i] = val;\r\n                    }\r\n                }\r\n                if (params[i].variadic && args) {\r\n                    for (j = argIndex; j < argsLength; j++) {\r\n                        evaldArguments[j] = args[j].value.eval(context);\r\n                    }\r\n                }\r\n                argIndex++;\r\n            }\r\n            return frame;\r\n        },\r\n        makeImportant: function () {\r\n            var rules = !this.rules ? this.rules : this.rules.map(function (r) {\r\n                if (r.makeImportant) {\r\n                    return r.makeImportant(true);\r\n                }\r\n                else {\r\n                    return r;\r\n                }\r\n            });\r\n            var result = new Definition(this.name, this.params, rules, this.condition, this.variadic, this.frames);\r\n            return result;\r\n        },\r\n        eval: function (context) {\r\n            return new Definition(this.name, this.params, this.rules, this.condition, this.variadic, this.frames || copyArray(context.frames));\r\n        },\r\n        evalCall: function (context, args, important) {\r\n            var _arguments = [];\r\n            var mixinFrames = this.frames ? this.frames.concat(context.frames) : context.frames;\r\n            var frame = this.evalParams(context, new contexts.Eval(context, mixinFrames), args, _arguments);\r\n            var rules;\r\n            var ruleset;\r\n            frame.prependRule(new Declaration('@arguments', new Expression(_arguments).eval(context)));\r\n            rules = copyArray(this.rules);\r\n            ruleset = new Ruleset(null, rules);\r\n            ruleset.originalRuleset = this;\r\n            ruleset = ruleset.eval(new contexts.Eval(context, [this, frame].concat(mixinFrames)));\r\n            if (important) {\r\n                ruleset = ruleset.makeImportant();\r\n            }\r\n            return ruleset;\r\n        },\r\n        matchCondition: function (args, context) {\r\n            if (this.condition && !this.condition.eval(new contexts.Eval(context, [this.evalParams(context, /* the parameter variables */ new contexts.Eval(context, this.frames ? this.frames.concat(context.frames) : context.frames), args, [])]\r\n                .concat(this.frames || []) // the parent namespace/mixin frames\r\n                .concat(context.frames)))) { // the current environment frames\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n        matchArgs: function (args, context) {\r\n            var allArgsCnt = (args && args.length) || 0;\r\n            var len;\r\n            var optionalParameters = this.optionalParameters;\r\n            var requiredArgsCnt = !args ? 0 : args.reduce(function (count, p) {\r\n                if (optionalParameters.indexOf(p.name) < 0) {\r\n                    return count + 1;\r\n                }\r\n                else {\r\n                    return count;\r\n                }\r\n            }, 0);\r\n            if (!this.variadic) {\r\n                if (requiredArgsCnt < this.required) {\r\n                    return false;\r\n                }\r\n                if (allArgsCnt > this.params.length) {\r\n                    return false;\r\n                }\r\n            }\r\n            else {\r\n                if (requiredArgsCnt < (this.required - 1)) {\r\n                    return false;\r\n                }\r\n            }\r\n            // check patterns\r\n            len = Math.min(requiredArgsCnt, this.arity);\r\n            for (var i_1 = 0; i_1 < len; i_1++) {\r\n                if (!this.params[i_1].name && !this.params[i_1].variadic) {\r\n                    if (args[i_1].value.eval(context).toCSS() != this.params[i_1].value.eval(context).toCSS()) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n    });\n\n    var MixinCall = function (elements, args, index, currentFileInfo, important) {\r\n        this.selector = new Selector(elements);\r\n        this.arguments = args || [];\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.important = important;\r\n        this.allowRoot = true;\r\n        this.setParent(this.selector, this);\r\n    };\r\n    MixinCall.prototype = Object.assign(new Node(), {\r\n        type: 'MixinCall',\r\n        accept: function (visitor) {\r\n            if (this.selector) {\r\n                this.selector = visitor.visit(this.selector);\r\n            }\r\n            if (this.arguments.length) {\r\n                this.arguments = visitor.visitArray(this.arguments);\r\n            }\r\n        },\r\n        eval: function (context) {\r\n            var mixins;\r\n            var mixin;\r\n            var mixinPath;\r\n            var args = [];\r\n            var arg;\r\n            var argValue;\r\n            var rules = [];\r\n            var match = false;\r\n            var i;\r\n            var m;\r\n            var f;\r\n            var isRecursive;\r\n            var isOneFound;\r\n            var candidates = [];\r\n            var candidate;\r\n            var conditionResult = [];\r\n            var defaultResult;\r\n            var defFalseEitherCase = -1;\r\n            var defNone = 0;\r\n            var defTrue = 1;\r\n            var defFalse = 2;\r\n            var count;\r\n            var originalRuleset;\r\n            var noArgumentsFilter;\r\n            this.selector = this.selector.eval(context);\r\n            function calcDefGroup(mixin, mixinPath) {\r\n                var f, p, namespace;\r\n                for (f = 0; f < 2; f++) {\r\n                    conditionResult[f] = true;\r\n                    defaultFunc.value(f);\r\n                    for (p = 0; p < mixinPath.length && conditionResult[f]; p++) {\r\n                        namespace = mixinPath[p];\r\n                        if (namespace.matchCondition) {\r\n                            conditionResult[f] = conditionResult[f] && namespace.matchCondition(null, context);\r\n                        }\r\n                    }\r\n                    if (mixin.matchCondition) {\r\n                        conditionResult[f] = conditionResult[f] && mixin.matchCondition(args, context);\r\n                    }\r\n                }\r\n                if (conditionResult[0] || conditionResult[1]) {\r\n                    if (conditionResult[0] != conditionResult[1]) {\r\n                        return conditionResult[1] ?\r\n                            defTrue : defFalse;\r\n                    }\r\n                    return defNone;\r\n                }\r\n                return defFalseEitherCase;\r\n            }\r\n            for (i = 0; i < this.arguments.length; i++) {\r\n                arg = this.arguments[i];\r\n                argValue = arg.value.eval(context);\r\n                if (arg.expand && Array.isArray(argValue.value)) {\r\n                    argValue = argValue.value;\r\n                    for (m = 0; m < argValue.length; m++) {\r\n                        args.push({ value: argValue[m] });\r\n                    }\r\n                }\r\n                else {\r\n                    args.push({ name: arg.name, value: argValue });\r\n                }\r\n            }\r\n            noArgumentsFilter = function (rule) { return rule.matchArgs(null, context); };\r\n            for (i = 0; i < context.frames.length; i++) {\r\n                if ((mixins = context.frames[i].find(this.selector, null, noArgumentsFilter)).length > 0) {\r\n                    isOneFound = true;\r\n                    // To make `default()` function independent of definition order we have two \"subpasses\" here.\r\n                    // At first we evaluate each guard *twice* (with `default() == true` and `default() == false`),\r\n                    // and build candidate list with corresponding flags. Then, when we know all possible matches,\r\n                    // we make a final decision.\r\n                    for (m = 0; m < mixins.length; m++) {\r\n                        mixin = mixins[m].rule;\r\n                        mixinPath = mixins[m].path;\r\n                        isRecursive = false;\r\n                        for (f = 0; f < context.frames.length; f++) {\r\n                            if ((!(mixin instanceof Definition)) && mixin === (context.frames[f].originalRuleset || context.frames[f])) {\r\n                                isRecursive = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (isRecursive) {\r\n                            continue;\r\n                        }\r\n                        if (mixin.matchArgs(args, context)) {\r\n                            candidate = { mixin: mixin, group: calcDefGroup(mixin, mixinPath) };\r\n                            if (candidate.group !== defFalseEitherCase) {\r\n                                candidates.push(candidate);\r\n                            }\r\n                            match = true;\r\n                        }\r\n                    }\r\n                    defaultFunc.reset();\r\n                    count = [0, 0, 0];\r\n                    for (m = 0; m < candidates.length; m++) {\r\n                        count[candidates[m].group]++;\r\n                    }\r\n                    if (count[defNone] > 0) {\r\n                        defaultResult = defFalse;\r\n                    }\r\n                    else {\r\n                        defaultResult = defTrue;\r\n                        if ((count[defTrue] + count[defFalse]) > 1) {\r\n                            throw { type: 'Runtime',\r\n                                message: \"Ambiguous use of `default()` found when matching for `\" + this.format(args) + \"`\",\r\n                                index: this.getIndex(), filename: this.fileInfo().filename };\r\n                        }\r\n                    }\r\n                    for (m = 0; m < candidates.length; m++) {\r\n                        candidate = candidates[m].group;\r\n                        if ((candidate === defNone) || (candidate === defaultResult)) {\r\n                            try {\r\n                                mixin = candidates[m].mixin;\r\n                                if (!(mixin instanceof Definition)) {\r\n                                    originalRuleset = mixin.originalRuleset || mixin;\r\n                                    mixin = new Definition('', [], mixin.rules, null, false, null, originalRuleset.visibilityInfo());\r\n                                    mixin.originalRuleset = originalRuleset;\r\n                                }\r\n                                var newRules = mixin.evalCall(context, args, this.important).rules;\r\n                                this._setVisibilityToReplacement(newRules);\r\n                                Array.prototype.push.apply(rules, newRules);\r\n                            }\r\n                            catch (e) {\r\n                                throw { message: e.message, index: this.getIndex(), filename: this.fileInfo().filename, stack: e.stack };\r\n                            }\r\n                        }\r\n                    }\r\n                    if (match) {\r\n                        return rules;\r\n                    }\r\n                }\r\n            }\r\n            if (isOneFound) {\r\n                throw { type: 'Runtime',\r\n                    message: \"No matching definition was found for `\" + this.format(args) + \"`\",\r\n                    index: this.getIndex(), filename: this.fileInfo().filename };\r\n            }\r\n            else {\r\n                throw { type: 'Name',\r\n                    message: this.selector.toCSS().trim() + \" is undefined\",\r\n                    index: this.getIndex(), filename: this.fileInfo().filename };\r\n            }\r\n        },\r\n        _setVisibilityToReplacement: function (replacement) {\r\n            var i, rule;\r\n            if (this.blocksVisibility()) {\r\n                for (i = 0; i < replacement.length; i++) {\r\n                    rule = replacement[i];\r\n                    rule.addVisibilityBlock();\r\n                }\r\n            }\r\n        },\r\n        format: function (args) {\r\n            return this.selector.toCSS().trim() + \"(\" + (args ? args.map(function (a) {\r\n                var argValue = '';\r\n                if (a.name) {\r\n                    argValue += a.name + \":\";\r\n                }\r\n                if (a.value.toCSS) {\r\n                    argValue += a.value.toCSS();\r\n                }\r\n                else {\r\n                    argValue += '???';\r\n                }\r\n                return argValue;\r\n            }).join(', ') : '') + \")\";\r\n        }\r\n    });\n\n    var tree = {\r\n        Node: Node,\r\n        Color: Color,\r\n        AtRule: AtRule,\r\n        DetachedRuleset: DetachedRuleset,\r\n        Operation: Operation,\r\n        Dimension: Dimension,\r\n        Unit: Unit,\r\n        Keyword: Keyword,\r\n        Variable: Variable,\r\n        Property: Property,\r\n        Ruleset: Ruleset,\r\n        Element: Element,\r\n        Attribute: Attribute,\r\n        Combinator: Combinator,\r\n        Selector: Selector,\r\n        Quoted: Quoted,\r\n        Expression: Expression,\r\n        Declaration: Declaration,\r\n        Call: Call,\r\n        URL: URL,\r\n        Import: Import,\r\n        Comment: Comment,\r\n        Anonymous: Anonymous,\r\n        Value: Value,\r\n        JavaScript: JavaScript,\r\n        Assignment: Assignment,\r\n        Condition: Condition,\r\n        Paren: Paren,\r\n        Media: Media,\r\n        Container: Container,\r\n        QueryInParens: QueryInParens,\r\n        UnicodeDescriptor: UnicodeDescriptor,\r\n        Negative: Negative,\r\n        Extend: Extend,\r\n        VariableCall: VariableCall,\r\n        NamespaceValue: NamespaceValue,\r\n        mixin: {\r\n            Call: MixinCall,\r\n            Definition: Definition\r\n        }\r\n    };\n\n    var AbstractFileManager = /** @class */ (function () {\r\n        function AbstractFileManager() {\r\n        }\r\n        AbstractFileManager.prototype.getPath = function (filename) {\r\n            var j = filename.lastIndexOf('?');\r\n            if (j > 0) {\r\n                filename = filename.slice(0, j);\r\n            }\r\n            j = filename.lastIndexOf('/');\r\n            if (j < 0) {\r\n                j = filename.lastIndexOf('\\\\');\r\n            }\r\n            if (j < 0) {\r\n                return '';\r\n            }\r\n            return filename.slice(0, j + 1);\r\n        };\r\n        AbstractFileManager.prototype.tryAppendExtension = function (path, ext) {\r\n            return /(\\.[a-z]*$)|([?;].*)$/.test(path) ? path : path + ext;\r\n        };\r\n        AbstractFileManager.prototype.tryAppendLessExtension = function (path) {\r\n            return this.tryAppendExtension(path, '.less');\r\n        };\r\n        AbstractFileManager.prototype.supportsSync = function () {\r\n            return false;\r\n        };\r\n        AbstractFileManager.prototype.alwaysMakePathsAbsolute = function () {\r\n            return false;\r\n        };\r\n        AbstractFileManager.prototype.isPathAbsolute = function (filename) {\r\n            return (/^(?:[a-z-]+:|\\/|\\\\|#)/i).test(filename);\r\n        };\r\n        // TODO: pull out / replace?\r\n        AbstractFileManager.prototype.join = function (basePath, laterPath) {\r\n            if (!basePath) {\r\n                return laterPath;\r\n            }\r\n            return basePath + laterPath;\r\n        };\r\n        AbstractFileManager.prototype.pathDiff = function (url, baseUrl) {\r\n            // diff between two paths to create a relative path\r\n            var urlParts = this.extractUrlParts(url);\r\n            var baseUrlParts = this.extractUrlParts(baseUrl);\r\n            var i;\r\n            var max;\r\n            var urlDirectories;\r\n            var baseUrlDirectories;\r\n            var diff = '';\r\n            if (urlParts.hostPart !== baseUrlParts.hostPart) {\r\n                return '';\r\n            }\r\n            max = Math.max(baseUrlParts.directories.length, urlParts.directories.length);\r\n            for (i = 0; i < max; i++) {\r\n                if (baseUrlParts.directories[i] !== urlParts.directories[i]) {\r\n                    break;\r\n                }\r\n            }\r\n            baseUrlDirectories = baseUrlParts.directories.slice(i);\r\n            urlDirectories = urlParts.directories.slice(i);\r\n            for (i = 0; i < baseUrlDirectories.length - 1; i++) {\r\n                diff += '../';\r\n            }\r\n            for (i = 0; i < urlDirectories.length - 1; i++) {\r\n                diff += urlDirectories[i] + \"/\";\r\n            }\r\n            return diff;\r\n        };\r\n        /**\r\n         * Helper function, not part of API.\r\n         * This should be replaceable by newer Node / Browser APIs\r\n         *\r\n         * @param {string} url\r\n         * @param {string} baseUrl\r\n         */\r\n        AbstractFileManager.prototype.extractUrlParts = function (url, baseUrl) {\r\n            // urlParts[1] = protocol://hostname/ OR /\r\n            // urlParts[2] = / if path relative to host base\r\n            // urlParts[3] = directories\r\n            // urlParts[4] = filename\r\n            // urlParts[5] = parameters\r\n            var urlPartsRegex = /^((?:[a-z-]+:)?\\/{2}(?:[^/?#]*\\/)|([/\\\\]))?((?:[^/\\\\?#]*[/\\\\])*)([^/\\\\?#]*)([#?].*)?$/i;\r\n            var urlParts = url.match(urlPartsRegex);\r\n            var returner = {};\r\n            var rawDirectories = [];\r\n            var directories = [];\r\n            var i;\r\n            var baseUrlParts;\r\n            if (!urlParts) {\r\n                throw new Error(\"Could not parse sheet href - '\" + url + \"'\");\r\n            }\r\n            // Stylesheets in IE don't always return the full path\r\n            if (baseUrl && (!urlParts[1] || urlParts[2])) {\r\n                baseUrlParts = baseUrl.match(urlPartsRegex);\r\n                if (!baseUrlParts) {\r\n                    throw new Error(\"Could not parse page url - '\" + baseUrl + \"'\");\r\n                }\r\n                urlParts[1] = urlParts[1] || baseUrlParts[1] || '';\r\n                if (!urlParts[2]) {\r\n                    urlParts[3] = baseUrlParts[3] + urlParts[3];\r\n                }\r\n            }\r\n            if (urlParts[3]) {\r\n                rawDirectories = urlParts[3].replace(/\\\\/g, '/').split('/');\r\n                // collapse '..' and skip '.'\r\n                for (i = 0; i < rawDirectories.length; i++) {\r\n                    if (rawDirectories[i] === '..') {\r\n                        directories.pop();\r\n                    }\r\n                    else if (rawDirectories[i] !== '.') {\r\n                        directories.push(rawDirectories[i]);\r\n                    }\r\n                }\r\n            }\r\n            returner.hostPart = urlParts[1];\r\n            returner.directories = directories;\r\n            returner.rawPath = (urlParts[1] || '') + rawDirectories.join('/');\r\n            returner.path = (urlParts[1] || '') + directories.join('/');\r\n            returner.filename = urlParts[4];\r\n            returner.fileUrl = returner.path + (urlParts[4] || '');\r\n            returner.url = returner.fileUrl + (urlParts[5] || '');\r\n            return returner;\r\n        };\r\n        return AbstractFileManager;\r\n    }());\n\n    var AbstractPluginLoader = /** @class */ (function () {\r\n        function AbstractPluginLoader() {\r\n            // Implemented by Node.js plugin loader\r\n            this.require = function () {\r\n                return null;\r\n            };\r\n        }\r\n        AbstractPluginLoader.prototype.evalPlugin = function (contents, context, imports, pluginOptions, fileInfo) {\r\n            var loader, registry, pluginObj, localModule, pluginManager, filename, result;\r\n            pluginManager = context.pluginManager;\r\n            if (fileInfo) {\r\n                if (typeof fileInfo === 'string') {\r\n                    filename = fileInfo;\r\n                }\r\n                else {\r\n                    filename = fileInfo.filename;\r\n                }\r\n            }\r\n            var shortname = (new this.less.FileManager()).extractUrlParts(filename).filename;\r\n            if (filename) {\r\n                pluginObj = pluginManager.get(filename);\r\n                if (pluginObj) {\r\n                    result = this.trySetOptions(pluginObj, filename, shortname, pluginOptions);\r\n                    if (result) {\r\n                        return result;\r\n                    }\r\n                    try {\r\n                        if (pluginObj.use) {\r\n                            pluginObj.use.call(this.context, pluginObj);\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        e.message = e.message || 'Error during @plugin call';\r\n                        return new LessError(e, imports, filename);\r\n                    }\r\n                    return pluginObj;\r\n                }\r\n            }\r\n            localModule = {\r\n                exports: {},\r\n                pluginManager: pluginManager,\r\n                fileInfo: fileInfo\r\n            };\r\n            registry = functionRegistry.create();\r\n            var registerPlugin = function (obj) {\r\n                pluginObj = obj;\r\n            };\r\n            try {\r\n                loader = new Function('module', 'require', 'registerPlugin', 'functions', 'tree', 'less', 'fileInfo', contents);\r\n                loader(localModule, this.require(filename), registerPlugin, registry, this.less.tree, this.less, fileInfo);\r\n            }\r\n            catch (e) {\r\n                return new LessError(e, imports, filename);\r\n            }\r\n            if (!pluginObj) {\r\n                pluginObj = localModule.exports;\r\n            }\r\n            pluginObj = this.validatePlugin(pluginObj, filename, shortname);\r\n            if (pluginObj instanceof LessError) {\r\n                return pluginObj;\r\n            }\r\n            if (pluginObj) {\r\n                pluginObj.imports = imports;\r\n                pluginObj.filename = filename;\r\n                // For < 3.x (or unspecified minVersion) - setOptions() before install()\r\n                if (!pluginObj.minVersion || this.compareVersion('3.0.0', pluginObj.minVersion) < 0) {\r\n                    result = this.trySetOptions(pluginObj, filename, shortname, pluginOptions);\r\n                    if (result) {\r\n                        return result;\r\n                    }\r\n                }\r\n                // Run on first load\r\n                pluginManager.addPlugin(pluginObj, fileInfo.filename, registry);\r\n                pluginObj.functions = registry.getLocalFunctions();\r\n                // Need to call setOptions again because the pluginObj might have functions\r\n                result = this.trySetOptions(pluginObj, filename, shortname, pluginOptions);\r\n                if (result) {\r\n                    return result;\r\n                }\r\n                // Run every @plugin call\r\n                try {\r\n                    if (pluginObj.use) {\r\n                        pluginObj.use.call(this.context, pluginObj);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    e.message = e.message || 'Error during @plugin call';\r\n                    return new LessError(e, imports, filename);\r\n                }\r\n            }\r\n            else {\r\n                return new LessError({ message: 'Not a valid plugin' }, imports, filename);\r\n            }\r\n            return pluginObj;\r\n        };\r\n        AbstractPluginLoader.prototype.trySetOptions = function (plugin, filename, name, options) {\r\n            if (options && !plugin.setOptions) {\r\n                return new LessError({\r\n                    message: \"Options have been provided but the plugin \" + name + \" does not support any options.\"\r\n                });\r\n            }\r\n            try {\r\n                plugin.setOptions && plugin.setOptions(options);\r\n            }\r\n            catch (e) {\r\n                return new LessError(e);\r\n            }\r\n        };\r\n        AbstractPluginLoader.prototype.validatePlugin = function (plugin, filename, name) {\r\n            if (plugin) {\r\n                // support plugins being a function\r\n                // so that the plugin can be more usable programmatically\r\n                if (typeof plugin === 'function') {\r\n                    plugin = new plugin();\r\n                }\r\n                if (plugin.minVersion) {\r\n                    if (this.compareVersion(plugin.minVersion, this.less.version) < 0) {\r\n                        return new LessError({\r\n                            message: \"Plugin \" + name + \" requires version \" + this.versionToString(plugin.minVersion)\r\n                        });\r\n                    }\r\n                }\r\n                return plugin;\r\n            }\r\n            return null;\r\n        };\r\n        AbstractPluginLoader.prototype.compareVersion = function (aVersion, bVersion) {\r\n            if (typeof aVersion === 'string') {\r\n                aVersion = aVersion.match(/^(\\d+)\\.?(\\d+)?\\.?(\\d+)?/);\r\n                aVersion.shift();\r\n            }\r\n            for (var i_1 = 0; i_1 < aVersion.length; i_1++) {\r\n                if (aVersion[i_1] !== bVersion[i_1]) {\r\n                    return parseInt(aVersion[i_1]) > parseInt(bVersion[i_1]) ? -1 : 1;\r\n                }\r\n            }\r\n            return 0;\r\n        };\r\n        AbstractPluginLoader.prototype.versionToString = function (version) {\r\n            var versionString = '';\r\n            for (var i_2 = 0; i_2 < version.length; i_2++) {\r\n                versionString += (versionString ? '.' : '') + version[i_2];\r\n            }\r\n            return versionString;\r\n        };\r\n        AbstractPluginLoader.prototype.printUsage = function (plugins) {\r\n            for (var i_3 = 0; i_3 < plugins.length; i_3++) {\r\n                var plugin = plugins[i_3];\r\n                if (plugin.printUsage) {\r\n                    plugin.printUsage();\r\n                }\r\n            }\r\n        };\r\n        return AbstractPluginLoader;\r\n    }());\n\n    function boolean(condition) {\r\n        return condition ? Keyword.True : Keyword.False;\r\n    }\r\n    /**\r\n     * Functions with evalArgs set to false are sent context\r\n     * as the first argument.\r\n     */\r\n    function If(context, condition, trueValue, falseValue) {\r\n        return condition.eval(context) ? trueValue.eval(context)\r\n            : (falseValue ? falseValue.eval(context) : new Anonymous);\r\n    }\r\n    If.evalArgs = false;\r\n    function isdefined(context, variable) {\r\n        try {\r\n            variable.eval(context);\r\n            return Keyword.True;\r\n        }\r\n        catch (e) {\r\n            return Keyword.False;\r\n        }\r\n    }\r\n    isdefined.evalArgs = false;\r\n    var boolean$1 = { isdefined: isdefined, boolean: boolean, 'if': If };\n\n    var colorFunctions;\r\n    function clamp(val) {\r\n        return Math.min(1, Math.max(0, val));\r\n    }\r\n    function hsla(origColor, hsl) {\r\n        var color = colorFunctions.hsla(hsl.h, hsl.s, hsl.l, hsl.a);\r\n        if (color) {\r\n            if (origColor.value &&\r\n                /^(rgb|hsl)/.test(origColor.value)) {\r\n                color.value = origColor.value;\r\n            }\r\n            else {\r\n                color.value = 'rgb';\r\n            }\r\n            return color;\r\n        }\r\n    }\r\n    function toHSL(color) {\r\n        if (color.toHSL) {\r\n            return color.toHSL();\r\n        }\r\n        else {\r\n            throw new Error('Argument cannot be evaluated to a color');\r\n        }\r\n    }\r\n    function toHSV(color) {\r\n        if (color.toHSV) {\r\n            return color.toHSV();\r\n        }\r\n        else {\r\n            throw new Error('Argument cannot be evaluated to a color');\r\n        }\r\n    }\r\n    function number$1(n) {\r\n        if (n instanceof Dimension) {\r\n            return parseFloat(n.unit.is('%') ? n.value / 100 : n.value);\r\n        }\r\n        else if (typeof n === 'number') {\r\n            return n;\r\n        }\r\n        else {\r\n            throw {\r\n                type: 'Argument',\r\n                message: 'color functions take numbers as parameters'\r\n            };\r\n        }\r\n    }\r\n    function scaled(n, size) {\r\n        if (n instanceof Dimension && n.unit.is('%')) {\r\n            return parseFloat(n.value * size / 100);\r\n        }\r\n        else {\r\n            return number$1(n);\r\n        }\r\n    }\r\n    colorFunctions = {\r\n        rgb: function (r, g, b) {\r\n            var a = 1;\r\n            /**\r\n             * Comma-less syntax\r\n             *   e.g. rgb(0 128 255 / 50%)\r\n             */\r\n            if (r instanceof Expression) {\r\n                var val = r.value;\r\n                r = val[0];\r\n                g = val[1];\r\n                b = val[2];\r\n                /**\r\n                 * @todo - should this be normalized in\r\n                 *   function caller? Or parsed differently?\r\n                 */\r\n                if (b instanceof Operation) {\r\n                    var op = b;\r\n                    b = op.operands[0];\r\n                    a = op.operands[1];\r\n                }\r\n            }\r\n            var color = colorFunctions.rgba(r, g, b, a);\r\n            if (color) {\r\n                color.value = 'rgb';\r\n                return color;\r\n            }\r\n        },\r\n        rgba: function (r, g, b, a) {\r\n            try {\r\n                if (r instanceof Color) {\r\n                    if (g) {\r\n                        a = number$1(g);\r\n                    }\r\n                    else {\r\n                        a = r.alpha;\r\n                    }\r\n                    return new Color(r.rgb, a, 'rgba');\r\n                }\r\n                var rgb = [r, g, b].map(function (c) { return scaled(c, 255); });\r\n                a = number$1(a);\r\n                return new Color(rgb, a, 'rgba');\r\n            }\r\n            catch (e) { }\r\n        },\r\n        hsl: function (h, s, l) {\r\n            var a = 1;\r\n            if (h instanceof Expression) {\r\n                var val = h.value;\r\n                h = val[0];\r\n                s = val[1];\r\n                l = val[2];\r\n                if (l instanceof Operation) {\r\n                    var op = l;\r\n                    l = op.operands[0];\r\n                    a = op.operands[1];\r\n                }\r\n            }\r\n            var color = colorFunctions.hsla(h, s, l, a);\r\n            if (color) {\r\n                color.value = 'hsl';\r\n                return color;\r\n            }\r\n        },\r\n        hsla: function (h, s, l, a) {\r\n            var m1;\r\n            var m2;\r\n            function hue(h) {\r\n                h = h < 0 ? h + 1 : (h > 1 ? h - 1 : h);\r\n                if (h * 6 < 1) {\r\n                    return m1 + (m2 - m1) * h * 6;\r\n                }\r\n                else if (h * 2 < 1) {\r\n                    return m2;\r\n                }\r\n                else if (h * 3 < 2) {\r\n                    return m1 + (m2 - m1) * (2 / 3 - h) * 6;\r\n                }\r\n                else {\r\n                    return m1;\r\n                }\r\n            }\r\n            try {\r\n                if (h instanceof Color) {\r\n                    if (s) {\r\n                        a = number$1(s);\r\n                    }\r\n                    else {\r\n                        a = h.alpha;\r\n                    }\r\n                    return new Color(h.rgb, a, 'hsla');\r\n                }\r\n                h = (number$1(h) % 360) / 360;\r\n                s = clamp(number$1(s));\r\n                l = clamp(number$1(l));\r\n                a = clamp(number$1(a));\r\n                m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\r\n                m1 = l * 2 - m2;\r\n                var rgb = [\r\n                    hue(h + 1 / 3) * 255,\r\n                    hue(h) * 255,\r\n                    hue(h - 1 / 3) * 255\r\n                ];\r\n                a = number$1(a);\r\n                return new Color(rgb, a, 'hsla');\r\n            }\r\n            catch (e) { }\r\n        },\r\n        hsv: function (h, s, v) {\r\n            return colorFunctions.hsva(h, s, v, 1.0);\r\n        },\r\n        hsva: function (h, s, v, a) {\r\n            h = ((number$1(h) % 360) / 360) * 360;\r\n            s = number$1(s);\r\n            v = number$1(v);\r\n            a = number$1(a);\r\n            var i;\r\n            var f;\r\n            i = Math.floor((h / 60) % 6);\r\n            f = (h / 60) - i;\r\n            var vs = [v,\r\n                v * (1 - s),\r\n                v * (1 - f * s),\r\n                v * (1 - (1 - f) * s)];\r\n            var perm = [[0, 3, 1],\r\n                [2, 0, 1],\r\n                [1, 0, 3],\r\n                [1, 2, 0],\r\n                [3, 1, 0],\r\n                [0, 1, 2]];\r\n            return colorFunctions.rgba(vs[perm[i][0]] * 255, vs[perm[i][1]] * 255, vs[perm[i][2]] * 255, a);\r\n        },\r\n        hue: function (color) {\r\n            return new Dimension(toHSL(color).h);\r\n        },\r\n        saturation: function (color) {\r\n            return new Dimension(toHSL(color).s * 100, '%');\r\n        },\r\n        lightness: function (color) {\r\n            return new Dimension(toHSL(color).l * 100, '%');\r\n        },\r\n        hsvhue: function (color) {\r\n            return new Dimension(toHSV(color).h);\r\n        },\r\n        hsvsaturation: function (color) {\r\n            return new Dimension(toHSV(color).s * 100, '%');\r\n        },\r\n        hsvvalue: function (color) {\r\n            return new Dimension(toHSV(color).v * 100, '%');\r\n        },\r\n        red: function (color) {\r\n            return new Dimension(color.rgb[0]);\r\n        },\r\n        green: function (color) {\r\n            return new Dimension(color.rgb[1]);\r\n        },\r\n        blue: function (color) {\r\n            return new Dimension(color.rgb[2]);\r\n        },\r\n        alpha: function (color) {\r\n            return new Dimension(toHSL(color).a);\r\n        },\r\n        luma: function (color) {\r\n            return new Dimension(color.luma() * color.alpha * 100, '%');\r\n        },\r\n        luminance: function (color) {\r\n            var luminance = (0.2126 * color.rgb[0] / 255) +\r\n                (0.7152 * color.rgb[1] / 255) +\r\n                (0.0722 * color.rgb[2] / 255);\r\n            return new Dimension(luminance * color.alpha * 100, '%');\r\n        },\r\n        saturate: function (color, amount, method) {\r\n            // filter: saturate(3.2);\r\n            // should be kept as is, so check for color\r\n            if (!color.rgb) {\r\n                return null;\r\n            }\r\n            var hsl = toHSL(color);\r\n            if (typeof method !== 'undefined' && method.value === 'relative') {\r\n                hsl.s += hsl.s * amount.value / 100;\r\n            }\r\n            else {\r\n                hsl.s += amount.value / 100;\r\n            }\r\n            hsl.s = clamp(hsl.s);\r\n            return hsla(color, hsl);\r\n        },\r\n        desaturate: function (color, amount, method) {\r\n            var hsl = toHSL(color);\r\n            if (typeof method !== 'undefined' && method.value === 'relative') {\r\n                hsl.s -= hsl.s * amount.value / 100;\r\n            }\r\n            else {\r\n                hsl.s -= amount.value / 100;\r\n            }\r\n            hsl.s = clamp(hsl.s);\r\n            return hsla(color, hsl);\r\n        },\r\n        lighten: function (color, amount, method) {\r\n            var hsl = toHSL(color);\r\n            if (typeof method !== 'undefined' && method.value === 'relative') {\r\n                hsl.l += hsl.l * amount.value / 100;\r\n            }\r\n            else {\r\n                hsl.l += amount.value / 100;\r\n            }\r\n            hsl.l = clamp(hsl.l);\r\n            return hsla(color, hsl);\r\n        },\r\n        darken: function (color, amount, method) {\r\n            var hsl = toHSL(color);\r\n            if (typeof method !== 'undefined' && method.value === 'relative') {\r\n                hsl.l -= hsl.l * amount.value / 100;\r\n            }\r\n            else {\r\n                hsl.l -= amount.value / 100;\r\n            }\r\n            hsl.l = clamp(hsl.l);\r\n            return hsla(color, hsl);\r\n        },\r\n        fadein: function (color, amount, method) {\r\n            var hsl = toHSL(color);\r\n            if (typeof method !== 'undefined' && method.value === 'relative') {\r\n                hsl.a += hsl.a * amount.value / 100;\r\n            }\r\n            else {\r\n                hsl.a += amount.value / 100;\r\n            }\r\n            hsl.a = clamp(hsl.a);\r\n            return hsla(color, hsl);\r\n        },\r\n        fadeout: function (color, amount, method) {\r\n            var hsl = toHSL(color);\r\n            if (typeof method !== 'undefined' && method.value === 'relative') {\r\n                hsl.a -= hsl.a * amount.value / 100;\r\n            }\r\n            else {\r\n                hsl.a -= amount.value / 100;\r\n            }\r\n            hsl.a = clamp(hsl.a);\r\n            return hsla(color, hsl);\r\n        },\r\n        fade: function (color, amount) {\r\n            var hsl = toHSL(color);\r\n            hsl.a = amount.value / 100;\r\n            hsl.a = clamp(hsl.a);\r\n            return hsla(color, hsl);\r\n        },\r\n        spin: function (color, amount) {\r\n            var hsl = toHSL(color);\r\n            var hue = (hsl.h + amount.value) % 360;\r\n            hsl.h = hue < 0 ? 360 + hue : hue;\r\n            return hsla(color, hsl);\r\n        },\r\n        //\r\n        // Copyright (c) 2006-2009 Hampton Catlin, Natalie Weizenbaum, and Chris Eppstein\r\n        // http://sass-lang.com\r\n        //\r\n        mix: function (color1, color2, weight) {\r\n            if (!weight) {\r\n                weight = new Dimension(50);\r\n            }\r\n            var p = weight.value / 100.0;\r\n            var w = p * 2 - 1;\r\n            var a = toHSL(color1).a - toHSL(color2).a;\r\n            var w1 = (((w * a == -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\r\n            var w2 = 1 - w1;\r\n            var rgb = [color1.rgb[0] * w1 + color2.rgb[0] * w2,\r\n                color1.rgb[1] * w1 + color2.rgb[1] * w2,\r\n                color1.rgb[2] * w1 + color2.rgb[2] * w2];\r\n            var alpha = color1.alpha * p + color2.alpha * (1 - p);\r\n            return new Color(rgb, alpha);\r\n        },\r\n        greyscale: function (color) {\r\n            return colorFunctions.desaturate(color, new Dimension(100));\r\n        },\r\n        contrast: function (color, dark, light, threshold) {\r\n            // filter: contrast(3.2);\r\n            // should be kept as is, so check for color\r\n            if (!color.rgb) {\r\n                return null;\r\n            }\r\n            if (typeof light === 'undefined') {\r\n                light = colorFunctions.rgba(255, 255, 255, 1.0);\r\n            }\r\n            if (typeof dark === 'undefined') {\r\n                dark = colorFunctions.rgba(0, 0, 0, 1.0);\r\n            }\r\n            // Figure out which is actually light and dark:\r\n            if (dark.luma() > light.luma()) {\r\n                var t = light;\r\n                light = dark;\r\n                dark = t;\r\n            }\r\n            if (typeof threshold === 'undefined') {\r\n                threshold = 0.43;\r\n            }\r\n            else {\r\n                threshold = number$1(threshold);\r\n            }\r\n            if (color.luma() < threshold) {\r\n                return light;\r\n            }\r\n            else {\r\n                return dark;\r\n            }\r\n        },\r\n        // Changes made in 2.7.0 - Reverted in 3.0.0\r\n        // contrast: function (color, color1, color2, threshold) {\r\n        //     // Return which of `color1` and `color2` has the greatest contrast with `color`\r\n        //     // according to the standard WCAG contrast ratio calculation.\r\n        //     // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\r\n        //     // The threshold param is no longer used, in line with SASS.\r\n        //     // filter: contrast(3.2);\r\n        //     // should be kept as is, so check for color\r\n        //     if (!color.rgb) {\r\n        //         return null;\r\n        //     }\r\n        //     if (typeof color1 === 'undefined') {\r\n        //         color1 = colorFunctions.rgba(0, 0, 0, 1.0);\r\n        //     }\r\n        //     if (typeof color2 === 'undefined') {\r\n        //         color2 = colorFunctions.rgba(255, 255, 255, 1.0);\r\n        //     }\r\n        //     var contrast1, contrast2;\r\n        //     var luma = color.luma();\r\n        //     var luma1 = color1.luma();\r\n        //     var luma2 = color2.luma();\r\n        //     // Calculate contrast ratios for each color\r\n        //     if (luma > luma1) {\r\n        //         contrast1 = (luma + 0.05) / (luma1 + 0.05);\r\n        //     } else {\r\n        //         contrast1 = (luma1 + 0.05) / (luma + 0.05);\r\n        //     }\r\n        //     if (luma > luma2) {\r\n        //         contrast2 = (luma + 0.05) / (luma2 + 0.05);\r\n        //     } else {\r\n        //         contrast2 = (luma2 + 0.05) / (luma + 0.05);\r\n        //     }\r\n        //     if (contrast1 > contrast2) {\r\n        //         return color1;\r\n        //     } else {\r\n        //         return color2;\r\n        //     }\r\n        // },\r\n        argb: function (color) {\r\n            return new Anonymous(color.toARGB());\r\n        },\r\n        color: function (c) {\r\n            if ((c instanceof Quoted) &&\r\n                (/^#([A-Fa-f0-9]{8}|[A-Fa-f0-9]{6}|[A-Fa-f0-9]{3,4})$/i.test(c.value))) {\r\n                var val = c.value.slice(1);\r\n                return new Color(val, undefined, \"#\" + val);\r\n            }\r\n            if ((c instanceof Color) || (c = Color.fromKeyword(c.value))) {\r\n                c.value = undefined;\r\n                return c;\r\n            }\r\n            throw {\r\n                type: 'Argument',\r\n                message: 'argument must be a color keyword or 3|4|6|8 digit hex e.g. #FFF'\r\n            };\r\n        },\r\n        tint: function (color, amount) {\r\n            return colorFunctions.mix(colorFunctions.rgb(255, 255, 255), color, amount);\r\n        },\r\n        shade: function (color, amount) {\r\n            return colorFunctions.mix(colorFunctions.rgb(0, 0, 0), color, amount);\r\n        }\r\n    };\r\n    var color = colorFunctions;\n\n    // Color Blending\r\n    // ref: http://www.w3.org/TR/compositing-1\r\n    function colorBlend(mode, color1, color2) {\r\n        var ab = color1.alpha; // result\r\n        var // backdrop\r\n        cb;\r\n        var as = color2.alpha;\r\n        var // source\r\n        cs;\r\n        var ar;\r\n        var cr;\r\n        var r = [];\r\n        ar = as + ab * (1 - as);\r\n        for (var i_1 = 0; i_1 < 3; i_1++) {\r\n            cb = color1.rgb[i_1] / 255;\r\n            cs = color2.rgb[i_1] / 255;\r\n            cr = mode(cb, cs);\r\n            if (ar) {\r\n                cr = (as * cs + ab * (cb -\r\n                    as * (cb + cs - cr))) / ar;\r\n            }\r\n            r[i_1] = cr * 255;\r\n        }\r\n        return new Color(r, ar);\r\n    }\r\n    var colorBlendModeFunctions = {\r\n        multiply: function (cb, cs) {\r\n            return cb * cs;\r\n        },\r\n        screen: function (cb, cs) {\r\n            return cb + cs - cb * cs;\r\n        },\r\n        overlay: function (cb, cs) {\r\n            cb *= 2;\r\n            return (cb <= 1) ?\r\n                colorBlendModeFunctions.multiply(cb, cs) :\r\n                colorBlendModeFunctions.screen(cb - 1, cs);\r\n        },\r\n        softlight: function (cb, cs) {\r\n            var d = 1;\r\n            var e = cb;\r\n            if (cs > 0.5) {\r\n                e = 1;\r\n                d = (cb > 0.25) ? Math.sqrt(cb)\r\n                    : ((16 * cb - 12) * cb + 4) * cb;\r\n            }\r\n            return cb - (1 - 2 * cs) * e * (d - cb);\r\n        },\r\n        hardlight: function (cb, cs) {\r\n            return colorBlendModeFunctions.overlay(cs, cb);\r\n        },\r\n        difference: function (cb, cs) {\r\n            return Math.abs(cb - cs);\r\n        },\r\n        exclusion: function (cb, cs) {\r\n            return cb + cs - 2 * cb * cs;\r\n        },\r\n        // non-w3c functions:\r\n        average: function (cb, cs) {\r\n            return (cb + cs) / 2;\r\n        },\r\n        negation: function (cb, cs) {\r\n            return 1 - Math.abs(cb + cs - 1);\r\n        }\r\n    };\r\n    for (var f$1 in colorBlendModeFunctions) {\r\n        // eslint-disable-next-line no-prototype-builtins\r\n        if (colorBlendModeFunctions.hasOwnProperty(f$1)) {\r\n            colorBlend[f$1] = colorBlend.bind(null, colorBlendModeFunctions[f$1]);\r\n        }\r\n    }\n\n    var dataUri = (function (environment) {\r\n        var fallback = function (functionThis, node) { return new URL(node, functionThis.index, functionThis.currentFileInfo).eval(functionThis.context); };\r\n        return { 'data-uri': function (mimetypeNode, filePathNode) {\r\n                if (!filePathNode) {\r\n                    filePathNode = mimetypeNode;\r\n                    mimetypeNode = null;\r\n                }\r\n                var mimetype = mimetypeNode && mimetypeNode.value;\r\n                var filePath = filePathNode.value;\r\n                var currentFileInfo = this.currentFileInfo;\r\n                var currentDirectory = currentFileInfo.rewriteUrls ?\r\n                    currentFileInfo.currentDirectory : currentFileInfo.entryPath;\r\n                var fragmentStart = filePath.indexOf('#');\r\n                var fragment = '';\r\n                if (fragmentStart !== -1) {\r\n                    fragment = filePath.slice(fragmentStart);\r\n                    filePath = filePath.slice(0, fragmentStart);\r\n                }\r\n                var context = clone(this.context);\r\n                context.rawBuffer = true;\r\n                var fileManager = environment.getFileManager(filePath, currentDirectory, context, environment, true);\r\n                if (!fileManager) {\r\n                    return fallback(this, filePathNode);\r\n                }\r\n                var useBase64 = false;\r\n                // detect the mimetype if not given\r\n                if (!mimetypeNode) {\r\n                    mimetype = environment.mimeLookup(filePath);\r\n                    if (mimetype === 'image/svg+xml') {\r\n                        useBase64 = false;\r\n                    }\r\n                    else {\r\n                        // use base 64 unless it's an ASCII or UTF-8 format\r\n                        var charset = environment.charsetLookup(mimetype);\r\n                        useBase64 = ['US-ASCII', 'UTF-8'].indexOf(charset) < 0;\r\n                    }\r\n                    if (useBase64) {\r\n                        mimetype += ';base64';\r\n                    }\r\n                }\r\n                else {\r\n                    useBase64 = /;base64$/.test(mimetype);\r\n                }\r\n                var fileSync = fileManager.loadFileSync(filePath, currentDirectory, context, environment);\r\n                if (!fileSync.contents) {\r\n                    logger$1.warn(\"Skipped data-uri embedding of \" + filePath + \" because file not found\");\r\n                    return fallback(this, filePathNode || mimetypeNode);\r\n                }\r\n                var buf = fileSync.contents;\r\n                if (useBase64 && !environment.encodeBase64) {\r\n                    return fallback(this, filePathNode);\r\n                }\r\n                buf = useBase64 ? environment.encodeBase64(buf) : encodeURIComponent(buf);\r\n                var uri = \"data:\" + mimetype + \",\" + buf + fragment;\r\n                return new URL(new Quoted(\"\\\"\" + uri + \"\\\"\", uri, false, this.index, this.currentFileInfo), this.index, this.currentFileInfo);\r\n            } };\r\n    });\n\n    var getItemsFromNode = function (node) {\r\n        // handle non-array values as an array of length 1\r\n        // return 'undefined' if index is invalid\r\n        var items = Array.isArray(node.value) ?\r\n            node.value : Array(node);\r\n        return items;\r\n    };\r\n    var list = {\r\n        _SELF: function (n) {\r\n            return n;\r\n        },\r\n        '~': function () {\r\n            var expr = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                expr[_i] = arguments[_i];\r\n            }\r\n            if (expr.length === 1) {\r\n                return expr[0];\r\n            }\r\n            return new Value(expr);\r\n        },\r\n        extract: function (values, index) {\r\n            // (1-based index)\r\n            index = index.value - 1;\r\n            return getItemsFromNode(values)[index];\r\n        },\r\n        length: function (values) {\r\n            return new Dimension(getItemsFromNode(values).length);\r\n        },\r\n        /**\r\n         * Creates a Less list of incremental values.\r\n         * Modeled after Lodash's range function, also exists natively in PHP\r\n         *\r\n         * @param {Dimension} [start=1]\r\n         * @param {Dimension} end  - e.g. 10 or 10px - unit is added to output\r\n         * @param {Dimension} [step=1]\r\n         */\r\n        range: function (start, end, step) {\r\n            var from;\r\n            var to;\r\n            var stepValue = 1;\r\n            var list = [];\r\n            if (end) {\r\n                to = end;\r\n                from = start.value;\r\n                if (step) {\r\n                    stepValue = step.value;\r\n                }\r\n            }\r\n            else {\r\n                from = 1;\r\n                to = start;\r\n            }\r\n            for (var i_1 = from; i_1 <= to.value; i_1 += stepValue) {\r\n                list.push(new Dimension(i_1, to.unit));\r\n            }\r\n            return new Expression(list);\r\n        },\r\n        each: function (list, rs) {\r\n            var _this = this;\r\n            var rules = [];\r\n            var newRules;\r\n            var iterator;\r\n            var tryEval = function (val) {\r\n                if (val instanceof Node) {\r\n                    return val.eval(_this.context);\r\n                }\r\n                return val;\r\n            };\r\n            if (list.value && !(list instanceof Quoted)) {\r\n                if (Array.isArray(list.value)) {\r\n                    iterator = list.value.map(tryEval);\r\n                }\r\n                else {\r\n                    iterator = [tryEval(list.value)];\r\n                }\r\n            }\r\n            else if (list.ruleset) {\r\n                iterator = tryEval(list.ruleset).rules;\r\n            }\r\n            else if (list.rules) {\r\n                iterator = list.rules.map(tryEval);\r\n            }\r\n            else if (Array.isArray(list)) {\r\n                iterator = list.map(tryEval);\r\n            }\r\n            else {\r\n                iterator = [tryEval(list)];\r\n            }\r\n            var valueName = '@value';\r\n            var keyName = '@key';\r\n            var indexName = '@index';\r\n            if (rs.params) {\r\n                valueName = rs.params[0] && rs.params[0].name;\r\n                keyName = rs.params[1] && rs.params[1].name;\r\n                indexName = rs.params[2] && rs.params[2].name;\r\n                rs = rs.rules;\r\n            }\r\n            else {\r\n                rs = rs.ruleset;\r\n            }\r\n            for (var i_2 = 0; i_2 < iterator.length; i_2++) {\r\n                var key = void 0;\r\n                var value = void 0;\r\n                var item = iterator[i_2];\r\n                if (item instanceof Declaration) {\r\n                    key = typeof item.name === 'string' ? item.name : item.name[0].value;\r\n                    value = item.value;\r\n                }\r\n                else {\r\n                    key = new Dimension(i_2 + 1);\r\n                    value = item;\r\n                }\r\n                if (item instanceof Comment) {\r\n                    continue;\r\n                }\r\n                newRules = rs.rules.slice(0);\r\n                if (valueName) {\r\n                    newRules.push(new Declaration(valueName, value, false, false, this.index, this.currentFileInfo));\r\n                }\r\n                if (indexName) {\r\n                    newRules.push(new Declaration(indexName, new Dimension(i_2 + 1), false, false, this.index, this.currentFileInfo));\r\n                }\r\n                if (keyName) {\r\n                    newRules.push(new Declaration(keyName, key, false, false, this.index, this.currentFileInfo));\r\n                }\r\n                rules.push(new Ruleset([new (Selector)([new Element('', '&')])], newRules, rs.strictImports, rs.visibilityInfo()));\r\n            }\r\n            return new Ruleset([new (Selector)([new Element('', '&')])], rules, rs.strictImports, rs.visibilityInfo()).eval(this.context);\r\n        }\r\n    };\n\n    var MathHelper = function (fn, unit, n) {\r\n        if (!(n instanceof Dimension)) {\r\n            throw { type: 'Argument', message: 'argument must be a number' };\r\n        }\r\n        if (unit === null) {\r\n            unit = n.unit;\r\n        }\r\n        else {\r\n            n = n.unify();\r\n        }\r\n        return new Dimension(fn(parseFloat(n.value)), unit);\r\n    };\n\n    var mathFunctions = {\r\n        // name,  unit\r\n        ceil: null,\r\n        floor: null,\r\n        sqrt: null,\r\n        abs: null,\r\n        tan: '',\r\n        sin: '',\r\n        cos: '',\r\n        atan: 'rad',\r\n        asin: 'rad',\r\n        acos: 'rad'\r\n    };\r\n    for (var f in mathFunctions) {\r\n        // eslint-disable-next-line no-prototype-builtins\r\n        if (mathFunctions.hasOwnProperty(f)) {\r\n            mathFunctions[f] = MathHelper.bind(null, Math[f], mathFunctions[f]);\r\n        }\r\n    }\r\n    mathFunctions.round = function (n, f) {\r\n        var fraction = typeof f === 'undefined' ? 0 : f.value;\r\n        return MathHelper(function (num) { return num.toFixed(fraction); }, null, n);\r\n    };\n\n    var minMax = function (isMin, args) {\r\n        var _this = this;\r\n        args = Array.prototype.slice.call(args);\r\n        switch (args.length) {\r\n            case 0: throw { type: 'Argument', message: 'one or more arguments required' };\r\n        }\r\n        var i; // key is the unit.toString() for unified Dimension values,\r\n        var j;\r\n        var current;\r\n        var currentUnified;\r\n        var referenceUnified;\r\n        var unit;\r\n        var unitStatic;\r\n        var unitClone;\r\n        var // elems only contains original argument values.\r\n        order = [];\r\n        var values = {};\r\n        // value is the index into the order array.\r\n        for (i = 0; i < args.length; i++) {\r\n            current = args[i];\r\n            if (!(current instanceof Dimension)) {\r\n                if (Array.isArray(args[i].value)) {\r\n                    Array.prototype.push.apply(args, Array.prototype.slice.call(args[i].value));\r\n                }\r\n                continue;\r\n            }\r\n            currentUnified = current.unit.toString() === '' && unitClone !== undefined ? new Dimension(current.value, unitClone).unify() : current.unify();\r\n            unit = currentUnified.unit.toString() === '' && unitStatic !== undefined ? unitStatic : currentUnified.unit.toString();\r\n            unitStatic = unit !== '' && unitStatic === undefined || unit !== '' && order[0].unify().unit.toString() === '' ? unit : unitStatic;\r\n            unitClone = unit !== '' && unitClone === undefined ? current.unit.toString() : unitClone;\r\n            j = values[''] !== undefined && unit !== '' && unit === unitStatic ? values[''] : values[unit];\r\n            if (j === undefined) {\r\n                if (unitStatic !== undefined && unit !== unitStatic) {\r\n                    throw { type: 'Argument', message: 'incompatible types' };\r\n                }\r\n                values[unit] = order.length;\r\n                order.push(current);\r\n                continue;\r\n            }\r\n            referenceUnified = order[j].unit.toString() === '' && unitClone !== undefined ? new Dimension(order[j].value, unitClone).unify() : order[j].unify();\r\n            if (isMin && currentUnified.value < referenceUnified.value ||\r\n                !isMin && currentUnified.value > referenceUnified.value) {\r\n                order[j] = current;\r\n            }\r\n        }\r\n        if (order.length == 1) {\r\n            return order[0];\r\n        }\r\n        args = order.map(function (a) { return a.toCSS(_this.context); }).join(this.context.compress ? ',' : ', ');\r\n        return new Anonymous((isMin ? 'min' : 'max') + \"(\" + args + \")\");\r\n    };\r\n    var number = {\r\n        min: function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            try {\r\n                return minMax.call(this, true, args);\r\n            }\r\n            catch (e) { }\r\n        },\r\n        max: function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            try {\r\n                return minMax.call(this, false, args);\r\n            }\r\n            catch (e) { }\r\n        },\r\n        convert: function (val, unit) {\r\n            return val.convertTo(unit.value);\r\n        },\r\n        pi: function () {\r\n            return new Dimension(Math.PI);\r\n        },\r\n        mod: function (a, b) {\r\n            return new Dimension(a.value % b.value, a.unit);\r\n        },\r\n        pow: function (x, y) {\r\n            if (typeof x === 'number' && typeof y === 'number') {\r\n                x = new Dimension(x);\r\n                y = new Dimension(y);\r\n            }\r\n            else if (!(x instanceof Dimension) || !(y instanceof Dimension)) {\r\n                throw { type: 'Argument', message: 'arguments must be numbers' };\r\n            }\r\n            return new Dimension(Math.pow(x.value, y.value), x.unit);\r\n        },\r\n        percentage: function (n) {\r\n            var result = MathHelper(function (num) { return num * 100; }, '%', n);\r\n            return result;\r\n        }\r\n    };\n\n    var string = {\r\n        e: function (str) {\r\n            return new Quoted('\"', str instanceof JavaScript ? str.evaluated : str.value, true);\r\n        },\r\n        escape: function (str) {\r\n            return new Anonymous(encodeURI(str.value).replace(/=/g, '%3D').replace(/:/g, '%3A').replace(/#/g, '%23').replace(/;/g, '%3B')\r\n                .replace(/\\(/g, '%28').replace(/\\)/g, '%29'));\r\n        },\r\n        replace: function (string, pattern, replacement, flags) {\r\n            var result = string.value;\r\n            replacement = (replacement.type === 'Quoted') ?\r\n                replacement.value : replacement.toCSS();\r\n            result = result.replace(new RegExp(pattern.value, flags ? flags.value : ''), replacement);\r\n            return new Quoted(string.quote || '', result, string.escaped);\r\n        },\r\n        '%': function (string /* arg, arg, ... */) {\r\n            var args = Array.prototype.slice.call(arguments, 1);\r\n            var result = string.value;\r\n            var _loop_1 = function (i_1) {\r\n                /* jshint loopfunc:true */\r\n                result = result.replace(/%[sda]/i, function (token) {\r\n                    var value = ((args[i_1].type === 'Quoted') &&\r\n                        token.match(/s/i)) ? args[i_1].value : args[i_1].toCSS();\r\n                    return token.match(/[A-Z]$/) ? encodeURIComponent(value) : value;\r\n                });\r\n            };\r\n            for (var i_1 = 0; i_1 < args.length; i_1++) {\r\n                _loop_1(i_1);\r\n            }\r\n            result = result.replace(/%%/g, '%');\r\n            return new Quoted(string.quote || '', result, string.escaped);\r\n        }\r\n    };\n\n    var svg = (function () {\r\n        return { 'svg-gradient': function (direction) {\r\n                var stops;\r\n                var gradientDirectionSvg;\r\n                var gradientType = 'linear';\r\n                var rectangleDimension = 'x=\"0\" y=\"0\" width=\"1\" height=\"1\"';\r\n                var renderEnv = { compress: false };\r\n                var returner;\r\n                var directionValue = direction.toCSS(renderEnv);\r\n                var i;\r\n                var color;\r\n                var position;\r\n                var positionValue;\r\n                var alpha;\r\n                function throwArgumentDescriptor() {\r\n                    throw { type: 'Argument',\r\n                        message: 'svg-gradient expects direction, start_color [start_position], [color position,]...,' +\r\n                            ' end_color [end_position] or direction, color list' };\r\n                }\r\n                if (arguments.length == 2) {\r\n                    if (arguments[1].value.length < 2) {\r\n                        throwArgumentDescriptor();\r\n                    }\r\n                    stops = arguments[1].value;\r\n                }\r\n                else if (arguments.length < 3) {\r\n                    throwArgumentDescriptor();\r\n                }\r\n                else {\r\n                    stops = Array.prototype.slice.call(arguments, 1);\r\n                }\r\n                switch (directionValue) {\r\n                    case 'to bottom':\r\n                        gradientDirectionSvg = 'x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\"';\r\n                        break;\r\n                    case 'to right':\r\n                        gradientDirectionSvg = 'x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"';\r\n                        break;\r\n                    case 'to bottom right':\r\n                        gradientDirectionSvg = 'x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\"';\r\n                        break;\r\n                    case 'to top right':\r\n                        gradientDirectionSvg = 'x1=\"0%\" y1=\"100%\" x2=\"100%\" y2=\"0%\"';\r\n                        break;\r\n                    case 'ellipse':\r\n                    case 'ellipse at center':\r\n                        gradientType = 'radial';\r\n                        gradientDirectionSvg = 'cx=\"50%\" cy=\"50%\" r=\"75%\"';\r\n                        rectangleDimension = 'x=\"-50\" y=\"-50\" width=\"101\" height=\"101\"';\r\n                        break;\r\n                    default:\r\n                        throw { type: 'Argument', message: 'svg-gradient direction must be \\'to bottom\\', \\'to right\\',' +\r\n                                ' \\'to bottom right\\', \\'to top right\\' or \\'ellipse at center\\'' };\r\n                }\r\n                returner = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 1 1\\\"><\" + gradientType + \"Gradient id=\\\"g\\\" \" + gradientDirectionSvg + \">\";\r\n                for (i = 0; i < stops.length; i += 1) {\r\n                    if (stops[i] instanceof Expression) {\r\n                        color = stops[i].value[0];\r\n                        position = stops[i].value[1];\r\n                    }\r\n                    else {\r\n                        color = stops[i];\r\n                        position = undefined;\r\n                    }\r\n                    if (!(color instanceof Color) || (!((i === 0 || i + 1 === stops.length) && position === undefined) && !(position instanceof Dimension))) {\r\n                        throwArgumentDescriptor();\r\n                    }\r\n                    positionValue = position ? position.toCSS(renderEnv) : i === 0 ? '0%' : '100%';\r\n                    alpha = color.alpha;\r\n                    returner += \"<stop offset=\\\"\" + positionValue + \"\\\" stop-color=\\\"\" + color.toRGB() + \"\\\"\" + (alpha < 1 ? \" stop-opacity=\\\"\" + alpha + \"\\\"\" : '') + \"/>\";\r\n                }\r\n                returner += \"</\" + gradientType + \"Gradient><rect \" + rectangleDimension + \" fill=\\\"url(#g)\\\" /></svg>\";\r\n                returner = encodeURIComponent(returner);\r\n                returner = \"data:image/svg+xml,\" + returner;\r\n                return new URL(new Quoted(\"'\" + returner + \"'\", returner, false, this.index, this.currentFileInfo), this.index, this.currentFileInfo);\r\n            } };\r\n    });\n\n    var isa = function (n, Type) { return (n instanceof Type) ? Keyword.True : Keyword.False; };\r\n    var isunit = function (n, unit) {\r\n        if (unit === undefined) {\r\n            throw { type: 'Argument', message: 'missing the required second argument to isunit.' };\r\n        }\r\n        unit = typeof unit.value === 'string' ? unit.value : unit;\r\n        if (typeof unit !== 'string') {\r\n            throw { type: 'Argument', message: 'Second argument to isunit should be a unit or a string.' };\r\n        }\r\n        return (n instanceof Dimension) && n.unit.is(unit) ? Keyword.True : Keyword.False;\r\n    };\r\n    var types = {\r\n        isruleset: function (n) {\r\n            return isa(n, DetachedRuleset);\r\n        },\r\n        iscolor: function (n) {\r\n            return isa(n, Color);\r\n        },\r\n        isnumber: function (n) {\r\n            return isa(n, Dimension);\r\n        },\r\n        isstring: function (n) {\r\n            return isa(n, Quoted);\r\n        },\r\n        iskeyword: function (n) {\r\n            return isa(n, Keyword);\r\n        },\r\n        isurl: function (n) {\r\n            return isa(n, URL);\r\n        },\r\n        ispixel: function (n) {\r\n            return isunit(n, 'px');\r\n        },\r\n        ispercentage: function (n) {\r\n            return isunit(n, '%');\r\n        },\r\n        isem: function (n) {\r\n            return isunit(n, 'em');\r\n        },\r\n        isunit: isunit,\r\n        unit: function (val, unit) {\r\n            if (!(val instanceof Dimension)) {\r\n                throw { type: 'Argument',\r\n                    message: \"the first argument to unit must be a number\" + (val instanceof Operation ? '. Have you forgotten parenthesis?' : '') };\r\n            }\r\n            if (unit) {\r\n                if (unit instanceof Keyword) {\r\n                    unit = unit.value;\r\n                }\r\n                else {\r\n                    unit = unit.toCSS();\r\n                }\r\n            }\r\n            else {\r\n                unit = '';\r\n            }\r\n            return new Dimension(val.value, unit);\r\n        },\r\n        'get-unit': function (n) {\r\n            return new Anonymous(n.unit);\r\n        }\r\n    };\n\n    var functions = (function (environment) {\r\n        var functions = { functionRegistry: functionRegistry, functionCaller: functionCaller };\r\n        // register functions\r\n        functionRegistry.addMultiple(boolean$1);\r\n        functionRegistry.add('default', defaultFunc.eval.bind(defaultFunc));\r\n        functionRegistry.addMultiple(color);\r\n        functionRegistry.addMultiple(colorBlend);\r\n        functionRegistry.addMultiple(dataUri(environment));\r\n        functionRegistry.addMultiple(list);\r\n        functionRegistry.addMultiple(mathFunctions);\r\n        functionRegistry.addMultiple(number);\r\n        functionRegistry.addMultiple(string);\r\n        functionRegistry.addMultiple(svg());\r\n        functionRegistry.addMultiple(types);\r\n        return functions;\r\n    });\n\n    function transformTree (root, options) {\r\n        options = options || {};\r\n        var evaldRoot;\r\n        var variables = options.variables;\r\n        var evalEnv = new contexts.Eval(options);\r\n        //\r\n        // Allows setting variables with a hash, so:\r\n        //\r\n        //   `{ color: new tree.Color('#f01') }` will become:\r\n        //\r\n        //   new tree.Declaration('@color',\r\n        //     new tree.Value([\r\n        //       new tree.Expression([\r\n        //         new tree.Color('#f01')\r\n        //       ])\r\n        //     ])\r\n        //   )\r\n        //\r\n        if (typeof variables === 'object' && !Array.isArray(variables)) {\r\n            variables = Object.keys(variables).map(function (k) {\r\n                var value = variables[k];\r\n                if (!(value instanceof tree.Value)) {\r\n                    if (!(value instanceof tree.Expression)) {\r\n                        value = new tree.Expression([value]);\r\n                    }\r\n                    value = new tree.Value([value]);\r\n                }\r\n                return new tree.Declaration(\"@\" + k, value, false, null, 0);\r\n            });\r\n            evalEnv.frames = [new tree.Ruleset(null, variables)];\r\n        }\r\n        var visitors$1 = [\r\n            new visitors.JoinSelectorVisitor(),\r\n            new visitors.MarkVisibleSelectorsVisitor(true),\r\n            new visitors.ExtendVisitor(),\r\n            new visitors.ToCSSVisitor({ compress: Boolean(options.compress) })\r\n        ];\r\n        var preEvalVisitors = [];\r\n        var v;\r\n        var visitorIterator;\r\n        /**\r\n         * first() / get() allows visitors to be added while visiting\r\n         *\r\n         * @todo Add scoping for visitors just like functions for @plugin; right now they're global\r\n         */\r\n        if (options.pluginManager) {\r\n            visitorIterator = options.pluginManager.visitor();\r\n            for (var i_1 = 0; i_1 < 2; i_1++) {\r\n                visitorIterator.first();\r\n                while ((v = visitorIterator.get())) {\r\n                    if (v.isPreEvalVisitor) {\r\n                        if (i_1 === 0 || preEvalVisitors.indexOf(v) === -1) {\r\n                            preEvalVisitors.push(v);\r\n                            v.run(root);\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (i_1 === 0 || visitors$1.indexOf(v) === -1) {\r\n                            if (v.isPreVisitor) {\r\n                                visitors$1.unshift(v);\r\n                            }\r\n                            else {\r\n                                visitors$1.push(v);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        evaldRoot = root.eval(evalEnv);\r\n        for (var i_2 = 0; i_2 < visitors$1.length; i_2++) {\r\n            visitors$1[i_2].run(evaldRoot);\r\n        }\r\n        // Run any remaining visitors added after eval pass\r\n        if (options.pluginManager) {\r\n            visitorIterator.first();\r\n            while ((v = visitorIterator.get())) {\r\n                if (visitors$1.indexOf(v) === -1 && preEvalVisitors.indexOf(v) === -1) {\r\n                    v.run(evaldRoot);\r\n                }\r\n            }\r\n        }\r\n        return evaldRoot;\r\n    }\n\n    /**\r\n     * Plugin Manager\r\n     */\r\n    var PluginManager = /** @class */ (function () {\r\n        function PluginManager(less) {\r\n            this.less = less;\r\n            this.visitors = [];\r\n            this.preProcessors = [];\r\n            this.postProcessors = [];\r\n            this.installedPlugins = [];\r\n            this.fileManagers = [];\r\n            this.iterator = -1;\r\n            this.pluginCache = {};\r\n            this.Loader = new less.PluginLoader(less);\r\n        }\r\n        /**\r\n         * Adds all the plugins in the array\r\n         * @param {Array} plugins\r\n         */\r\n        PluginManager.prototype.addPlugins = function (plugins) {\r\n            if (plugins) {\r\n                for (var i_1 = 0; i_1 < plugins.length; i_1++) {\r\n                    this.addPlugin(plugins[i_1]);\r\n                }\r\n            }\r\n        };\r\n        /**\r\n         *\r\n         * @param plugin\r\n         * @param {String} filename\r\n         */\r\n        PluginManager.prototype.addPlugin = function (plugin, filename, functionRegistry) {\r\n            this.installedPlugins.push(plugin);\r\n            if (filename) {\r\n                this.pluginCache[filename] = plugin;\r\n            }\r\n            if (plugin.install) {\r\n                plugin.install(this.less, this, functionRegistry || this.less.functions.functionRegistry);\r\n            }\r\n        };\r\n        /**\r\n         *\r\n         * @param filename\r\n         */\r\n        PluginManager.prototype.get = function (filename) {\r\n            return this.pluginCache[filename];\r\n        };\r\n        /**\r\n         * Adds a visitor. The visitor object has options on itself to determine\r\n         * when it should run.\r\n         * @param visitor\r\n         */\r\n        PluginManager.prototype.addVisitor = function (visitor) {\r\n            this.visitors.push(visitor);\r\n        };\r\n        /**\r\n         * Adds a pre processor object\r\n         * @param {object} preProcessor\r\n         * @param {number} priority - guidelines 1 = before import, 1000 = import, 2000 = after import\r\n         */\r\n        PluginManager.prototype.addPreProcessor = function (preProcessor, priority) {\r\n            var indexToInsertAt;\r\n            for (indexToInsertAt = 0; indexToInsertAt < this.preProcessors.length; indexToInsertAt++) {\r\n                if (this.preProcessors[indexToInsertAt].priority >= priority) {\r\n                    break;\r\n                }\r\n            }\r\n            this.preProcessors.splice(indexToInsertAt, 0, { preProcessor: preProcessor, priority: priority });\r\n        };\r\n        /**\r\n         * Adds a post processor object\r\n         * @param {object} postProcessor\r\n         * @param {number} priority - guidelines 1 = before compression, 1000 = compression, 2000 = after compression\r\n         */\r\n        PluginManager.prototype.addPostProcessor = function (postProcessor, priority) {\r\n            var indexToInsertAt;\r\n            for (indexToInsertAt = 0; indexToInsertAt < this.postProcessors.length; indexToInsertAt++) {\r\n                if (this.postProcessors[indexToInsertAt].priority >= priority) {\r\n                    break;\r\n                }\r\n            }\r\n            this.postProcessors.splice(indexToInsertAt, 0, { postProcessor: postProcessor, priority: priority });\r\n        };\r\n        /**\r\n         *\r\n         * @param manager\r\n         */\r\n        PluginManager.prototype.addFileManager = function (manager) {\r\n            this.fileManagers.push(manager);\r\n        };\r\n        /**\r\n         *\r\n         * @returns {Array}\r\n         * @private\r\n         */\r\n        PluginManager.prototype.getPreProcessors = function () {\r\n            var preProcessors = [];\r\n            for (var i_2 = 0; i_2 < this.preProcessors.length; i_2++) {\r\n                preProcessors.push(this.preProcessors[i_2].preProcessor);\r\n            }\r\n            return preProcessors;\r\n        };\r\n        /**\r\n         *\r\n         * @returns {Array}\r\n         * @private\r\n         */\r\n        PluginManager.prototype.getPostProcessors = function () {\r\n            var postProcessors = [];\r\n            for (var i_3 = 0; i_3 < this.postProcessors.length; i_3++) {\r\n                postProcessors.push(this.postProcessors[i_3].postProcessor);\r\n            }\r\n            return postProcessors;\r\n        };\r\n        /**\r\n         *\r\n         * @returns {Array}\r\n         * @private\r\n         */\r\n        PluginManager.prototype.getVisitors = function () {\r\n            return this.visitors;\r\n        };\r\n        PluginManager.prototype.visitor = function () {\r\n            var self = this;\r\n            return {\r\n                first: function () {\r\n                    self.iterator = -1;\r\n                    return self.visitors[self.iterator];\r\n                },\r\n                get: function () {\r\n                    self.iterator += 1;\r\n                    return self.visitors[self.iterator];\r\n                }\r\n            };\r\n        };\r\n        /**\r\n         *\r\n         * @returns {Array}\r\n         * @private\r\n         */\r\n        PluginManager.prototype.getFileManagers = function () {\r\n            return this.fileManagers;\r\n        };\r\n        return PluginManager;\r\n    }());\r\n    var pm;\r\n    var PluginManagerFactory = function (less, newFactory) {\r\n        if (newFactory || !pm) {\r\n            pm = new PluginManager(less);\r\n        }\r\n        return pm;\r\n    };\n\n    function SourceMapOutput (environment) {\r\n        var SourceMapOutput = /** @class */ (function () {\r\n            function SourceMapOutput(options) {\r\n                this._css = [];\r\n                this._rootNode = options.rootNode;\r\n                this._contentsMap = options.contentsMap;\r\n                this._contentsIgnoredCharsMap = options.contentsIgnoredCharsMap;\r\n                if (options.sourceMapFilename) {\r\n                    this._sourceMapFilename = options.sourceMapFilename.replace(/\\\\/g, '/');\r\n                }\r\n                this._outputFilename = options.outputFilename;\r\n                this.sourceMapURL = options.sourceMapURL;\r\n                if (options.sourceMapBasepath) {\r\n                    this._sourceMapBasepath = options.sourceMapBasepath.replace(/\\\\/g, '/');\r\n                }\r\n                if (options.sourceMapRootpath) {\r\n                    this._sourceMapRootpath = options.sourceMapRootpath.replace(/\\\\/g, '/');\r\n                    if (this._sourceMapRootpath.charAt(this._sourceMapRootpath.length - 1) !== '/') {\r\n                        this._sourceMapRootpath += '/';\r\n                    }\r\n                }\r\n                else {\r\n                    this._sourceMapRootpath = '';\r\n                }\r\n                this._outputSourceFiles = options.outputSourceFiles;\r\n                this._sourceMapGeneratorConstructor = environment.getSourceMapGenerator();\r\n                this._lineNumber = 0;\r\n                this._column = 0;\r\n            }\r\n            SourceMapOutput.prototype.removeBasepath = function (path) {\r\n                if (this._sourceMapBasepath && path.indexOf(this._sourceMapBasepath) === 0) {\r\n                    path = path.substring(this._sourceMapBasepath.length);\r\n                    if (path.charAt(0) === '\\\\' || path.charAt(0) === '/') {\r\n                        path = path.substring(1);\r\n                    }\r\n                }\r\n                return path;\r\n            };\r\n            SourceMapOutput.prototype.normalizeFilename = function (filename) {\r\n                filename = filename.replace(/\\\\/g, '/');\r\n                filename = this.removeBasepath(filename);\r\n                return (this._sourceMapRootpath || '') + filename;\r\n            };\r\n            SourceMapOutput.prototype.add = function (chunk, fileInfo, index, mapLines) {\r\n                // ignore adding empty strings\r\n                if (!chunk) {\r\n                    return;\r\n                }\r\n                var lines, sourceLines, columns, sourceColumns, i;\r\n                if (fileInfo && fileInfo.filename) {\r\n                    var inputSource = this._contentsMap[fileInfo.filename];\r\n                    // remove vars/banner added to the top of the file\r\n                    if (this._contentsIgnoredCharsMap[fileInfo.filename]) {\r\n                        // adjust the index\r\n                        index -= this._contentsIgnoredCharsMap[fileInfo.filename];\r\n                        if (index < 0) {\r\n                            index = 0;\r\n                        }\r\n                        // adjust the source\r\n                        inputSource = inputSource.slice(this._contentsIgnoredCharsMap[fileInfo.filename]);\r\n                    }\r\n                    /**\r\n                     * ignore empty content, or failsafe\r\n                     * if contents map is incorrect\r\n                     */\r\n                    if (inputSource === undefined) {\r\n                        this._css.push(chunk);\r\n                        return;\r\n                    }\r\n                    inputSource = inputSource.substring(0, index);\r\n                    sourceLines = inputSource.split('\\n');\r\n                    sourceColumns = sourceLines[sourceLines.length - 1];\r\n                }\r\n                lines = chunk.split('\\n');\r\n                columns = lines[lines.length - 1];\r\n                if (fileInfo && fileInfo.filename) {\r\n                    if (!mapLines) {\r\n                        this._sourceMapGenerator.addMapping({ generated: { line: this._lineNumber + 1, column: this._column },\r\n                            original: { line: sourceLines.length, column: sourceColumns.length },\r\n                            source: this.normalizeFilename(fileInfo.filename) });\r\n                    }\r\n                    else {\r\n                        for (i = 0; i < lines.length; i++) {\r\n                            this._sourceMapGenerator.addMapping({ generated: { line: this._lineNumber + i + 1, column: i === 0 ? this._column : 0 },\r\n                                original: { line: sourceLines.length + i, column: i === 0 ? sourceColumns.length : 0 },\r\n                                source: this.normalizeFilename(fileInfo.filename) });\r\n                        }\r\n                    }\r\n                }\r\n                if (lines.length === 1) {\r\n                    this._column += columns.length;\r\n                }\r\n                else {\r\n                    this._lineNumber += lines.length - 1;\r\n                    this._column = columns.length;\r\n                }\r\n                this._css.push(chunk);\r\n            };\r\n            SourceMapOutput.prototype.isEmpty = function () {\r\n                return this._css.length === 0;\r\n            };\r\n            SourceMapOutput.prototype.toCSS = function (context) {\r\n                this._sourceMapGenerator = new this._sourceMapGeneratorConstructor({ file: this._outputFilename, sourceRoot: null });\r\n                if (this._outputSourceFiles) {\r\n                    for (var filename in this._contentsMap) {\r\n                        // eslint-disable-next-line no-prototype-builtins\r\n                        if (this._contentsMap.hasOwnProperty(filename)) {\r\n                            var source = this._contentsMap[filename];\r\n                            if (this._contentsIgnoredCharsMap[filename]) {\r\n                                source = source.slice(this._contentsIgnoredCharsMap[filename]);\r\n                            }\r\n                            this._sourceMapGenerator.setSourceContent(this.normalizeFilename(filename), source);\r\n                        }\r\n                    }\r\n                }\r\n                this._rootNode.genCSS(context, this);\r\n                if (this._css.length > 0) {\r\n                    var sourceMapURL = void 0;\r\n                    var sourceMapContent = JSON.stringify(this._sourceMapGenerator.toJSON());\r\n                    if (this.sourceMapURL) {\r\n                        sourceMapURL = this.sourceMapURL;\r\n                    }\r\n                    else if (this._sourceMapFilename) {\r\n                        sourceMapURL = this._sourceMapFilename;\r\n                    }\r\n                    this.sourceMapURL = sourceMapURL;\r\n                    this.sourceMap = sourceMapContent;\r\n                }\r\n                return this._css.join('');\r\n            };\r\n            return SourceMapOutput;\r\n        }());\r\n        return SourceMapOutput;\r\n    }\n\n    function SourceMapBuilder (SourceMapOutput, environment) {\r\n        var SourceMapBuilder = /** @class */ (function () {\r\n            function SourceMapBuilder(options) {\r\n                this.options = options;\r\n            }\r\n            SourceMapBuilder.prototype.toCSS = function (rootNode, options, imports) {\r\n                var sourceMapOutput = new SourceMapOutput({\r\n                    contentsIgnoredCharsMap: imports.contentsIgnoredChars,\r\n                    rootNode: rootNode,\r\n                    contentsMap: imports.contents,\r\n                    sourceMapFilename: this.options.sourceMapFilename,\r\n                    sourceMapURL: this.options.sourceMapURL,\r\n                    outputFilename: this.options.sourceMapOutputFilename,\r\n                    sourceMapBasepath: this.options.sourceMapBasepath,\r\n                    sourceMapRootpath: this.options.sourceMapRootpath,\r\n                    outputSourceFiles: this.options.outputSourceFiles,\r\n                    sourceMapGenerator: this.options.sourceMapGenerator,\r\n                    sourceMapFileInline: this.options.sourceMapFileInline,\r\n                    disableSourcemapAnnotation: this.options.disableSourcemapAnnotation\r\n                });\r\n                var css = sourceMapOutput.toCSS(options);\r\n                this.sourceMap = sourceMapOutput.sourceMap;\r\n                this.sourceMapURL = sourceMapOutput.sourceMapURL;\r\n                if (this.options.sourceMapInputFilename) {\r\n                    this.sourceMapInputFilename = sourceMapOutput.normalizeFilename(this.options.sourceMapInputFilename);\r\n                }\r\n                if (this.options.sourceMapBasepath !== undefined && this.sourceMapURL !== undefined) {\r\n                    this.sourceMapURL = sourceMapOutput.removeBasepath(this.sourceMapURL);\r\n                }\r\n                return css + this.getCSSAppendage();\r\n            };\r\n            SourceMapBuilder.prototype.getCSSAppendage = function () {\r\n                var sourceMapURL = this.sourceMapURL;\r\n                if (this.options.sourceMapFileInline) {\r\n                    if (this.sourceMap === undefined) {\r\n                        return '';\r\n                    }\r\n                    sourceMapURL = \"data:application/json;base64,\" + environment.encodeBase64(this.sourceMap);\r\n                }\r\n                if (this.options.disableSourcemapAnnotation) {\r\n                    return '';\r\n                }\r\n                if (sourceMapURL) {\r\n                    return \"/*# sourceMappingURL=\" + sourceMapURL + \" */\";\r\n                }\r\n                return '';\r\n            };\r\n            SourceMapBuilder.prototype.getExternalSourceMap = function () {\r\n                return this.sourceMap;\r\n            };\r\n            SourceMapBuilder.prototype.setExternalSourceMap = function (sourceMap) {\r\n                this.sourceMap = sourceMap;\r\n            };\r\n            SourceMapBuilder.prototype.isInline = function () {\r\n                return this.options.sourceMapFileInline;\r\n            };\r\n            SourceMapBuilder.prototype.getSourceMapURL = function () {\r\n                return this.sourceMapURL;\r\n            };\r\n            SourceMapBuilder.prototype.getOutputFilename = function () {\r\n                return this.options.sourceMapOutputFilename;\r\n            };\r\n            SourceMapBuilder.prototype.getInputFilename = function () {\r\n                return this.sourceMapInputFilename;\r\n            };\r\n            return SourceMapBuilder;\r\n        }());\r\n        return SourceMapBuilder;\r\n    }\n\n    function ParseTree (SourceMapBuilder) {\r\n        var ParseTree = /** @class */ (function () {\r\n            function ParseTree(root, imports) {\r\n                this.root = root;\r\n                this.imports = imports;\r\n            }\r\n            ParseTree.prototype.toCSS = function (options) {\r\n                var evaldRoot;\r\n                var result = {};\r\n                var sourceMapBuilder;\r\n                try {\r\n                    evaldRoot = transformTree(this.root, options);\r\n                }\r\n                catch (e) {\r\n                    throw new LessError(e, this.imports);\r\n                }\r\n                try {\r\n                    var compress = Boolean(options.compress);\r\n                    if (compress) {\r\n                        logger$1.warn('The compress option has been deprecated. ' +\r\n                            'We recommend you use a dedicated css minifier, for instance see less-plugin-clean-css.');\r\n                    }\r\n                    var toCSSOptions = {\r\n                        compress: compress,\r\n                        dumpLineNumbers: options.dumpLineNumbers,\r\n                        strictUnits: Boolean(options.strictUnits),\r\n                        numPrecision: 8\r\n                    };\r\n                    if (options.sourceMap) {\r\n                        sourceMapBuilder = new SourceMapBuilder(options.sourceMap);\r\n                        result.css = sourceMapBuilder.toCSS(evaldRoot, toCSSOptions, this.imports);\r\n                    }\r\n                    else {\r\n                        result.css = evaldRoot.toCSS(toCSSOptions);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    throw new LessError(e, this.imports);\r\n                }\r\n                if (options.pluginManager) {\r\n                    var postProcessors = options.pluginManager.getPostProcessors();\r\n                    for (var i_1 = 0; i_1 < postProcessors.length; i_1++) {\r\n                        result.css = postProcessors[i_1].process(result.css, { sourceMap: sourceMapBuilder, options: options, imports: this.imports });\r\n                    }\r\n                }\r\n                if (options.sourceMap) {\r\n                    result.map = sourceMapBuilder.getExternalSourceMap();\r\n                }\r\n                result.imports = [];\r\n                for (var file_1 in this.imports.files) {\r\n                    if (Object.prototype.hasOwnProperty.call(this.imports.files, file_1) && file_1 !== this.imports.rootFilename) {\r\n                        result.imports.push(file_1);\r\n                    }\r\n                }\r\n                return result;\r\n            };\r\n            return ParseTree;\r\n        }());\r\n        return ParseTree;\r\n    }\n\n    function ImportManager (environment) {\r\n        // FileInfo = {\r\n        //  'rewriteUrls' - option - whether to adjust URL's to be relative\r\n        //  'filename' - full resolved filename of current file\r\n        //  'rootpath' - path to append to normal URLs for this node\r\n        //  'currentDirectory' - path to the current file, absolute\r\n        //  'rootFilename' - filename of the base file\r\n        //  'entryPath' - absolute path to the entry file\r\n        //  'reference' - whether the file should not be output and only output parts that are referenced\r\n        var ImportManager = /** @class */ (function () {\r\n            function ImportManager(less, context, rootFileInfo) {\r\n                this.less = less;\r\n                this.rootFilename = rootFileInfo.filename;\r\n                this.paths = context.paths || []; // Search paths, when importing\r\n                this.contents = {}; // map - filename to contents of all the files\r\n                this.contentsIgnoredChars = {}; // map - filename to lines at the beginning of each file to ignore\r\n                this.mime = context.mime;\r\n                this.error = null;\r\n                this.context = context;\r\n                // Deprecated? Unused outside of here, could be useful.\r\n                this.queue = []; // Files which haven't been imported yet\r\n                this.files = {}; // Holds the imported parse trees.\r\n            }\r\n            /**\r\n             * Add an import to be imported\r\n             * @param path - the raw path\r\n             * @param tryAppendExtension - whether to try appending a file extension (.less or .js if the path has no extension)\r\n             * @param currentFileInfo - the current file info (used for instance to work out relative paths)\r\n             * @param importOptions - import options\r\n             * @param callback - callback for when it is imported\r\n             */\r\n            ImportManager.prototype.push = function (path, tryAppendExtension, currentFileInfo, importOptions, callback) {\r\n                var importManager = this, pluginLoader = this.context.pluginManager.Loader;\r\n                this.queue.push(path);\r\n                var fileParsedFunc = function (e, root, fullPath) {\r\n                    importManager.queue.splice(importManager.queue.indexOf(path), 1); // Remove the path from the queue\r\n                    var importedEqualsRoot = fullPath === importManager.rootFilename;\r\n                    if (importOptions.optional && e) {\r\n                        callback(null, { rules: [] }, false, null);\r\n                        logger$1.info(\"The file \" + fullPath + \" was skipped because it was not found and the import was marked optional.\");\r\n                    }\r\n                    else {\r\n                        // Inline imports aren't cached here.\r\n                        // If we start to cache them, please make sure they won't conflict with non-inline imports of the\r\n                        // same name as they used to do before this comment and the condition below have been added.\r\n                        if (!importManager.files[fullPath] && !importOptions.inline) {\r\n                            importManager.files[fullPath] = { root: root, options: importOptions };\r\n                        }\r\n                        if (e && !importManager.error) {\r\n                            importManager.error = e;\r\n                        }\r\n                        callback(e, root, importedEqualsRoot, fullPath);\r\n                    }\r\n                };\r\n                var newFileInfo = {\r\n                    rewriteUrls: this.context.rewriteUrls,\r\n                    entryPath: currentFileInfo.entryPath,\r\n                    rootpath: currentFileInfo.rootpath,\r\n                    rootFilename: currentFileInfo.rootFilename\r\n                };\r\n                var fileManager = environment.getFileManager(path, currentFileInfo.currentDirectory, this.context, environment);\r\n                if (!fileManager) {\r\n                    fileParsedFunc({ message: \"Could not find a file-manager for \" + path });\r\n                    return;\r\n                }\r\n                var loadFileCallback = function (loadedFile) {\r\n                    var plugin;\r\n                    var resolvedFilename = loadedFile.filename;\r\n                    var contents = loadedFile.contents.replace(/^\\uFEFF/, '');\r\n                    // Pass on an updated rootpath if path of imported file is relative and file\r\n                    // is in a (sub|sup) directory\r\n                    //\r\n                    // Examples:\r\n                    // - If path of imported file is 'module/nav/nav.less' and rootpath is 'less/',\r\n                    //   then rootpath should become 'less/module/nav/'\r\n                    // - If path of imported file is '../mixins.less' and rootpath is 'less/',\r\n                    //   then rootpath should become 'less/../'\r\n                    newFileInfo.currentDirectory = fileManager.getPath(resolvedFilename);\r\n                    if (newFileInfo.rewriteUrls) {\r\n                        newFileInfo.rootpath = fileManager.join((importManager.context.rootpath || ''), fileManager.pathDiff(newFileInfo.currentDirectory, newFileInfo.entryPath));\r\n                        if (!fileManager.isPathAbsolute(newFileInfo.rootpath) && fileManager.alwaysMakePathsAbsolute()) {\r\n                            newFileInfo.rootpath = fileManager.join(newFileInfo.entryPath, newFileInfo.rootpath);\r\n                        }\r\n                    }\r\n                    newFileInfo.filename = resolvedFilename;\r\n                    var newEnv = new contexts.Parse(importManager.context);\r\n                    newEnv.processImports = false;\r\n                    importManager.contents[resolvedFilename] = contents;\r\n                    if (currentFileInfo.reference || importOptions.reference) {\r\n                        newFileInfo.reference = true;\r\n                    }\r\n                    if (importOptions.isPlugin) {\r\n                        plugin = pluginLoader.evalPlugin(contents, newEnv, importManager, importOptions.pluginArgs, newFileInfo);\r\n                        if (plugin instanceof LessError) {\r\n                            fileParsedFunc(plugin, null, resolvedFilename);\r\n                        }\r\n                        else {\r\n                            fileParsedFunc(null, plugin, resolvedFilename);\r\n                        }\r\n                    }\r\n                    else if (importOptions.inline) {\r\n                        fileParsedFunc(null, contents, resolvedFilename);\r\n                    }\r\n                    else {\r\n                        // import (multiple) parse trees apparently get altered and can't be cached.\r\n                        // TODO: investigate why this is\r\n                        if (importManager.files[resolvedFilename]\r\n                            && !importManager.files[resolvedFilename].options.multiple\r\n                            && !importOptions.multiple) {\r\n                            fileParsedFunc(null, importManager.files[resolvedFilename].root, resolvedFilename);\r\n                        }\r\n                        else {\r\n                            new Parser(newEnv, importManager, newFileInfo).parse(contents, function (e, root) {\r\n                                fileParsedFunc(e, root, resolvedFilename);\r\n                            });\r\n                        }\r\n                    }\r\n                };\r\n                var loadedFile;\r\n                var promise;\r\n                var context = clone(this.context);\r\n                if (tryAppendExtension) {\r\n                    context.ext = importOptions.isPlugin ? '.js' : '.less';\r\n                }\r\n                if (importOptions.isPlugin) {\r\n                    context.mime = 'application/javascript';\r\n                    if (context.syncImport) {\r\n                        loadedFile = pluginLoader.loadPluginSync(path, currentFileInfo.currentDirectory, context, environment, fileManager);\r\n                    }\r\n                    else {\r\n                        promise = pluginLoader.loadPlugin(path, currentFileInfo.currentDirectory, context, environment, fileManager);\r\n                    }\r\n                }\r\n                else {\r\n                    if (context.syncImport) {\r\n                        loadedFile = fileManager.loadFileSync(path, currentFileInfo.currentDirectory, context, environment);\r\n                    }\r\n                    else {\r\n                        promise = fileManager.loadFile(path, currentFileInfo.currentDirectory, context, environment, function (err, loadedFile) {\r\n                            if (err) {\r\n                                fileParsedFunc(err);\r\n                            }\r\n                            else {\r\n                                loadFileCallback(loadedFile);\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                if (loadedFile) {\r\n                    if (!loadedFile.filename) {\r\n                        fileParsedFunc(loadedFile);\r\n                    }\r\n                    else {\r\n                        loadFileCallback(loadedFile);\r\n                    }\r\n                }\r\n                else if (promise) {\r\n                    promise.then(loadFileCallback, fileParsedFunc);\r\n                }\r\n            };\r\n            return ImportManager;\r\n        }());\r\n        return ImportManager;\r\n    }\n\n    function Parse (environment, ParseTree, ImportManager) {\r\n        var parse = function (input, options, callback) {\r\n            if (typeof options === 'function') {\r\n                callback = options;\r\n                options = copyOptions(this.options, {});\r\n            }\r\n            else {\r\n                options = copyOptions(this.options, options || {});\r\n            }\r\n            if (!callback) {\r\n                var self_1 = this;\r\n                return new Promise(function (resolve, reject) {\r\n                    parse.call(self_1, input, options, function (err, output) {\r\n                        if (err) {\r\n                            reject(err);\r\n                        }\r\n                        else {\r\n                            resolve(output);\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n            else {\r\n                var context_1;\r\n                var rootFileInfo = void 0;\r\n                var pluginManager_1 = new PluginManagerFactory(this, !options.reUsePluginManager);\r\n                options.pluginManager = pluginManager_1;\r\n                context_1 = new contexts.Parse(options);\r\n                if (options.rootFileInfo) {\r\n                    rootFileInfo = options.rootFileInfo;\r\n                }\r\n                else {\r\n                    var filename = options.filename || 'input';\r\n                    var entryPath = filename.replace(/[^/\\\\]*$/, '');\r\n                    rootFileInfo = {\r\n                        filename: filename,\r\n                        rewriteUrls: context_1.rewriteUrls,\r\n                        rootpath: context_1.rootpath || '',\r\n                        currentDirectory: entryPath,\r\n                        entryPath: entryPath,\r\n                        rootFilename: filename\r\n                    };\r\n                    // add in a missing trailing slash\r\n                    if (rootFileInfo.rootpath && rootFileInfo.rootpath.slice(-1) !== '/') {\r\n                        rootFileInfo.rootpath += '/';\r\n                    }\r\n                }\r\n                var imports_1 = new ImportManager(this, context_1, rootFileInfo);\r\n                this.importManager = imports_1;\r\n                // TODO: allow the plugins to be just a list of paths or names\r\n                // Do an async plugin queue like lessc\r\n                if (options.plugins) {\r\n                    options.plugins.forEach(function (plugin) {\r\n                        var evalResult, contents;\r\n                        if (plugin.fileContent) {\r\n                            contents = plugin.fileContent.replace(/^\\uFEFF/, '');\r\n                            evalResult = pluginManager_1.Loader.evalPlugin(contents, context_1, imports_1, plugin.options, plugin.filename);\r\n                            if (evalResult instanceof LessError) {\r\n                                return callback(evalResult);\r\n                            }\r\n                        }\r\n                        else {\r\n                            pluginManager_1.addPlugin(plugin);\r\n                        }\r\n                    });\r\n                }\r\n                new Parser(context_1, imports_1, rootFileInfo)\r\n                    .parse(input, function (e, root) {\r\n                    if (e) {\r\n                        return callback(e);\r\n                    }\r\n                    callback(null, root, imports_1, options);\r\n                }, options);\r\n            }\r\n        };\r\n        return parse;\r\n    }\n\n    function Render (environment, ParseTree) {\r\n        var render = function (input, options, callback) {\r\n            if (typeof options === 'function') {\r\n                callback = options;\r\n                options = copyOptions(this.options, {});\r\n            }\r\n            else {\r\n                options = copyOptions(this.options, options || {});\r\n            }\r\n            if (!callback) {\r\n                var self_1 = this;\r\n                return new Promise(function (resolve, reject) {\r\n                    render.call(self_1, input, options, function (err, output) {\r\n                        if (err) {\r\n                            reject(err);\r\n                        }\r\n                        else {\r\n                            resolve(output);\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n            else {\r\n                this.parse(input, options, function (err, root, imports, options) {\r\n                    if (err) {\r\n                        return callback(err);\r\n                    }\r\n                    var result;\r\n                    try {\r\n                        var parseTree = new ParseTree(root, imports);\r\n                        result = parseTree.toCSS(options);\r\n                    }\r\n                    catch (err) {\r\n                        return callback(err);\r\n                    }\r\n                    callback(null, result);\r\n                });\r\n            }\r\n        };\r\n        return render;\r\n    }\n\n    var version = \"4.2.0\";\n\n    function parseNodeVersion(version) {\r\n        var match = version.match(/^v(\\d{1,2})\\.(\\d{1,2})\\.(\\d{1,2})(?:-([0-9A-Za-z-.]+))?(?:\\+([0-9A-Za-z-.]+))?$/); // eslint-disable-line max-len\r\n        if (!match) {\r\n            throw new Error('Unable to parse: ' + version);\r\n        }\r\n        var res = {\r\n            major: parseInt(match[1], 10),\r\n            minor: parseInt(match[2], 10),\r\n            patch: parseInt(match[3], 10),\r\n            pre: match[4] || '',\r\n            build: match[5] || '',\r\n        };\r\n        return res;\r\n    }\r\n    var parseNodeVersion_1 = parseNodeVersion;\n\n    function lessRoot (environment, fileManagers) {\r\n        var sourceMapOutput, sourceMapBuilder, parseTree, importManager;\r\n        environment = new Environment(environment, fileManagers);\r\n        sourceMapOutput = SourceMapOutput(environment);\r\n        sourceMapBuilder = SourceMapBuilder(sourceMapOutput, environment);\r\n        parseTree = ParseTree(sourceMapBuilder);\r\n        importManager = ImportManager(environment);\r\n        var render = Render(environment, parseTree);\r\n        var parse = Parse(environment, parseTree, importManager);\r\n        var v = parseNodeVersion_1(\"v\" + version);\r\n        var initial = {\r\n            version: [v.major, v.minor, v.patch],\r\n            data: data,\r\n            tree: tree,\r\n            Environment: Environment,\r\n            AbstractFileManager: AbstractFileManager,\r\n            AbstractPluginLoader: AbstractPluginLoader,\r\n            environment: environment,\r\n            visitors: visitors,\r\n            Parser: Parser,\r\n            functions: functions(environment),\r\n            contexts: contexts,\r\n            SourceMapOutput: sourceMapOutput,\r\n            SourceMapBuilder: sourceMapBuilder,\r\n            ParseTree: parseTree,\r\n            ImportManager: importManager,\r\n            render: render,\r\n            parse: parse,\r\n            LessError: LessError,\r\n            transformTree: transformTree,\r\n            utils: utils,\r\n            PluginManager: PluginManagerFactory,\r\n            logger: logger$1\r\n        };\r\n        // Create a public API\r\n        var ctor = function (t) {\r\n            return function () {\r\n                var obj = Object.create(t.prototype);\r\n                t.apply(obj, Array.prototype.slice.call(arguments, 0));\r\n                return obj;\r\n            };\r\n        };\r\n        var t;\r\n        var api = Object.create(initial);\r\n        for (var n in initial.tree) {\r\n            /* eslint guard-for-in: 0 */\r\n            t = initial.tree[n];\r\n            if (typeof t === 'function') {\r\n                api[n.toLowerCase()] = ctor(t);\r\n            }\r\n            else {\r\n                api[n] = Object.create(null);\r\n                for (var o in t) {\r\n                    /* eslint guard-for-in: 0 */\r\n                    api[n][o.toLowerCase()] = ctor(t[o]);\r\n                }\r\n            }\r\n        }\r\n        /**\r\n         * Some of the functions assume a `this` context of the API object,\r\n         * which causes it to fail when wrapped for ES6 imports.\r\n         *\r\n         * An assumed `this` should be removed in the future.\r\n         */\r\n        initial.parse = initial.parse.bind(api);\r\n        initial.render = initial.render.bind(api);\r\n        return api;\r\n    }\n\n    var options$1;\r\n    var logger;\r\n    var fileCache = {};\r\n    // TODOS - move log somewhere. pathDiff and doing something similar in node. use pathDiff in the other browser file for the initial load\r\n    var FileManager = function () { };\r\n    FileManager.prototype = Object.assign(new AbstractFileManager(), {\r\n        alwaysMakePathsAbsolute: function () {\r\n            return true;\r\n        },\r\n        join: function (basePath, laterPath) {\r\n            if (!basePath) {\r\n                return laterPath;\r\n            }\r\n            return this.extractUrlParts(laterPath, basePath).path;\r\n        },\r\n        doXHR: function (url, type, callback, errback) {\r\n            var xhr = new XMLHttpRequest();\r\n            var async = options$1.isFileProtocol ? options$1.fileAsync : true;\r\n            if (typeof xhr.overrideMimeType === 'function') {\r\n                xhr.overrideMimeType('text/css');\r\n            }\r\n            logger.debug(\"XHR: Getting '\" + url + \"'\");\r\n            xhr.open('GET', url, async);\r\n            xhr.setRequestHeader('Accept', type || 'text/x-less, text/css; q=0.9, */*; q=0.5');\r\n            xhr.send(null);\r\n            function handleResponse(xhr, callback, errback) {\r\n                if (xhr.status >= 200 && xhr.status < 300) {\r\n                    callback(xhr.responseText, xhr.getResponseHeader('Last-Modified'));\r\n                }\r\n                else if (typeof errback === 'function') {\r\n                    errback(xhr.status, url);\r\n                }\r\n            }\r\n            if (options$1.isFileProtocol && !options$1.fileAsync) {\r\n                if (xhr.status === 0 || (xhr.status >= 200 && xhr.status < 300)) {\r\n                    callback(xhr.responseText);\r\n                }\r\n                else {\r\n                    errback(xhr.status, url);\r\n                }\r\n            }\r\n            else if (async) {\r\n                xhr.onreadystatechange = function () {\r\n                    if (xhr.readyState == 4) {\r\n                        handleResponse(xhr, callback, errback);\r\n                    }\r\n                };\r\n            }\r\n            else {\r\n                handleResponse(xhr, callback, errback);\r\n            }\r\n        },\r\n        supports: function () {\r\n            return true;\r\n        },\r\n        clearFileCache: function () {\r\n            fileCache = {};\r\n        },\r\n        loadFile: function (filename, currentDirectory, options) {\r\n            // TODO: Add prefix support like less-node?\r\n            // What about multiple paths?\r\n            if (currentDirectory && !this.isPathAbsolute(filename)) {\r\n                filename = currentDirectory + filename;\r\n            }\r\n            filename = options.ext ? this.tryAppendExtension(filename, options.ext) : filename;\r\n            options = options || {};\r\n            // sheet may be set to the stylesheet for the initial load or a collection of properties including\r\n            // some context variables for imports\r\n            var hrefParts = this.extractUrlParts(filename, window.location.href);\r\n            var href = hrefParts.url;\r\n            var self = this;\r\n            return new Promise(function (resolve, reject) {\r\n                if (options.useFileCache && fileCache[href]) {\r\n                    try {\r\n                        var lessText_1 = fileCache[href];\r\n                        return resolve({ contents: lessText_1, filename: href, webInfo: { lastModified: new Date() } });\r\n                    }\r\n                    catch (e) {\r\n                        return reject({ filename: href, message: \"Error loading file \" + href + \" error was \" + e.message });\r\n                    }\r\n                }\r\n                self.doXHR(href, options.mime, function doXHRCallback(data, lastModified) {\r\n                    // per file cache\r\n                    fileCache[href] = data;\r\n                    // Use remote copy (re-parse)\r\n                    resolve({ contents: data, filename: href, webInfo: { lastModified: lastModified } });\r\n                }, function doXHRError(status, url) {\r\n                    reject({ type: 'File', message: \"'\" + url + \"' wasn't found (\" + status + \")\", href: href });\r\n                });\r\n            });\r\n        }\r\n    });\r\n    var FM = (function (opts, log) {\r\n        options$1 = opts;\r\n        logger = log;\r\n        return FileManager;\r\n    });\n\n    /**\r\n     * @todo Add tests for browser `@plugin`\r\n     */\r\n    /**\r\n     * Browser Plugin Loader\r\n     */\r\n    var PluginLoader = function (less) {\r\n        this.less = less;\r\n        // Should we shim this.require for browser? Probably not?\r\n    };\r\n    PluginLoader.prototype = Object.assign(new AbstractPluginLoader(), {\r\n        loadPlugin: function (filename, basePath, context, environment, fileManager) {\r\n            return new Promise(function (fulfill, reject) {\r\n                fileManager.loadFile(filename, basePath, context, environment)\r\n                    .then(fulfill).catch(reject);\r\n            });\r\n        }\r\n    });\n\n    var LogListener = (function (less, options) {\r\n        var logLevel_debug = 4;\r\n        var logLevel_info = 3;\r\n        var logLevel_warn = 2;\r\n        var logLevel_error = 1;\r\n        // The amount of logging in the javascript console.\r\n        // 3 - Debug, information and errors\r\n        // 2 - Information and errors\r\n        // 1 - Errors\r\n        // 0 - None\r\n        // Defaults to 2\r\n        options.logLevel = typeof options.logLevel !== 'undefined' ? options.logLevel : (options.env === 'development' ? logLevel_info : logLevel_error);\r\n        if (!options.loggers) {\r\n            options.loggers = [{\r\n                    debug: function (msg) {\r\n                        if (options.logLevel >= logLevel_debug) {\r\n                            console.log(msg);\r\n                        }\r\n                    },\r\n                    info: function (msg) {\r\n                        if (options.logLevel >= logLevel_info) {\r\n                            console.log(msg);\r\n                        }\r\n                    },\r\n                    warn: function (msg) {\r\n                        if (options.logLevel >= logLevel_warn) {\r\n                            console.warn(msg);\r\n                        }\r\n                    },\r\n                    error: function (msg) {\r\n                        if (options.logLevel >= logLevel_error) {\r\n                            console.error(msg);\r\n                        }\r\n                    }\r\n                }];\r\n        }\r\n        for (var i_1 = 0; i_1 < options.loggers.length; i_1++) {\r\n            less.logger.addListener(options.loggers[i_1]);\r\n        }\r\n    });\n\n    var ErrorReporting = (function (window, less, options) {\r\n        function errorHTML(e, rootHref) {\r\n            var id = \"less-error-message:\" + extractId(rootHref || '');\r\n            var template = '<li><label>{line}</label><pre class=\"{class}\">{content}</pre></li>';\r\n            var elem = window.document.createElement('div');\r\n            var timer;\r\n            var content;\r\n            var errors = [];\r\n            var filename = e.filename || rootHref;\r\n            var filenameNoPath = filename.match(/([^/]+(\\?.*)?)$/)[1];\r\n            elem.id = id;\r\n            elem.className = 'less-error-message';\r\n            content = \"<h3>\" + (e.type || 'Syntax') + \"Error: \" + (e.message || 'There is an error in your .less file') +\r\n                (\"</h3><p>in <a href=\\\"\" + filename + \"\\\">\" + filenameNoPath + \"</a> \");\r\n            var errorline = function (e, i, classname) {\r\n                if (e.extract[i] !== undefined) {\r\n                    errors.push(template.replace(/\\{line\\}/, (parseInt(e.line, 10) || 0) + (i - 1))\r\n                        .replace(/\\{class\\}/, classname)\r\n                        .replace(/\\{content\\}/, e.extract[i]));\r\n                }\r\n            };\r\n            if (e.line) {\r\n                errorline(e, 0, '');\r\n                errorline(e, 1, 'line');\r\n                errorline(e, 2, '');\r\n                content += \"on line \" + e.line + \", column \" + (e.column + 1) + \":</p><ul>\" + errors.join('') + \"</ul>\";\r\n            }\r\n            if (e.stack && (e.extract || options.logLevel >= 4)) {\r\n                content += \"<br/>Stack Trace</br />\" + e.stack.split('\\n').slice(1).join('<br/>');\r\n            }\r\n            elem.innerHTML = content;\r\n            // CSS for error messages\r\n            browser.createCSS(window.document, [\r\n                '.less-error-message ul, .less-error-message li {',\r\n                'list-style-type: none;',\r\n                'margin-right: 15px;',\r\n                'padding: 4px 0;',\r\n                'margin: 0;',\r\n                '}',\r\n                '.less-error-message label {',\r\n                'font-size: 12px;',\r\n                'margin-right: 15px;',\r\n                'padding: 4px 0;',\r\n                'color: #cc7777;',\r\n                '}',\r\n                '.less-error-message pre {',\r\n                'color: #dd6666;',\r\n                'padding: 4px 0;',\r\n                'margin: 0;',\r\n                'display: inline-block;',\r\n                '}',\r\n                '.less-error-message pre.line {',\r\n                'color: #ff0000;',\r\n                '}',\r\n                '.less-error-message h3 {',\r\n                'font-size: 20px;',\r\n                'font-weight: bold;',\r\n                'padding: 15px 0 5px 0;',\r\n                'margin: 0;',\r\n                '}',\r\n                '.less-error-message a {',\r\n                'color: #10a',\r\n                '}',\r\n                '.less-error-message .error {',\r\n                'color: red;',\r\n                'font-weight: bold;',\r\n                'padding-bottom: 2px;',\r\n                'border-bottom: 1px dashed red;',\r\n                '}'\r\n            ].join('\\n'), { title: 'error-message' });\r\n            elem.style.cssText = [\r\n                'font-family: Arial, sans-serif',\r\n                'border: 1px solid #e00',\r\n                'background-color: #eee',\r\n                'border-radius: 5px',\r\n                '-webkit-border-radius: 5px',\r\n                '-moz-border-radius: 5px',\r\n                'color: #e00',\r\n                'padding: 15px',\r\n                'margin-bottom: 15px'\r\n            ].join(';');\r\n            if (options.env === 'development') {\r\n                timer = setInterval(function () {\r\n                    var document = window.document;\r\n                    var body = document.body;\r\n                    if (body) {\r\n                        if (document.getElementById(id)) {\r\n                            body.replaceChild(elem, document.getElementById(id));\r\n                        }\r\n                        else {\r\n                            body.insertBefore(elem, body.firstChild);\r\n                        }\r\n                        clearInterval(timer);\r\n                    }\r\n                }, 10);\r\n            }\r\n        }\r\n        function removeErrorHTML(path) {\r\n            var node = window.document.getElementById(\"less-error-message:\" + extractId(path));\r\n            if (node) {\r\n                node.parentNode.removeChild(node);\r\n            }\r\n        }\r\n        function removeError(path) {\r\n            if (!options.errorReporting || options.errorReporting === 'html') {\r\n                removeErrorHTML(path);\r\n            }\r\n            else if (options.errorReporting === 'console') ;\r\n            else if (typeof options.errorReporting === 'function') {\r\n                options.errorReporting('remove', path);\r\n            }\r\n        }\r\n        function errorConsole(e, rootHref) {\r\n            var template = '{line} {content}';\r\n            var filename = e.filename || rootHref;\r\n            var errors = [];\r\n            var content = (e.type || 'Syntax') + \"Error: \" + (e.message || 'There is an error in your .less file') + \" in \" + filename;\r\n            var errorline = function (e, i, classname) {\r\n                if (e.extract[i] !== undefined) {\r\n                    errors.push(template.replace(/\\{line\\}/, (parseInt(e.line, 10) || 0) + (i - 1))\r\n                        .replace(/\\{class\\}/, classname)\r\n                        .replace(/\\{content\\}/, e.extract[i]));\r\n                }\r\n            };\r\n            if (e.line) {\r\n                errorline(e, 0, '');\r\n                errorline(e, 1, 'line');\r\n                errorline(e, 2, '');\r\n                content += \" on line \" + e.line + \", column \" + (e.column + 1) + \":\\n\" + errors.join('\\n');\r\n            }\r\n            if (e.stack && (e.extract || options.logLevel >= 4)) {\r\n                content += \"\\nStack Trace\\n\" + e.stack;\r\n            }\r\n            less.logger.error(content);\r\n        }\r\n        function error(e, rootHref) {\r\n            if (!options.errorReporting || options.errorReporting === 'html') {\r\n                errorHTML(e, rootHref);\r\n            }\r\n            else if (options.errorReporting === 'console') {\r\n                errorConsole(e, rootHref);\r\n            }\r\n            else if (typeof options.errorReporting === 'function') {\r\n                options.errorReporting('add', e, rootHref);\r\n            }\r\n        }\r\n        return {\r\n            add: error,\r\n            remove: removeError\r\n        };\r\n    });\n\n    // Cache system is a bit outdated and could do with work\r\n    var Cache = (function (window, options, logger) {\r\n        var cache = null;\r\n        if (options.env !== 'development') {\r\n            try {\r\n                cache = (typeof window.localStorage === 'undefined') ? null : window.localStorage;\r\n            }\r\n            catch (_) { }\r\n        }\r\n        return {\r\n            setCSS: function (path, lastModified, modifyVars, styles) {\r\n                if (cache) {\r\n                    logger.info(\"saving \" + path + \" to cache.\");\r\n                    try {\r\n                        cache.setItem(path, styles);\r\n                        cache.setItem(path + \":timestamp\", lastModified);\r\n                        if (modifyVars) {\r\n                            cache.setItem(path + \":vars\", JSON.stringify(modifyVars));\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        // TODO - could do with adding more robust error handling\r\n                        logger.error(\"failed to save \\\"\" + path + \"\\\" to local storage for caching.\");\r\n                    }\r\n                }\r\n            },\r\n            getCSS: function (path, webInfo, modifyVars) {\r\n                var css = cache && cache.getItem(path);\r\n                var timestamp = cache && cache.getItem(path + \":timestamp\");\r\n                var vars = cache && cache.getItem(path + \":vars\");\r\n                modifyVars = modifyVars || {};\r\n                vars = vars || '{}'; // if not set, treat as the JSON representation of an empty object\r\n                if (timestamp && webInfo.lastModified &&\r\n                    (new Date(webInfo.lastModified).valueOf() ===\r\n                        new Date(timestamp).valueOf()) &&\r\n                    JSON.stringify(modifyVars) === vars) {\r\n                    // Use local copy\r\n                    return css;\r\n                }\r\n            }\r\n        };\r\n    });\n\n    var ImageSize = (function () {\r\n        function imageSize() {\r\n            throw {\r\n                type: 'Runtime',\r\n                message: 'Image size functions are not supported in browser version of less'\r\n            };\r\n        }\r\n        var imageFunctions = {\r\n            'image-size': function (filePathNode) {\r\n                imageSize();\r\n                return -1;\r\n            },\r\n            'image-width': function (filePathNode) {\r\n                imageSize();\r\n                return -1;\r\n            },\r\n            'image-height': function (filePathNode) {\r\n                imageSize();\r\n                return -1;\r\n            }\r\n        };\r\n        functionRegistry.addMultiple(imageFunctions);\r\n    });\n\n    //\r\n    var root = (function (window, options) {\r\n        var document = window.document;\r\n        var less = lessRoot();\r\n        less.options = options;\r\n        var environment = less.environment;\r\n        var FileManager = FM(options, less.logger);\r\n        var fileManager = new FileManager();\r\n        environment.addFileManager(fileManager);\r\n        less.FileManager = FileManager;\r\n        less.PluginLoader = PluginLoader;\r\n        LogListener(less, options);\r\n        var errors = ErrorReporting(window, less, options);\r\n        var cache = less.cache = options.cache || Cache(window, options, less.logger);\r\n        ImageSize(less.environment);\r\n        // Setup user functions - Deprecate?\r\n        if (options.functions) {\r\n            less.functions.functionRegistry.addMultiple(options.functions);\r\n        }\r\n        var typePattern = /^text\\/(x-)?less$/;\r\n        function clone(obj) {\r\n            var cloned = {};\r\n            for (var prop in obj) {\r\n                if (Object.prototype.hasOwnProperty.call(obj, prop)) {\r\n                    cloned[prop] = obj[prop];\r\n                }\r\n            }\r\n            return cloned;\r\n        }\r\n        // only really needed for phantom\r\n        function bind(func, thisArg) {\r\n            var curryArgs = Array.prototype.slice.call(arguments, 2);\r\n            return function () {\r\n                var args = curryArgs.concat(Array.prototype.slice.call(arguments, 0));\r\n                return func.apply(thisArg, args);\r\n            };\r\n        }\r\n        function loadStyles(modifyVars) {\r\n            var styles = document.getElementsByTagName('style');\r\n            var style;\r\n            for (var i_1 = 0; i_1 < styles.length; i_1++) {\r\n                style = styles[i_1];\r\n                if (style.type.match(typePattern)) {\r\n                    var instanceOptions = clone(options);\r\n                    instanceOptions.modifyVars = modifyVars;\r\n                    var lessText_1 = style.innerHTML || '';\r\n                    instanceOptions.filename = document.location.href.replace(/#.*$/, '');\r\n                    /* jshint loopfunc:true */\r\n                    // use closure to store current style\r\n                    less.render(lessText_1, instanceOptions, bind(function (style, e, result) {\r\n                        if (e) {\r\n                            errors.add(e, 'inline');\r\n                        }\r\n                        else {\r\n                            style.type = 'text/css';\r\n                            if (style.styleSheet) {\r\n                                style.styleSheet.cssText = result.css;\r\n                            }\r\n                            else {\r\n                                style.innerHTML = result.css;\r\n                            }\r\n                        }\r\n                    }, null, style));\r\n                }\r\n            }\r\n        }\r\n        function loadStyleSheet(sheet, callback, reload, remaining, modifyVars) {\r\n            var instanceOptions = clone(options);\r\n            addDataAttr(instanceOptions, sheet);\r\n            instanceOptions.mime = sheet.type;\r\n            if (modifyVars) {\r\n                instanceOptions.modifyVars = modifyVars;\r\n            }\r\n            function loadInitialFileCallback(loadedFile) {\r\n                var data = loadedFile.contents;\r\n                var path = loadedFile.filename;\r\n                var webInfo = loadedFile.webInfo;\r\n                var newFileInfo = {\r\n                    currentDirectory: fileManager.getPath(path),\r\n                    filename: path,\r\n                    rootFilename: path,\r\n                    rewriteUrls: instanceOptions.rewriteUrls\r\n                };\r\n                newFileInfo.entryPath = newFileInfo.currentDirectory;\r\n                newFileInfo.rootpath = instanceOptions.rootpath || newFileInfo.currentDirectory;\r\n                if (webInfo) {\r\n                    webInfo.remaining = remaining;\r\n                    var css = cache.getCSS(path, webInfo, instanceOptions.modifyVars);\r\n                    if (!reload && css) {\r\n                        webInfo.local = true;\r\n                        callback(null, css, data, sheet, webInfo, path);\r\n                        return;\r\n                    }\r\n                }\r\n                // TODO add tests around how this behaves when reloading\r\n                errors.remove(path);\r\n                instanceOptions.rootFileInfo = newFileInfo;\r\n                less.render(data, instanceOptions, function (e, result) {\r\n                    if (e) {\r\n                        e.href = path;\r\n                        callback(e);\r\n                    }\r\n                    else {\r\n                        cache.setCSS(sheet.href, webInfo.lastModified, instanceOptions.modifyVars, result.css);\r\n                        callback(null, result.css, data, sheet, webInfo, path);\r\n                    }\r\n                });\r\n            }\r\n            fileManager.loadFile(sheet.href, null, instanceOptions, environment)\r\n                .then(function (loadedFile) {\r\n                loadInitialFileCallback(loadedFile);\r\n            }).catch(function (err) {\r\n                console.log(err);\r\n                callback(err);\r\n            });\r\n        }\r\n        function loadStyleSheets(callback, reload, modifyVars) {\r\n            for (var i_2 = 0; i_2 < less.sheets.length; i_2++) {\r\n                loadStyleSheet(less.sheets[i_2], callback, reload, less.sheets.length - (i_2 + 1), modifyVars);\r\n            }\r\n        }\r\n        function initRunningMode() {\r\n            if (less.env === 'development') {\r\n                less.watchTimer = setInterval(function () {\r\n                    if (less.watchMode) {\r\n                        fileManager.clearFileCache();\r\n                        /**\r\n                         * @todo remove when this is typed with JSDoc\r\n                         */\r\n                        // eslint-disable-next-line no-unused-vars\r\n                        loadStyleSheets(function (e, css, _, sheet, webInfo) {\r\n                            if (e) {\r\n                                errors.add(e, e.href || sheet.href);\r\n                            }\r\n                            else if (css) {\r\n                                browser.createCSS(window.document, css, sheet);\r\n                            }\r\n                        });\r\n                    }\r\n                }, options.poll);\r\n            }\r\n        }\r\n        //\r\n        // Watch mode\r\n        //\r\n        less.watch = function () {\r\n            if (!less.watchMode) {\r\n                less.env = 'development';\r\n                initRunningMode();\r\n            }\r\n            this.watchMode = true;\r\n            return true;\r\n        };\r\n        less.unwatch = function () { clearInterval(less.watchTimer); this.watchMode = false; return false; };\r\n        //\r\n        // Synchronously get all <link> tags with the 'rel' attribute set to\r\n        // \"stylesheet/less\".\r\n        //\r\n        less.registerStylesheetsImmediately = function () {\r\n            var links = document.getElementsByTagName('link');\r\n            less.sheets = [];\r\n            for (var i_3 = 0; i_3 < links.length; i_3++) {\r\n                if (links[i_3].rel === 'stylesheet/less' || (links[i_3].rel.match(/stylesheet/) &&\r\n                    (links[i_3].type.match(typePattern)))) {\r\n                    less.sheets.push(links[i_3]);\r\n                }\r\n            }\r\n        };\r\n        //\r\n        // Asynchronously get all <link> tags with the 'rel' attribute set to\r\n        // \"stylesheet/less\", returning a Promise.\r\n        //\r\n        less.registerStylesheets = function () { return new Promise(function (resolve) {\r\n            less.registerStylesheetsImmediately();\r\n            resolve();\r\n        }); };\r\n        //\r\n        // With this function, it's possible to alter variables and re-render\r\n        // CSS without reloading less-files\r\n        //\r\n        less.modifyVars = function (record) { return less.refresh(true, record, false); };\r\n        less.refresh = function (reload, modifyVars, clearFileCache) {\r\n            if ((reload || clearFileCache) && clearFileCache !== false) {\r\n                fileManager.clearFileCache();\r\n            }\r\n            return new Promise(function (resolve, reject) {\r\n                var startTime;\r\n                var endTime;\r\n                var totalMilliseconds;\r\n                var remainingSheets;\r\n                startTime = endTime = new Date();\r\n                // Set counter for remaining unprocessed sheets\r\n                remainingSheets = less.sheets.length;\r\n                if (remainingSheets === 0) {\r\n                    endTime = new Date();\r\n                    totalMilliseconds = endTime - startTime;\r\n                    less.logger.info('Less has finished and no sheets were loaded.');\r\n                    resolve({\r\n                        startTime: startTime,\r\n                        endTime: endTime,\r\n                        totalMilliseconds: totalMilliseconds,\r\n                        sheets: less.sheets.length\r\n                    });\r\n                }\r\n                else {\r\n                    // Relies on less.sheets array, callback seems to be guaranteed to be called for every element of the array\r\n                    loadStyleSheets(function (e, css, _, sheet, webInfo) {\r\n                        if (e) {\r\n                            errors.add(e, e.href || sheet.href);\r\n                            reject(e);\r\n                            return;\r\n                        }\r\n                        if (webInfo.local) {\r\n                            less.logger.info(\"Loading \" + sheet.href + \" from cache.\");\r\n                        }\r\n                        else {\r\n                            less.logger.info(\"Rendered \" + sheet.href + \" successfully.\");\r\n                        }\r\n                        browser.createCSS(window.document, css, sheet);\r\n                        less.logger.info(\"CSS for \" + sheet.href + \" generated in \" + (new Date() - endTime) + \"ms\");\r\n                        // Count completed sheet\r\n                        remainingSheets--;\r\n                        // Check if the last remaining sheet was processed and then call the promise\r\n                        if (remainingSheets === 0) {\r\n                            totalMilliseconds = new Date() - startTime;\r\n                            less.logger.info(\"Less has finished. CSS generated in \" + totalMilliseconds + \"ms\");\r\n                            resolve({\r\n                                startTime: startTime,\r\n                                endTime: endTime,\r\n                                totalMilliseconds: totalMilliseconds,\r\n                                sheets: less.sheets.length\r\n                            });\r\n                        }\r\n                        endTime = new Date();\r\n                    }, reload, modifyVars);\r\n                }\r\n                loadStyles(modifyVars);\r\n            });\r\n        };\r\n        less.refreshStyles = loadStyles;\r\n        return less;\r\n    });\n\n    /**\r\n     * Kicks off less and compiles any stylesheets\r\n     * used in the browser distributed version of less\r\n     * to kick-start less using the browser api\r\n     */\r\n    var options = defaultOptions();\r\n    if (window.less) {\r\n        for (var key in window.less) {\r\n            if (Object.prototype.hasOwnProperty.call(window.less, key)) {\r\n                options[key] = window.less[key];\r\n            }\r\n        }\r\n    }\r\n    addDefaultOptions(window, options);\r\n    options.plugins = options.plugins || [];\r\n    if (window.LESS_PLUGINS) {\r\n        options.plugins = options.plugins.concat(window.LESS_PLUGINS);\r\n    }\r\n    var less = root(window, options);\r\n    window.less = less;\r\n    var css;\r\n    var head;\r\n    var style;\r\n    // Always restore page visibility\r\n    function resolveOrReject(data) {\r\n        if (data.filename) {\r\n            console.warn(data);\r\n        }\r\n        if (!options.async) {\r\n            head.removeChild(style);\r\n        }\r\n    }\r\n    if (options.onReady) {\r\n        if (/!watch/.test(window.location.hash)) {\r\n            less.watch();\r\n        }\r\n        // Simulate synchronous stylesheet loading by hiding page rendering\r\n        if (!options.async) {\r\n            css = 'body { display: none !important }';\r\n            head = document.head || document.getElementsByTagName('head')[0];\r\n            style = document.createElement('style');\r\n            style.type = 'text/css';\r\n            if (style.styleSheet) {\r\n                style.styleSheet.cssText = css;\r\n            }\r\n            else {\r\n                style.appendChild(document.createTextNode(css));\r\n            }\r\n            head.appendChild(style);\r\n        }\r\n        less.registerStylesheetsImmediately();\r\n        less.pageLoadFinished = less.refresh(less.env === 'development').then(resolveOrReject, resolveOrReject);\r\n    }\n\n    return less;\n\n})));\n"],"names":["module","exports","extractId","href","replace","addDataAttr","options","tag","opt","dataset","Object","prototype","hasOwnProperty","call","JSON","parse","_","browser","document","styles","sheet","id","title","oldStyleNode","getElementById","keepOldStyleNode","styleNode","createElement","setAttribute","media","styleSheet","appendChild","createTextNode","childNodes","length","firstChild","nodeValue","head","getElementsByTagName","nextEl","nextSibling","parentNode","insertBefore","removeChild","cssText","e","Error","window","scripts","currentScript","logger$1","error","msg","this","_fireEvent","warn","info","debug","addListener","listener","_listeners","push","removeListener","i_1","splice","type","i_2","logFunction","Environment","externalEnvironment","fileManagers","requiredFunctions","functions","concat","propName","environmentFunc","bind","getFileManager","filename","currentDirectory","environment","isSync","undefined","pluginManager","getFileManagers","fileManager","addFileManager","clearFileManagers","colors","unitConversions","duration","angle","Math","PI","data","Node","parent","visibilityBlocks","nodeVisible","rootNode","parsed","defineProperty","get","fileInfo","enumerable","configurable","getIndex","setParent","nodes","set","node","Array","isArray","forEach","_index","_fileInfo","isRulesetLike","toCSS","context","strs","genCSS","add","chunk","index","isEmpty","join","output","value","accept","visitor","visit","eval","_operate","op","a","b","fround","precision","numPrecision","Number","toFixed","compare","numericCompare","blocksVisibility","addVisibilityBlock","removeVisibilityBlock","ensureVisibility","ensureInvisibility","isVisible","visibilityInfo","copyVisibilityInfo","Color","rgb","originalForm","self","match","map","c","i","parseInt","alpha","split","clamp$1","v","max","min","toHex","round","toString","assign","luma","r","g","pow","doNotCompress","color","colorFunction","compress","args","indexOf","toHSL","h","s","l","toRGB","splitcolor","operate","other","d","toHSV","toARGB","x","fromKeyword","keyword","key","toLowerCase","slice","Paren","_noSpaceCombinators","Combinator","emptyOrWhitespace","trim","spaceOrEmpty","Element","combinator","isVariable","currentFileInfo","clone","firstSelector","charAt","Math$1","ALWAYS","PARENS_DIVISION","PARENS","RewriteUrls","OFF","LOCAL","ALL","getType","payload","copy","target","constructor","getPrototypeOf","il","arguments","k","j","jl","__spreadArrays","getOwnPropertyNames","getOwnPropertySymbols","reduce","carry","props","includes","newVal","originalObject","includeNonenumerable","propType","propertyIsEnumerable","writable","assignProp","nonenumerable","getLocation","inputStream","n","line","column","copyArray","arr","obj","cloned","prop","defaults","obj1","obj2","newObj","_defaults","defaults_1","copyOptions","opts","strictMath","math","relativeUrls","rewriteUrls","flattenArray","result","length_1","isNullOrUndefined","val","utils","freeze","__proto__","merge","anonymousFunc","LessError","fileContentMap","currentFilename","message","stack","input","contents","loc","col","callLine","lines","found","func","Function","lineAdjust","callExtract","extract","create","F","stylize","str","errorTxt","substr","_visitArgs","visitDeeper","_hasIndexed","_noop","indexNodeTypes","ticker","child","typeIndex","Visitor","implementation","_implementation","_visitInCache","_visitOutCache","tree","nodeTypeIndex","fnName","impl","funcOut","visitArgs","newNode","isReplacing","cnt","visitArray","nonReplacing","out","evald","flatten","item","nestedCnt","nestedItem","contexts","copyFromOriginal","original","destination","propertiesToCopy","parseCopyProperties","Parse","paths","evalCopyProperties","isPathRelative","path","test","isPathLocalRelative","Eval","frames","importantScope","enterCalc","calcStack","inCalc","exitCalc","pop","inParenthesis","parensStack","outOfParenthesis","mathOn","isMathOn","pathRequiresRewrite","rewritePath","rootpath","newPath","normalizePath","segment","segments","reverse","ImportSequencer","onSequencerEmpty","imports","variableImports","_onSequencerEmpty","_currentDepth","addImport","callback","importSequencer","importItem","isReady","tryRun","addVariableImport","apply","variableImport","ImportVisitor","importer","finish","_visitor","_importer","_finish","importCount","onceFileDetectionMap","recursionDetector","_sequencer","run","root","isFinished","visitImport","importNode","inlineCSS","inline","css","importParent","isVariableImport","processImportNode","evaldImportNode","evalForImport","multiple","importMultiple","tryAppendLessExtension","rules","onImported","sequencedOnImported","getPath","importedAtRoot","fullPath","importVisitor","isPlugin","isOptional","optional","duplicateImport","skip","importedFilename","oldContext","visitDeclaration","declNode","unshift","visitDeclarationOut","shift","visitAtRule","atRuleNode","visitAtRuleOut","visitMixinDefinition","mixinDefinitionNode","visitMixinDefinitionOut","visitRuleset","rulesetNode","visitRulesetOut","visitMedia","mediaNode","visitMediaOut","SetTreeVisibilityVisitor","visible","ExtendFinderVisitor","allExtendsStack","allExtends","extend","extendList","allSelectorsExtendList","ruleCnt","Extend","extendOnEveryPath","selectorPath","selExtendList","allSelectorsExtend","foundExtends","findSelfSelectors","ruleset","firstExtendOnThisSelectorPath","selectors","ProcessExtendsVisitor","extendFinder","extendIndices","doExtendChaining","newRoot","checkExtendsForNonMatched","indices","filter","hasFoundMatches","parent_ids","selector","extendsList","extendsListTarget","iterationCount","extendIndex","targetExtendIndex","matches","newSelector","targetExtend","newExtend","extendsToAdd","extendVisitor","object_id","selfSelectors","findMatch","selfSelector","extendSelector","option","extendChainCount","selectorOne","selectorTwo","ruleNode","visitSelector","selectorNode","pathIndex","selectorsToAdd","extendedSelectors","haystackSelectorPath","haystackSelectorIndex","hackstackSelector","hackstackElementIndex","haystackElement","targetCombinator","potentialMatch","needleElements","elements","potentialMatches","allowBefore","matched","initialCombinator","isElementValuesEqual","finished","allowAfter","endPathIndex","endPathElementIndex","elementValue1","elementValue2","Attribute","Selector","replacementSelector","matchIndex","firstElement","newElements","currentSelectorPathIndex","currentSelectorPathElementIndex","currentValue","derived","createDerived","newAllExtends","lastIndex","JoinSelectorVisitor","getIsOutput","joinSelectors","multiMedia","isRooted","CSSVisitorUtils","_context","containsSilentNonBlockedChild","bodyRules","rule","isSilent","keepOnlyVisibleChilds","owner","thing","hasVisibleSelector","resolveVisibility","compiledRulesBody","isVisibleRuleset","firstRoot","ToCSSVisitor","variable","mixinNode","visitExtend","extendNode","visitComment","commentNode","originalRules","visitAtRuleWithBody","visitAtRuleWithoutBody","visitAnonymous","anonymousNode","nodeRules","hasFakeRuleset","getBodyRules","_mergeRules","name","charset","debugInfo","comment","Comment","checkValidNodes","isRoot","Declaration","Call","allowRoot","rulesets","_compileRulesetPaths","nodeRuleCnt","_removeDuplicateRules","p","ruleList","ruleCache","ruleCSS","groups","groupsArr","i_3","group","result_1","space_1","comma_1","Expression","important","Value","visitors","MarkVisibleSelectorsVisitor","ExtendVisitor","getParserInput","furthest","furthestPossibleErrorMessage","chunks","current","currentPos","saveStack","parserInput","skipWhitespace","nextChar","oldi","oldj","curr","endIndex","mem","inp","charCodeAt","autoCommentAbsorb","isLineComment","nextNewLine","text","commentStore","nextStarSlash","save","restore","possibleErrorMessage","state","forget","isWhitespace","offset","pos","code","$re","tok","m","exec","$char","$peekChar","$str","tokLength","$quoted","startChar","currentPosition","$parseUntil","testChar","quote","returnVal","inComment","blockDepth","blockStack","parseGroups","startPos","lastPos","loop","char","expected","peek","peekChar","currentChar","prevChar","getInput","peekNotNumeric","start","chunkInput","failFunction","fail","lastOpening","lastOpeningParen","lastMultiComment","lastMultiCommentEndBrace","chunkerCurrentIndex","currentChunkStartIndex","cc","cc2","len","level","parenLevel","emitFrom","emitChunk","force","String","fromCharCode","chunker","end","furthestReachedEnd","furthestChar","functionRegistry","makeRegistry","base","_data","addMultiple","_this","keys","getLocalFunctions","inherit","MediaSyntaxOptions","queryInParens","ContainerSyntaxOptions","Parser","currentIndex","parsers","expect","arg","expectChar","getDebugInfo","lineNumber","fileName","parseNode","parseList","returnNodes","parser","additionalData","globalVars","modifyVars","ignored","err","preText","disablePluginRule","plugin","serializeVars","preProcessors","getPreProcessors","process","banner","contentsIgnoredChars","Ruleset","primary","endInfo","processImports","mixin","extendRule","definition","declaration","variableCall","entities","atrule","foundSemiColon","mixinLookup","quoted","forceEscaped","isEscaped","customFuncCall","stop","f","ieAlpha","boolean","condition","prevArgs","isSemiColonSeparated","argsComma","argsSemiColon","detachedRuleset","assignment","expression","literal","dimension","unicodeDescriptor","entity","url","property","Variable","Property","ch","variableCurly","curly","propertyCurly","colorKeyword","ud","javascript","js","escape","Boolean","parsedName","lookups","inValue","ruleLookups","VariableCall","NamespaceValue","isRule","element","getLookup","hasParens","elem","elemIndex","re","isCall","expressionContainsNamed","nameLoop","expand","returner","variadic","expressions","hasSep","throwAwayComments","cond","params","argInfo","conditions","block","lookupValue","Quoted","attribute","slashedCombinator","isLess","when","cif","content","blockRuleset","Definition","DetachedRuleset","dumpLineNumbers","strictImports","hasDR","ruleProperty","permissiveValue","anonymousValue","untilTokens","done","testCurrentChar","Anonymous","variableRegex","propRegex","features","dir","importOptions","mediaFeatures","o","optionName","importOption","mediaFeature","syntaxOptions","rangeP","atomicCondition","rvalue","lvalue","prepareAndGetNestableAtRule","treeType","atRule","nestableAtRule","Media","Container","pluginArgs","nonVendorSpecificName","hasIdentifier","hasExpression","hasUnknown","hasBlock","sub","addition","parens","multiplication","operation","isSpaced","operand","parensInOp","needsParens","logical","next","conditionAnd","negatedCondition","parenthesisCondition","negate","body","me","tryConditionFollowedByParenthesis","preparsedCond","delim","simpleProperty","vars","name_1","evaldCondition","getElements","mixinElements_","mediaEmpty","els","importManager","createEmptySelectors","el","sels","olen","mixinElements","isJustParentSelector","Keyword","True","False","mapLines","rulesetLike","MATH$1","asComment","ctx","asMediaQuery","filenameWithProtocol","lineSeparator","lastRule","prevMath","evaldValue","mathBypass","evalName","importantResult","makeImportant","isCompressed","defaultFunc","value_","error_","reset","_lookups","_variables","_properties","isRuleset","selCnt","hasVariable","hasOnePassingSelector","toParseSelectors","startingIndex","selectorFileInfo","subRule","originalRuleset","allowImports","ctxFrames","ctxSelectors","evalImports","rsRules","evalFirst","mediaBlockCount","mediaBlocks","resetCache","bubbleSelectors","importRules","matchArgs","matchCondition","lastSelector","_rulesets","variables","hash","properties","name_2","decl","parseValue","lastDeclaration","toParse","transformDeclaration","nodes_1","filtRules","prependRule","find","foundMixins","debugInfo$1","ruleNodes","tabLevel","sep","tabRuleStr","tabSetStr","charsetNodeIndex","importNodeIndex","isCharset","pathCnt","pathSubCnt","currentLastRule","joinSelector","createParenthesis","elementsToPak","originalElement","replacementParen","insideParent","createSelector","containedElement","addReplacementIntoPath","beginningPath","addPath","replacedElement","originalSelector","newSelectorPath","newJoinedSelector","parentEl","restOfPath","addAllReplacementsIntoPath","addPaths","mergeElementsOnToSelectors","sel","deriveSelector","deriveFrom","newPaths","replaceParentSelector","inSelector","currentElements","newSelectors","selectorsMultiplied","maybeSelector","hadParentSelector","nestedSelector","replaced","nestedPaths","replacedNewSelectors","concatenated","AtRule","outputRuleset","mediaPathBackup","mediaBlocksBackup","mediaPath","callEval","Unit","numerator","denominator","backupUnit","sort","strictUnits","returnStr","is","unitString","toUpperCase","isLength","RegExp","isSingular","usedUnits","mapUnit","groupName","atomicUnit","cancel","counter","count","Dimension","unit","parseFloat","isNaN","toColor","strValue","convertTo","unify","conversions","targetUnit","applyUnit","derivedConversions","MATH","Operation","operands","__assign","t","noSpacing","returnValue","doubleParen","functionCaller","isValid","evalArgs","commentFilter","subNodes","to","from","pack","ar","__spreadArray","calc","currentMathContext","funcCaller","columnNumber","evaluating","frame","fun","mergeRules","less","vArr","escaped","containsVariables","that","iterativeReplace","regexp","replacementFnc","evaluatedValue","URL","isEvald","urlArgs","NestableAtRulePrototype","evalTop","evalNested","permute","fragment","rest","Import","pathValue","reference","evalPath","doEval","registry","newImport","JsEvalNode","evaluateJavaScript","evalContext","javascriptEnabled","jsify","toJS","JavaScript","string","Assignment","Condition","QueryInParens","op2","mvalue","UnicodeDescriptor","Negative","next_id","selectorElements","selfElements","ruleCall","substring","arity","optionalParameters","required","evalParams","mixinEnv","evaldArguments","varargs","isNamedFound","argIndex","argsLength","evalCall","_arguments","mixinFrames","allArgsCnt","requiredArgsCnt","MixinCall","mixins","mixinPath","argValue","isRecursive","isOneFound","candidate","defaultResult","noArgumentsFilter","candidates","conditionResult","calcDefGroup","namespace","format","newRules","_setVisibilityToReplacement","replacement","AbstractFileManager","lastIndexOf","tryAppendExtension","ext","supportsSync","alwaysMakePathsAbsolute","isPathAbsolute","basePath","laterPath","pathDiff","baseUrl","urlDirectories","baseUrlDirectories","urlParts","extractUrlParts","baseUrlParts","diff","hostPart","directories","urlPartsRegex","rawDirectories","rawPath","fileUrl","AbstractPluginLoader","require","evalPlugin","pluginOptions","pluginObj","localModule","shortname","FileManager","trySetOptions","use","loader","validatePlugin","minVersion","compareVersion","addPlugin","setOptions","version","versionToString","aVersion","bVersion","versionString","printUsage","plugins","If","trueValue","falseValue","isdefined","colorFunctions","boolean$1","clamp","hsla","origColor","hsl","number$1","rgba","size","m1","m2","hue","hsv","hsva","vs","floor","perm","saturation","lightness","hsvhue","hsvsaturation","hsvvalue","red","green","blue","luminance","saturate","amount","method","desaturate","lighten","darken","fadein","fadeout","fade","spin","mix","color1","color2","weight","w","w1","w2","greyscale","contrast","dark","light","threshold","argb","tint","shade","colorBlend","mode","cb","cs","cr","ab","as","colorBlendModeFunctions","multiply","screen","overlay","softlight","sqrt","hardlight","difference","abs","exclusion","average","negation","f$1","getItemsFromNode","list","_SELF","expr","_i","values","range","step","stepValue","each","rs","iterator","tryEval","valueName","keyName","indexName","MathHelper","fn","mathFunctions","ceil","tan","sin","cos","atan","asin","acos","fraction","num","minMax","isMin","currentUnified","referenceUnified","unitStatic","unitClone","order","number","convert","pi","mod","y","percentage","evaluated","encodeURI","pattern","flags","_loop_1","token","encodeURIComponent","isa","Type","isunit","types","isruleset","iscolor","isnumber","isstring","iskeyword","isurl","ispixel","ispercentage","isem","fallback","functionThis","mimetypeNode","filePathNode","mimetype","filePath","entryPath","fragmentStart","rawBuffer","useBase64","mimeLookup","charsetLookup","fileSync","loadFileSync","buf","encodeBase64","uri","dataUri","direction","stops","gradientDirectionSvg","position","positionValue","gradientType","rectangleDimension","renderEnv","directionValue","throwArgumentDescriptor","transformTree","evaldRoot","evalEnv","visitorIterator","visitors$1","preEvalVisitors","first","isPreEvalVisitor","isPreVisitor","pm","PluginManager","postProcessors","installedPlugins","pluginCache","Loader","PluginLoader","addPlugins","install","addVisitor","addPreProcessor","preProcessor","priority","indexToInsertAt","addPostProcessor","postProcessor","manager","getPostProcessors","getVisitors","PluginManagerFactory","newFactory","options$1","logger","parseNodeVersion_1","major","minor","patch","pre","build","lessRoot","sourceMapOutput","sourceMapBuilder","parseTree","SourceMapBuilder","ParseTree","toCSSOptions","sourceMap","file_1","getExternalSourceMap","files","rootFilename","SourceMapOutput","contentsIgnoredCharsMap","contentsMap","sourceMapFilename","sourceMapURL","outputFilename","sourceMapOutputFilename","sourceMapBasepath","sourceMapRootpath","outputSourceFiles","sourceMapGenerator","sourceMapFileInline","disableSourcemapAnnotation","sourceMapInputFilename","normalizeFilename","removeBasepath","getCSSAppendage","setExternalSourceMap","isInline","getSourceMapURL","getOutputFilename","getInputFilename","_css","_rootNode","_contentsMap","_contentsIgnoredCharsMap","_sourceMapFilename","_outputFilename","_sourceMapBasepath","_sourceMapRootpath","_outputSourceFiles","_sourceMapGeneratorConstructor","getSourceMapGenerator","_lineNumber","_column","sourceLines","columns","sourceColumns","inputSource","_sourceMapGenerator","addMapping","generated","source","file","sourceRoot","setSourceContent","sourceMapContent","stringify","toJSON","ImportManager","rootFileInfo","mime","queue","pluginLoader","fileParsedFunc","importedEqualsRoot","newFileInfo","loadedFile","promise","loadFileCallback","resolvedFilename","newEnv","syncImport","loadPluginSync","loadPlugin","loadFile","then","render","self_1","Promise","resolve","reject","Render","context_1","pluginManager_1","reUsePluginManager","imports_1","evalResult","fileContent","initial","ctor","api","fileCache","doXHR","errback","xhr","XMLHttpRequest","async","isFileProtocol","fileAsync","handleResponse","status","responseText","getResponseHeader","overrideMimeType","open","setRequestHeader","send","onreadystatechange","readyState","supports","clearFileCache","location","useFileCache","lessText_1","webInfo","lastModified","Date","FM","log","fulfill","catch","ErrorReporting","rootHref","errorReporting","errors","errorline","classname","logLevel","errorConsole","timer","filenameNoPath","className","innerHTML","style","env","setInterval","replaceChild","clearInterval","errorHTML","remove","removeErrorHTML","depends","lint","insecure","protocol","poll","hostname","port","onReady","addDefaultOptions","LESS_PLUGINS","loggers","console","LogListener","cache","localStorage","setCSS","setItem","getCSS","getItem","timestamp","valueOf","Cache","imageSize","imageFunctions","ImageSize","typePattern","thisArg","curryArgs","loadStyles","instanceOptions","loadStyleSheet","reload","remaining","local","loadInitialFileCallback","loadStyleSheets","sheets","watch","watchMode","watchTimer","unwatch","registerStylesheetsImmediately","links","rel","registerStylesheets","record","refresh","startTime","endTime","totalMilliseconds","remainingSheets","refreshStyles","resolveOrReject","pageLoadFinished","factory"],"sourceRoot":""}
{"version":3,"file":"chunk.lessNpmPackage.e393786a894ce095e023.js","mappings":"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","sources":["webpack://transformers/./node_modules/less/dist/less.js"],"sourcesContent":["/**\n * Less - Leaner CSS v4.1.3\n * http://lesscss.org\n * \n * Copyright (c) 2009-2022, Alexis Sellier <self@cloudhead.net>\n * Licensed under the Apache-2.0 License.\n *\n * @license Apache-2.0\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.less = factory());\n}(this, (function () { 'use strict';\n\n    // Export a new default each time\r\n    function defaultOptions () {\r\n        return {\r\n            /* Inline Javascript - @plugin still allowed */\r\n            javascriptEnabled: false,\r\n            /* Outputs a makefile import dependency list to stdout. */\r\n            depends: false,\r\n            /* (DEPRECATED) Compress using less built-in compression.\r\n             * This does an okay job but does not utilise all the tricks of\r\n             * dedicated css compression. */\r\n            compress: false,\r\n            /* Runs the less parser and just reports errors without any output. */\r\n            lint: false,\r\n            /* Sets available include paths.\r\n             * If the file in an @import rule does not exist at that exact location,\r\n             * less will look for it at the location(s) passed to this option.\r\n             * You might use this for instance to specify a path to a library which\r\n             * you want to be referenced simply and relatively in the less files. */\r\n            paths: [],\r\n            /* color output in the terminal */\r\n            color: true,\r\n            /* The strictImports controls whether the compiler will allow an @import inside of either\r\n             * @media blocks or (a later addition) other selector blocks.\r\n             * See: https://github.com/less/less.js/issues/656 */\r\n            strictImports: false,\r\n            /* Allow Imports from Insecure HTTPS Hosts */\r\n            insecure: false,\r\n            /* Allows you to add a path to every generated import and url in your css.\r\n             * This does not affect less import statements that are processed, just ones\r\n             * that are left in the output css. */\r\n            rootpath: '',\r\n            /* By default URLs are kept as-is, so if you import a file in a sub-directory\r\n             * that references an image, exactly the same URL will be output in the css.\r\n             * This option allows you to re-write URL's in imported files so that the\r\n             * URL is always relative to the base imported file */\r\n            rewriteUrls: false,\r\n            /* How to process math\r\n             *   0 always           - eagerly try to solve all operations\r\n             *   1 parens-division  - require parens for division \"/\"\r\n             *   2 parens | strict  - require parens for all operations\r\n             *   3 strict-legacy    - legacy strict behavior (super-strict)\r\n             */\r\n            math: 1,\r\n            /* Without this option, less attempts to guess at the output unit when it does maths. */\r\n            strictUnits: false,\r\n            /* Effectively the declaration is put at the top of your base Less file,\r\n             * meaning it can be used but it also can be overridden if this variable\r\n             * is defined in the file. */\r\n            globalVars: null,\r\n            /* As opposed to the global variable option, this puts the declaration at the\r\n             * end of your base file, meaning it will override anything defined in your Less file. */\r\n            modifyVars: null,\r\n            /* This option allows you to specify a argument to go on to every URL.  */\r\n            urlArgs: ''\r\n        };\r\n    }\n\n    function extractId(href) {\r\n        return href.replace(/^[a-z-]+:\\/+?[^\\/]+/, '') // Remove protocol & domain\r\n            .replace(/[\\?\\&]livereload=\\w+/, '') // Remove LiveReload cachebuster\r\n            .replace(/^\\//, '') // Remove root /\r\n            .replace(/\\.[a-zA-Z]+$/, '') // Remove simple extension\r\n            .replace(/[^\\.\\w-]+/g, '-') // Replace illegal characters\r\n            .replace(/\\./g, ':'); // Replace dots with colons(for valid id)\r\n    }\r\n    function addDataAttr(options, tag) {\r\n        if (!tag) {\r\n            return;\r\n        } // in case of tag is null or undefined\r\n        for (var opt in tag.dataset) {\r\n            if (tag.dataset.hasOwnProperty(opt)) {\r\n                if (opt === 'env' || opt === 'dumpLineNumbers' || opt === 'rootpath' || opt === 'errorReporting') {\r\n                    options[opt] = tag.dataset[opt];\r\n                }\r\n                else {\r\n                    try {\r\n                        options[opt] = JSON.parse(tag.dataset[opt]);\r\n                    }\r\n                    catch (_) { }\r\n                }\r\n            }\r\n        }\r\n    }\n\n    var browser = {\r\n        createCSS: function (document, styles, sheet) {\r\n            // Strip the query-string\r\n            var href = sheet.href || '';\r\n            // If there is no title set, use the filename, minus the extension\r\n            var id = \"less:\" + (sheet.title || extractId(href));\r\n            // If this has already been inserted into the DOM, we may need to replace it\r\n            var oldStyleNode = document.getElementById(id);\r\n            var keepOldStyleNode = false;\r\n            // Create a new stylesheet node for insertion or (if necessary) replacement\r\n            var styleNode = document.createElement('style');\r\n            styleNode.setAttribute('type', 'text/css');\r\n            if (sheet.media) {\r\n                styleNode.setAttribute('media', sheet.media);\r\n            }\r\n            styleNode.id = id;\r\n            if (!styleNode.styleSheet) {\r\n                styleNode.appendChild(document.createTextNode(styles));\r\n                // If new contents match contents of oldStyleNode, don't replace oldStyleNode\r\n                keepOldStyleNode = (oldStyleNode !== null && oldStyleNode.childNodes.length > 0 && styleNode.childNodes.length > 0 &&\r\n                    oldStyleNode.firstChild.nodeValue === styleNode.firstChild.nodeValue);\r\n            }\r\n            var head = document.getElementsByTagName('head')[0];\r\n            // If there is no oldStyleNode, just append; otherwise, only append if we need\r\n            // to replace oldStyleNode with an updated stylesheet\r\n            if (oldStyleNode === null || keepOldStyleNode === false) {\r\n                var nextEl = sheet && sheet.nextSibling || null;\r\n                if (nextEl) {\r\n                    nextEl.parentNode.insertBefore(styleNode, nextEl);\r\n                }\r\n                else {\r\n                    head.appendChild(styleNode);\r\n                }\r\n            }\r\n            if (oldStyleNode && keepOldStyleNode === false) {\r\n                oldStyleNode.parentNode.removeChild(oldStyleNode);\r\n            }\r\n            // For IE.\r\n            // This needs to happen *after* the style element is added to the DOM, otherwise IE 7 and 8 may crash.\r\n            // See http://social.msdn.microsoft.com/Forums/en-US/7e081b65-878a-4c22-8e68-c10d39c2ed32/internet-explorer-crashes-appending-style-element-to-head\r\n            if (styleNode.styleSheet) {\r\n                try {\r\n                    styleNode.styleSheet.cssText = styles;\r\n                }\r\n                catch (e) {\r\n                    throw new Error('Couldn\\'t reassign styleSheet.cssText.');\r\n                }\r\n            }\r\n        },\r\n        currentScript: function (window) {\r\n            var document = window.document;\r\n            return document.currentScript || (function () {\r\n                var scripts = document.getElementsByTagName('script');\r\n                return scripts[scripts.length - 1];\r\n            })();\r\n        }\r\n    };\n\n    var addDefaultOptions = (function (window, options) {\r\n        // use options from the current script tag data attribues\r\n        addDataAttr(options, browser.currentScript(window));\r\n        if (options.isFileProtocol === undefined) {\r\n            options.isFileProtocol = /^(file|(chrome|safari)(-extension)?|resource|qrc|app):/.test(window.location.protocol);\r\n        }\r\n        // Load styles asynchronously (default: false)\r\n        //\r\n        // This is set to `false` by default, so that the body\r\n        // doesn't start loading before the stylesheets are parsed.\r\n        // Setting this to `true` can result in flickering.\r\n        //\r\n        options.async = options.async || false;\r\n        options.fileAsync = options.fileAsync || false;\r\n        // Interval between watch polls\r\n        options.poll = options.poll || (options.isFileProtocol ? 1000 : 1500);\r\n        options.env = options.env || (window.location.hostname == '127.0.0.1' ||\r\n            window.location.hostname == '0.0.0.0' ||\r\n            window.location.hostname == 'localhost' ||\r\n            (window.location.port &&\r\n                window.location.port.length > 0) ||\r\n            options.isFileProtocol ? 'development'\r\n            : 'production');\r\n        var dumpLineNumbers = /!dumpLineNumbers:(comments|mediaquery|all)/.exec(window.location.hash);\r\n        if (dumpLineNumbers) {\r\n            options.dumpLineNumbers = dumpLineNumbers[1];\r\n        }\r\n        if (options.useFileCache === undefined) {\r\n            options.useFileCache = true;\r\n        }\r\n        if (options.onReady === undefined) {\r\n            options.onReady = true;\r\n        }\r\n        if (options.relativeUrls) {\r\n            options.rewriteUrls = 'all';\r\n        }\r\n    });\n\n    var logger$1 = {\r\n        error: function (msg) {\r\n            this._fireEvent('error', msg);\r\n        },\r\n        warn: function (msg) {\r\n            this._fireEvent('warn', msg);\r\n        },\r\n        info: function (msg) {\r\n            this._fireEvent('info', msg);\r\n        },\r\n        debug: function (msg) {\r\n            this._fireEvent('debug', msg);\r\n        },\r\n        addListener: function (listener) {\r\n            this._listeners.push(listener);\r\n        },\r\n        removeListener: function (listener) {\r\n            for (var i = 0; i < this._listeners.length; i++) {\r\n                if (this._listeners[i] === listener) {\r\n                    this._listeners.splice(i, 1);\r\n                    return;\r\n                }\r\n            }\r\n        },\r\n        _fireEvent: function (type, msg) {\r\n            for (var i = 0; i < this._listeners.length; i++) {\r\n                var logFunction = this._listeners[i][type];\r\n                if (logFunction) {\r\n                    logFunction(msg);\r\n                }\r\n            }\r\n        },\r\n        _listeners: []\r\n    };\n\n    /**\r\n     * @todo Document why this abstraction exists, and the relationship between\r\n     *       environment, file managers, and plugin manager\r\n     */\r\n    var Environment = /** @class */ (function () {\r\n        function Environment(externalEnvironment, fileManagers) {\r\n            this.fileManagers = fileManagers || [];\r\n            externalEnvironment = externalEnvironment || {};\r\n            var optionalFunctions = ['encodeBase64', 'mimeLookup', 'charsetLookup', 'getSourceMapGenerator'];\r\n            var requiredFunctions = [];\r\n            var functions = requiredFunctions.concat(optionalFunctions);\r\n            for (var i = 0; i < functions.length; i++) {\r\n                var propName = functions[i];\r\n                var environmentFunc = externalEnvironment[propName];\r\n                if (environmentFunc) {\r\n                    this[propName] = environmentFunc.bind(externalEnvironment);\r\n                }\r\n                else if (i < requiredFunctions.length) {\r\n                    this.warn(\"missing required function in environment - \" + propName);\r\n                }\r\n            }\r\n        }\r\n        Environment.prototype.getFileManager = function (filename, currentDirectory, options, environment, isSync) {\r\n            if (!filename) {\r\n                logger$1.warn('getFileManager called with no filename.. Please report this issue. continuing.');\r\n            }\r\n            if (currentDirectory == null) {\r\n                logger$1.warn('getFileManager called with null directory.. Please report this issue. continuing.');\r\n            }\r\n            var fileManagers = this.fileManagers;\r\n            if (options.pluginManager) {\r\n                fileManagers = [].concat(fileManagers).concat(options.pluginManager.getFileManagers());\r\n            }\r\n            for (var i = fileManagers.length - 1; i >= 0; i--) {\r\n                var fileManager = fileManagers[i];\r\n                if (fileManager[isSync ? 'supportsSync' : 'supports'](filename, currentDirectory, options, environment)) {\r\n                    return fileManager;\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        Environment.prototype.addFileManager = function (fileManager) {\r\n            this.fileManagers.push(fileManager);\r\n        };\r\n        Environment.prototype.clearFileManagers = function () {\r\n            this.fileManagers = [];\r\n        };\r\n        return Environment;\r\n    }());\n\n    var colors = {\r\n        'aliceblue': '#f0f8ff',\r\n        'antiquewhite': '#faebd7',\r\n        'aqua': '#00ffff',\r\n        'aquamarine': '#7fffd4',\r\n        'azure': '#f0ffff',\r\n        'beige': '#f5f5dc',\r\n        'bisque': '#ffe4c4',\r\n        'black': '#000000',\r\n        'blanchedalmond': '#ffebcd',\r\n        'blue': '#0000ff',\r\n        'blueviolet': '#8a2be2',\r\n        'brown': '#a52a2a',\r\n        'burlywood': '#deb887',\r\n        'cadetblue': '#5f9ea0',\r\n        'chartreuse': '#7fff00',\r\n        'chocolate': '#d2691e',\r\n        'coral': '#ff7f50',\r\n        'cornflowerblue': '#6495ed',\r\n        'cornsilk': '#fff8dc',\r\n        'crimson': '#dc143c',\r\n        'cyan': '#00ffff',\r\n        'darkblue': '#00008b',\r\n        'darkcyan': '#008b8b',\r\n        'darkgoldenrod': '#b8860b',\r\n        'darkgray': '#a9a9a9',\r\n        'darkgrey': '#a9a9a9',\r\n        'darkgreen': '#006400',\r\n        'darkkhaki': '#bdb76b',\r\n        'darkmagenta': '#8b008b',\r\n        'darkolivegreen': '#556b2f',\r\n        'darkorange': '#ff8c00',\r\n        'darkorchid': '#9932cc',\r\n        'darkred': '#8b0000',\r\n        'darksalmon': '#e9967a',\r\n        'darkseagreen': '#8fbc8f',\r\n        'darkslateblue': '#483d8b',\r\n        'darkslategray': '#2f4f4f',\r\n        'darkslategrey': '#2f4f4f',\r\n        'darkturquoise': '#00ced1',\r\n        'darkviolet': '#9400d3',\r\n        'deeppink': '#ff1493',\r\n        'deepskyblue': '#00bfff',\r\n        'dimgray': '#696969',\r\n        'dimgrey': '#696969',\r\n        'dodgerblue': '#1e90ff',\r\n        'firebrick': '#b22222',\r\n        'floralwhite': '#fffaf0',\r\n        'forestgreen': '#228b22',\r\n        'fuchsia': '#ff00ff',\r\n        'gainsboro': '#dcdcdc',\r\n        'ghostwhite': '#f8f8ff',\r\n        'gold': '#ffd700',\r\n        'goldenrod': '#daa520',\r\n        'gray': '#808080',\r\n        'grey': '#808080',\r\n        'green': '#008000',\r\n        'greenyellow': '#adff2f',\r\n        'honeydew': '#f0fff0',\r\n        'hotpink': '#ff69b4',\r\n        'indianred': '#cd5c5c',\r\n        'indigo': '#4b0082',\r\n        'ivory': '#fffff0',\r\n        'khaki': '#f0e68c',\r\n        'lavender': '#e6e6fa',\r\n        'lavenderblush': '#fff0f5',\r\n        'lawngreen': '#7cfc00',\r\n        'lemonchiffon': '#fffacd',\r\n        'lightblue': '#add8e6',\r\n        'lightcoral': '#f08080',\r\n        'lightcyan': '#e0ffff',\r\n        'lightgoldenrodyellow': '#fafad2',\r\n        'lightgray': '#d3d3d3',\r\n        'lightgrey': '#d3d3d3',\r\n        'lightgreen': '#90ee90',\r\n        'lightpink': '#ffb6c1',\r\n        'lightsalmon': '#ffa07a',\r\n        'lightseagreen': '#20b2aa',\r\n        'lightskyblue': '#87cefa',\r\n        'lightslategray': '#778899',\r\n        'lightslategrey': '#778899',\r\n        'lightsteelblue': '#b0c4de',\r\n        'lightyellow': '#ffffe0',\r\n        'lime': '#00ff00',\r\n        'limegreen': '#32cd32',\r\n        'linen': '#faf0e6',\r\n        'magenta': '#ff00ff',\r\n        'maroon': '#800000',\r\n        'mediumaquamarine': '#66cdaa',\r\n        'mediumblue': '#0000cd',\r\n        'mediumorchid': '#ba55d3',\r\n        'mediumpurple': '#9370d8',\r\n        'mediumseagreen': '#3cb371',\r\n        'mediumslateblue': '#7b68ee',\r\n        'mediumspringgreen': '#00fa9a',\r\n        'mediumturquoise': '#48d1cc',\r\n        'mediumvioletred': '#c71585',\r\n        'midnightblue': '#191970',\r\n        'mintcream': '#f5fffa',\r\n        'mistyrose': '#ffe4e1',\r\n        'moccasin': '#ffe4b5',\r\n        'navajowhite': '#ffdead',\r\n        'navy': '#000080',\r\n        'oldlace': '#fdf5e6',\r\n        'olive': '#808000',\r\n        'olivedrab': '#6b8e23',\r\n        'orange': '#ffa500',\r\n        'orangered': '#ff4500',\r\n        'orchid': '#da70d6',\r\n        'palegoldenrod': '#eee8aa',\r\n        'palegreen': '#98fb98',\r\n        'paleturquoise': '#afeeee',\r\n        'palevioletred': '#d87093',\r\n        'papayawhip': '#ffefd5',\r\n        'peachpuff': '#ffdab9',\r\n        'peru': '#cd853f',\r\n        'pink': '#ffc0cb',\r\n        'plum': '#dda0dd',\r\n        'powderblue': '#b0e0e6',\r\n        'purple': '#800080',\r\n        'rebeccapurple': '#663399',\r\n        'red': '#ff0000',\r\n        'rosybrown': '#bc8f8f',\r\n        'royalblue': '#4169e1',\r\n        'saddlebrown': '#8b4513',\r\n        'salmon': '#fa8072',\r\n        'sandybrown': '#f4a460',\r\n        'seagreen': '#2e8b57',\r\n        'seashell': '#fff5ee',\r\n        'sienna': '#a0522d',\r\n        'silver': '#c0c0c0',\r\n        'skyblue': '#87ceeb',\r\n        'slateblue': '#6a5acd',\r\n        'slategray': '#708090',\r\n        'slategrey': '#708090',\r\n        'snow': '#fffafa',\r\n        'springgreen': '#00ff7f',\r\n        'steelblue': '#4682b4',\r\n        'tan': '#d2b48c',\r\n        'teal': '#008080',\r\n        'thistle': '#d8bfd8',\r\n        'tomato': '#ff6347',\r\n        'turquoise': '#40e0d0',\r\n        'violet': '#ee82ee',\r\n        'wheat': '#f5deb3',\r\n        'white': '#ffffff',\r\n        'whitesmoke': '#f5f5f5',\r\n        'yellow': '#ffff00',\r\n        'yellowgreen': '#9acd32'\r\n    };\n\n    var unitConversions = {\r\n        length: {\r\n            'm': 1,\r\n            'cm': 0.01,\r\n            'mm': 0.001,\r\n            'in': 0.0254,\r\n            'px': 0.0254 / 96,\r\n            'pt': 0.0254 / 72,\r\n            'pc': 0.0254 / 72 * 12\r\n        },\r\n        duration: {\r\n            's': 1,\r\n            'ms': 0.001\r\n        },\r\n        angle: {\r\n            'rad': 1 / (2 * Math.PI),\r\n            'deg': 1 / 360,\r\n            'grad': 1 / 400,\r\n            'turn': 1\r\n        }\r\n    };\n\n    var data = { colors: colors, unitConversions: unitConversions };\n\n    /**\r\n     * The reason why Node is a class and other nodes simply do not extend\r\n     * from Node (since we're transpiling) is due to this issue:\r\n     *\r\n     * https://github.com/less/less.js/issues/3434\r\n     */\r\n    var Node = /** @class */ (function () {\r\n        function Node() {\r\n            this.parent = null;\r\n            this.visibilityBlocks = undefined;\r\n            this.nodeVisible = undefined;\r\n            this.rootNode = null;\r\n            this.parsed = null;\r\n        }\r\n        Object.defineProperty(Node.prototype, \"currentFileInfo\", {\r\n            get: function () {\r\n                return this.fileInfo();\r\n            },\r\n            enumerable: false,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(Node.prototype, \"index\", {\r\n            get: function () {\r\n                return this.getIndex();\r\n            },\r\n            enumerable: false,\r\n            configurable: true\r\n        });\r\n        Node.prototype.setParent = function (nodes, parent) {\r\n            function set(node) {\r\n                if (node && node instanceof Node) {\r\n                    node.parent = parent;\r\n                }\r\n            }\r\n            if (Array.isArray(nodes)) {\r\n                nodes.forEach(set);\r\n            }\r\n            else {\r\n                set(nodes);\r\n            }\r\n        };\r\n        Node.prototype.getIndex = function () {\r\n            return this._index || (this.parent && this.parent.getIndex()) || 0;\r\n        };\r\n        Node.prototype.fileInfo = function () {\r\n            return this._fileInfo || (this.parent && this.parent.fileInfo()) || {};\r\n        };\r\n        Node.prototype.isRulesetLike = function () { return false; };\r\n        Node.prototype.toCSS = function (context) {\r\n            var strs = [];\r\n            this.genCSS(context, {\r\n                add: function (chunk, fileInfo, index) {\r\n                    strs.push(chunk);\r\n                },\r\n                isEmpty: function () {\r\n                    return strs.length === 0;\r\n                }\r\n            });\r\n            return strs.join('');\r\n        };\r\n        Node.prototype.genCSS = function (context, output) {\r\n            output.add(this.value);\r\n        };\r\n        Node.prototype.accept = function (visitor) {\r\n            this.value = visitor.visit(this.value);\r\n        };\r\n        Node.prototype.eval = function () { return this; };\r\n        Node.prototype._operate = function (context, op, a, b) {\r\n            switch (op) {\r\n                case '+': return a + b;\r\n                case '-': return a - b;\r\n                case '*': return a * b;\r\n                case '/': return a / b;\r\n            }\r\n        };\r\n        Node.prototype.fround = function (context, value) {\r\n            var precision = context && context.numPrecision;\r\n            // add \"epsilon\" to ensure numbers like 1.000000005 (represented as 1.000000004999...) are properly rounded:\r\n            return (precision) ? Number((value + 2e-16).toFixed(precision)) : value;\r\n        };\r\n        Node.compare = function (a, b) {\r\n            /* returns:\r\n             -1: a < b\r\n             0: a = b\r\n             1: a > b\r\n             and *any* other value for a != b (e.g. undefined, NaN, -2 etc.) */\r\n            if ((a.compare) &&\r\n                // for \"symmetric results\" force toCSS-based comparison\r\n                // of Quoted or Anonymous if either value is one of those\r\n                !(b.type === 'Quoted' || b.type === 'Anonymous')) {\r\n                return a.compare(b);\r\n            }\r\n            else if (b.compare) {\r\n                return -b.compare(a);\r\n            }\r\n            else if (a.type !== b.type) {\r\n                return undefined;\r\n            }\r\n            a = a.value;\r\n            b = b.value;\r\n            if (!Array.isArray(a)) {\r\n                return a === b ? 0 : undefined;\r\n            }\r\n            if (a.length !== b.length) {\r\n                return undefined;\r\n            }\r\n            for (var i = 0; i < a.length; i++) {\r\n                if (Node.compare(a[i], b[i]) !== 0) {\r\n                    return undefined;\r\n                }\r\n            }\r\n            return 0;\r\n        };\r\n        Node.numericCompare = function (a, b) {\r\n            return a < b ? -1\r\n                : a === b ? 0\r\n                    : a > b ? 1 : undefined;\r\n        };\r\n        // Returns true if this node represents root of ast imported by reference\r\n        Node.prototype.blocksVisibility = function () {\r\n            if (this.visibilityBlocks == null) {\r\n                this.visibilityBlocks = 0;\r\n            }\r\n            return this.visibilityBlocks !== 0;\r\n        };\r\n        Node.prototype.addVisibilityBlock = function () {\r\n            if (this.visibilityBlocks == null) {\r\n                this.visibilityBlocks = 0;\r\n            }\r\n            this.visibilityBlocks = this.visibilityBlocks + 1;\r\n        };\r\n        Node.prototype.removeVisibilityBlock = function () {\r\n            if (this.visibilityBlocks == null) {\r\n                this.visibilityBlocks = 0;\r\n            }\r\n            this.visibilityBlocks = this.visibilityBlocks - 1;\r\n        };\r\n        // Turns on node visibility - if called node will be shown in output regardless\r\n        // of whether it comes from import by reference or not\r\n        Node.prototype.ensureVisibility = function () {\r\n            this.nodeVisible = true;\r\n        };\r\n        // Turns off node visibility - if called node will NOT be shown in output regardless\r\n        // of whether it comes from import by reference or not\r\n        Node.prototype.ensureInvisibility = function () {\r\n            this.nodeVisible = false;\r\n        };\r\n        // return values:\r\n        // false - the node must not be visible\r\n        // true - the node must be visible\r\n        // undefined or null - the node has the same visibility as its parent\r\n        Node.prototype.isVisible = function () {\r\n            return this.nodeVisible;\r\n        };\r\n        Node.prototype.visibilityInfo = function () {\r\n            return {\r\n                visibilityBlocks: this.visibilityBlocks,\r\n                nodeVisible: this.nodeVisible\r\n            };\r\n        };\r\n        Node.prototype.copyVisibilityInfo = function (info) {\r\n            if (!info) {\r\n                return;\r\n            }\r\n            this.visibilityBlocks = info.visibilityBlocks;\r\n            this.nodeVisible = info.nodeVisible;\r\n        };\r\n        return Node;\r\n    }());\n\n    //\r\n    // RGB Colors - #ff0014, #eee\r\n    //\r\n    var Color = function (rgb, a, originalForm) {\r\n        var self = this;\r\n        //\r\n        // The end goal here, is to parse the arguments\r\n        // into an integer triplet, such as `128, 255, 0`\r\n        //\r\n        // This facilitates operations and conversions.\r\n        //\r\n        if (Array.isArray(rgb)) {\r\n            this.rgb = rgb;\r\n        }\r\n        else if (rgb.length >= 6) {\r\n            this.rgb = [];\r\n            rgb.match(/.{2}/g).map(function (c, i) {\r\n                if (i < 3) {\r\n                    self.rgb.push(parseInt(c, 16));\r\n                }\r\n                else {\r\n                    self.alpha = (parseInt(c, 16)) / 255;\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            this.rgb = [];\r\n            rgb.split('').map(function (c, i) {\r\n                if (i < 3) {\r\n                    self.rgb.push(parseInt(c + c, 16));\r\n                }\r\n                else {\r\n                    self.alpha = (parseInt(c + c, 16)) / 255;\r\n                }\r\n            });\r\n        }\r\n        this.alpha = this.alpha || (typeof a === 'number' ? a : 1);\r\n        if (typeof originalForm !== 'undefined') {\r\n            this.value = originalForm;\r\n        }\r\n    };\r\n    Color.prototype = Object.assign(new Node(), {\r\n        type: 'Color',\r\n        luma: function () {\r\n            var r = this.rgb[0] / 255, g = this.rgb[1] / 255, b = this.rgb[2] / 255;\r\n            r = (r <= 0.03928) ? r / 12.92 : Math.pow(((r + 0.055) / 1.055), 2.4);\r\n            g = (g <= 0.03928) ? g / 12.92 : Math.pow(((g + 0.055) / 1.055), 2.4);\r\n            b = (b <= 0.03928) ? b / 12.92 : Math.pow(((b + 0.055) / 1.055), 2.4);\r\n            return 0.2126 * r + 0.7152 * g + 0.0722 * b;\r\n        },\r\n        genCSS: function (context, output) {\r\n            output.add(this.toCSS(context));\r\n        },\r\n        toCSS: function (context, doNotCompress) {\r\n            var compress = context && context.compress && !doNotCompress;\r\n            var color;\r\n            var alpha;\r\n            var colorFunction;\r\n            var args = [];\r\n            // `value` is set if this color was originally\r\n            // converted from a named color string so we need\r\n            // to respect this and try to output named color too.\r\n            alpha = this.fround(context, this.alpha);\r\n            if (this.value) {\r\n                if (this.value.indexOf('rgb') === 0) {\r\n                    if (alpha < 1) {\r\n                        colorFunction = 'rgba';\r\n                    }\r\n                }\r\n                else if (this.value.indexOf('hsl') === 0) {\r\n                    if (alpha < 1) {\r\n                        colorFunction = 'hsla';\r\n                    }\r\n                    else {\r\n                        colorFunction = 'hsl';\r\n                    }\r\n                }\r\n                else {\r\n                    return this.value;\r\n                }\r\n            }\r\n            else {\r\n                if (alpha < 1) {\r\n                    colorFunction = 'rgba';\r\n                }\r\n            }\r\n            switch (colorFunction) {\r\n                case 'rgba':\r\n                    args = this.rgb.map(function (c) {\r\n                        return clamp$1(Math.round(c), 255);\r\n                    }).concat(clamp$1(alpha, 1));\r\n                    break;\r\n                case 'hsla':\r\n                    args.push(clamp$1(alpha, 1));\r\n                case 'hsl':\r\n                    color = this.toHSL();\r\n                    args = [\r\n                        this.fround(context, color.h),\r\n                        this.fround(context, color.s * 100) + \"%\",\r\n                        this.fround(context, color.l * 100) + \"%\"\r\n                    ].concat(args);\r\n            }\r\n            if (colorFunction) {\r\n                // Values are capped between `0` and `255`, rounded and zero-padded.\r\n                return colorFunction + \"(\" + args.join(\",\" + (compress ? '' : ' ')) + \")\";\r\n            }\r\n            color = this.toRGB();\r\n            if (compress) {\r\n                var splitcolor = color.split('');\r\n                // Convert color to short format\r\n                if (splitcolor[1] === splitcolor[2] && splitcolor[3] === splitcolor[4] && splitcolor[5] === splitcolor[6]) {\r\n                    color = \"#\" + splitcolor[1] + splitcolor[3] + splitcolor[5];\r\n                }\r\n            }\r\n            return color;\r\n        },\r\n        //\r\n        // Operations have to be done per-channel, if not,\r\n        // channels will spill onto each other. Once we have\r\n        // our result, in the form of an integer triplet,\r\n        // we create a new Color node to hold the result.\r\n        //\r\n        operate: function (context, op, other) {\r\n            var rgb = new Array(3);\r\n            var alpha = this.alpha * (1 - other.alpha) + other.alpha;\r\n            for (var c = 0; c < 3; c++) {\r\n                rgb[c] = this._operate(context, op, this.rgb[c], other.rgb[c]);\r\n            }\r\n            return new Color(rgb, alpha);\r\n        },\r\n        toRGB: function () {\r\n            return toHex(this.rgb);\r\n        },\r\n        toHSL: function () {\r\n            var r = this.rgb[0] / 255, g = this.rgb[1] / 255, b = this.rgb[2] / 255, a = this.alpha;\r\n            var max = Math.max(r, g, b), min = Math.min(r, g, b);\r\n            var h;\r\n            var s;\r\n            var l = (max + min) / 2;\r\n            var d = max - min;\r\n            if (max === min) {\r\n                h = s = 0;\r\n            }\r\n            else {\r\n                s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n                switch (max) {\r\n                    case r:\r\n                        h = (g - b) / d + (g < b ? 6 : 0);\r\n                        break;\r\n                    case g:\r\n                        h = (b - r) / d + 2;\r\n                        break;\r\n                    case b:\r\n                        h = (r - g) / d + 4;\r\n                        break;\r\n                }\r\n                h /= 6;\r\n            }\r\n            return { h: h * 360, s: s, l: l, a: a };\r\n        },\r\n        // Adapted from http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript\r\n        toHSV: function () {\r\n            var r = this.rgb[0] / 255, g = this.rgb[1] / 255, b = this.rgb[2] / 255, a = this.alpha;\r\n            var max = Math.max(r, g, b), min = Math.min(r, g, b);\r\n            var h;\r\n            var s;\r\n            var v = max;\r\n            var d = max - min;\r\n            if (max === 0) {\r\n                s = 0;\r\n            }\r\n            else {\r\n                s = d / max;\r\n            }\r\n            if (max === min) {\r\n                h = 0;\r\n            }\r\n            else {\r\n                switch (max) {\r\n                    case r:\r\n                        h = (g - b) / d + (g < b ? 6 : 0);\r\n                        break;\r\n                    case g:\r\n                        h = (b - r) / d + 2;\r\n                        break;\r\n                    case b:\r\n                        h = (r - g) / d + 4;\r\n                        break;\r\n                }\r\n                h /= 6;\r\n            }\r\n            return { h: h * 360, s: s, v: v, a: a };\r\n        },\r\n        toARGB: function () {\r\n            return toHex([this.alpha * 255].concat(this.rgb));\r\n        },\r\n        compare: function (x) {\r\n            return (x.rgb &&\r\n                x.rgb[0] === this.rgb[0] &&\r\n                x.rgb[1] === this.rgb[1] &&\r\n                x.rgb[2] === this.rgb[2] &&\r\n                x.alpha === this.alpha) ? 0 : undefined;\r\n        }\r\n    });\r\n    Color.fromKeyword = function (keyword) {\r\n        var c;\r\n        var key = keyword.toLowerCase();\r\n        if (colors.hasOwnProperty(key)) {\r\n            c = new Color(colors[key].slice(1));\r\n        }\r\n        else if (key === 'transparent') {\r\n            c = new Color([0, 0, 0], 0);\r\n        }\r\n        if (c) {\r\n            c.value = keyword;\r\n            return c;\r\n        }\r\n    };\r\n    function clamp$1(v, max) {\r\n        return Math.min(Math.max(v, 0), max);\r\n    }\r\n    function toHex(v) {\r\n        return \"#\" + v.map(function (c) {\r\n            c = clamp$1(Math.round(c), 255);\r\n            return (c < 16 ? '0' : '') + c.toString(16);\r\n        }).join('');\r\n    }\n\n    var Paren = function (node) {\r\n        this.value = node;\r\n    };\r\n    Paren.prototype = Object.assign(new Node(), {\r\n        type: 'Paren',\r\n        genCSS: function (context, output) {\r\n            output.add('(');\r\n            this.value.genCSS(context, output);\r\n            output.add(')');\r\n        },\r\n        eval: function (context) {\r\n            return new Paren(this.value.eval(context));\r\n        }\r\n    });\n\n    var _noSpaceCombinators = {\r\n        '': true,\r\n        ' ': true,\r\n        '|': true\r\n    };\r\n    var Combinator = function (value) {\r\n        if (value === ' ') {\r\n            this.value = ' ';\r\n            this.emptyOrWhitespace = true;\r\n        }\r\n        else {\r\n            this.value = value ? value.trim() : '';\r\n            this.emptyOrWhitespace = this.value === '';\r\n        }\r\n    };\r\n    Combinator.prototype = Object.assign(new Node(), {\r\n        type: 'Combinator',\r\n        genCSS: function (context, output) {\r\n            var spaceOrEmpty = (context.compress || _noSpaceCombinators[this.value]) ? '' : ' ';\r\n            output.add(spaceOrEmpty + this.value + spaceOrEmpty);\r\n        }\r\n    });\n\n    var Element = function (combinator, value, isVariable, index, currentFileInfo, visibilityInfo) {\r\n        this.combinator = combinator instanceof Combinator ?\r\n            combinator : new Combinator(combinator);\r\n        if (typeof value === 'string') {\r\n            this.value = value.trim();\r\n        }\r\n        else if (value) {\r\n            this.value = value;\r\n        }\r\n        else {\r\n            this.value = '';\r\n        }\r\n        this.isVariable = isVariable;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.copyVisibilityInfo(visibilityInfo);\r\n        this.setParent(this.combinator, this);\r\n    };\r\n    Element.prototype = Object.assign(new Node(), {\r\n        type: 'Element',\r\n        accept: function (visitor) {\r\n            var value = this.value;\r\n            this.combinator = visitor.visit(this.combinator);\r\n            if (typeof value === 'object') {\r\n                this.value = visitor.visit(value);\r\n            }\r\n        },\r\n        eval: function (context) {\r\n            return new Element(this.combinator, this.value.eval ? this.value.eval(context) : this.value, this.isVariable, this.getIndex(), this.fileInfo(), this.visibilityInfo());\r\n        },\r\n        clone: function () {\r\n            return new Element(this.combinator, this.value, this.isVariable, this.getIndex(), this.fileInfo(), this.visibilityInfo());\r\n        },\r\n        genCSS: function (context, output) {\r\n            output.add(this.toCSS(context), this.fileInfo(), this.getIndex());\r\n        },\r\n        toCSS: function (context) {\r\n            context = context || {};\r\n            var value = this.value;\r\n            var firstSelector = context.firstSelector;\r\n            if (value instanceof Paren) {\r\n                // selector in parens should not be affected by outer selector\r\n                // flags (breaks only interpolated selectors - see #1973)\r\n                context.firstSelector = true;\r\n            }\r\n            value = value.toCSS ? value.toCSS(context) : value;\r\n            context.firstSelector = firstSelector;\r\n            if (value === '' && this.combinator.value.charAt(0) === '&') {\r\n                return '';\r\n            }\r\n            else {\r\n                return this.combinator.toCSS(context) + value;\r\n            }\r\n        }\r\n    });\n\n    var Math$1 = {\r\n        ALWAYS: 0,\r\n        PARENS_DIVISION: 1,\r\n        PARENS: 2\r\n        // removed - STRICT_LEGACY: 3\r\n    };\r\n    var RewriteUrls = {\r\n        OFF: 0,\r\n        LOCAL: 1,\r\n        ALL: 2\r\n    };\n\n    /**\r\n     * Returns the object type of the given payload\r\n     *\r\n     * @param {*} payload\r\n     * @returns {string}\r\n     */\r\n    function getType(payload) {\r\n        return Object.prototype.toString.call(payload).slice(8, -1);\r\n    }\r\n    /**\r\n     * Returns whether the payload is a plain JavaScript object (excluding special classes or objects with other prototypes)\r\n     *\r\n     * @param {*} payload\r\n     * @returns {payload is Record<string, any>}\r\n     */\r\n    function isPlainObject(payload) {\r\n        if (getType(payload) !== 'Object')\r\n            return false;\r\n        return payload.constructor === Object && Object.getPrototypeOf(payload) === Object.prototype;\r\n    }\r\n    /**\r\n     * Returns whether the payload is an array\r\n     *\r\n     * @param {any} payload\r\n     * @returns {payload is any[]}\r\n     */\r\n    function isArray(payload) {\r\n        return getType(payload) === 'Array';\r\n    }\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n\r\n    function __spreadArrays() {\r\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n                r[k] = a[j];\r\n        return r;\r\n    }\n\n    function assignProp(carry, key, newVal, originalObject, includeNonenumerable) {\r\n        var propType = {}.propertyIsEnumerable.call(originalObject, key)\r\n            ? 'enumerable'\r\n            : 'nonenumerable';\r\n        if (propType === 'enumerable')\r\n            carry[key] = newVal;\r\n        if (includeNonenumerable && propType === 'nonenumerable') {\r\n            Object.defineProperty(carry, key, {\r\n                value: newVal,\r\n                enumerable: false,\r\n                writable: true,\r\n                configurable: true,\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Copy (clone) an object and all its props recursively to get rid of any prop referenced of the original object. Arrays are also cloned, however objects inside arrays are still linked.\r\n     *\r\n     * @export\r\n     * @template T\r\n     * @param {T} target Target can be anything\r\n     * @param {Options} [options={}] Options can be `props` or `nonenumerable`\r\n     * @returns {T} the target with replaced values\r\n     * @export\r\n     */\r\n    function copy(target, options) {\r\n        if (options === void 0) { options = {}; }\r\n        if (isArray(target))\r\n            return target.map(function (i) { return copy(i, options); });\r\n        if (!isPlainObject(target))\r\n            return target;\r\n        var props = Object.getOwnPropertyNames(target);\r\n        var symbols = Object.getOwnPropertySymbols(target);\r\n        return __spreadArrays(props, symbols).reduce(function (carry, key) {\r\n            if (isArray(options.props) && !options.props.includes(key)) {\r\n                return carry;\r\n            }\r\n            var val = target[key];\r\n            var newVal = copy(val, options);\r\n            assignProp(carry, key, newVal, target, options.nonenumerable);\r\n            return carry;\r\n        }, {});\r\n    }\n\n    /* jshint proto: true */\r\n    function getLocation(index, inputStream) {\r\n        var n = index + 1;\r\n        var line = null;\r\n        var column = -1;\r\n        while (--n >= 0 && inputStream.charAt(n) !== '\\n') {\r\n            column++;\r\n        }\r\n        if (typeof index === 'number') {\r\n            line = (inputStream.slice(0, index).match(/\\n/g) || '').length;\r\n        }\r\n        return {\r\n            line: line,\r\n            column: column\r\n        };\r\n    }\r\n    function copyArray(arr) {\r\n        var i;\r\n        var length = arr.length;\r\n        var copy = new Array(length);\r\n        for (i = 0; i < length; i++) {\r\n            copy[i] = arr[i];\r\n        }\r\n        return copy;\r\n    }\r\n    function clone(obj) {\r\n        var cloned = {};\r\n        for (var prop in obj) {\r\n            if (obj.hasOwnProperty(prop)) {\r\n                cloned[prop] = obj[prop];\r\n            }\r\n        }\r\n        return cloned;\r\n    }\r\n    function defaults(obj1, obj2) {\r\n        var newObj = obj2 || {};\r\n        if (!obj2._defaults) {\r\n            newObj = {};\r\n            var defaults_1 = copy(obj1);\r\n            newObj._defaults = defaults_1;\r\n            var cloned = obj2 ? copy(obj2) : {};\r\n            Object.assign(newObj, defaults_1, cloned);\r\n        }\r\n        return newObj;\r\n    }\r\n    function copyOptions(obj1, obj2) {\r\n        if (obj2 && obj2._defaults) {\r\n            return obj2;\r\n        }\r\n        var opts = defaults(obj1, obj2);\r\n        if (opts.strictMath) {\r\n            opts.math = Math$1.PARENS;\r\n        }\r\n        // Back compat with changed relativeUrls option\r\n        if (opts.relativeUrls) {\r\n            opts.rewriteUrls = RewriteUrls.ALL;\r\n        }\r\n        if (typeof opts.math === 'string') {\r\n            switch (opts.math.toLowerCase()) {\r\n                case 'always':\r\n                    opts.math = Math$1.ALWAYS;\r\n                    break;\r\n                case 'parens-division':\r\n                    opts.math = Math$1.PARENS_DIVISION;\r\n                    break;\r\n                case 'strict':\r\n                case 'parens':\r\n                    opts.math = Math$1.PARENS;\r\n                    break;\r\n                default:\r\n                    opts.math = Math$1.PARENS;\r\n            }\r\n        }\r\n        if (typeof opts.rewriteUrls === 'string') {\r\n            switch (opts.rewriteUrls.toLowerCase()) {\r\n                case 'off':\r\n                    opts.rewriteUrls = RewriteUrls.OFF;\r\n                    break;\r\n                case 'local':\r\n                    opts.rewriteUrls = RewriteUrls.LOCAL;\r\n                    break;\r\n                case 'all':\r\n                    opts.rewriteUrls = RewriteUrls.ALL;\r\n                    break;\r\n            }\r\n        }\r\n        return opts;\r\n    }\r\n    function merge(obj1, obj2) {\r\n        for (var prop in obj2) {\r\n            if (obj2.hasOwnProperty(prop)) {\r\n                obj1[prop] = obj2[prop];\r\n            }\r\n        }\r\n        return obj1;\r\n    }\r\n    function flattenArray(arr, result) {\r\n        if (result === void 0) { result = []; }\r\n        for (var i = 0, length_1 = arr.length; i < length_1; i++) {\r\n            var value = arr[i];\r\n            if (Array.isArray(value)) {\r\n                flattenArray(value, result);\r\n            }\r\n            else {\r\n                if (value !== undefined) {\r\n                    result.push(value);\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\n\n    var utils = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        getLocation: getLocation,\n        copyArray: copyArray,\n        clone: clone,\n        defaults: defaults,\n        copyOptions: copyOptions,\n        merge: merge,\n        flattenArray: flattenArray\n    });\n\n    var anonymousFunc = /(<anonymous>|Function):(\\d+):(\\d+)/;\r\n    /**\r\n     * This is a centralized class of any error that could be thrown internally (mostly by the parser).\r\n     * Besides standard .message it keeps some additional data like a path to the file where the error\r\n     * occurred along with line and column numbers.\r\n     *\r\n     * @class\r\n     * @extends Error\r\n     * @type {module.LessError}\r\n     *\r\n     * @prop {string} type\r\n     * @prop {string} filename\r\n     * @prop {number} index\r\n     * @prop {number} line\r\n     * @prop {number} column\r\n     * @prop {number} callLine\r\n     * @prop {number} callExtract\r\n     * @prop {string[]} extract\r\n     *\r\n     * @param {Object} e              - An error object to wrap around or just a descriptive object\r\n     * @param {Object} fileContentMap - An object with file contents in 'contents' property (like importManager) @todo - move to fileManager?\r\n     * @param {string} [currentFilename]\r\n     */\r\n    var LessError = function (e, fileContentMap, currentFilename) {\r\n        Error.call(this);\r\n        var filename = e.filename || currentFilename;\r\n        this.message = e.message;\r\n        this.stack = e.stack;\r\n        if (fileContentMap && filename) {\r\n            var input = fileContentMap.contents[filename];\r\n            var loc = getLocation(e.index, input);\r\n            var line = loc.line;\r\n            var col = loc.column;\r\n            var callLine = e.call && getLocation(e.call, input).line;\r\n            var lines = input ? input.split('\\n') : '';\r\n            this.type = e.type || 'Syntax';\r\n            this.filename = filename;\r\n            this.index = e.index;\r\n            this.line = typeof line === 'number' ? line + 1 : null;\r\n            this.column = col;\r\n            if (!this.line && this.stack) {\r\n                var found = this.stack.match(anonymousFunc);\r\n                /**\r\n                 * We have to figure out how this environment stringifies anonymous functions\r\n                 * so we can correctly map plugin errors.\r\n                 *\r\n                 * Note, in Node 8, the output of anonymous funcs varied based on parameters\r\n                 * being present or not, so we inject dummy params.\r\n                 */\r\n                var func = new Function('a', 'throw new Error()');\r\n                var lineAdjust = 0;\r\n                try {\r\n                    func();\r\n                }\r\n                catch (e) {\r\n                    var match = e.stack.match(anonymousFunc);\r\n                    var line = parseInt(match[2]);\r\n                    lineAdjust = 1 - line;\r\n                }\r\n                if (found) {\r\n                    if (found[2]) {\r\n                        this.line = parseInt(found[2]) + lineAdjust;\r\n                    }\r\n                    if (found[3]) {\r\n                        this.column = parseInt(found[3]);\r\n                    }\r\n                }\r\n            }\r\n            this.callLine = callLine + 1;\r\n            this.callExtract = lines[callLine];\r\n            this.extract = [\r\n                lines[this.line - 2],\r\n                lines[this.line - 1],\r\n                lines[this.line]\r\n            ];\r\n        }\r\n    };\r\n    if (typeof Object.create === 'undefined') {\r\n        var F = function () { };\r\n        F.prototype = Error.prototype;\r\n        LessError.prototype = new F();\r\n    }\r\n    else {\r\n        LessError.prototype = Object.create(Error.prototype);\r\n    }\r\n    LessError.prototype.constructor = LessError;\r\n    /**\r\n     * An overridden version of the default Object.prototype.toString\r\n     * which uses additional information to create a helpful message.\r\n     *\r\n     * @param {Object} options\r\n     * @returns {string}\r\n     */\r\n    LessError.prototype.toString = function (options) {\r\n        options = options || {};\r\n        var message = '';\r\n        var extract = this.extract || [];\r\n        var error = [];\r\n        var stylize = function (str) { return str; };\r\n        if (options.stylize) {\r\n            var type = typeof options.stylize;\r\n            if (type !== 'function') {\r\n                throw Error(\"options.stylize should be a function, got a \" + type + \"!\");\r\n            }\r\n            stylize = options.stylize;\r\n        }\r\n        if (this.line !== null) {\r\n            if (typeof extract[0] === 'string') {\r\n                error.push(stylize(this.line - 1 + \" \" + extract[0], 'grey'));\r\n            }\r\n            if (typeof extract[1] === 'string') {\r\n                var errorTxt = this.line + \" \";\r\n                if (extract[1]) {\r\n                    errorTxt += extract[1].slice(0, this.column) +\r\n                        stylize(stylize(stylize(extract[1].substr(this.column, 1), 'bold') +\r\n                            extract[1].slice(this.column + 1), 'red'), 'inverse');\r\n                }\r\n                error.push(errorTxt);\r\n            }\r\n            if (typeof extract[2] === 'string') {\r\n                error.push(stylize(this.line + 1 + \" \" + extract[2], 'grey'));\r\n            }\r\n            error = error.join('\\n') + stylize('', 'reset') + \"\\n\";\r\n        }\r\n        message += stylize(this.type + \"Error: \" + this.message, 'red');\r\n        if (this.filename) {\r\n            message += stylize(' in ', 'red') + this.filename;\r\n        }\r\n        if (this.line) {\r\n            message += stylize(\" on line \" + this.line + \", column \" + (this.column + 1) + \":\", 'grey');\r\n        }\r\n        message += \"\\n\" + error;\r\n        if (this.callLine) {\r\n            message += stylize('from ', 'red') + (this.filename || '') + \"/n\";\r\n            message += stylize(this.callLine, 'grey') + \" \" + this.callExtract + \"/n\";\r\n        }\r\n        return message;\r\n    };\n\n    var Selector = function (elements, extendList, condition, index, currentFileInfo, visibilityInfo) {\r\n        this.extendList = extendList;\r\n        this.condition = condition;\r\n        this.evaldCondition = !condition;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.elements = this.getElements(elements);\r\n        this.mixinElements_ = undefined;\r\n        this.copyVisibilityInfo(visibilityInfo);\r\n        this.setParent(this.elements, this);\r\n    };\r\n    Selector.prototype = Object.assign(new Node(), {\r\n        type: 'Selector',\r\n        accept: function (visitor) {\r\n            if (this.elements) {\r\n                this.elements = visitor.visitArray(this.elements);\r\n            }\r\n            if (this.extendList) {\r\n                this.extendList = visitor.visitArray(this.extendList);\r\n            }\r\n            if (this.condition) {\r\n                this.condition = visitor.visit(this.condition);\r\n            }\r\n        },\r\n        createDerived: function (elements, extendList, evaldCondition) {\r\n            elements = this.getElements(elements);\r\n            var newSelector = new Selector(elements, extendList || this.extendList, null, this.getIndex(), this.fileInfo(), this.visibilityInfo());\r\n            newSelector.evaldCondition = (evaldCondition != null) ? evaldCondition : this.evaldCondition;\r\n            newSelector.mediaEmpty = this.mediaEmpty;\r\n            return newSelector;\r\n        },\r\n        getElements: function (els) {\r\n            if (!els) {\r\n                return [new Element('', '&', false, this._index, this._fileInfo)];\r\n            }\r\n            if (typeof els === 'string') {\r\n                this.parse.parseNode(els, ['selector'], this._index, this._fileInfo, function (err, result) {\r\n                    if (err) {\r\n                        throw new LessError({\r\n                            index: err.index,\r\n                            message: err.message\r\n                        }, this.parse.imports, this._fileInfo.filename);\r\n                    }\r\n                    els = result[0].elements;\r\n                });\r\n            }\r\n            return els;\r\n        },\r\n        createEmptySelectors: function () {\r\n            var el = new Element('', '&', false, this._index, this._fileInfo), sels = [new Selector([el], null, null, this._index, this._fileInfo)];\r\n            sels[0].mediaEmpty = true;\r\n            return sels;\r\n        },\r\n        match: function (other) {\r\n            var elements = this.elements;\r\n            var len = elements.length;\r\n            var olen;\r\n            var i;\r\n            other = other.mixinElements();\r\n            olen = other.length;\r\n            if (olen === 0 || len < olen) {\r\n                return 0;\r\n            }\r\n            else {\r\n                for (i = 0; i < olen; i++) {\r\n                    if (elements[i].value !== other[i]) {\r\n                        return 0;\r\n                    }\r\n                }\r\n            }\r\n            return olen; // return number of matched elements\r\n        },\r\n        mixinElements: function () {\r\n            if (this.mixinElements_) {\r\n                return this.mixinElements_;\r\n            }\r\n            var elements = this.elements.map(function (v) {\r\n                return v.combinator.value + (v.value.value || v.value);\r\n            }).join('').match(/[,&#\\*\\.\\w-]([\\w-]|(\\\\.))*/g);\r\n            if (elements) {\r\n                if (elements[0] === '&') {\r\n                    elements.shift();\r\n                }\r\n            }\r\n            else {\r\n                elements = [];\r\n            }\r\n            return (this.mixinElements_ = elements);\r\n        },\r\n        isJustParentSelector: function () {\r\n            return !this.mediaEmpty &&\r\n                this.elements.length === 1 &&\r\n                this.elements[0].value === '&' &&\r\n                (this.elements[0].combinator.value === ' ' || this.elements[0].combinator.value === '');\r\n        },\r\n        eval: function (context) {\r\n            var evaldCondition = this.condition && this.condition.eval(context);\r\n            var elements = this.elements;\r\n            var extendList = this.extendList;\r\n            elements = elements && elements.map(function (e) { return e.eval(context); });\r\n            extendList = extendList && extendList.map(function (extend) { return extend.eval(context); });\r\n            return this.createDerived(elements, extendList, evaldCondition);\r\n        },\r\n        genCSS: function (context, output) {\r\n            var i, element;\r\n            if ((!context || !context.firstSelector) && this.elements[0].combinator.value === '') {\r\n                output.add(' ', this.fileInfo(), this.getIndex());\r\n            }\r\n            for (i = 0; i < this.elements.length; i++) {\r\n                element = this.elements[i];\r\n                element.genCSS(context, output);\r\n            }\r\n        },\r\n        getIsOutput: function () {\r\n            return this.evaldCondition;\r\n        }\r\n    });\n\n    var Value = function (value) {\r\n        if (!value) {\r\n            throw new Error('Value requires an array argument');\r\n        }\r\n        if (!Array.isArray(value)) {\r\n            this.value = [value];\r\n        }\r\n        else {\r\n            this.value = value;\r\n        }\r\n    };\r\n    Value.prototype = Object.assign(new Node(), {\r\n        type: 'Value',\r\n        accept: function (visitor) {\r\n            if (this.value) {\r\n                this.value = visitor.visitArray(this.value);\r\n            }\r\n        },\r\n        eval: function (context) {\r\n            if (this.value.length === 1) {\r\n                return this.value[0].eval(context);\r\n            }\r\n            else {\r\n                return new Value(this.value.map(function (v) {\r\n                    return v.eval(context);\r\n                }));\r\n            }\r\n        },\r\n        genCSS: function (context, output) {\r\n            var i;\r\n            for (i = 0; i < this.value.length; i++) {\r\n                this.value[i].genCSS(context, output);\r\n                if (i + 1 < this.value.length) {\r\n                    output.add((context && context.compress) ? ',' : ', ');\r\n                }\r\n            }\r\n        }\r\n    });\n\n    var Keyword = function (value) {\r\n        this.value = value;\r\n    };\r\n    Keyword.prototype = Object.assign(new Node(), {\r\n        type: 'Keyword',\r\n        genCSS: function (context, output) {\r\n            if (this.value === '%') {\r\n                throw { type: 'Syntax', message: 'Invalid % without number' };\r\n            }\r\n            output.add(this.value);\r\n        }\r\n    });\r\n    Keyword.True = new Keyword('true');\r\n    Keyword.False = new Keyword('false');\n\n    var Anonymous = function (value, index, currentFileInfo, mapLines, rulesetLike, visibilityInfo) {\r\n        this.value = value;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.mapLines = mapLines;\r\n        this.rulesetLike = (typeof rulesetLike === 'undefined') ? false : rulesetLike;\r\n        this.allowRoot = true;\r\n        this.copyVisibilityInfo(visibilityInfo);\r\n    };\r\n    Anonymous.prototype = Object.assign(new Node(), {\r\n        type: 'Anonymous',\r\n        eval: function () {\r\n            return new Anonymous(this.value, this._index, this._fileInfo, this.mapLines, this.rulesetLike, this.visibilityInfo());\r\n        },\r\n        compare: function (other) {\r\n            return other.toCSS && this.toCSS() === other.toCSS() ? 0 : undefined;\r\n        },\r\n        isRulesetLike: function () {\r\n            return this.rulesetLike;\r\n        },\r\n        genCSS: function (context, output) {\r\n            this.nodeVisible = Boolean(this.value);\r\n            if (this.nodeVisible) {\r\n                output.add(this.value, this._fileInfo, this._index, this.mapLines);\r\n            }\r\n        }\r\n    });\n\n    var MATH$1 = Math$1;\r\n    function evalName(context, name) {\r\n        var value = '';\r\n        var i;\r\n        var n = name.length;\r\n        var output = { add: function (s) { value += s; } };\r\n        for (i = 0; i < n; i++) {\r\n            name[i].eval(context).genCSS(context, output);\r\n        }\r\n        return value;\r\n    }\r\n    var Declaration = function (name, value, important, merge, index, currentFileInfo, inline, variable) {\r\n        this.name = name;\r\n        this.value = (value instanceof Node) ? value : new Value([value ? new Anonymous(value) : null]);\r\n        this.important = important ? \" \" + important.trim() : '';\r\n        this.merge = merge;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.inline = inline || false;\r\n        this.variable = (variable !== undefined) ? variable\r\n            : (name.charAt && (name.charAt(0) === '@'));\r\n        this.allowRoot = true;\r\n        this.setParent(this.value, this);\r\n    };\r\n    Declaration.prototype = Object.assign(new Node(), {\r\n        type: 'Declaration',\r\n        genCSS: function (context, output) {\r\n            output.add(this.name + (context.compress ? ':' : ': '), this.fileInfo(), this.getIndex());\r\n            try {\r\n                this.value.genCSS(context, output);\r\n            }\r\n            catch (e) {\r\n                e.index = this._index;\r\n                e.filename = this._fileInfo.filename;\r\n                throw e;\r\n            }\r\n            output.add(this.important + ((this.inline || (context.lastRule && context.compress)) ? '' : ';'), this._fileInfo, this._index);\r\n        },\r\n        eval: function (context) {\r\n            var mathBypass = false, prevMath, name = this.name, evaldValue, variable = this.variable;\r\n            if (typeof name !== 'string') {\r\n                // expand 'primitive' name directly to get\r\n                // things faster (~10% for benchmark.less):\r\n                name = (name.length === 1) && (name[0] instanceof Keyword) ?\r\n                    name[0].value : evalName(context, name);\r\n                variable = false; // never treat expanded interpolation as new variable name\r\n            }\r\n            // @todo remove when parens-division is default\r\n            if (name === 'font' && context.math === MATH$1.ALWAYS) {\r\n                mathBypass = true;\r\n                prevMath = context.math;\r\n                context.math = MATH$1.PARENS_DIVISION;\r\n            }\r\n            try {\r\n                context.importantScope.push({});\r\n                evaldValue = this.value.eval(context);\r\n                if (!this.variable && evaldValue.type === 'DetachedRuleset') {\r\n                    throw { message: 'Rulesets cannot be evaluated on a property.',\r\n                        index: this.getIndex(), filename: this.fileInfo().filename };\r\n                }\r\n                var important = this.important;\r\n                var importantResult = context.importantScope.pop();\r\n                if (!important && importantResult.important) {\r\n                    important = importantResult.important;\r\n                }\r\n                return new Declaration(name, evaldValue, important, this.merge, this.getIndex(), this.fileInfo(), this.inline, variable);\r\n            }\r\n            catch (e) {\r\n                if (typeof e.index !== 'number') {\r\n                    e.index = this.getIndex();\r\n                    e.filename = this.fileInfo().filename;\r\n                }\r\n                throw e;\r\n            }\r\n            finally {\r\n                if (mathBypass) {\r\n                    context.math = prevMath;\r\n                }\r\n            }\r\n        },\r\n        makeImportant: function () {\r\n            return new Declaration(this.name, this.value, '!important', this.merge, this.getIndex(), this.fileInfo(), this.inline);\r\n        }\r\n    });\n\n    function asComment(ctx) {\r\n        return \"/* line \" + ctx.debugInfo.lineNumber + \", \" + ctx.debugInfo.fileName + \" */\\n\";\r\n    }\r\n    function asMediaQuery(ctx) {\r\n        var filenameWithProtocol = ctx.debugInfo.fileName;\r\n        if (!/^[a-z]+:\\/\\//i.test(filenameWithProtocol)) {\r\n            filenameWithProtocol = \"file://\" + filenameWithProtocol;\r\n        }\r\n        return \"@media -sass-debug-info{filename{font-family:\" + filenameWithProtocol.replace(/([.:\\/\\\\])/g, function (a) {\r\n            if (a == '\\\\') {\r\n                a = '\\/';\r\n            }\r\n            return \"\\\\\" + a;\r\n        }) + \"}line{font-family:\\\\00003\" + ctx.debugInfo.lineNumber + \"}}\\n\";\r\n    }\r\n    function debugInfo(context, ctx, lineSeparator) {\r\n        var result = '';\r\n        if (context.dumpLineNumbers && !context.compress) {\r\n            switch (context.dumpLineNumbers) {\r\n                case 'comments':\r\n                    result = asComment(ctx);\r\n                    break;\r\n                case 'mediaquery':\r\n                    result = asMediaQuery(ctx);\r\n                    break;\r\n                case 'all':\r\n                    result = asComment(ctx) + (lineSeparator || '') + asMediaQuery(ctx);\r\n                    break;\r\n            }\r\n        }\r\n        return result;\r\n    }\n\n    var Comment = function (value, isLineComment, index, currentFileInfo) {\r\n        this.value = value;\r\n        this.isLineComment = isLineComment;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.allowRoot = true;\r\n    };\r\n    Comment.prototype = Object.assign(new Node(), {\r\n        type: 'Comment',\r\n        genCSS: function (context, output) {\r\n            if (this.debugInfo) {\r\n                output.add(debugInfo(context, this), this.fileInfo(), this.getIndex());\r\n            }\r\n            output.add(this.value);\r\n        },\r\n        isSilent: function (context) {\r\n            var isCompressed = context.compress && this.value[2] !== '!';\r\n            return this.isLineComment || isCompressed;\r\n        }\r\n    });\n\n    var contexts = {};\r\n    var copyFromOriginal = function copyFromOriginal(original, destination, propertiesToCopy) {\r\n        if (!original) {\r\n            return;\r\n        }\r\n        for (var i = 0; i < propertiesToCopy.length; i++) {\r\n            if (original.hasOwnProperty(propertiesToCopy[i])) {\r\n                destination[propertiesToCopy[i]] = original[propertiesToCopy[i]];\r\n            }\r\n        }\r\n    };\r\n    /*\r\n     parse is used whilst parsing\r\n     */\r\n    var parseCopyProperties = [\r\n        // options\r\n        'paths',\r\n        'rewriteUrls',\r\n        'rootpath',\r\n        'strictImports',\r\n        'insecure',\r\n        'dumpLineNumbers',\r\n        'compress',\r\n        'syncImport',\r\n        'chunkInput',\r\n        'mime',\r\n        'useFileCache',\r\n        // context\r\n        'processImports',\r\n        // Used by the import manager to stop multiple import visitors being created.\r\n        'pluginManager' // Used as the plugin manager for the session\r\n    ];\r\n    contexts.Parse = function (options) {\r\n        copyFromOriginal(options, this, parseCopyProperties);\r\n        if (typeof this.paths === 'string') {\r\n            this.paths = [this.paths];\r\n        }\r\n    };\r\n    var evalCopyProperties = [\r\n        'paths',\r\n        'compress',\r\n        'math',\r\n        'strictUnits',\r\n        'sourceMap',\r\n        'importMultiple',\r\n        'urlArgs',\r\n        'javascriptEnabled',\r\n        'pluginManager',\r\n        'importantScope',\r\n        'rewriteUrls' // option - whether to adjust URL's to be relative\r\n    ];\r\n    contexts.Eval = function (options, frames) {\r\n        copyFromOriginal(options, this, evalCopyProperties);\r\n        if (typeof this.paths === 'string') {\r\n            this.paths = [this.paths];\r\n        }\r\n        this.frames = frames || [];\r\n        this.importantScope = this.importantScope || [];\r\n    };\r\n    contexts.Eval.prototype.enterCalc = function () {\r\n        if (!this.calcStack) {\r\n            this.calcStack = [];\r\n        }\r\n        this.calcStack.push(true);\r\n        this.inCalc = true;\r\n    };\r\n    contexts.Eval.prototype.exitCalc = function () {\r\n        this.calcStack.pop();\r\n        if (!this.calcStack.length) {\r\n            this.inCalc = false;\r\n        }\r\n    };\r\n    contexts.Eval.prototype.inParenthesis = function () {\r\n        if (!this.parensStack) {\r\n            this.parensStack = [];\r\n        }\r\n        this.parensStack.push(true);\r\n    };\r\n    contexts.Eval.prototype.outOfParenthesis = function () {\r\n        this.parensStack.pop();\r\n    };\r\n    contexts.Eval.prototype.inCalc = false;\r\n    contexts.Eval.prototype.mathOn = true;\r\n    contexts.Eval.prototype.isMathOn = function (op) {\r\n        if (!this.mathOn) {\r\n            return false;\r\n        }\r\n        if (op === '/' && this.math !== Math$1.ALWAYS && (!this.parensStack || !this.parensStack.length)) {\r\n            return false;\r\n        }\r\n        if (this.math > Math$1.PARENS_DIVISION) {\r\n            return this.parensStack && this.parensStack.length;\r\n        }\r\n        return true;\r\n    };\r\n    contexts.Eval.prototype.pathRequiresRewrite = function (path) {\r\n        var isRelative = this.rewriteUrls === RewriteUrls.LOCAL ? isPathLocalRelative : isPathRelative;\r\n        return isRelative(path);\r\n    };\r\n    contexts.Eval.prototype.rewritePath = function (path, rootpath) {\r\n        var newPath;\r\n        rootpath = rootpath || '';\r\n        newPath = this.normalizePath(rootpath + path);\r\n        // If a path was explicit relative and the rootpath was not an absolute path\r\n        // we must ensure that the new path is also explicit relative.\r\n        if (isPathLocalRelative(path) &&\r\n            isPathRelative(rootpath) &&\r\n            isPathLocalRelative(newPath) === false) {\r\n            newPath = \"./\" + newPath;\r\n        }\r\n        return newPath;\r\n    };\r\n    contexts.Eval.prototype.normalizePath = function (path) {\r\n        var segments = path.split('/').reverse();\r\n        var segment;\r\n        path = [];\r\n        while (segments.length !== 0) {\r\n            segment = segments.pop();\r\n            switch (segment) {\r\n                case '.':\r\n                    break;\r\n                case '..':\r\n                    if ((path.length === 0) || (path[path.length - 1] === '..')) {\r\n                        path.push(segment);\r\n                    }\r\n                    else {\r\n                        path.pop();\r\n                    }\r\n                    break;\r\n                default:\r\n                    path.push(segment);\r\n                    break;\r\n            }\r\n        }\r\n        return path.join('/');\r\n    };\r\n    function isPathRelative(path) {\r\n        return !/^(?:[a-z-]+:|\\/|#)/i.test(path);\r\n    }\r\n    function isPathLocalRelative(path) {\r\n        return path.charAt(0) === '.';\r\n    }\r\n    // todo - do the same for the toCSS ?\n\n    function makeRegistry(base) {\r\n        return {\r\n            _data: {},\r\n            add: function (name, func) {\r\n                // precautionary case conversion, as later querying of\r\n                // the registry by function-caller uses lower case as well.\r\n                name = name.toLowerCase();\r\n                if (this._data.hasOwnProperty(name)) ;\r\n                this._data[name] = func;\r\n            },\r\n            addMultiple: function (functions) {\r\n                var _this = this;\r\n                Object.keys(functions).forEach(function (name) {\r\n                    _this.add(name, functions[name]);\r\n                });\r\n            },\r\n            get: function (name) {\r\n                return this._data[name] || (base && base.get(name));\r\n            },\r\n            getLocalFunctions: function () {\r\n                return this._data;\r\n            },\r\n            inherit: function () {\r\n                return makeRegistry(this);\r\n            },\r\n            create: function (base) {\r\n                return makeRegistry(base);\r\n            }\r\n        };\r\n    }\r\n    var functionRegistry = makeRegistry(null);\n\n    var defaultFunc = {\r\n        eval: function () {\r\n            var v = this.value_;\r\n            var e = this.error_;\r\n            if (e) {\r\n                throw e;\r\n            }\r\n            if (v != null) {\r\n                return v ? Keyword.True : Keyword.False;\r\n            }\r\n        },\r\n        value: function (v) {\r\n            this.value_ = v;\r\n        },\r\n        error: function (e) {\r\n            this.error_ = e;\r\n        },\r\n        reset: function () {\r\n            this.value_ = this.error_ = null;\r\n        }\r\n    };\n\n    var Ruleset = function (selectors, rules, strictImports, visibilityInfo) {\r\n        this.selectors = selectors;\r\n        this.rules = rules;\r\n        this._lookups = {};\r\n        this._variables = null;\r\n        this._properties = null;\r\n        this.strictImports = strictImports;\r\n        this.copyVisibilityInfo(visibilityInfo);\r\n        this.allowRoot = true;\r\n        this.setParent(this.selectors, this);\r\n        this.setParent(this.rules, this);\r\n    };\r\n    Ruleset.prototype = Object.assign(new Node(), {\r\n        type: 'Ruleset',\r\n        isRuleset: true,\r\n        isRulesetLike: function () { return true; },\r\n        accept: function (visitor) {\r\n            if (this.paths) {\r\n                this.paths = visitor.visitArray(this.paths, true);\r\n            }\r\n            else if (this.selectors) {\r\n                this.selectors = visitor.visitArray(this.selectors);\r\n            }\r\n            if (this.rules && this.rules.length) {\r\n                this.rules = visitor.visitArray(this.rules);\r\n            }\r\n        },\r\n        eval: function (context) {\r\n            var selectors;\r\n            var selCnt;\r\n            var selector;\r\n            var i;\r\n            var hasVariable;\r\n            var hasOnePassingSelector = false;\r\n            if (this.selectors && (selCnt = this.selectors.length)) {\r\n                selectors = new Array(selCnt);\r\n                defaultFunc.error({\r\n                    type: 'Syntax',\r\n                    message: 'it is currently only allowed in parametric mixin guards,'\r\n                });\r\n                for (i = 0; i < selCnt; i++) {\r\n                    selector = this.selectors[i].eval(context);\r\n                    for (var j = 0; j < selector.elements.length; j++) {\r\n                        if (selector.elements[j].isVariable) {\r\n                            hasVariable = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                    selectors[i] = selector;\r\n                    if (selector.evaldCondition) {\r\n                        hasOnePassingSelector = true;\r\n                    }\r\n                }\r\n                if (hasVariable) {\r\n                    var toParseSelectors = new Array(selCnt);\r\n                    for (i = 0; i < selCnt; i++) {\r\n                        selector = selectors[i];\r\n                        toParseSelectors[i] = selector.toCSS(context);\r\n                    }\r\n                    this.parse.parseNode(toParseSelectors.join(','), [\"selectors\"], selectors[0].getIndex(), selectors[0].fileInfo(), function (err, result) {\r\n                        if (result) {\r\n                            selectors = flattenArray(result);\r\n                        }\r\n                    });\r\n                }\r\n                defaultFunc.reset();\r\n            }\r\n            else {\r\n                hasOnePassingSelector = true;\r\n            }\r\n            var rules = this.rules ? copyArray(this.rules) : null;\r\n            var ruleset = new Ruleset(selectors, rules, this.strictImports, this.visibilityInfo());\r\n            var rule;\r\n            var subRule;\r\n            ruleset.originalRuleset = this;\r\n            ruleset.root = this.root;\r\n            ruleset.firstRoot = this.firstRoot;\r\n            ruleset.allowImports = this.allowImports;\r\n            if (this.debugInfo) {\r\n                ruleset.debugInfo = this.debugInfo;\r\n            }\r\n            if (!hasOnePassingSelector) {\r\n                rules.length = 0;\r\n            }\r\n            // inherit a function registry from the frames stack when possible;\r\n            // otherwise from the global registry\r\n            ruleset.functionRegistry = (function (frames) {\r\n                var i = 0;\r\n                var n = frames.length;\r\n                var found;\r\n                for (; i !== n; ++i) {\r\n                    found = frames[i].functionRegistry;\r\n                    if (found) {\r\n                        return found;\r\n                    }\r\n                }\r\n                return functionRegistry;\r\n            }(context.frames)).inherit();\r\n            // push the current ruleset to the frames stack\r\n            var ctxFrames = context.frames;\r\n            ctxFrames.unshift(ruleset);\r\n            // currrent selectors\r\n            var ctxSelectors = context.selectors;\r\n            if (!ctxSelectors) {\r\n                context.selectors = ctxSelectors = [];\r\n            }\r\n            ctxSelectors.unshift(this.selectors);\r\n            // Evaluate imports\r\n            if (ruleset.root || ruleset.allowImports || !ruleset.strictImports) {\r\n                ruleset.evalImports(context);\r\n            }\r\n            // Store the frames around mixin definitions,\r\n            // so they can be evaluated like closures when the time comes.\r\n            var rsRules = ruleset.rules;\r\n            for (i = 0; (rule = rsRules[i]); i++) {\r\n                if (rule.evalFirst) {\r\n                    rsRules[i] = rule.eval(context);\r\n                }\r\n            }\r\n            var mediaBlockCount = (context.mediaBlocks && context.mediaBlocks.length) || 0;\r\n            // Evaluate mixin calls.\r\n            for (i = 0; (rule = rsRules[i]); i++) {\r\n                if (rule.type === 'MixinCall') {\r\n                    /* jshint loopfunc:true */\r\n                    rules = rule.eval(context).filter(function (r) {\r\n                        if ((r instanceof Declaration) && r.variable) {\r\n                            // do not pollute the scope if the variable is\r\n                            // already there. consider returning false here\r\n                            // but we need a way to \"return\" variable from mixins\r\n                            return !(ruleset.variable(r.name));\r\n                        }\r\n                        return true;\r\n                    });\r\n                    rsRules.splice.apply(rsRules, [i, 1].concat(rules));\r\n                    i += rules.length - 1;\r\n                    ruleset.resetCache();\r\n                }\r\n                else if (rule.type === 'VariableCall') {\r\n                    /* jshint loopfunc:true */\r\n                    rules = rule.eval(context).rules.filter(function (r) {\r\n                        if ((r instanceof Declaration) && r.variable) {\r\n                            // do not pollute the scope at all\r\n                            return false;\r\n                        }\r\n                        return true;\r\n                    });\r\n                    rsRules.splice.apply(rsRules, [i, 1].concat(rules));\r\n                    i += rules.length - 1;\r\n                    ruleset.resetCache();\r\n                }\r\n            }\r\n            // Evaluate everything else\r\n            for (i = 0; (rule = rsRules[i]); i++) {\r\n                if (!rule.evalFirst) {\r\n                    rsRules[i] = rule = rule.eval ? rule.eval(context) : rule;\r\n                }\r\n            }\r\n            // Evaluate everything else\r\n            for (i = 0; (rule = rsRules[i]); i++) {\r\n                // for rulesets, check if it is a css guard and can be removed\r\n                if (rule instanceof Ruleset && rule.selectors && rule.selectors.length === 1) {\r\n                    // check if it can be folded in (e.g. & where)\r\n                    if (rule.selectors[0] && rule.selectors[0].isJustParentSelector()) {\r\n                        rsRules.splice(i--, 1);\r\n                        for (var j = 0; (subRule = rule.rules[j]); j++) {\r\n                            if (subRule instanceof Node) {\r\n                                subRule.copyVisibilityInfo(rule.visibilityInfo());\r\n                                if (!(subRule instanceof Declaration) || !subRule.variable) {\r\n                                    rsRules.splice(++i, 0, subRule);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // Pop the stack\r\n            ctxFrames.shift();\r\n            ctxSelectors.shift();\r\n            if (context.mediaBlocks) {\r\n                for (i = mediaBlockCount; i < context.mediaBlocks.length; i++) {\r\n                    context.mediaBlocks[i].bubbleSelectors(selectors);\r\n                }\r\n            }\r\n            return ruleset;\r\n        },\r\n        evalImports: function (context) {\r\n            var rules = this.rules;\r\n            var i;\r\n            var importRules;\r\n            if (!rules) {\r\n                return;\r\n            }\r\n            for (i = 0; i < rules.length; i++) {\r\n                if (rules[i].type === 'Import') {\r\n                    importRules = rules[i].eval(context);\r\n                    if (importRules && (importRules.length || importRules.length === 0)) {\r\n                        rules.splice.apply(rules, [i, 1].concat(importRules));\r\n                        i += importRules.length - 1;\r\n                    }\r\n                    else {\r\n                        rules.splice(i, 1, importRules);\r\n                    }\r\n                    this.resetCache();\r\n                }\r\n            }\r\n        },\r\n        makeImportant: function () {\r\n            var result = new Ruleset(this.selectors, this.rules.map(function (r) {\r\n                if (r.makeImportant) {\r\n                    return r.makeImportant();\r\n                }\r\n                else {\r\n                    return r;\r\n                }\r\n            }), this.strictImports, this.visibilityInfo());\r\n            return result;\r\n        },\r\n        matchArgs: function (args) {\r\n            return !args || args.length === 0;\r\n        },\r\n        // lets you call a css selector with a guard\r\n        matchCondition: function (args, context) {\r\n            var lastSelector = this.selectors[this.selectors.length - 1];\r\n            if (!lastSelector.evaldCondition) {\r\n                return false;\r\n            }\r\n            if (lastSelector.condition &&\r\n                !lastSelector.condition.eval(new contexts.Eval(context, context.frames))) {\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n        resetCache: function () {\r\n            this._rulesets = null;\r\n            this._variables = null;\r\n            this._properties = null;\r\n            this._lookups = {};\r\n        },\r\n        variables: function () {\r\n            if (!this._variables) {\r\n                this._variables = !this.rules ? {} : this.rules.reduce(function (hash, r) {\r\n                    if (r instanceof Declaration && r.variable === true) {\r\n                        hash[r.name] = r;\r\n                    }\r\n                    // when evaluating variables in an import statement, imports have not been eval'd\r\n                    // so we need to go inside import statements.\r\n                    // guard against root being a string (in the case of inlined less)\r\n                    if (r.type === 'Import' && r.root && r.root.variables) {\r\n                        var vars = r.root.variables();\r\n                        for (var name_1 in vars) {\r\n                            if (vars.hasOwnProperty(name_1)) {\r\n                                hash[name_1] = r.root.variable(name_1);\r\n                            }\r\n                        }\r\n                    }\r\n                    return hash;\r\n                }, {});\r\n            }\r\n            return this._variables;\r\n        },\r\n        properties: function () {\r\n            if (!this._properties) {\r\n                this._properties = !this.rules ? {} : this.rules.reduce(function (hash, r) {\r\n                    if (r instanceof Declaration && r.variable !== true) {\r\n                        var name_2 = (r.name.length === 1) && (r.name[0] instanceof Keyword) ?\r\n                            r.name[0].value : r.name;\r\n                        // Properties don't overwrite as they can merge\r\n                        if (!hash[\"$\" + name_2]) {\r\n                            hash[\"$\" + name_2] = [r];\r\n                        }\r\n                        else {\r\n                            hash[\"$\" + name_2].push(r);\r\n                        }\r\n                    }\r\n                    return hash;\r\n                }, {});\r\n            }\r\n            return this._properties;\r\n        },\r\n        variable: function (name) {\r\n            var decl = this.variables()[name];\r\n            if (decl) {\r\n                return this.parseValue(decl);\r\n            }\r\n        },\r\n        property: function (name) {\r\n            var decl = this.properties()[name];\r\n            if (decl) {\r\n                return this.parseValue(decl);\r\n            }\r\n        },\r\n        lastDeclaration: function () {\r\n            for (var i = this.rules.length; i > 0; i--) {\r\n                var decl = this.rules[i - 1];\r\n                if (decl instanceof Declaration) {\r\n                    return this.parseValue(decl);\r\n                }\r\n            }\r\n        },\r\n        parseValue: function (toParse) {\r\n            var self = this;\r\n            function transformDeclaration(decl) {\r\n                if (decl.value instanceof Anonymous && !decl.parsed) {\r\n                    if (typeof decl.value.value === 'string') {\r\n                        this.parse.parseNode(decl.value.value, ['value', 'important'], decl.value.getIndex(), decl.fileInfo(), function (err, result) {\r\n                            if (err) {\r\n                                decl.parsed = true;\r\n                            }\r\n                            if (result) {\r\n                                decl.value = result[0];\r\n                                decl.important = result[1] || '';\r\n                                decl.parsed = true;\r\n                            }\r\n                        });\r\n                    }\r\n                    else {\r\n                        decl.parsed = true;\r\n                    }\r\n                    return decl;\r\n                }\r\n                else {\r\n                    return decl;\r\n                }\r\n            }\r\n            if (!Array.isArray(toParse)) {\r\n                return transformDeclaration.call(self, toParse);\r\n            }\r\n            else {\r\n                var nodes_1 = [];\r\n                toParse.forEach(function (n) {\r\n                    nodes_1.push(transformDeclaration.call(self, n));\r\n                });\r\n                return nodes_1;\r\n            }\r\n        },\r\n        rulesets: function () {\r\n            if (!this.rules) {\r\n                return [];\r\n            }\r\n            var filtRules = [];\r\n            var rules = this.rules;\r\n            var i;\r\n            var rule;\r\n            for (i = 0; (rule = rules[i]); i++) {\r\n                if (rule.isRuleset) {\r\n                    filtRules.push(rule);\r\n                }\r\n            }\r\n            return filtRules;\r\n        },\r\n        prependRule: function (rule) {\r\n            var rules = this.rules;\r\n            if (rules) {\r\n                rules.unshift(rule);\r\n            }\r\n            else {\r\n                this.rules = [rule];\r\n            }\r\n            this.setParent(rule, this);\r\n        },\r\n        find: function (selector, self, filter) {\r\n            self = self || this;\r\n            var rules = [];\r\n            var match;\r\n            var foundMixins;\r\n            var key = selector.toCSS();\r\n            if (key in this._lookups) {\r\n                return this._lookups[key];\r\n            }\r\n            this.rulesets().forEach(function (rule) {\r\n                if (rule !== self) {\r\n                    for (var j = 0; j < rule.selectors.length; j++) {\r\n                        match = selector.match(rule.selectors[j]);\r\n                        if (match) {\r\n                            if (selector.elements.length > match) {\r\n                                if (!filter || filter(rule)) {\r\n                                    foundMixins = rule.find(new Selector(selector.elements.slice(match)), self, filter);\r\n                                    for (var i = 0; i < foundMixins.length; ++i) {\r\n                                        foundMixins[i].path.push(rule);\r\n                                    }\r\n                                    Array.prototype.push.apply(rules, foundMixins);\r\n                                }\r\n                            }\r\n                            else {\r\n                                rules.push({ rule: rule, path: [] });\r\n                            }\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            this._lookups[key] = rules;\r\n            return rules;\r\n        },\r\n        genCSS: function (context, output) {\r\n            var i;\r\n            var j;\r\n            var charsetRuleNodes = [];\r\n            var ruleNodes = [];\r\n            var // Line number debugging\r\n            debugInfo$1;\r\n            var rule;\r\n            var path;\r\n            context.tabLevel = (context.tabLevel || 0);\r\n            if (!this.root) {\r\n                context.tabLevel++;\r\n            }\r\n            var tabRuleStr = context.compress ? '' : Array(context.tabLevel + 1).join('  ');\r\n            var tabSetStr = context.compress ? '' : Array(context.tabLevel).join('  ');\r\n            var sep;\r\n            var charsetNodeIndex = 0;\r\n            var importNodeIndex = 0;\r\n            for (i = 0; (rule = this.rules[i]); i++) {\r\n                if (rule instanceof Comment) {\r\n                    if (importNodeIndex === i) {\r\n                        importNodeIndex++;\r\n                    }\r\n                    ruleNodes.push(rule);\r\n                }\r\n                else if (rule.isCharset && rule.isCharset()) {\r\n                    ruleNodes.splice(charsetNodeIndex, 0, rule);\r\n                    charsetNodeIndex++;\r\n                    importNodeIndex++;\r\n                }\r\n                else if (rule.type === 'Import') {\r\n                    ruleNodes.splice(importNodeIndex, 0, rule);\r\n                    importNodeIndex++;\r\n                }\r\n                else {\r\n                    ruleNodes.push(rule);\r\n                }\r\n            }\r\n            ruleNodes = charsetRuleNodes.concat(ruleNodes);\r\n            // If this is the root node, we don't render\r\n            // a selector, or {}.\r\n            if (!this.root) {\r\n                debugInfo$1 = debugInfo(context, this, tabSetStr);\r\n                if (debugInfo$1) {\r\n                    output.add(debugInfo$1);\r\n                    output.add(tabSetStr);\r\n                }\r\n                var paths = this.paths;\r\n                var pathCnt = paths.length;\r\n                var pathSubCnt = void 0;\r\n                sep = context.compress ? ',' : (\",\\n\" + tabSetStr);\r\n                for (i = 0; i < pathCnt; i++) {\r\n                    path = paths[i];\r\n                    if (!(pathSubCnt = path.length)) {\r\n                        continue;\r\n                    }\r\n                    if (i > 0) {\r\n                        output.add(sep);\r\n                    }\r\n                    context.firstSelector = true;\r\n                    path[0].genCSS(context, output);\r\n                    context.firstSelector = false;\r\n                    for (j = 1; j < pathSubCnt; j++) {\r\n                        path[j].genCSS(context, output);\r\n                    }\r\n                }\r\n                output.add((context.compress ? '{' : ' {\\n') + tabRuleStr);\r\n            }\r\n            // Compile rules and rulesets\r\n            for (i = 0; (rule = ruleNodes[i]); i++) {\r\n                if (i + 1 === ruleNodes.length) {\r\n                    context.lastRule = true;\r\n                }\r\n                var currentLastRule = context.lastRule;\r\n                if (rule.isRulesetLike(rule)) {\r\n                    context.lastRule = false;\r\n                }\r\n                if (rule.genCSS) {\r\n                    rule.genCSS(context, output);\r\n                }\r\n                else if (rule.value) {\r\n                    output.add(rule.value.toString());\r\n                }\r\n                context.lastRule = currentLastRule;\r\n                if (!context.lastRule && rule.isVisible()) {\r\n                    output.add(context.compress ? '' : (\"\\n\" + tabRuleStr));\r\n                }\r\n                else {\r\n                    context.lastRule = false;\r\n                }\r\n            }\r\n            if (!this.root) {\r\n                output.add((context.compress ? '}' : \"\\n\" + tabSetStr + \"}\"));\r\n                context.tabLevel--;\r\n            }\r\n            if (!output.isEmpty() && !context.compress && this.firstRoot) {\r\n                output.add('\\n');\r\n            }\r\n        },\r\n        joinSelectors: function (paths, context, selectors) {\r\n            for (var s = 0; s < selectors.length; s++) {\r\n                this.joinSelector(paths, context, selectors[s]);\r\n            }\r\n        },\r\n        joinSelector: function (paths, context, selector) {\r\n            function createParenthesis(elementsToPak, originalElement) {\r\n                var replacementParen, j;\r\n                if (elementsToPak.length === 0) {\r\n                    replacementParen = new Paren(elementsToPak[0]);\r\n                }\r\n                else {\r\n                    var insideParent = new Array(elementsToPak.length);\r\n                    for (j = 0; j < elementsToPak.length; j++) {\r\n                        insideParent[j] = new Element(null, elementsToPak[j], originalElement.isVariable, originalElement._index, originalElement._fileInfo);\r\n                    }\r\n                    replacementParen = new Paren(new Selector(insideParent));\r\n                }\r\n                return replacementParen;\r\n            }\r\n            function createSelector(containedElement, originalElement) {\r\n                var element, selector;\r\n                element = new Element(null, containedElement, originalElement.isVariable, originalElement._index, originalElement._fileInfo);\r\n                selector = new Selector([element]);\r\n                return selector;\r\n            }\r\n            // joins selector path from `beginningPath` with selector path in `addPath`\r\n            // `replacedElement` contains element that is being replaced by `addPath`\r\n            // returns concatenated path\r\n            function addReplacementIntoPath(beginningPath, addPath, replacedElement, originalSelector) {\r\n                var newSelectorPath, lastSelector, newJoinedSelector;\r\n                // our new selector path\r\n                newSelectorPath = [];\r\n                // construct the joined selector - if & is the first thing this will be empty,\r\n                // if not newJoinedSelector will be the last set of elements in the selector\r\n                if (beginningPath.length > 0) {\r\n                    newSelectorPath = copyArray(beginningPath);\r\n                    lastSelector = newSelectorPath.pop();\r\n                    newJoinedSelector = originalSelector.createDerived(copyArray(lastSelector.elements));\r\n                }\r\n                else {\r\n                    newJoinedSelector = originalSelector.createDerived([]);\r\n                }\r\n                if (addPath.length > 0) {\r\n                    // /deep/ is a CSS4 selector - (removed, so should deprecate)\r\n                    // that is valid without anything in front of it\r\n                    // so if the & does not have a combinator that is \"\" or \" \" then\r\n                    // and there is a combinator on the parent, then grab that.\r\n                    // this also allows + a { & .b { .a & { ... though not sure why you would want to do that\r\n                    var combinator = replacedElement.combinator;\r\n                    var parentEl = addPath[0].elements[0];\r\n                    if (combinator.emptyOrWhitespace && !parentEl.combinator.emptyOrWhitespace) {\r\n                        combinator = parentEl.combinator;\r\n                    }\r\n                    // join the elements so far with the first part of the parent\r\n                    newJoinedSelector.elements.push(new Element(combinator, parentEl.value, replacedElement.isVariable, replacedElement._index, replacedElement._fileInfo));\r\n                    newJoinedSelector.elements = newJoinedSelector.elements.concat(addPath[0].elements.slice(1));\r\n                }\r\n                // now add the joined selector - but only if it is not empty\r\n                if (newJoinedSelector.elements.length !== 0) {\r\n                    newSelectorPath.push(newJoinedSelector);\r\n                }\r\n                // put together the parent selectors after the join (e.g. the rest of the parent)\r\n                if (addPath.length > 1) {\r\n                    var restOfPath = addPath.slice(1);\r\n                    restOfPath = restOfPath.map(function (selector) {\r\n                        return selector.createDerived(selector.elements, []);\r\n                    });\r\n                    newSelectorPath = newSelectorPath.concat(restOfPath);\r\n                }\r\n                return newSelectorPath;\r\n            }\r\n            // joins selector path from `beginningPath` with every selector path in `addPaths` array\r\n            // `replacedElement` contains element that is being replaced by `addPath`\r\n            // returns array with all concatenated paths\r\n            function addAllReplacementsIntoPath(beginningPath, addPaths, replacedElement, originalSelector, result) {\r\n                var j;\r\n                for (j = 0; j < beginningPath.length; j++) {\r\n                    var newSelectorPath = addReplacementIntoPath(beginningPath[j], addPaths, replacedElement, originalSelector);\r\n                    result.push(newSelectorPath);\r\n                }\r\n                return result;\r\n            }\r\n            function mergeElementsOnToSelectors(elements, selectors) {\r\n                var i, sel;\r\n                if (elements.length === 0) {\r\n                    return;\r\n                }\r\n                if (selectors.length === 0) {\r\n                    selectors.push([new Selector(elements)]);\r\n                    return;\r\n                }\r\n                for (i = 0; (sel = selectors[i]); i++) {\r\n                    // if the previous thing in sel is a parent this needs to join on to it\r\n                    if (sel.length > 0) {\r\n                        sel[sel.length - 1] = sel[sel.length - 1].createDerived(sel[sel.length - 1].elements.concat(elements));\r\n                    }\r\n                    else {\r\n                        sel.push(new Selector(elements));\r\n                    }\r\n                }\r\n            }\r\n            // replace all parent selectors inside `inSelector` by content of `context` array\r\n            // resulting selectors are returned inside `paths` array\r\n            // returns true if `inSelector` contained at least one parent selector\r\n            function replaceParentSelector(paths, context, inSelector) {\r\n                // The paths are [[Selector]]\r\n                // The first list is a list of comma separated selectors\r\n                // The inner list is a list of inheritance separated selectors\r\n                // e.g.\r\n                // .a, .b {\r\n                //   .c {\r\n                //   }\r\n                // }\r\n                // == [[.a] [.c]] [[.b] [.c]]\r\n                //\r\n                var i, j, k, currentElements, newSelectors, selectorsMultiplied, sel, el, hadParentSelector = false, length, lastSelector;\r\n                function findNestedSelector(element) {\r\n                    var maybeSelector;\r\n                    if (!(element.value instanceof Paren)) {\r\n                        return null;\r\n                    }\r\n                    maybeSelector = element.value.value;\r\n                    if (!(maybeSelector instanceof Selector)) {\r\n                        return null;\r\n                    }\r\n                    return maybeSelector;\r\n                }\r\n                // the elements from the current selector so far\r\n                currentElements = [];\r\n                // the current list of new selectors to add to the path.\r\n                // We will build it up. We initiate it with one empty selector as we \"multiply\" the new selectors\r\n                // by the parents\r\n                newSelectors = [\r\n                    []\r\n                ];\r\n                for (i = 0; (el = inSelector.elements[i]); i++) {\r\n                    // non parent reference elements just get added\r\n                    if (el.value !== '&') {\r\n                        var nestedSelector = findNestedSelector(el);\r\n                        if (nestedSelector != null) {\r\n                            // merge the current list of non parent selector elements\r\n                            // on to the current list of selectors to add\r\n                            mergeElementsOnToSelectors(currentElements, newSelectors);\r\n                            var nestedPaths = [];\r\n                            var replaced = void 0;\r\n                            var replacedNewSelectors = [];\r\n                            replaced = replaceParentSelector(nestedPaths, context, nestedSelector);\r\n                            hadParentSelector = hadParentSelector || replaced;\r\n                            // the nestedPaths array should have only one member - replaceParentSelector does not multiply selectors\r\n                            for (k = 0; k < nestedPaths.length; k++) {\r\n                                var replacementSelector = createSelector(createParenthesis(nestedPaths[k], el), el);\r\n                                addAllReplacementsIntoPath(newSelectors, [replacementSelector], el, inSelector, replacedNewSelectors);\r\n                            }\r\n                            newSelectors = replacedNewSelectors;\r\n                            currentElements = [];\r\n                        }\r\n                        else {\r\n                            currentElements.push(el);\r\n                        }\r\n                    }\r\n                    else {\r\n                        hadParentSelector = true;\r\n                        // the new list of selectors to add\r\n                        selectorsMultiplied = [];\r\n                        // merge the current list of non parent selector elements\r\n                        // on to the current list of selectors to add\r\n                        mergeElementsOnToSelectors(currentElements, newSelectors);\r\n                        // loop through our current selectors\r\n                        for (j = 0; j < newSelectors.length; j++) {\r\n                            sel = newSelectors[j];\r\n                            // if we don't have any parent paths, the & might be in a mixin so that it can be used\r\n                            // whether there are parents or not\r\n                            if (context.length === 0) {\r\n                                // the combinator used on el should now be applied to the next element instead so that\r\n                                // it is not lost\r\n                                if (sel.length > 0) {\r\n                                    sel[0].elements.push(new Element(el.combinator, '', el.isVariable, el._index, el._fileInfo));\r\n                                }\r\n                                selectorsMultiplied.push(sel);\r\n                            }\r\n                            else {\r\n                                // and the parent selectors\r\n                                for (k = 0; k < context.length; k++) {\r\n                                    // We need to put the current selectors\r\n                                    // then join the last selector's elements on to the parents selectors\r\n                                    var newSelectorPath = addReplacementIntoPath(sel, context[k], el, inSelector);\r\n                                    // add that to our new set of selectors\r\n                                    selectorsMultiplied.push(newSelectorPath);\r\n                                }\r\n                            }\r\n                        }\r\n                        // our new selectors has been multiplied, so reset the state\r\n                        newSelectors = selectorsMultiplied;\r\n                        currentElements = [];\r\n                    }\r\n                }\r\n                // if we have any elements left over (e.g. .a& .b == .b)\r\n                // add them on to all the current selectors\r\n                mergeElementsOnToSelectors(currentElements, newSelectors);\r\n                for (i = 0; i < newSelectors.length; i++) {\r\n                    length = newSelectors[i].length;\r\n                    if (length > 0) {\r\n                        paths.push(newSelectors[i]);\r\n                        lastSelector = newSelectors[i][length - 1];\r\n                        newSelectors[i][length - 1] = lastSelector.createDerived(lastSelector.elements, inSelector.extendList);\r\n                    }\r\n                }\r\n                return hadParentSelector;\r\n            }\r\n            function deriveSelector(visibilityInfo, deriveFrom) {\r\n                var newSelector = deriveFrom.createDerived(deriveFrom.elements, deriveFrom.extendList, deriveFrom.evaldCondition);\r\n                newSelector.copyVisibilityInfo(visibilityInfo);\r\n                return newSelector;\r\n            }\r\n            // joinSelector code follows\r\n            var i, newPaths, hadParentSelector;\r\n            newPaths = [];\r\n            hadParentSelector = replaceParentSelector(newPaths, context, selector);\r\n            if (!hadParentSelector) {\r\n                if (context.length > 0) {\r\n                    newPaths = [];\r\n                    for (i = 0; i < context.length; i++) {\r\n                        var concatenated = context[i].map(deriveSelector.bind(this, selector.visibilityInfo()));\r\n                        concatenated.push(selector);\r\n                        newPaths.push(concatenated);\r\n                    }\r\n                }\r\n                else {\r\n                    newPaths = [[selector]];\r\n                }\r\n            }\r\n            for (i = 0; i < newPaths.length; i++) {\r\n                paths.push(newPaths[i]);\r\n            }\r\n        }\r\n    });\n\n    var AtRule = function (name, value, rules, index, currentFileInfo, debugInfo, isRooted, visibilityInfo) {\r\n        var i;\r\n        this.name = name;\r\n        this.value = (value instanceof Node) ? value : (value ? new Anonymous(value) : value);\r\n        if (rules) {\r\n            if (Array.isArray(rules)) {\r\n                this.rules = rules;\r\n            }\r\n            else {\r\n                this.rules = [rules];\r\n                this.rules[0].selectors = (new Selector([], null, null, index, currentFileInfo)).createEmptySelectors();\r\n            }\r\n            for (i = 0; i < this.rules.length; i++) {\r\n                this.rules[i].allowImports = true;\r\n            }\r\n            this.setParent(this.rules, this);\r\n        }\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.debugInfo = debugInfo;\r\n        this.isRooted = isRooted || false;\r\n        this.copyVisibilityInfo(visibilityInfo);\r\n        this.allowRoot = true;\r\n    };\r\n    AtRule.prototype = Object.assign(new Node(), {\r\n        type: 'AtRule',\r\n        accept: function (visitor) {\r\n            var value = this.value, rules = this.rules;\r\n            if (rules) {\r\n                this.rules = visitor.visitArray(rules);\r\n            }\r\n            if (value) {\r\n                this.value = visitor.visit(value);\r\n            }\r\n        },\r\n        isRulesetLike: function () {\r\n            return this.rules || !this.isCharset();\r\n        },\r\n        isCharset: function () {\r\n            return '@charset' === this.name;\r\n        },\r\n        genCSS: function (context, output) {\r\n            var value = this.value, rules = this.rules;\r\n            output.add(this.name, this.fileInfo(), this.getIndex());\r\n            if (value) {\r\n                output.add(' ');\r\n                value.genCSS(context, output);\r\n            }\r\n            if (rules) {\r\n                this.outputRuleset(context, output, rules);\r\n            }\r\n            else {\r\n                output.add(';');\r\n            }\r\n        },\r\n        eval: function (context) {\r\n            var mediaPathBackup, mediaBlocksBackup, value = this.value, rules = this.rules;\r\n            // media stored inside other atrule should not bubble over it\r\n            // backpup media bubbling information\r\n            mediaPathBackup = context.mediaPath;\r\n            mediaBlocksBackup = context.mediaBlocks;\r\n            // deleted media bubbling information\r\n            context.mediaPath = [];\r\n            context.mediaBlocks = [];\r\n            if (value) {\r\n                value = value.eval(context);\r\n            }\r\n            if (rules) {\r\n                // assuming that there is only one rule at this point - that is how parser constructs the rule\r\n                rules = [rules[0].eval(context)];\r\n                rules[0].root = true;\r\n            }\r\n            // restore media bubbling information\r\n            context.mediaPath = mediaPathBackup;\r\n            context.mediaBlocks = mediaBlocksBackup;\r\n            return new AtRule(this.name, value, rules, this.getIndex(), this.fileInfo(), this.debugInfo, this.isRooted, this.visibilityInfo());\r\n        },\r\n        variable: function (name) {\r\n            if (this.rules) {\r\n                // assuming that there is only one rule at this point - that is how parser constructs the rule\r\n                return Ruleset.prototype.variable.call(this.rules[0], name);\r\n            }\r\n        },\r\n        find: function () {\r\n            if (this.rules) {\r\n                // assuming that there is only one rule at this point - that is how parser constructs the rule\r\n                return Ruleset.prototype.find.apply(this.rules[0], arguments);\r\n            }\r\n        },\r\n        rulesets: function () {\r\n            if (this.rules) {\r\n                // assuming that there is only one rule at this point - that is how parser constructs the rule\r\n                return Ruleset.prototype.rulesets.apply(this.rules[0]);\r\n            }\r\n        },\r\n        outputRuleset: function (context, output, rules) {\r\n            var ruleCnt = rules.length;\r\n            var i;\r\n            context.tabLevel = (context.tabLevel | 0) + 1;\r\n            // Compressed\r\n            if (context.compress) {\r\n                output.add('{');\r\n                for (i = 0; i < ruleCnt; i++) {\r\n                    rules[i].genCSS(context, output);\r\n                }\r\n                output.add('}');\r\n                context.tabLevel--;\r\n                return;\r\n            }\r\n            // Non-compressed\r\n            var tabSetStr = \"\\n\" + Array(context.tabLevel).join('  '), tabRuleStr = tabSetStr + \"  \";\r\n            if (!ruleCnt) {\r\n                output.add(\" {\" + tabSetStr + \"}\");\r\n            }\r\n            else {\r\n                output.add(\" {\" + tabRuleStr);\r\n                rules[0].genCSS(context, output);\r\n                for (i = 1; i < ruleCnt; i++) {\r\n                    output.add(tabRuleStr);\r\n                    rules[i].genCSS(context, output);\r\n                }\r\n                output.add(tabSetStr + \"}\");\r\n            }\r\n            context.tabLevel--;\r\n        }\r\n    });\n\n    var DetachedRuleset = function (ruleset, frames) {\r\n        this.ruleset = ruleset;\r\n        this.frames = frames;\r\n        this.setParent(this.ruleset, this);\r\n    };\r\n    DetachedRuleset.prototype = Object.assign(new Node(), {\r\n        type: 'DetachedRuleset',\r\n        evalFirst: true,\r\n        accept: function (visitor) {\r\n            this.ruleset = visitor.visit(this.ruleset);\r\n        },\r\n        eval: function (context) {\r\n            var frames = this.frames || copyArray(context.frames);\r\n            return new DetachedRuleset(this.ruleset, frames);\r\n        },\r\n        callEval: function (context) {\r\n            return this.ruleset.eval(this.frames ? new contexts.Eval(context, this.frames.concat(context.frames)) : context);\r\n        }\r\n    });\n\n    var Unit = function (numerator, denominator, backupUnit) {\r\n        this.numerator = numerator ? copyArray(numerator).sort() : [];\r\n        this.denominator = denominator ? copyArray(denominator).sort() : [];\r\n        if (backupUnit) {\r\n            this.backupUnit = backupUnit;\r\n        }\r\n        else if (numerator && numerator.length) {\r\n            this.backupUnit = numerator[0];\r\n        }\r\n    };\r\n    Unit.prototype = Object.assign(new Node(), {\r\n        type: 'Unit',\r\n        clone: function () {\r\n            return new Unit(copyArray(this.numerator), copyArray(this.denominator), this.backupUnit);\r\n        },\r\n        genCSS: function (context, output) {\r\n            // Dimension checks the unit is singular and throws an error if in strict math mode.\r\n            var strictUnits = context && context.strictUnits;\r\n            if (this.numerator.length === 1) {\r\n                output.add(this.numerator[0]); // the ideal situation\r\n            }\r\n            else if (!strictUnits && this.backupUnit) {\r\n                output.add(this.backupUnit);\r\n            }\r\n            else if (!strictUnits && this.denominator.length) {\r\n                output.add(this.denominator[0]);\r\n            }\r\n        },\r\n        toString: function () {\r\n            var i, returnStr = this.numerator.join('*');\r\n            for (i = 0; i < this.denominator.length; i++) {\r\n                returnStr += \"/\" + this.denominator[i];\r\n            }\r\n            return returnStr;\r\n        },\r\n        compare: function (other) {\r\n            return this.is(other.toString()) ? 0 : undefined;\r\n        },\r\n        is: function (unitString) {\r\n            return this.toString().toUpperCase() === unitString.toUpperCase();\r\n        },\r\n        isLength: function () {\r\n            return RegExp('^(px|em|ex|ch|rem|in|cm|mm|pc|pt|ex|vw|vh|vmin|vmax)$', 'gi').test(this.toCSS());\r\n        },\r\n        isEmpty: function () {\r\n            return this.numerator.length === 0 && this.denominator.length === 0;\r\n        },\r\n        isSingular: function () {\r\n            return this.numerator.length <= 1 && this.denominator.length === 0;\r\n        },\r\n        map: function (callback) {\r\n            var i;\r\n            for (i = 0; i < this.numerator.length; i++) {\r\n                this.numerator[i] = callback(this.numerator[i], false);\r\n            }\r\n            for (i = 0; i < this.denominator.length; i++) {\r\n                this.denominator[i] = callback(this.denominator[i], true);\r\n            }\r\n        },\r\n        usedUnits: function () {\r\n            var group;\r\n            var result = {};\r\n            var mapUnit;\r\n            var groupName;\r\n            mapUnit = function (atomicUnit) {\r\n                /* jshint loopfunc:true */\r\n                if (group.hasOwnProperty(atomicUnit) && !result[groupName]) {\r\n                    result[groupName] = atomicUnit;\r\n                }\r\n                return atomicUnit;\r\n            };\r\n            for (groupName in unitConversions) {\r\n                if (unitConversions.hasOwnProperty(groupName)) {\r\n                    group = unitConversions[groupName];\r\n                    this.map(mapUnit);\r\n                }\r\n            }\r\n            return result;\r\n        },\r\n        cancel: function () {\r\n            var counter = {};\r\n            var atomicUnit;\r\n            var i;\r\n            for (i = 0; i < this.numerator.length; i++) {\r\n                atomicUnit = this.numerator[i];\r\n                counter[atomicUnit] = (counter[atomicUnit] || 0) + 1;\r\n            }\r\n            for (i = 0; i < this.denominator.length; i++) {\r\n                atomicUnit = this.denominator[i];\r\n                counter[atomicUnit] = (counter[atomicUnit] || 0) - 1;\r\n            }\r\n            this.numerator = [];\r\n            this.denominator = [];\r\n            for (atomicUnit in counter) {\r\n                if (counter.hasOwnProperty(atomicUnit)) {\r\n                    var count = counter[atomicUnit];\r\n                    if (count > 0) {\r\n                        for (i = 0; i < count; i++) {\r\n                            this.numerator.push(atomicUnit);\r\n                        }\r\n                    }\r\n                    else if (count < 0) {\r\n                        for (i = 0; i < -count; i++) {\r\n                            this.denominator.push(atomicUnit);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this.numerator.sort();\r\n            this.denominator.sort();\r\n        }\r\n    });\n\n    //\r\n    // A number with a unit\r\n    //\r\n    var Dimension = function (value, unit) {\r\n        this.value = parseFloat(value);\r\n        if (isNaN(this.value)) {\r\n            throw new Error('Dimension is not a number.');\r\n        }\r\n        this.unit = (unit && unit instanceof Unit) ? unit :\r\n            new Unit(unit ? [unit] : undefined);\r\n        this.setParent(this.unit, this);\r\n    };\r\n    Dimension.prototype = Object.assign(new Node(), {\r\n        type: 'Dimension',\r\n        accept: function (visitor) {\r\n            this.unit = visitor.visit(this.unit);\r\n        },\r\n        eval: function (context) {\r\n            return this;\r\n        },\r\n        toColor: function () {\r\n            return new Color([this.value, this.value, this.value]);\r\n        },\r\n        genCSS: function (context, output) {\r\n            if ((context && context.strictUnits) && !this.unit.isSingular()) {\r\n                throw new Error(\"Multiple units in dimension. Correct the units or use the unit function. Bad unit: \" + this.unit.toString());\r\n            }\r\n            var value = this.fround(context, this.value);\r\n            var strValue = String(value);\r\n            if (value !== 0 && value < 0.000001 && value > -0.000001) {\r\n                // would be output 1e-6 etc.\r\n                strValue = value.toFixed(20).replace(/0+$/, '');\r\n            }\r\n            if (context && context.compress) {\r\n                // Zero values doesn't need a unit\r\n                if (value === 0 && this.unit.isLength()) {\r\n                    output.add(strValue);\r\n                    return;\r\n                }\r\n                // Float values doesn't need a leading zero\r\n                if (value > 0 && value < 1) {\r\n                    strValue = (strValue).substr(1);\r\n                }\r\n            }\r\n            output.add(strValue);\r\n            this.unit.genCSS(context, output);\r\n        },\r\n        // In an operation between two Dimensions,\r\n        // we default to the first Dimension's unit,\r\n        // so `1px + 2` will yield `3px`.\r\n        operate: function (context, op, other) {\r\n            /* jshint noempty:false */\r\n            var value = this._operate(context, op, this.value, other.value);\r\n            var unit = this.unit.clone();\r\n            if (op === '+' || op === '-') {\r\n                if (unit.numerator.length === 0 && unit.denominator.length === 0) {\r\n                    unit = other.unit.clone();\r\n                    if (this.unit.backupUnit) {\r\n                        unit.backupUnit = this.unit.backupUnit;\r\n                    }\r\n                }\r\n                else if (other.unit.numerator.length === 0 && unit.denominator.length === 0) ;\r\n                else {\r\n                    other = other.convertTo(this.unit.usedUnits());\r\n                    if (context.strictUnits && other.unit.toString() !== unit.toString()) {\r\n                        throw new Error(\"Incompatible units. Change the units or use the unit function. \"\r\n                            + (\"Bad units: '\" + unit.toString() + \"' and '\" + other.unit.toString() + \"'.\"));\r\n                    }\r\n                    value = this._operate(context, op, this.value, other.value);\r\n                }\r\n            }\r\n            else if (op === '*') {\r\n                unit.numerator = unit.numerator.concat(other.unit.numerator).sort();\r\n                unit.denominator = unit.denominator.concat(other.unit.denominator).sort();\r\n                unit.cancel();\r\n            }\r\n            else if (op === '/') {\r\n                unit.numerator = unit.numerator.concat(other.unit.denominator).sort();\r\n                unit.denominator = unit.denominator.concat(other.unit.numerator).sort();\r\n                unit.cancel();\r\n            }\r\n            return new Dimension(value, unit);\r\n        },\r\n        compare: function (other) {\r\n            var a, b;\r\n            if (!(other instanceof Dimension)) {\r\n                return undefined;\r\n            }\r\n            if (this.unit.isEmpty() || other.unit.isEmpty()) {\r\n                a = this;\r\n                b = other;\r\n            }\r\n            else {\r\n                a = this.unify();\r\n                b = other.unify();\r\n                if (a.unit.compare(b.unit) !== 0) {\r\n                    return undefined;\r\n                }\r\n            }\r\n            return Node.numericCompare(a.value, b.value);\r\n        },\r\n        unify: function () {\r\n            return this.convertTo({ length: 'px', duration: 's', angle: 'rad' });\r\n        },\r\n        convertTo: function (conversions) {\r\n            var value = this.value;\r\n            var unit = this.unit.clone();\r\n            var i;\r\n            var groupName;\r\n            var group;\r\n            var targetUnit;\r\n            var derivedConversions = {};\r\n            var applyUnit;\r\n            if (typeof conversions === 'string') {\r\n                for (i in unitConversions) {\r\n                    if (unitConversions[i].hasOwnProperty(conversions)) {\r\n                        derivedConversions = {};\r\n                        derivedConversions[i] = conversions;\r\n                    }\r\n                }\r\n                conversions = derivedConversions;\r\n            }\r\n            applyUnit = function (atomicUnit, denominator) {\r\n                /* jshint loopfunc:true */\r\n                if (group.hasOwnProperty(atomicUnit)) {\r\n                    if (denominator) {\r\n                        value = value / (group[atomicUnit] / group[targetUnit]);\r\n                    }\r\n                    else {\r\n                        value = value * (group[atomicUnit] / group[targetUnit]);\r\n                    }\r\n                    return targetUnit;\r\n                }\r\n                return atomicUnit;\r\n            };\r\n            for (groupName in conversions) {\r\n                if (conversions.hasOwnProperty(groupName)) {\r\n                    targetUnit = conversions[groupName];\r\n                    group = unitConversions[groupName];\r\n                    unit.map(applyUnit);\r\n                }\r\n            }\r\n            unit.cancel();\r\n            return new Dimension(value, unit);\r\n        }\r\n    });\n\n    var MATH = Math$1;\r\n    var Operation = function (op, operands, isSpaced) {\r\n        this.op = op.trim();\r\n        this.operands = operands;\r\n        this.isSpaced = isSpaced;\r\n    };\r\n    Operation.prototype = Object.assign(new Node(), {\r\n        type: 'Operation',\r\n        accept: function (visitor) {\r\n            this.operands = visitor.visitArray(this.operands);\r\n        },\r\n        eval: function (context) {\r\n            var a = this.operands[0].eval(context), b = this.operands[1].eval(context), op;\r\n            if (context.isMathOn(this.op)) {\r\n                op = this.op === './' ? '/' : this.op;\r\n                if (a instanceof Dimension && b instanceof Color) {\r\n                    a = a.toColor();\r\n                }\r\n                if (b instanceof Dimension && a instanceof Color) {\r\n                    b = b.toColor();\r\n                }\r\n                if (!a.operate || !b.operate) {\r\n                    if ((a instanceof Operation || b instanceof Operation)\r\n                        && a.op === '/' && context.math === MATH.PARENS_DIVISION) {\r\n                        return new Operation(this.op, [a, b], this.isSpaced);\r\n                    }\r\n                    throw { type: 'Operation',\r\n                        message: 'Operation on an invalid type' };\r\n                }\r\n                return a.operate(context, op, b);\r\n            }\r\n            else {\r\n                return new Operation(this.op, [a, b], this.isSpaced);\r\n            }\r\n        },\r\n        genCSS: function (context, output) {\r\n            this.operands[0].genCSS(context, output);\r\n            if (this.isSpaced) {\r\n                output.add(' ');\r\n            }\r\n            output.add(this.op);\r\n            if (this.isSpaced) {\r\n                output.add(' ');\r\n            }\r\n            this.operands[1].genCSS(context, output);\r\n        }\r\n    });\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation.\r\n\r\n    Permission to use, copy, modify, and/or distribute this software for any\r\n    purpose with or without fee is hereby granted.\r\n\r\n    THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\n    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\n    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\n    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\n    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\n    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\n    PERFORMANCE OF THIS SOFTWARE.\r\n    ***************************************************************************** */\r\n\r\n    function __spreadArray(to, from, pack) {\r\n        if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n            if (ar || !(i in from)) {\r\n                if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n                ar[i] = from[i];\r\n            }\r\n        }\r\n        return to.concat(ar || from);\r\n    }\n\n    var Expression = function (value, noSpacing) {\r\n        this.value = value;\r\n        this.noSpacing = noSpacing;\r\n        if (!value) {\r\n            throw new Error('Expression requires an array parameter');\r\n        }\r\n    };\r\n    Expression.prototype = Object.assign(new Node(), {\r\n        type: 'Expression',\r\n        accept: function (visitor) {\r\n            this.value = visitor.visitArray(this.value);\r\n        },\r\n        eval: function (context) {\r\n            var returnValue;\r\n            var mathOn = context.isMathOn();\r\n            var inParenthesis = this.parens;\r\n            var doubleParen = false;\r\n            if (inParenthesis) {\r\n                context.inParenthesis();\r\n            }\r\n            if (this.value.length > 1) {\r\n                returnValue = new Expression(this.value.map(function (e) {\r\n                    if (!e.eval) {\r\n                        return e;\r\n                    }\r\n                    return e.eval(context);\r\n                }), this.noSpacing);\r\n            }\r\n            else if (this.value.length === 1) {\r\n                if (this.value[0].parens && !this.value[0].parensInOp && !context.inCalc) {\r\n                    doubleParen = true;\r\n                }\r\n                returnValue = this.value[0].eval(context);\r\n            }\r\n            else {\r\n                returnValue = this;\r\n            }\r\n            if (inParenthesis) {\r\n                context.outOfParenthesis();\r\n            }\r\n            if (this.parens && this.parensInOp && !mathOn && !doubleParen\r\n                && (!(returnValue instanceof Dimension))) {\r\n                returnValue = new Paren(returnValue);\r\n            }\r\n            return returnValue;\r\n        },\r\n        genCSS: function (context, output) {\r\n            for (var i = 0; i < this.value.length; i++) {\r\n                this.value[i].genCSS(context, output);\r\n                if (!this.noSpacing && i + 1 < this.value.length) {\r\n                    output.add(' ');\r\n                }\r\n            }\r\n        },\r\n        throwAwayComments: function () {\r\n            this.value = this.value.filter(function (v) {\r\n                return !(v instanceof Comment);\r\n            });\r\n        }\r\n    });\n\n    var functionCaller = /** @class */ (function () {\r\n        function functionCaller(name, context, index, currentFileInfo) {\r\n            this.name = name.toLowerCase();\r\n            this.index = index;\r\n            this.context = context;\r\n            this.currentFileInfo = currentFileInfo;\r\n            this.func = context.frames[0].functionRegistry.get(this.name);\r\n        }\r\n        functionCaller.prototype.isValid = function () {\r\n            return Boolean(this.func);\r\n        };\r\n        functionCaller.prototype.call = function (args) {\r\n            var _this = this;\r\n            if (!(Array.isArray(args))) {\r\n                args = [args];\r\n            }\r\n            var evalArgs = this.func.evalArgs;\r\n            if (evalArgs !== false) {\r\n                args = args.map(function (a) { return a.eval(_this.context); });\r\n            }\r\n            var commentFilter = function (item) { return !(item.type === 'Comment'); };\r\n            // This code is terrible and should be replaced as per this issue...\r\n            // https://github.com/less/less.js/issues/2477\r\n            args = args\r\n                .filter(commentFilter)\r\n                .map(function (item) {\r\n                if (item.type === 'Expression') {\r\n                    var subNodes = item.value.filter(commentFilter);\r\n                    if (subNodes.length === 1) {\r\n                        // https://github.com/less/less.js/issues/3616\r\n                        if (item.parens && subNodes[0].op === '/') {\r\n                            return item;\r\n                        }\r\n                        return subNodes[0];\r\n                    }\r\n                    else {\r\n                        return new Expression(subNodes);\r\n                    }\r\n                }\r\n                return item;\r\n            });\r\n            if (evalArgs === false) {\r\n                return this.func.apply(this, __spreadArray([this.context], args));\r\n            }\r\n            return this.func.apply(this, args);\r\n        };\r\n        return functionCaller;\r\n    }());\n\n    //\r\n    // A function call node.\r\n    //\r\n    var Call = function (name, args, index, currentFileInfo) {\r\n        this.name = name;\r\n        this.args = args;\r\n        this.calc = name === 'calc';\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n    };\r\n    Call.prototype = Object.assign(new Node(), {\r\n        type: 'Call',\r\n        accept: function (visitor) {\r\n            if (this.args) {\r\n                this.args = visitor.visitArray(this.args);\r\n            }\r\n        },\r\n        //\r\n        // When evaluating a function call,\r\n        // we either find the function in the functionRegistry,\r\n        // in which case we call it, passing the  evaluated arguments,\r\n        // if this returns null or we cannot find the function, we\r\n        // simply print it out as it appeared originally [2].\r\n        //\r\n        // The reason why we evaluate the arguments, is in the case where\r\n        // we try to pass a variable to a function, like: `saturate(@color)`.\r\n        // The function should receive the value, not the variable.\r\n        //\r\n        eval: function (context) {\r\n            var _this = this;\r\n            /**\r\n             * Turn off math for calc(), and switch back on for evaluating nested functions\r\n             */\r\n            var currentMathContext = context.mathOn;\r\n            context.mathOn = !this.calc;\r\n            if (this.calc || context.inCalc) {\r\n                context.enterCalc();\r\n            }\r\n            var exitCalc = function () {\r\n                if (_this.calc || context.inCalc) {\r\n                    context.exitCalc();\r\n                }\r\n                context.mathOn = currentMathContext;\r\n            };\r\n            var result;\r\n            var funcCaller = new functionCaller(this.name, context, this.getIndex(), this.fileInfo());\r\n            if (funcCaller.isValid()) {\r\n                try {\r\n                    result = funcCaller.call(this.args);\r\n                    exitCalc();\r\n                }\r\n                catch (e) {\r\n                    if (e.hasOwnProperty('line') && e.hasOwnProperty('column')) {\r\n                        throw e;\r\n                    }\r\n                    throw {\r\n                        type: e.type || 'Runtime',\r\n                        message: \"Error evaluating function `\" + this.name + \"`\" + (e.message ? \": \" + e.message : ''),\r\n                        index: this.getIndex(),\r\n                        filename: this.fileInfo().filename,\r\n                        line: e.lineNumber,\r\n                        column: e.columnNumber\r\n                    };\r\n                }\r\n            }\r\n            if (result !== null && result !== undefined) {\r\n                // Results that that are not nodes are cast as Anonymous nodes\r\n                // Falsy values or booleans are returned as empty nodes\r\n                if (!(result instanceof Node)) {\r\n                    if (!result || result === true) {\r\n                        result = new Anonymous(null);\r\n                    }\r\n                    else {\r\n                        result = new Anonymous(result.toString());\r\n                    }\r\n                }\r\n                result._index = this._index;\r\n                result._fileInfo = this._fileInfo;\r\n                return result;\r\n            }\r\n            var args = this.args.map(function (a) { return a.eval(context); });\r\n            exitCalc();\r\n            return new Call(this.name, args, this.getIndex(), this.fileInfo());\r\n        },\r\n        genCSS: function (context, output) {\r\n            output.add(this.name + \"(\", this.fileInfo(), this.getIndex());\r\n            for (var i = 0; i < this.args.length; i++) {\r\n                this.args[i].genCSS(context, output);\r\n                if (i + 1 < this.args.length) {\r\n                    output.add(', ');\r\n                }\r\n            }\r\n            output.add(')');\r\n        }\r\n    });\n\n    var Variable = function (name, index, currentFileInfo) {\r\n        this.name = name;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n    };\r\n    Variable.prototype = Object.assign(new Node(), {\r\n        type: 'Variable',\r\n        eval: function (context) {\r\n            var variable, name = this.name;\r\n            if (name.indexOf('@@') === 0) {\r\n                name = \"@\" + new Variable(name.slice(1), this.getIndex(), this.fileInfo()).eval(context).value;\r\n            }\r\n            if (this.evaluating) {\r\n                throw { type: 'Name',\r\n                    message: \"Recursive variable definition for \" + name,\r\n                    filename: this.fileInfo().filename,\r\n                    index: this.getIndex() };\r\n            }\r\n            this.evaluating = true;\r\n            variable = this.find(context.frames, function (frame) {\r\n                var v = frame.variable(name);\r\n                if (v) {\r\n                    if (v.important) {\r\n                        var importantScope = context.importantScope[context.importantScope.length - 1];\r\n                        importantScope.important = v.important;\r\n                    }\r\n                    // If in calc, wrap vars in a function call to cascade evaluate args first\r\n                    if (context.inCalc) {\r\n                        return (new Call('_SELF', [v.value])).eval(context);\r\n                    }\r\n                    else {\r\n                        return v.value.eval(context);\r\n                    }\r\n                }\r\n            });\r\n            if (variable) {\r\n                this.evaluating = false;\r\n                return variable;\r\n            }\r\n            else {\r\n                throw { type: 'Name',\r\n                    message: \"variable \" + name + \" is undefined\",\r\n                    filename: this.fileInfo().filename,\r\n                    index: this.getIndex() };\r\n            }\r\n        },\r\n        find: function (obj, fun) {\r\n            for (var i = 0, r = void 0; i < obj.length; i++) {\r\n                r = fun.call(obj, obj[i]);\r\n                if (r) {\r\n                    return r;\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n    });\n\n    var Property = function (name, index, currentFileInfo) {\r\n        this.name = name;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n    };\r\n    Property.prototype = Object.assign(new Node(), {\r\n        type: 'Property',\r\n        eval: function (context) {\r\n            var property;\r\n            var name = this.name;\r\n            // TODO: shorten this reference\r\n            var mergeRules = context.pluginManager.less.visitors.ToCSSVisitor.prototype._mergeRules;\r\n            if (this.evaluating) {\r\n                throw { type: 'Name',\r\n                    message: \"Recursive property reference for \" + name,\r\n                    filename: this.fileInfo().filename,\r\n                    index: this.getIndex() };\r\n            }\r\n            this.evaluating = true;\r\n            property = this.find(context.frames, function (frame) {\r\n                var v;\r\n                var vArr = frame.property(name);\r\n                if (vArr) {\r\n                    for (var i = 0; i < vArr.length; i++) {\r\n                        v = vArr[i];\r\n                        vArr[i] = new Declaration(v.name, v.value, v.important, v.merge, v.index, v.currentFileInfo, v.inline, v.variable);\r\n                    }\r\n                    mergeRules(vArr);\r\n                    v = vArr[vArr.length - 1];\r\n                    if (v.important) {\r\n                        var importantScope = context.importantScope[context.importantScope.length - 1];\r\n                        importantScope.important = v.important;\r\n                    }\r\n                    v = v.value.eval(context);\r\n                    return v;\r\n                }\r\n            });\r\n            if (property) {\r\n                this.evaluating = false;\r\n                return property;\r\n            }\r\n            else {\r\n                throw { type: 'Name',\r\n                    message: \"Property '\" + name + \"' is undefined\",\r\n                    filename: this.currentFileInfo.filename,\r\n                    index: this.index };\r\n            }\r\n        },\r\n        find: function (obj, fun) {\r\n            for (var i = 0, r = void 0; i < obj.length; i++) {\r\n                r = fun.call(obj, obj[i]);\r\n                if (r) {\r\n                    return r;\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n    });\n\n    var Attribute = function (key, op, value, cif) {\r\n        this.key = key;\r\n        this.op = op;\r\n        this.value = value;\r\n        this.cif = cif;\r\n    };\r\n    Attribute.prototype = Object.assign(new Node(), {\r\n        type: 'Attribute',\r\n        eval: function (context) {\r\n            return new Attribute(this.key.eval ? this.key.eval(context) : this.key, this.op, (this.value && this.value.eval) ? this.value.eval(context) : this.value, this.cif);\r\n        },\r\n        genCSS: function (context, output) {\r\n            output.add(this.toCSS(context));\r\n        },\r\n        toCSS: function (context) {\r\n            var value = this.key.toCSS ? this.key.toCSS(context) : this.key;\r\n            if (this.op) {\r\n                value += this.op;\r\n                value += (this.value.toCSS ? this.value.toCSS(context) : this.value);\r\n            }\r\n            if (this.cif) {\r\n                value = value + \" \" + this.cif;\r\n            }\r\n            return \"[\" + value + \"]\";\r\n        }\r\n    });\n\n    var Quoted = function (str, content, escaped, index, currentFileInfo) {\r\n        this.escaped = (escaped == null) ? true : escaped;\r\n        this.value = content || '';\r\n        this.quote = str.charAt(0);\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.variableRegex = /@\\{([\\w-]+)\\}/g;\r\n        this.propRegex = /\\$\\{([\\w-]+)\\}/g;\r\n        this.allowRoot = escaped;\r\n    };\r\n    Quoted.prototype = Object.assign(new Node(), {\r\n        type: 'Quoted',\r\n        genCSS: function (context, output) {\r\n            if (!this.escaped) {\r\n                output.add(this.quote, this.fileInfo(), this.getIndex());\r\n            }\r\n            output.add(this.value);\r\n            if (!this.escaped) {\r\n                output.add(this.quote);\r\n            }\r\n        },\r\n        containsVariables: function () {\r\n            return this.value.match(this.variableRegex);\r\n        },\r\n        eval: function (context) {\r\n            var that = this;\r\n            var value = this.value;\r\n            var variableReplacement = function (_, name) {\r\n                var v = new Variable(\"@\" + name, that.getIndex(), that.fileInfo()).eval(context, true);\r\n                return (v instanceof Quoted) ? v.value : v.toCSS();\r\n            };\r\n            var propertyReplacement = function (_, name) {\r\n                var v = new Property(\"$\" + name, that.getIndex(), that.fileInfo()).eval(context, true);\r\n                return (v instanceof Quoted) ? v.value : v.toCSS();\r\n            };\r\n            function iterativeReplace(value, regexp, replacementFnc) {\r\n                var evaluatedValue = value;\r\n                do {\r\n                    value = evaluatedValue.toString();\r\n                    evaluatedValue = value.replace(regexp, replacementFnc);\r\n                } while (value !== evaluatedValue);\r\n                return evaluatedValue;\r\n            }\r\n            value = iterativeReplace(value, this.variableRegex, variableReplacement);\r\n            value = iterativeReplace(value, this.propRegex, propertyReplacement);\r\n            return new Quoted(this.quote + value + this.quote, value, this.escaped, this.getIndex(), this.fileInfo());\r\n        },\r\n        compare: function (other) {\r\n            // when comparing quoted strings allow the quote to differ\r\n            if (other.type === 'Quoted' && !this.escaped && !other.escaped) {\r\n                return Node.numericCompare(this.value, other.value);\r\n            }\r\n            else {\r\n                return other.toCSS && this.toCSS() === other.toCSS() ? 0 : undefined;\r\n            }\r\n        }\r\n    });\n\n    function escapePath(path) {\r\n        return path.replace(/[\\(\\)'\"\\s]/g, function (match) { return \"\\\\\" + match; });\r\n    }\r\n    var URL = function (val, index, currentFileInfo, isEvald) {\r\n        this.value = val;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.isEvald = isEvald;\r\n    };\r\n    URL.prototype = Object.assign(new Node(), {\r\n        type: 'Url',\r\n        accept: function (visitor) {\r\n            this.value = visitor.visit(this.value);\r\n        },\r\n        genCSS: function (context, output) {\r\n            output.add('url(');\r\n            this.value.genCSS(context, output);\r\n            output.add(')');\r\n        },\r\n        eval: function (context) {\r\n            var val = this.value.eval(context);\r\n            var rootpath;\r\n            if (!this.isEvald) {\r\n                // Add the rootpath if the URL requires a rewrite\r\n                rootpath = this.fileInfo() && this.fileInfo().rootpath;\r\n                if (typeof rootpath === 'string' &&\r\n                    typeof val.value === 'string' &&\r\n                    context.pathRequiresRewrite(val.value)) {\r\n                    if (!val.quote) {\r\n                        rootpath = escapePath(rootpath);\r\n                    }\r\n                    val.value = context.rewritePath(val.value, rootpath);\r\n                }\r\n                else {\r\n                    val.value = context.normalizePath(val.value);\r\n                }\r\n                // Add url args if enabled\r\n                if (context.urlArgs) {\r\n                    if (!val.value.match(/^\\s*data:/)) {\r\n                        var delimiter = val.value.indexOf('?') === -1 ? '?' : '&';\r\n                        var urlArgs = delimiter + context.urlArgs;\r\n                        if (val.value.indexOf('#') !== -1) {\r\n                            val.value = val.value.replace('#', urlArgs + \"#\");\r\n                        }\r\n                        else {\r\n                            val.value += urlArgs;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return new URL(val, this.getIndex(), this.fileInfo(), true);\r\n        }\r\n    });\n\n    var Media = function (value, features, index, currentFileInfo, visibilityInfo) {\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        var selectors = (new Selector([], null, null, this._index, this._fileInfo)).createEmptySelectors();\r\n        this.features = new Value(features);\r\n        this.rules = [new Ruleset(selectors, value)];\r\n        this.rules[0].allowImports = true;\r\n        this.copyVisibilityInfo(visibilityInfo);\r\n        this.allowRoot = true;\r\n        this.setParent(selectors, this);\r\n        this.setParent(this.features, this);\r\n        this.setParent(this.rules, this);\r\n    };\r\n    Media.prototype = Object.assign(new AtRule(), {\r\n        type: 'Media',\r\n        isRulesetLike: function () {\r\n            return true;\r\n        },\r\n        accept: function (visitor) {\r\n            if (this.features) {\r\n                this.features = visitor.visit(this.features);\r\n            }\r\n            if (this.rules) {\r\n                this.rules = visitor.visitArray(this.rules);\r\n            }\r\n        },\r\n        genCSS: function (context, output) {\r\n            output.add('@media ', this._fileInfo, this._index);\r\n            this.features.genCSS(context, output);\r\n            this.outputRuleset(context, output, this.rules);\r\n        },\r\n        eval: function (context) {\r\n            if (!context.mediaBlocks) {\r\n                context.mediaBlocks = [];\r\n                context.mediaPath = [];\r\n            }\r\n            var media = new Media(null, [], this._index, this._fileInfo, this.visibilityInfo());\r\n            if (this.debugInfo) {\r\n                this.rules[0].debugInfo = this.debugInfo;\r\n                media.debugInfo = this.debugInfo;\r\n            }\r\n            media.features = this.features.eval(context);\r\n            context.mediaPath.push(media);\r\n            context.mediaBlocks.push(media);\r\n            this.rules[0].functionRegistry = context.frames[0].functionRegistry.inherit();\r\n            context.frames.unshift(this.rules[0]);\r\n            media.rules = [this.rules[0].eval(context)];\r\n            context.frames.shift();\r\n            context.mediaPath.pop();\r\n            return context.mediaPath.length === 0 ? media.evalTop(context) :\r\n                media.evalNested(context);\r\n        },\r\n        evalTop: function (context) {\r\n            var result = this;\r\n            // Render all dependent Media blocks.\r\n            if (context.mediaBlocks.length > 1) {\r\n                var selectors = (new Selector([], null, null, this.getIndex(), this.fileInfo())).createEmptySelectors();\r\n                result = new Ruleset(selectors, context.mediaBlocks);\r\n                result.multiMedia = true;\r\n                result.copyVisibilityInfo(this.visibilityInfo());\r\n                this.setParent(result, this);\r\n            }\r\n            delete context.mediaBlocks;\r\n            delete context.mediaPath;\r\n            return result;\r\n        },\r\n        evalNested: function (context) {\r\n            var i;\r\n            var value;\r\n            var path = context.mediaPath.concat([this]);\r\n            // Extract the media-query conditions separated with `,` (OR).\r\n            for (i = 0; i < path.length; i++) {\r\n                value = path[i].features instanceof Value ?\r\n                    path[i].features.value : path[i].features;\r\n                path[i] = Array.isArray(value) ? value : [value];\r\n            }\r\n            // Trace all permutations to generate the resulting media-query.\r\n            //\r\n            // (a, b and c) with nested (d, e) ->\r\n            //    a and d\r\n            //    a and e\r\n            //    b and c and d\r\n            //    b and c and e\r\n            this.features = new Value(this.permute(path).map(function (path) {\r\n                path = path.map(function (fragment) { return fragment.toCSS ? fragment : new Anonymous(fragment); });\r\n                for (i = path.length - 1; i > 0; i--) {\r\n                    path.splice(i, 0, new Anonymous('and'));\r\n                }\r\n                return new Expression(path);\r\n            }));\r\n            this.setParent(this.features, this);\r\n            // Fake a tree-node that doesn't output anything.\r\n            return new Ruleset([], []);\r\n        },\r\n        permute: function (arr) {\r\n            if (arr.length === 0) {\r\n                return [];\r\n            }\r\n            else if (arr.length === 1) {\r\n                return arr[0];\r\n            }\r\n            else {\r\n                var result = [];\r\n                var rest = this.permute(arr.slice(1));\r\n                for (var i = 0; i < rest.length; i++) {\r\n                    for (var j = 0; j < arr[0].length; j++) {\r\n                        result.push([arr[0][j]].concat(rest[i]));\r\n                    }\r\n                }\r\n                return result;\r\n            }\r\n        },\r\n        bubbleSelectors: function (selectors) {\r\n            if (!selectors) {\r\n                return;\r\n            }\r\n            this.rules = [new Ruleset(copyArray(selectors), [this.rules[0]])];\r\n            this.setParent(this.rules, this);\r\n        }\r\n    });\n\n    //\r\n    // CSS @import node\r\n    //\r\n    // The general strategy here is that we don't want to wait\r\n    // for the parsing to be completed, before we start importing\r\n    // the file. That's because in the context of a browser,\r\n    // most of the time will be spent waiting for the server to respond.\r\n    //\r\n    // On creation, we push the import path to our import queue, though\r\n    // `import,push`, we also pass it a callback, which it'll call once\r\n    // the file has been fetched, and parsed.\r\n    //\r\n    var Import = function (path, features, options, index, currentFileInfo, visibilityInfo) {\r\n        this.options = options;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.path = path;\r\n        this.features = features;\r\n        this.allowRoot = true;\r\n        if (this.options.less !== undefined || this.options.inline) {\r\n            this.css = !this.options.less || this.options.inline;\r\n        }\r\n        else {\r\n            var pathValue = this.getPath();\r\n            if (pathValue && /[#\\.\\&\\?]css([\\?;].*)?$/.test(pathValue)) {\r\n                this.css = true;\r\n            }\r\n        }\r\n        this.copyVisibilityInfo(visibilityInfo);\r\n        this.setParent(this.features, this);\r\n        this.setParent(this.path, this);\r\n    };\r\n    Import.prototype = Object.assign(new Node(), {\r\n        type: 'Import',\r\n        accept: function (visitor) {\r\n            if (this.features) {\r\n                this.features = visitor.visit(this.features);\r\n            }\r\n            this.path = visitor.visit(this.path);\r\n            if (!this.options.isPlugin && !this.options.inline && this.root) {\r\n                this.root = visitor.visit(this.root);\r\n            }\r\n        },\r\n        genCSS: function (context, output) {\r\n            if (this.css && this.path._fileInfo.reference === undefined) {\r\n                output.add('@import ', this._fileInfo, this._index);\r\n                this.path.genCSS(context, output);\r\n                if (this.features) {\r\n                    output.add(' ');\r\n                    this.features.genCSS(context, output);\r\n                }\r\n                output.add(';');\r\n            }\r\n        },\r\n        getPath: function () {\r\n            return (this.path instanceof URL) ?\r\n                this.path.value.value : this.path.value;\r\n        },\r\n        isVariableImport: function () {\r\n            var path = this.path;\r\n            if (path instanceof URL) {\r\n                path = path.value;\r\n            }\r\n            if (path instanceof Quoted) {\r\n                return path.containsVariables();\r\n            }\r\n            return true;\r\n        },\r\n        evalForImport: function (context) {\r\n            var path = this.path;\r\n            if (path instanceof URL) {\r\n                path = path.value;\r\n            }\r\n            return new Import(path.eval(context), this.features, this.options, this._index, this._fileInfo, this.visibilityInfo());\r\n        },\r\n        evalPath: function (context) {\r\n            var path = this.path.eval(context);\r\n            var fileInfo = this._fileInfo;\r\n            if (!(path instanceof URL)) {\r\n                // Add the rootpath if the URL requires a rewrite\r\n                var pathValue = path.value;\r\n                if (fileInfo &&\r\n                    pathValue &&\r\n                    context.pathRequiresRewrite(pathValue)) {\r\n                    path.value = context.rewritePath(pathValue, fileInfo.rootpath);\r\n                }\r\n                else {\r\n                    path.value = context.normalizePath(path.value);\r\n                }\r\n            }\r\n            return path;\r\n        },\r\n        eval: function (context) {\r\n            var result = this.doEval(context);\r\n            if (this.options.reference || this.blocksVisibility()) {\r\n                if (result.length || result.length === 0) {\r\n                    result.forEach(function (node) {\r\n                        node.addVisibilityBlock();\r\n                    });\r\n                }\r\n                else {\r\n                    result.addVisibilityBlock();\r\n                }\r\n            }\r\n            return result;\r\n        },\r\n        doEval: function (context) {\r\n            var ruleset;\r\n            var registry;\r\n            var features = this.features && this.features.eval(context);\r\n            if (this.options.isPlugin) {\r\n                if (this.root && this.root.eval) {\r\n                    try {\r\n                        this.root.eval(context);\r\n                    }\r\n                    catch (e) {\r\n                        e.message = 'Plugin error during evaluation';\r\n                        throw new LessError(e, this.root.imports, this.root.filename);\r\n                    }\r\n                }\r\n                registry = context.frames[0] && context.frames[0].functionRegistry;\r\n                if (registry && this.root && this.root.functions) {\r\n                    registry.addMultiple(this.root.functions);\r\n                }\r\n                return [];\r\n            }\r\n            if (this.skip) {\r\n                if (typeof this.skip === 'function') {\r\n                    this.skip = this.skip();\r\n                }\r\n                if (this.skip) {\r\n                    return [];\r\n                }\r\n            }\r\n            if (this.options.inline) {\r\n                var contents = new Anonymous(this.root, 0, {\r\n                    filename: this.importedFilename,\r\n                    reference: this.path._fileInfo && this.path._fileInfo.reference\r\n                }, true, true);\r\n                return this.features ? new Media([contents], this.features.value) : [contents];\r\n            }\r\n            else if (this.css) {\r\n                var newImport = new Import(this.evalPath(context), features, this.options, this._index);\r\n                if (!newImport.css && this.error) {\r\n                    throw this.error;\r\n                }\r\n                return newImport;\r\n            }\r\n            else if (this.root) {\r\n                ruleset = new Ruleset(null, copyArray(this.root.rules));\r\n                ruleset.evalImports(context);\r\n                return this.features ? new Media(ruleset.rules, this.features.value) : ruleset.rules;\r\n            }\r\n            else {\r\n                return [];\r\n            }\r\n        }\r\n    });\n\n    var JsEvalNode = function () { };\r\n    JsEvalNode.prototype = Object.assign(new Node(), {\r\n        evaluateJavaScript: function (expression, context) {\r\n            var result;\r\n            var that = this;\r\n            var evalContext = {};\r\n            if (!context.javascriptEnabled) {\r\n                throw { message: 'Inline JavaScript is not enabled. Is it set in your options?',\r\n                    filename: this.fileInfo().filename,\r\n                    index: this.getIndex() };\r\n            }\r\n            expression = expression.replace(/@\\{([\\w-]+)\\}/g, function (_, name) {\r\n                return that.jsify(new Variable(\"@\" + name, that.getIndex(), that.fileInfo()).eval(context));\r\n            });\r\n            try {\r\n                expression = new Function(\"return (\" + expression + \")\");\r\n            }\r\n            catch (e) {\r\n                throw { message: \"JavaScript evaluation error: \" + e.message + \" from `\" + expression + \"`\",\r\n                    filename: this.fileInfo().filename,\r\n                    index: this.getIndex() };\r\n            }\r\n            var variables = context.frames[0].variables();\r\n            for (var k in variables) {\r\n                if (variables.hasOwnProperty(k)) {\r\n                    /* jshint loopfunc:true */\r\n                    evalContext[k.slice(1)] = {\r\n                        value: variables[k].value,\r\n                        toJS: function () {\r\n                            return this.value.eval(context).toCSS();\r\n                        }\r\n                    };\r\n                }\r\n            }\r\n            try {\r\n                result = expression.call(evalContext);\r\n            }\r\n            catch (e) {\r\n                throw { message: \"JavaScript evaluation error: '\" + e.name + \": \" + e.message.replace(/[\"]/g, '\\'') + \"'\",\r\n                    filename: this.fileInfo().filename,\r\n                    index: this.getIndex() };\r\n            }\r\n            return result;\r\n        },\r\n        jsify: function (obj) {\r\n            if (Array.isArray(obj.value) && (obj.value.length > 1)) {\r\n                return \"[\" + obj.value.map(function (v) { return v.toCSS(); }).join(', ') + \"]\";\r\n            }\r\n            else {\r\n                return obj.toCSS();\r\n            }\r\n        }\r\n    });\n\n    var JavaScript = function (string, escaped, index, currentFileInfo) {\r\n        this.escaped = escaped;\r\n        this.expression = string;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n    };\r\n    JavaScript.prototype = Object.assign(new JsEvalNode(), {\r\n        type: 'JavaScript',\r\n        eval: function (context) {\r\n            var result = this.evaluateJavaScript(this.expression, context);\r\n            var type = typeof result;\r\n            if (type === 'number' && !isNaN(result)) {\r\n                return new Dimension(result);\r\n            }\r\n            else if (type === 'string') {\r\n                return new Quoted(\"\\\"\" + result + \"\\\"\", result, this.escaped, this._index);\r\n            }\r\n            else if (Array.isArray(result)) {\r\n                return new Anonymous(result.join(', '));\r\n            }\r\n            else {\r\n                return new Anonymous(result);\r\n            }\r\n        }\r\n    });\n\n    var Assignment = function (key, val) {\r\n        this.key = key;\r\n        this.value = val;\r\n    };\r\n    Assignment.prototype = Object.assign(new Node(), {\r\n        type: 'Assignment',\r\n        accept: function (visitor) {\r\n            this.value = visitor.visit(this.value);\r\n        },\r\n        eval: function (context) {\r\n            if (this.value.eval) {\r\n                return new Assignment(this.key, this.value.eval(context));\r\n            }\r\n            return this;\r\n        },\r\n        genCSS: function (context, output) {\r\n            output.add(this.key + \"=\");\r\n            if (this.value.genCSS) {\r\n                this.value.genCSS(context, output);\r\n            }\r\n            else {\r\n                output.add(this.value);\r\n            }\r\n        }\r\n    });\n\n    var Condition = function (op, l, r, i, negate) {\r\n        this.op = op.trim();\r\n        this.lvalue = l;\r\n        this.rvalue = r;\r\n        this._index = i;\r\n        this.negate = negate;\r\n    };\r\n    Condition.prototype = Object.assign(new Node(), {\r\n        type: 'Condition',\r\n        accept: function (visitor) {\r\n            this.lvalue = visitor.visit(this.lvalue);\r\n            this.rvalue = visitor.visit(this.rvalue);\r\n        },\r\n        eval: function (context) {\r\n            var result = (function (op, a, b) {\r\n                switch (op) {\r\n                    case 'and': return a && b;\r\n                    case 'or': return a || b;\r\n                    default:\r\n                        switch (Node.compare(a, b)) {\r\n                            case -1:\r\n                                return op === '<' || op === '=<' || op === '<=';\r\n                            case 0:\r\n                                return op === '=' || op === '>=' || op === '=<' || op === '<=';\r\n                            case 1:\r\n                                return op === '>' || op === '>=';\r\n                            default:\r\n                                return false;\r\n                        }\r\n                }\r\n            })(this.op, this.lvalue.eval(context), this.rvalue.eval(context));\r\n            return this.negate ? !result : result;\r\n        }\r\n    });\n\n    var UnicodeDescriptor = function (value) {\r\n        this.value = value;\r\n    };\r\n    UnicodeDescriptor.prototype = Object.assign(new Node(), {\r\n        type: 'UnicodeDescriptor'\r\n    });\n\n    var Negative = function (node) {\r\n        this.value = node;\r\n    };\r\n    Negative.prototype = Object.assign(new Node(), {\r\n        type: 'Negative',\r\n        genCSS: function (context, output) {\r\n            output.add('-');\r\n            this.value.genCSS(context, output);\r\n        },\r\n        eval: function (context) {\r\n            if (context.isMathOn()) {\r\n                return (new Operation('*', [new Dimension(-1), this.value])).eval(context);\r\n            }\r\n            return new Negative(this.value.eval(context));\r\n        }\r\n    });\n\n    var Extend = function (selector, option, index, currentFileInfo, visibilityInfo) {\r\n        this.selector = selector;\r\n        this.option = option;\r\n        this.object_id = Extend.next_id++;\r\n        this.parent_ids = [this.object_id];\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.copyVisibilityInfo(visibilityInfo);\r\n        this.allowRoot = true;\r\n        switch (option) {\r\n            case 'all':\r\n                this.allowBefore = true;\r\n                this.allowAfter = true;\r\n                break;\r\n            default:\r\n                this.allowBefore = false;\r\n                this.allowAfter = false;\r\n                break;\r\n        }\r\n        this.setParent(this.selector, this);\r\n    };\r\n    Extend.prototype = Object.assign(new Node(), {\r\n        type: 'Extend',\r\n        accept: function (visitor) {\r\n            this.selector = visitor.visit(this.selector);\r\n        },\r\n        eval: function (context) {\r\n            return new Extend(this.selector.eval(context), this.option, this.getIndex(), this.fileInfo(), this.visibilityInfo());\r\n        },\r\n        clone: function (context) {\r\n            return new Extend(this.selector, this.option, this.getIndex(), this.fileInfo(), this.visibilityInfo());\r\n        },\r\n        // it concatenates (joins) all selectors in selector array\r\n        findSelfSelectors: function (selectors) {\r\n            var selfElements = [], i, selectorElements;\r\n            for (i = 0; i < selectors.length; i++) {\r\n                selectorElements = selectors[i].elements;\r\n                // duplicate the logic in genCSS function inside the selector node.\r\n                // future TODO - move both logics into the selector joiner visitor\r\n                if (i > 0 && selectorElements.length && selectorElements[0].combinator.value === '') {\r\n                    selectorElements[0].combinator.value = ' ';\r\n                }\r\n                selfElements = selfElements.concat(selectors[i].elements);\r\n            }\r\n            this.selfSelectors = [new Selector(selfElements)];\r\n            this.selfSelectors[0].copyVisibilityInfo(this.visibilityInfo());\r\n        }\r\n    });\r\n    Extend.next_id = 0;\n\n    var VariableCall = function (variable, index, currentFileInfo) {\r\n        this.variable = variable;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.allowRoot = true;\r\n    };\r\n    VariableCall.prototype = Object.assign(new Node(), {\r\n        type: 'VariableCall',\r\n        eval: function (context) {\r\n            var rules;\r\n            var detachedRuleset = new Variable(this.variable, this.getIndex(), this.fileInfo()).eval(context);\r\n            var error = new LessError({ message: \"Could not evaluate variable call \" + this.variable });\r\n            if (!detachedRuleset.ruleset) {\r\n                if (detachedRuleset.rules) {\r\n                    rules = detachedRuleset;\r\n                }\r\n                else if (Array.isArray(detachedRuleset)) {\r\n                    rules = new Ruleset('', detachedRuleset);\r\n                }\r\n                else if (Array.isArray(detachedRuleset.value)) {\r\n                    rules = new Ruleset('', detachedRuleset.value);\r\n                }\r\n                else {\r\n                    throw error;\r\n                }\r\n                detachedRuleset = new DetachedRuleset(rules);\r\n            }\r\n            if (detachedRuleset.ruleset) {\r\n                return detachedRuleset.callEval(context);\r\n            }\r\n            throw error;\r\n        }\r\n    });\n\n    var NamespaceValue = function (ruleCall, lookups, index, fileInfo) {\r\n        this.value = ruleCall;\r\n        this.lookups = lookups;\r\n        this._index = index;\r\n        this._fileInfo = fileInfo;\r\n    };\r\n    NamespaceValue.prototype = Object.assign(new Node(), {\r\n        type: 'NamespaceValue',\r\n        eval: function (context) {\r\n            var i, name, rules = this.value.eval(context);\r\n            for (i = 0; i < this.lookups.length; i++) {\r\n                name = this.lookups[i];\r\n                /**\r\n                 * Eval'd DRs return rulesets.\r\n                 * Eval'd mixins return rules, so let's make a ruleset if we need it.\r\n                 * We need to do this because of late parsing of values\r\n                 */\r\n                if (Array.isArray(rules)) {\r\n                    rules = new Ruleset([new Selector()], rules);\r\n                }\r\n                if (name === '') {\r\n                    rules = rules.lastDeclaration();\r\n                }\r\n                else if (name.charAt(0) === '@') {\r\n                    if (name.charAt(1) === '@') {\r\n                        name = \"@\" + new Variable(name.substr(1)).eval(context).value;\r\n                    }\r\n                    if (rules.variables) {\r\n                        rules = rules.variable(name);\r\n                    }\r\n                    if (!rules) {\r\n                        throw { type: 'Name',\r\n                            message: \"variable \" + name + \" not found\",\r\n                            filename: this.fileInfo().filename,\r\n                            index: this.getIndex() };\r\n                    }\r\n                }\r\n                else {\r\n                    if (name.substring(0, 2) === '$@') {\r\n                        name = \"$\" + new Variable(name.substr(1)).eval(context).value;\r\n                    }\r\n                    else {\r\n                        name = name.charAt(0) === '$' ? name : \"$\" + name;\r\n                    }\r\n                    if (rules.properties) {\r\n                        rules = rules.property(name);\r\n                    }\r\n                    if (!rules) {\r\n                        throw { type: 'Name',\r\n                            message: \"property \\\"\" + name.substr(1) + \"\\\" not found\",\r\n                            filename: this.fileInfo().filename,\r\n                            index: this.getIndex() };\r\n                    }\r\n                    // Properties are an array of values, since a ruleset can have multiple props.\r\n                    // We pick the last one (the \"cascaded\" value)\r\n                    rules = rules[rules.length - 1];\r\n                }\r\n                if (rules.value) {\r\n                    rules = rules.eval(context).value;\r\n                }\r\n                if (rules.ruleset) {\r\n                    rules = rules.ruleset.eval(context);\r\n                }\r\n            }\r\n            return rules;\r\n        }\r\n    });\n\n    var Definition = function (name, params, rules, condition, variadic, frames, visibilityInfo) {\r\n        this.name = name || 'anonymous mixin';\r\n        this.selectors = [new Selector([new Element(null, name, false, this._index, this._fileInfo)])];\r\n        this.params = params;\r\n        this.condition = condition;\r\n        this.variadic = variadic;\r\n        this.arity = params.length;\r\n        this.rules = rules;\r\n        this._lookups = {};\r\n        var optionalParameters = [];\r\n        this.required = params.reduce(function (count, p) {\r\n            if (!p.name || (p.name && !p.value)) {\r\n                return count + 1;\r\n            }\r\n            else {\r\n                optionalParameters.push(p.name);\r\n                return count;\r\n            }\r\n        }, 0);\r\n        this.optionalParameters = optionalParameters;\r\n        this.frames = frames;\r\n        this.copyVisibilityInfo(visibilityInfo);\r\n        this.allowRoot = true;\r\n    };\r\n    Definition.prototype = Object.assign(new Ruleset(), {\r\n        type: 'MixinDefinition',\r\n        evalFirst: true,\r\n        accept: function (visitor) {\r\n            if (this.params && this.params.length) {\r\n                this.params = visitor.visitArray(this.params);\r\n            }\r\n            this.rules = visitor.visitArray(this.rules);\r\n            if (this.condition) {\r\n                this.condition = visitor.visit(this.condition);\r\n            }\r\n        },\r\n        evalParams: function (context, mixinEnv, args, evaldArguments) {\r\n            /* jshint boss:true */\r\n            var frame = new Ruleset(null, null);\r\n            var varargs;\r\n            var arg;\r\n            var params = copyArray(this.params);\r\n            var i;\r\n            var j;\r\n            var val;\r\n            var name;\r\n            var isNamedFound;\r\n            var argIndex;\r\n            var argsLength = 0;\r\n            if (mixinEnv.frames && mixinEnv.frames[0] && mixinEnv.frames[0].functionRegistry) {\r\n                frame.functionRegistry = mixinEnv.frames[0].functionRegistry.inherit();\r\n            }\r\n            mixinEnv = new contexts.Eval(mixinEnv, [frame].concat(mixinEnv.frames));\r\n            if (args) {\r\n                args = copyArray(args);\r\n                argsLength = args.length;\r\n                for (i = 0; i < argsLength; i++) {\r\n                    arg = args[i];\r\n                    if (name = (arg && arg.name)) {\r\n                        isNamedFound = false;\r\n                        for (j = 0; j < params.length; j++) {\r\n                            if (!evaldArguments[j] && name === params[j].name) {\r\n                                evaldArguments[j] = arg.value.eval(context);\r\n                                frame.prependRule(new Declaration(name, arg.value.eval(context)));\r\n                                isNamedFound = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (isNamedFound) {\r\n                            args.splice(i, 1);\r\n                            i--;\r\n                            continue;\r\n                        }\r\n                        else {\r\n                            throw { type: 'Runtime', message: \"Named argument for \" + this.name + \" \" + args[i].name + \" not found\" };\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            argIndex = 0;\r\n            for (i = 0; i < params.length; i++) {\r\n                if (evaldArguments[i]) {\r\n                    continue;\r\n                }\r\n                arg = args && args[argIndex];\r\n                if (name = params[i].name) {\r\n                    if (params[i].variadic) {\r\n                        varargs = [];\r\n                        for (j = argIndex; j < argsLength; j++) {\r\n                            varargs.push(args[j].value.eval(context));\r\n                        }\r\n                        frame.prependRule(new Declaration(name, new Expression(varargs).eval(context)));\r\n                    }\r\n                    else {\r\n                        val = arg && arg.value;\r\n                        if (val) {\r\n                            // This was a mixin call, pass in a detached ruleset of it's eval'd rules\r\n                            if (Array.isArray(val)) {\r\n                                val = new DetachedRuleset(new Ruleset('', val));\r\n                            }\r\n                            else {\r\n                                val = val.eval(context);\r\n                            }\r\n                        }\r\n                        else if (params[i].value) {\r\n                            val = params[i].value.eval(mixinEnv);\r\n                            frame.resetCache();\r\n                        }\r\n                        else {\r\n                            throw { type: 'Runtime', message: \"wrong number of arguments for \" + this.name + \" (\" + argsLength + \" for \" + this.arity + \")\" };\r\n                        }\r\n                        frame.prependRule(new Declaration(name, val));\r\n                        evaldArguments[i] = val;\r\n                    }\r\n                }\r\n                if (params[i].variadic && args) {\r\n                    for (j = argIndex; j < argsLength; j++) {\r\n                        evaldArguments[j] = args[j].value.eval(context);\r\n                    }\r\n                }\r\n                argIndex++;\r\n            }\r\n            return frame;\r\n        },\r\n        makeImportant: function () {\r\n            var rules = !this.rules ? this.rules : this.rules.map(function (r) {\r\n                if (r.makeImportant) {\r\n                    return r.makeImportant(true);\r\n                }\r\n                else {\r\n                    return r;\r\n                }\r\n            });\r\n            var result = new Definition(this.name, this.params, rules, this.condition, this.variadic, this.frames);\r\n            return result;\r\n        },\r\n        eval: function (context) {\r\n            return new Definition(this.name, this.params, this.rules, this.condition, this.variadic, this.frames || copyArray(context.frames));\r\n        },\r\n        evalCall: function (context, args, important) {\r\n            var _arguments = [];\r\n            var mixinFrames = this.frames ? this.frames.concat(context.frames) : context.frames;\r\n            var frame = this.evalParams(context, new contexts.Eval(context, mixinFrames), args, _arguments);\r\n            var rules;\r\n            var ruleset;\r\n            frame.prependRule(new Declaration('@arguments', new Expression(_arguments).eval(context)));\r\n            rules = copyArray(this.rules);\r\n            ruleset = new Ruleset(null, rules);\r\n            ruleset.originalRuleset = this;\r\n            ruleset = ruleset.eval(new contexts.Eval(context, [this, frame].concat(mixinFrames)));\r\n            if (important) {\r\n                ruleset = ruleset.makeImportant();\r\n            }\r\n            return ruleset;\r\n        },\r\n        matchCondition: function (args, context) {\r\n            if (this.condition && !this.condition.eval(new contexts.Eval(context, [this.evalParams(context, /* the parameter variables */ new contexts.Eval(context, this.frames ? this.frames.concat(context.frames) : context.frames), args, [])]\r\n                .concat(this.frames || []) // the parent namespace/mixin frames\r\n                .concat(context.frames)))) { // the current environment frames\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n        matchArgs: function (args, context) {\r\n            var allArgsCnt = (args && args.length) || 0;\r\n            var len;\r\n            var optionalParameters = this.optionalParameters;\r\n            var requiredArgsCnt = !args ? 0 : args.reduce(function (count, p) {\r\n                if (optionalParameters.indexOf(p.name) < 0) {\r\n                    return count + 1;\r\n                }\r\n                else {\r\n                    return count;\r\n                }\r\n            }, 0);\r\n            if (!this.variadic) {\r\n                if (requiredArgsCnt < this.required) {\r\n                    return false;\r\n                }\r\n                if (allArgsCnt > this.params.length) {\r\n                    return false;\r\n                }\r\n            }\r\n            else {\r\n                if (requiredArgsCnt < (this.required - 1)) {\r\n                    return false;\r\n                }\r\n            }\r\n            // check patterns\r\n            len = Math.min(requiredArgsCnt, this.arity);\r\n            for (var i = 0; i < len; i++) {\r\n                if (!this.params[i].name && !this.params[i].variadic) {\r\n                    if (args[i].value.eval(context).toCSS() != this.params[i].value.eval(context).toCSS()) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n    });\n\n    var MixinCall = function (elements, args, index, currentFileInfo, important) {\r\n        this.selector = new Selector(elements);\r\n        this.arguments = args || [];\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.important = important;\r\n        this.allowRoot = true;\r\n        this.setParent(this.selector, this);\r\n    };\r\n    MixinCall.prototype = Object.assign(new Node(), {\r\n        type: 'MixinCall',\r\n        accept: function (visitor) {\r\n            if (this.selector) {\r\n                this.selector = visitor.visit(this.selector);\r\n            }\r\n            if (this.arguments.length) {\r\n                this.arguments = visitor.visitArray(this.arguments);\r\n            }\r\n        },\r\n        eval: function (context) {\r\n            var mixins;\r\n            var mixin;\r\n            var mixinPath;\r\n            var args = [];\r\n            var arg;\r\n            var argValue;\r\n            var rules = [];\r\n            var match = false;\r\n            var i;\r\n            var m;\r\n            var f;\r\n            var isRecursive;\r\n            var isOneFound;\r\n            var candidates = [];\r\n            var candidate;\r\n            var conditionResult = [];\r\n            var defaultResult;\r\n            var defFalseEitherCase = -1;\r\n            var defNone = 0;\r\n            var defTrue = 1;\r\n            var defFalse = 2;\r\n            var count;\r\n            var originalRuleset;\r\n            var noArgumentsFilter;\r\n            this.selector = this.selector.eval(context);\r\n            function calcDefGroup(mixin, mixinPath) {\r\n                var f, p, namespace;\r\n                for (f = 0; f < 2; f++) {\r\n                    conditionResult[f] = true;\r\n                    defaultFunc.value(f);\r\n                    for (p = 0; p < mixinPath.length && conditionResult[f]; p++) {\r\n                        namespace = mixinPath[p];\r\n                        if (namespace.matchCondition) {\r\n                            conditionResult[f] = conditionResult[f] && namespace.matchCondition(null, context);\r\n                        }\r\n                    }\r\n                    if (mixin.matchCondition) {\r\n                        conditionResult[f] = conditionResult[f] && mixin.matchCondition(args, context);\r\n                    }\r\n                }\r\n                if (conditionResult[0] || conditionResult[1]) {\r\n                    if (conditionResult[0] != conditionResult[1]) {\r\n                        return conditionResult[1] ?\r\n                            defTrue : defFalse;\r\n                    }\r\n                    return defNone;\r\n                }\r\n                return defFalseEitherCase;\r\n            }\r\n            for (i = 0; i < this.arguments.length; i++) {\r\n                arg = this.arguments[i];\r\n                argValue = arg.value.eval(context);\r\n                if (arg.expand && Array.isArray(argValue.value)) {\r\n                    argValue = argValue.value;\r\n                    for (m = 0; m < argValue.length; m++) {\r\n                        args.push({ value: argValue[m] });\r\n                    }\r\n                }\r\n                else {\r\n                    args.push({ name: arg.name, value: argValue });\r\n                }\r\n            }\r\n            noArgumentsFilter = function (rule) { return rule.matchArgs(null, context); };\r\n            for (i = 0; i < context.frames.length; i++) {\r\n                if ((mixins = context.frames[i].find(this.selector, null, noArgumentsFilter)).length > 0) {\r\n                    isOneFound = true;\r\n                    // To make `default()` function independent of definition order we have two \"subpasses\" here.\r\n                    // At first we evaluate each guard *twice* (with `default() == true` and `default() == false`),\r\n                    // and build candidate list with corresponding flags. Then, when we know all possible matches,\r\n                    // we make a final decision.\r\n                    for (m = 0; m < mixins.length; m++) {\r\n                        mixin = mixins[m].rule;\r\n                        mixinPath = mixins[m].path;\r\n                        isRecursive = false;\r\n                        for (f = 0; f < context.frames.length; f++) {\r\n                            if ((!(mixin instanceof Definition)) && mixin === (context.frames[f].originalRuleset || context.frames[f])) {\r\n                                isRecursive = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (isRecursive) {\r\n                            continue;\r\n                        }\r\n                        if (mixin.matchArgs(args, context)) {\r\n                            candidate = { mixin: mixin, group: calcDefGroup(mixin, mixinPath) };\r\n                            if (candidate.group !== defFalseEitherCase) {\r\n                                candidates.push(candidate);\r\n                            }\r\n                            match = true;\r\n                        }\r\n                    }\r\n                    defaultFunc.reset();\r\n                    count = [0, 0, 0];\r\n                    for (m = 0; m < candidates.length; m++) {\r\n                        count[candidates[m].group]++;\r\n                    }\r\n                    if (count[defNone] > 0) {\r\n                        defaultResult = defFalse;\r\n                    }\r\n                    else {\r\n                        defaultResult = defTrue;\r\n                        if ((count[defTrue] + count[defFalse]) > 1) {\r\n                            throw { type: 'Runtime',\r\n                                message: \"Ambiguous use of `default()` found when matching for `\" + this.format(args) + \"`\",\r\n                                index: this.getIndex(), filename: this.fileInfo().filename };\r\n                        }\r\n                    }\r\n                    for (m = 0; m < candidates.length; m++) {\r\n                        candidate = candidates[m].group;\r\n                        if ((candidate === defNone) || (candidate === defaultResult)) {\r\n                            try {\r\n                                mixin = candidates[m].mixin;\r\n                                if (!(mixin instanceof Definition)) {\r\n                                    originalRuleset = mixin.originalRuleset || mixin;\r\n                                    mixin = new Definition('', [], mixin.rules, null, false, null, originalRuleset.visibilityInfo());\r\n                                    mixin.originalRuleset = originalRuleset;\r\n                                }\r\n                                var newRules = mixin.evalCall(context, args, this.important).rules;\r\n                                this._setVisibilityToReplacement(newRules);\r\n                                Array.prototype.push.apply(rules, newRules);\r\n                            }\r\n                            catch (e) {\r\n                                throw { message: e.message, index: this.getIndex(), filename: this.fileInfo().filename, stack: e.stack };\r\n                            }\r\n                        }\r\n                    }\r\n                    if (match) {\r\n                        return rules;\r\n                    }\r\n                }\r\n            }\r\n            if (isOneFound) {\r\n                throw { type: 'Runtime',\r\n                    message: \"No matching definition was found for `\" + this.format(args) + \"`\",\r\n                    index: this.getIndex(), filename: this.fileInfo().filename };\r\n            }\r\n            else {\r\n                throw { type: 'Name',\r\n                    message: this.selector.toCSS().trim() + \" is undefined\",\r\n                    index: this.getIndex(), filename: this.fileInfo().filename };\r\n            }\r\n        },\r\n        _setVisibilityToReplacement: function (replacement) {\r\n            var i, rule;\r\n            if (this.blocksVisibility()) {\r\n                for (i = 0; i < replacement.length; i++) {\r\n                    rule = replacement[i];\r\n                    rule.addVisibilityBlock();\r\n                }\r\n            }\r\n        },\r\n        format: function (args) {\r\n            return this.selector.toCSS().trim() + \"(\" + (args ? args.map(function (a) {\r\n                var argValue = '';\r\n                if (a.name) {\r\n                    argValue += a.name + \":\";\r\n                }\r\n                if (a.value.toCSS) {\r\n                    argValue += a.value.toCSS();\r\n                }\r\n                else {\r\n                    argValue += '???';\r\n                }\r\n                return argValue;\r\n            }).join(', ') : '') + \")\";\r\n        }\r\n    });\n\n    var tree = {\r\n        Node: Node,\r\n        Color: Color,\r\n        AtRule: AtRule,\r\n        DetachedRuleset: DetachedRuleset,\r\n        Operation: Operation,\r\n        Dimension: Dimension,\r\n        Unit: Unit,\r\n        Keyword: Keyword,\r\n        Variable: Variable,\r\n        Property: Property,\r\n        Ruleset: Ruleset,\r\n        Element: Element,\r\n        Attribute: Attribute,\r\n        Combinator: Combinator,\r\n        Selector: Selector,\r\n        Quoted: Quoted,\r\n        Expression: Expression,\r\n        Declaration: Declaration,\r\n        Call: Call,\r\n        URL: URL,\r\n        Import: Import,\r\n        Comment: Comment,\r\n        Anonymous: Anonymous,\r\n        Value: Value,\r\n        JavaScript: JavaScript,\r\n        Assignment: Assignment,\r\n        Condition: Condition,\r\n        Paren: Paren,\r\n        Media: Media,\r\n        UnicodeDescriptor: UnicodeDescriptor,\r\n        Negative: Negative,\r\n        Extend: Extend,\r\n        VariableCall: VariableCall,\r\n        NamespaceValue: NamespaceValue,\r\n        mixin: {\r\n            Call: MixinCall,\r\n            Definition: Definition\r\n        }\r\n    };\n\n    var AbstractFileManager = /** @class */ (function () {\r\n        function AbstractFileManager() {\r\n        }\r\n        AbstractFileManager.prototype.getPath = function (filename) {\r\n            var j = filename.lastIndexOf('?');\r\n            if (j > 0) {\r\n                filename = filename.slice(0, j);\r\n            }\r\n            j = filename.lastIndexOf('/');\r\n            if (j < 0) {\r\n                j = filename.lastIndexOf('\\\\');\r\n            }\r\n            if (j < 0) {\r\n                return '';\r\n            }\r\n            return filename.slice(0, j + 1);\r\n        };\r\n        AbstractFileManager.prototype.tryAppendExtension = function (path, ext) {\r\n            return /(\\.[a-z]*$)|([\\?;].*)$/.test(path) ? path : path + ext;\r\n        };\r\n        AbstractFileManager.prototype.tryAppendLessExtension = function (path) {\r\n            return this.tryAppendExtension(path, '.less');\r\n        };\r\n        AbstractFileManager.prototype.supportsSync = function () {\r\n            return false;\r\n        };\r\n        AbstractFileManager.prototype.alwaysMakePathsAbsolute = function () {\r\n            return false;\r\n        };\r\n        AbstractFileManager.prototype.isPathAbsolute = function (filename) {\r\n            return (/^(?:[a-z-]+:|\\/|\\\\|#)/i).test(filename);\r\n        };\r\n        // TODO: pull out / replace?\r\n        AbstractFileManager.prototype.join = function (basePath, laterPath) {\r\n            if (!basePath) {\r\n                return laterPath;\r\n            }\r\n            return basePath + laterPath;\r\n        };\r\n        AbstractFileManager.prototype.pathDiff = function (url, baseUrl) {\r\n            // diff between two paths to create a relative path\r\n            var urlParts = this.extractUrlParts(url);\r\n            var baseUrlParts = this.extractUrlParts(baseUrl);\r\n            var i;\r\n            var max;\r\n            var urlDirectories;\r\n            var baseUrlDirectories;\r\n            var diff = '';\r\n            if (urlParts.hostPart !== baseUrlParts.hostPart) {\r\n                return '';\r\n            }\r\n            max = Math.max(baseUrlParts.directories.length, urlParts.directories.length);\r\n            for (i = 0; i < max; i++) {\r\n                if (baseUrlParts.directories[i] !== urlParts.directories[i]) {\r\n                    break;\r\n                }\r\n            }\r\n            baseUrlDirectories = baseUrlParts.directories.slice(i);\r\n            urlDirectories = urlParts.directories.slice(i);\r\n            for (i = 0; i < baseUrlDirectories.length - 1; i++) {\r\n                diff += '../';\r\n            }\r\n            for (i = 0; i < urlDirectories.length - 1; i++) {\r\n                diff += urlDirectories[i] + \"/\";\r\n            }\r\n            return diff;\r\n        };\r\n        // helper function, not part of API\r\n        AbstractFileManager.prototype.extractUrlParts = function (url, baseUrl) {\r\n            // urlParts[1] = protocol://hostname/ OR /\r\n            // urlParts[2] = / if path relative to host base\r\n            // urlParts[3] = directories\r\n            // urlParts[4] = filename\r\n            // urlParts[5] = parameters\r\n            var urlPartsRegex = /^((?:[a-z-]+:)?\\/{2}(?:[^\\/\\?#]*\\/)|([\\/\\\\]))?((?:[^\\/\\\\\\?#]*[\\/\\\\])*)([^\\/\\\\\\?#]*)([#\\?].*)?$/i;\r\n            var urlParts = url.match(urlPartsRegex);\r\n            var returner = {};\r\n            var rawDirectories = [];\r\n            var directories = [];\r\n            var i;\r\n            var baseUrlParts;\r\n            if (!urlParts) {\r\n                throw new Error(\"Could not parse sheet href - '\" + url + \"'\");\r\n            }\r\n            // Stylesheets in IE don't always return the full path\r\n            if (baseUrl && (!urlParts[1] || urlParts[2])) {\r\n                baseUrlParts = baseUrl.match(urlPartsRegex);\r\n                if (!baseUrlParts) {\r\n                    throw new Error(\"Could not parse page url - '\" + baseUrl + \"'\");\r\n                }\r\n                urlParts[1] = urlParts[1] || baseUrlParts[1] || '';\r\n                if (!urlParts[2]) {\r\n                    urlParts[3] = baseUrlParts[3] + urlParts[3];\r\n                }\r\n            }\r\n            if (urlParts[3]) {\r\n                rawDirectories = urlParts[3].replace(/\\\\/g, '/').split('/');\r\n                // collapse '..' and skip '.'\r\n                for (i = 0; i < rawDirectories.length; i++) {\r\n                    if (rawDirectories[i] === '..') {\r\n                        directories.pop();\r\n                    }\r\n                    else if (rawDirectories[i] !== '.') {\r\n                        directories.push(rawDirectories[i]);\r\n                    }\r\n                }\r\n            }\r\n            returner.hostPart = urlParts[1];\r\n            returner.directories = directories;\r\n            returner.rawPath = (urlParts[1] || '') + rawDirectories.join('/');\r\n            returner.path = (urlParts[1] || '') + directories.join('/');\r\n            returner.filename = urlParts[4];\r\n            returner.fileUrl = returner.path + (urlParts[4] || '');\r\n            returner.url = returner.fileUrl + (urlParts[5] || '');\r\n            return returner;\r\n        };\r\n        return AbstractFileManager;\r\n    }());\n\n    var AbstractPluginLoader = /** @class */ (function () {\r\n        function AbstractPluginLoader() {\r\n            // Implemented by Node.js plugin loader\r\n            this.require = function () {\r\n                return null;\r\n            };\r\n        }\r\n        AbstractPluginLoader.prototype.evalPlugin = function (contents, context, imports, pluginOptions, fileInfo) {\r\n            var loader, registry, pluginObj, localModule, pluginManager, filename, result;\r\n            pluginManager = context.pluginManager;\r\n            if (fileInfo) {\r\n                if (typeof fileInfo === 'string') {\r\n                    filename = fileInfo;\r\n                }\r\n                else {\r\n                    filename = fileInfo.filename;\r\n                }\r\n            }\r\n            var shortname = (new this.less.FileManager()).extractUrlParts(filename).filename;\r\n            if (filename) {\r\n                pluginObj = pluginManager.get(filename);\r\n                if (pluginObj) {\r\n                    result = this.trySetOptions(pluginObj, filename, shortname, pluginOptions);\r\n                    if (result) {\r\n                        return result;\r\n                    }\r\n                    try {\r\n                        if (pluginObj.use) {\r\n                            pluginObj.use.call(this.context, pluginObj);\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        e.message = e.message || 'Error during @plugin call';\r\n                        return new LessError(e, imports, filename);\r\n                    }\r\n                    return pluginObj;\r\n                }\r\n            }\r\n            localModule = {\r\n                exports: {},\r\n                pluginManager: pluginManager,\r\n                fileInfo: fileInfo\r\n            };\r\n            registry = functionRegistry.create();\r\n            var registerPlugin = function (obj) {\r\n                pluginObj = obj;\r\n            };\r\n            try {\r\n                loader = new Function('module', 'require', 'registerPlugin', 'functions', 'tree', 'less', 'fileInfo', contents);\r\n                loader(localModule, this.require(filename), registerPlugin, registry, this.less.tree, this.less, fileInfo);\r\n            }\r\n            catch (e) {\r\n                return new LessError(e, imports, filename);\r\n            }\r\n            if (!pluginObj) {\r\n                pluginObj = localModule.exports;\r\n            }\r\n            pluginObj = this.validatePlugin(pluginObj, filename, shortname);\r\n            if (pluginObj instanceof LessError) {\r\n                return pluginObj;\r\n            }\r\n            if (pluginObj) {\r\n                pluginObj.imports = imports;\r\n                pluginObj.filename = filename;\r\n                // For < 3.x (or unspecified minVersion) - setOptions() before install()\r\n                if (!pluginObj.minVersion || this.compareVersion('3.0.0', pluginObj.minVersion) < 0) {\r\n                    result = this.trySetOptions(pluginObj, filename, shortname, pluginOptions);\r\n                    if (result) {\r\n                        return result;\r\n                    }\r\n                }\r\n                // Run on first load\r\n                pluginManager.addPlugin(pluginObj, fileInfo.filename, registry);\r\n                pluginObj.functions = registry.getLocalFunctions();\r\n                // Need to call setOptions again because the pluginObj might have functions\r\n                result = this.trySetOptions(pluginObj, filename, shortname, pluginOptions);\r\n                if (result) {\r\n                    return result;\r\n                }\r\n                // Run every @plugin call\r\n                try {\r\n                    if (pluginObj.use) {\r\n                        pluginObj.use.call(this.context, pluginObj);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    e.message = e.message || 'Error during @plugin call';\r\n                    return new LessError(e, imports, filename);\r\n                }\r\n            }\r\n            else {\r\n                return new LessError({ message: 'Not a valid plugin' }, imports, filename);\r\n            }\r\n            return pluginObj;\r\n        };\r\n        AbstractPluginLoader.prototype.trySetOptions = function (plugin, filename, name, options) {\r\n            if (options && !plugin.setOptions) {\r\n                return new LessError({\r\n                    message: \"Options have been provided but the plugin \" + name + \" does not support any options.\"\r\n                });\r\n            }\r\n            try {\r\n                plugin.setOptions && plugin.setOptions(options);\r\n            }\r\n            catch (e) {\r\n                return new LessError(e);\r\n            }\r\n        };\r\n        AbstractPluginLoader.prototype.validatePlugin = function (plugin, filename, name) {\r\n            if (plugin) {\r\n                // support plugins being a function\r\n                // so that the plugin can be more usable programmatically\r\n                if (typeof plugin === 'function') {\r\n                    plugin = new plugin();\r\n                }\r\n                if (plugin.minVersion) {\r\n                    if (this.compareVersion(plugin.minVersion, this.less.version) < 0) {\r\n                        return new LessError({\r\n                            message: \"Plugin \" + name + \" requires version \" + this.versionToString(plugin.minVersion)\r\n                        });\r\n                    }\r\n                }\r\n                return plugin;\r\n            }\r\n            return null;\r\n        };\r\n        AbstractPluginLoader.prototype.compareVersion = function (aVersion, bVersion) {\r\n            if (typeof aVersion === 'string') {\r\n                aVersion = aVersion.match(/^(\\d+)\\.?(\\d+)?\\.?(\\d+)?/);\r\n                aVersion.shift();\r\n            }\r\n            for (var i = 0; i < aVersion.length; i++) {\r\n                if (aVersion[i] !== bVersion[i]) {\r\n                    return parseInt(aVersion[i]) > parseInt(bVersion[i]) ? -1 : 1;\r\n                }\r\n            }\r\n            return 0;\r\n        };\r\n        AbstractPluginLoader.prototype.versionToString = function (version) {\r\n            var versionString = '';\r\n            for (var i = 0; i < version.length; i++) {\r\n                versionString += (versionString ? '.' : '') + version[i];\r\n            }\r\n            return versionString;\r\n        };\r\n        AbstractPluginLoader.prototype.printUsage = function (plugins) {\r\n            for (var i = 0; i < plugins.length; i++) {\r\n                var plugin = plugins[i];\r\n                if (plugin.printUsage) {\r\n                    plugin.printUsage();\r\n                }\r\n            }\r\n        };\r\n        return AbstractPluginLoader;\r\n    }());\n\n    var _visitArgs = { visitDeeper: true };\r\n    var _hasIndexed = false;\r\n    function _noop(node) {\r\n        return node;\r\n    }\r\n    function indexNodeTypes(parent, ticker) {\r\n        // add .typeIndex to tree node types for lookup table\r\n        var key, child;\r\n        for (key in parent) {\r\n            /* eslint guard-for-in: 0 */\r\n            child = parent[key];\r\n            switch (typeof child) {\r\n                case 'function':\r\n                    // ignore bound functions directly on tree which do not have a prototype\r\n                    // or aren't nodes\r\n                    if (child.prototype && child.prototype.type) {\r\n                        child.prototype.typeIndex = ticker++;\r\n                    }\r\n                    break;\r\n                case 'object':\r\n                    ticker = indexNodeTypes(child, ticker);\r\n                    break;\r\n            }\r\n        }\r\n        return ticker;\r\n    }\r\n    var Visitor = /** @class */ (function () {\r\n        function Visitor(implementation) {\r\n            this._implementation = implementation;\r\n            this._visitInCache = {};\r\n            this._visitOutCache = {};\r\n            if (!_hasIndexed) {\r\n                indexNodeTypes(tree, 1);\r\n                _hasIndexed = true;\r\n            }\r\n        }\r\n        Visitor.prototype.visit = function (node) {\r\n            if (!node) {\r\n                return node;\r\n            }\r\n            var nodeTypeIndex = node.typeIndex;\r\n            if (!nodeTypeIndex) {\r\n                // MixinCall args aren't a node type?\r\n                if (node.value && node.value.typeIndex) {\r\n                    this.visit(node.value);\r\n                }\r\n                return node;\r\n            }\r\n            var impl = this._implementation;\r\n            var func = this._visitInCache[nodeTypeIndex];\r\n            var funcOut = this._visitOutCache[nodeTypeIndex];\r\n            var visitArgs = _visitArgs;\r\n            var fnName;\r\n            visitArgs.visitDeeper = true;\r\n            if (!func) {\r\n                fnName = \"visit\" + node.type;\r\n                func = impl[fnName] || _noop;\r\n                funcOut = impl[fnName + \"Out\"] || _noop;\r\n                this._visitInCache[nodeTypeIndex] = func;\r\n                this._visitOutCache[nodeTypeIndex] = funcOut;\r\n            }\r\n            if (func !== _noop) {\r\n                var newNode = func.call(impl, node, visitArgs);\r\n                if (node && impl.isReplacing) {\r\n                    node = newNode;\r\n                }\r\n            }\r\n            if (visitArgs.visitDeeper && node) {\r\n                if (node.length) {\r\n                    for (var i = 0, cnt = node.length; i < cnt; i++) {\r\n                        if (node[i].accept) {\r\n                            node[i].accept(this);\r\n                        }\r\n                    }\r\n                }\r\n                else if (node.accept) {\r\n                    node.accept(this);\r\n                }\r\n            }\r\n            if (funcOut != _noop) {\r\n                funcOut.call(impl, node);\r\n            }\r\n            return node;\r\n        };\r\n        Visitor.prototype.visitArray = function (nodes, nonReplacing) {\r\n            if (!nodes) {\r\n                return nodes;\r\n            }\r\n            var cnt = nodes.length;\r\n            var i;\r\n            // Non-replacing\r\n            if (nonReplacing || !this._implementation.isReplacing) {\r\n                for (i = 0; i < cnt; i++) {\r\n                    this.visit(nodes[i]);\r\n                }\r\n                return nodes;\r\n            }\r\n            // Replacing\r\n            var out = [];\r\n            for (i = 0; i < cnt; i++) {\r\n                var evald = this.visit(nodes[i]);\r\n                if (evald === undefined) {\r\n                    continue;\r\n                }\r\n                if (!evald.splice) {\r\n                    out.push(evald);\r\n                }\r\n                else if (evald.length) {\r\n                    this.flatten(evald, out);\r\n                }\r\n            }\r\n            return out;\r\n        };\r\n        Visitor.prototype.flatten = function (arr, out) {\r\n            if (!out) {\r\n                out = [];\r\n            }\r\n            var cnt, i, item, nestedCnt, j, nestedItem;\r\n            for (i = 0, cnt = arr.length; i < cnt; i++) {\r\n                item = arr[i];\r\n                if (item === undefined) {\r\n                    continue;\r\n                }\r\n                if (!item.splice) {\r\n                    out.push(item);\r\n                    continue;\r\n                }\r\n                for (j = 0, nestedCnt = item.length; j < nestedCnt; j++) {\r\n                    nestedItem = item[j];\r\n                    if (nestedItem === undefined) {\r\n                        continue;\r\n                    }\r\n                    if (!nestedItem.splice) {\r\n                        out.push(nestedItem);\r\n                    }\r\n                    else if (nestedItem.length) {\r\n                        this.flatten(nestedItem, out);\r\n                    }\r\n                }\r\n            }\r\n            return out;\r\n        };\r\n        return Visitor;\r\n    }());\n\n    var ImportSequencer = /** @class */ (function () {\r\n        function ImportSequencer(onSequencerEmpty) {\r\n            this.imports = [];\r\n            this.variableImports = [];\r\n            this._onSequencerEmpty = onSequencerEmpty;\r\n            this._currentDepth = 0;\r\n        }\r\n        ImportSequencer.prototype.addImport = function (callback) {\r\n            var importSequencer = this, importItem = {\r\n                callback: callback,\r\n                args: null,\r\n                isReady: false\r\n            };\r\n            this.imports.push(importItem);\r\n            return function () {\r\n                importItem.args = Array.prototype.slice.call(arguments, 0);\r\n                importItem.isReady = true;\r\n                importSequencer.tryRun();\r\n            };\r\n        };\r\n        ImportSequencer.prototype.addVariableImport = function (callback) {\r\n            this.variableImports.push(callback);\r\n        };\r\n        ImportSequencer.prototype.tryRun = function () {\r\n            this._currentDepth++;\r\n            try {\r\n                while (true) {\r\n                    while (this.imports.length > 0) {\r\n                        var importItem = this.imports[0];\r\n                        if (!importItem.isReady) {\r\n                            return;\r\n                        }\r\n                        this.imports = this.imports.slice(1);\r\n                        importItem.callback.apply(null, importItem.args);\r\n                    }\r\n                    if (this.variableImports.length === 0) {\r\n                        break;\r\n                    }\r\n                    var variableImport = this.variableImports[0];\r\n                    this.variableImports = this.variableImports.slice(1);\r\n                    variableImport();\r\n                }\r\n            }\r\n            finally {\r\n                this._currentDepth--;\r\n            }\r\n            if (this._currentDepth === 0 && this._onSequencerEmpty) {\r\n                this._onSequencerEmpty();\r\n            }\r\n        };\r\n        return ImportSequencer;\r\n    }());\n\n    var ImportVisitor = function (importer, finish) {\r\n        this._visitor = new Visitor(this);\r\n        this._importer = importer;\r\n        this._finish = finish;\r\n        this.context = new contexts.Eval();\r\n        this.importCount = 0;\r\n        this.onceFileDetectionMap = {};\r\n        this.recursionDetector = {};\r\n        this._sequencer = new ImportSequencer(this._onSequencerEmpty.bind(this));\r\n    };\r\n    ImportVisitor.prototype = {\r\n        isReplacing: false,\r\n        run: function (root) {\r\n            try {\r\n                // process the contents\r\n                this._visitor.visit(root);\r\n            }\r\n            catch (e) {\r\n                this.error = e;\r\n            }\r\n            this.isFinished = true;\r\n            this._sequencer.tryRun();\r\n        },\r\n        _onSequencerEmpty: function () {\r\n            if (!this.isFinished) {\r\n                return;\r\n            }\r\n            this._finish(this.error);\r\n        },\r\n        visitImport: function (importNode, visitArgs) {\r\n            var inlineCSS = importNode.options.inline;\r\n            if (!importNode.css || inlineCSS) {\r\n                var context = new contexts.Eval(this.context, copyArray(this.context.frames));\r\n                var importParent = context.frames[0];\r\n                this.importCount++;\r\n                if (importNode.isVariableImport()) {\r\n                    this._sequencer.addVariableImport(this.processImportNode.bind(this, importNode, context, importParent));\r\n                }\r\n                else {\r\n                    this.processImportNode(importNode, context, importParent);\r\n                }\r\n            }\r\n            visitArgs.visitDeeper = false;\r\n        },\r\n        processImportNode: function (importNode, context, importParent) {\r\n            var evaldImportNode;\r\n            var inlineCSS = importNode.options.inline;\r\n            try {\r\n                evaldImportNode = importNode.evalForImport(context);\r\n            }\r\n            catch (e) {\r\n                if (!e.filename) {\r\n                    e.index = importNode.getIndex();\r\n                    e.filename = importNode.fileInfo().filename;\r\n                }\r\n                // attempt to eval properly and treat as css\r\n                importNode.css = true;\r\n                // if that fails, this error will be thrown\r\n                importNode.error = e;\r\n            }\r\n            if (evaldImportNode && (!evaldImportNode.css || inlineCSS)) {\r\n                if (evaldImportNode.options.multiple) {\r\n                    context.importMultiple = true;\r\n                }\r\n                // try appending if we haven't determined if it is css or not\r\n                var tryAppendLessExtension = evaldImportNode.css === undefined;\r\n                for (var i = 0; i < importParent.rules.length; i++) {\r\n                    if (importParent.rules[i] === importNode) {\r\n                        importParent.rules[i] = evaldImportNode;\r\n                        break;\r\n                    }\r\n                }\r\n                var onImported = this.onImported.bind(this, evaldImportNode, context), sequencedOnImported = this._sequencer.addImport(onImported);\r\n                this._importer.push(evaldImportNode.getPath(), tryAppendLessExtension, evaldImportNode.fileInfo(), evaldImportNode.options, sequencedOnImported);\r\n            }\r\n            else {\r\n                this.importCount--;\r\n                if (this.isFinished) {\r\n                    this._sequencer.tryRun();\r\n                }\r\n            }\r\n        },\r\n        onImported: function (importNode, context, e, root, importedAtRoot, fullPath) {\r\n            if (e) {\r\n                if (!e.filename) {\r\n                    e.index = importNode.getIndex();\r\n                    e.filename = importNode.fileInfo().filename;\r\n                }\r\n                this.error = e;\r\n            }\r\n            var importVisitor = this, inlineCSS = importNode.options.inline, isPlugin = importNode.options.isPlugin, isOptional = importNode.options.optional, duplicateImport = importedAtRoot || fullPath in importVisitor.recursionDetector;\r\n            if (!context.importMultiple) {\r\n                if (duplicateImport) {\r\n                    importNode.skip = true;\r\n                }\r\n                else {\r\n                    importNode.skip = function () {\r\n                        if (fullPath in importVisitor.onceFileDetectionMap) {\r\n                            return true;\r\n                        }\r\n                        importVisitor.onceFileDetectionMap[fullPath] = true;\r\n                        return false;\r\n                    };\r\n                }\r\n            }\r\n            if (!fullPath && isOptional) {\r\n                importNode.skip = true;\r\n            }\r\n            if (root) {\r\n                importNode.root = root;\r\n                importNode.importedFilename = fullPath;\r\n                if (!inlineCSS && !isPlugin && (context.importMultiple || !duplicateImport)) {\r\n                    importVisitor.recursionDetector[fullPath] = true;\r\n                    var oldContext = this.context;\r\n                    this.context = context;\r\n                    try {\r\n                        this._visitor.visit(root);\r\n                    }\r\n                    catch (e) {\r\n                        this.error = e;\r\n                    }\r\n                    this.context = oldContext;\r\n                }\r\n            }\r\n            importVisitor.importCount--;\r\n            if (importVisitor.isFinished) {\r\n                importVisitor._sequencer.tryRun();\r\n            }\r\n        },\r\n        visitDeclaration: function (declNode, visitArgs) {\r\n            if (declNode.value.type === 'DetachedRuleset') {\r\n                this.context.frames.unshift(declNode);\r\n            }\r\n            else {\r\n                visitArgs.visitDeeper = false;\r\n            }\r\n        },\r\n        visitDeclarationOut: function (declNode) {\r\n            if (declNode.value.type === 'DetachedRuleset') {\r\n                this.context.frames.shift();\r\n            }\r\n        },\r\n        visitAtRule: function (atRuleNode, visitArgs) {\r\n            this.context.frames.unshift(atRuleNode);\r\n        },\r\n        visitAtRuleOut: function (atRuleNode) {\r\n            this.context.frames.shift();\r\n        },\r\n        visitMixinDefinition: function (mixinDefinitionNode, visitArgs) {\r\n            this.context.frames.unshift(mixinDefinitionNode);\r\n        },\r\n        visitMixinDefinitionOut: function (mixinDefinitionNode) {\r\n            this.context.frames.shift();\r\n        },\r\n        visitRuleset: function (rulesetNode, visitArgs) {\r\n            this.context.frames.unshift(rulesetNode);\r\n        },\r\n        visitRulesetOut: function (rulesetNode) {\r\n            this.context.frames.shift();\r\n        },\r\n        visitMedia: function (mediaNode, visitArgs) {\r\n            this.context.frames.unshift(mediaNode.rules[0]);\r\n        },\r\n        visitMediaOut: function (mediaNode) {\r\n            this.context.frames.shift();\r\n        }\r\n    };\n\n    var SetTreeVisibilityVisitor = /** @class */ (function () {\r\n        function SetTreeVisibilityVisitor(visible) {\r\n            this.visible = visible;\r\n        }\r\n        SetTreeVisibilityVisitor.prototype.run = function (root) {\r\n            this.visit(root);\r\n        };\r\n        SetTreeVisibilityVisitor.prototype.visitArray = function (nodes) {\r\n            if (!nodes) {\r\n                return nodes;\r\n            }\r\n            var cnt = nodes.length;\r\n            var i;\r\n            for (i = 0; i < cnt; i++) {\r\n                this.visit(nodes[i]);\r\n            }\r\n            return nodes;\r\n        };\r\n        SetTreeVisibilityVisitor.prototype.visit = function (node) {\r\n            if (!node) {\r\n                return node;\r\n            }\r\n            if (node.constructor === Array) {\r\n                return this.visitArray(node);\r\n            }\r\n            if (!node.blocksVisibility || node.blocksVisibility()) {\r\n                return node;\r\n            }\r\n            if (this.visible) {\r\n                node.ensureVisibility();\r\n            }\r\n            else {\r\n                node.ensureInvisibility();\r\n            }\r\n            node.accept(this);\r\n            return node;\r\n        };\r\n        return SetTreeVisibilityVisitor;\r\n    }());\n\n    /* jshint loopfunc:true */\r\n    var ExtendFinderVisitor = /** @class */ (function () {\r\n        function ExtendFinderVisitor() {\r\n            this._visitor = new Visitor(this);\r\n            this.contexts = [];\r\n            this.allExtendsStack = [[]];\r\n        }\r\n        ExtendFinderVisitor.prototype.run = function (root) {\r\n            root = this._visitor.visit(root);\r\n            root.allExtends = this.allExtendsStack[0];\r\n            return root;\r\n        };\r\n        ExtendFinderVisitor.prototype.visitDeclaration = function (declNode, visitArgs) {\r\n            visitArgs.visitDeeper = false;\r\n        };\r\n        ExtendFinderVisitor.prototype.visitMixinDefinition = function (mixinDefinitionNode, visitArgs) {\r\n            visitArgs.visitDeeper = false;\r\n        };\r\n        ExtendFinderVisitor.prototype.visitRuleset = function (rulesetNode, visitArgs) {\r\n            if (rulesetNode.root) {\r\n                return;\r\n            }\r\n            var i;\r\n            var j;\r\n            var extend;\r\n            var allSelectorsExtendList = [];\r\n            var extendList;\r\n            // get &:extend(.a); rules which apply to all selectors in this ruleset\r\n            var rules = rulesetNode.rules, ruleCnt = rules ? rules.length : 0;\r\n            for (i = 0; i < ruleCnt; i++) {\r\n                if (rulesetNode.rules[i] instanceof tree.Extend) {\r\n                    allSelectorsExtendList.push(rules[i]);\r\n                    rulesetNode.extendOnEveryPath = true;\r\n                }\r\n            }\r\n            // now find every selector and apply the extends that apply to all extends\r\n            // and the ones which apply to an individual extend\r\n            var paths = rulesetNode.paths;\r\n            for (i = 0; i < paths.length; i++) {\r\n                var selectorPath = paths[i], selector = selectorPath[selectorPath.length - 1], selExtendList = selector.extendList;\r\n                extendList = selExtendList ? copyArray(selExtendList).concat(allSelectorsExtendList)\r\n                    : allSelectorsExtendList;\r\n                if (extendList) {\r\n                    extendList = extendList.map(function (allSelectorsExtend) {\r\n                        return allSelectorsExtend.clone();\r\n                    });\r\n                }\r\n                for (j = 0; j < extendList.length; j++) {\r\n                    this.foundExtends = true;\r\n                    extend = extendList[j];\r\n                    extend.findSelfSelectors(selectorPath);\r\n                    extend.ruleset = rulesetNode;\r\n                    if (j === 0) {\r\n                        extend.firstExtendOnThisSelectorPath = true;\r\n                    }\r\n                    this.allExtendsStack[this.allExtendsStack.length - 1].push(extend);\r\n                }\r\n            }\r\n            this.contexts.push(rulesetNode.selectors);\r\n        };\r\n        ExtendFinderVisitor.prototype.visitRulesetOut = function (rulesetNode) {\r\n            if (!rulesetNode.root) {\r\n                this.contexts.length = this.contexts.length - 1;\r\n            }\r\n        };\r\n        ExtendFinderVisitor.prototype.visitMedia = function (mediaNode, visitArgs) {\r\n            mediaNode.allExtends = [];\r\n            this.allExtendsStack.push(mediaNode.allExtends);\r\n        };\r\n        ExtendFinderVisitor.prototype.visitMediaOut = function (mediaNode) {\r\n            this.allExtendsStack.length = this.allExtendsStack.length - 1;\r\n        };\r\n        ExtendFinderVisitor.prototype.visitAtRule = function (atRuleNode, visitArgs) {\r\n            atRuleNode.allExtends = [];\r\n            this.allExtendsStack.push(atRuleNode.allExtends);\r\n        };\r\n        ExtendFinderVisitor.prototype.visitAtRuleOut = function (atRuleNode) {\r\n            this.allExtendsStack.length = this.allExtendsStack.length - 1;\r\n        };\r\n        return ExtendFinderVisitor;\r\n    }());\r\n    var ProcessExtendsVisitor = /** @class */ (function () {\r\n        function ProcessExtendsVisitor() {\r\n            this._visitor = new Visitor(this);\r\n        }\r\n        ProcessExtendsVisitor.prototype.run = function (root) {\r\n            var extendFinder = new ExtendFinderVisitor();\r\n            this.extendIndices = {};\r\n            extendFinder.run(root);\r\n            if (!extendFinder.foundExtends) {\r\n                return root;\r\n            }\r\n            root.allExtends = root.allExtends.concat(this.doExtendChaining(root.allExtends, root.allExtends));\r\n            this.allExtendsStack = [root.allExtends];\r\n            var newRoot = this._visitor.visit(root);\r\n            this.checkExtendsForNonMatched(root.allExtends);\r\n            return newRoot;\r\n        };\r\n        ProcessExtendsVisitor.prototype.checkExtendsForNonMatched = function (extendList) {\r\n            var indices = this.extendIndices;\r\n            extendList.filter(function (extend) {\r\n                return !extend.hasFoundMatches && extend.parent_ids.length == 1;\r\n            }).forEach(function (extend) {\r\n                var selector = '_unknown_';\r\n                try {\r\n                    selector = extend.selector.toCSS({});\r\n                }\r\n                catch (_) { }\r\n                if (!indices[extend.index + \" \" + selector]) {\r\n                    indices[extend.index + \" \" + selector] = true;\r\n                    logger$1.warn(\"extend '\" + selector + \"' has no matches\");\r\n                }\r\n            });\r\n        };\r\n        ProcessExtendsVisitor.prototype.doExtendChaining = function (extendsList, extendsListTarget, iterationCount) {\r\n            //\r\n            // chaining is different from normal extension.. if we extend an extend then we are not just copying, altering\r\n            // and pasting the selector we would do normally, but we are also adding an extend with the same target selector\r\n            // this means this new extend can then go and alter other extends\r\n            //\r\n            // this method deals with all the chaining work - without it, extend is flat and doesn't work on other extend selectors\r\n            // this is also the most expensive.. and a match on one selector can cause an extension of a selector we had already\r\n            // processed if we look at each selector at a time, as is done in visitRuleset\r\n            var extendIndex;\r\n            var targetExtendIndex;\r\n            var matches;\r\n            var extendsToAdd = [];\r\n            var newSelector;\r\n            var extendVisitor = this;\r\n            var selectorPath;\r\n            var extend;\r\n            var targetExtend;\r\n            var newExtend;\r\n            iterationCount = iterationCount || 0;\r\n            // loop through comparing every extend with every target extend.\r\n            // a target extend is the one on the ruleset we are looking at copy/edit/pasting in place\r\n            // e.g.  .a:extend(.b) {}  and .b:extend(.c) {} then the first extend extends the second one\r\n            // and the second is the target.\r\n            // the separation into two lists allows us to process a subset of chains with a bigger set, as is the\r\n            // case when processing media queries\r\n            for (extendIndex = 0; extendIndex < extendsList.length; extendIndex++) {\r\n                for (targetExtendIndex = 0; targetExtendIndex < extendsListTarget.length; targetExtendIndex++) {\r\n                    extend = extendsList[extendIndex];\r\n                    targetExtend = extendsListTarget[targetExtendIndex];\r\n                    // look for circular references\r\n                    if (extend.parent_ids.indexOf(targetExtend.object_id) >= 0) {\r\n                        continue;\r\n                    }\r\n                    // find a match in the target extends self selector (the bit before :extend)\r\n                    selectorPath = [targetExtend.selfSelectors[0]];\r\n                    matches = extendVisitor.findMatch(extend, selectorPath);\r\n                    if (matches.length) {\r\n                        extend.hasFoundMatches = true;\r\n                        // we found a match, so for each self selector..\r\n                        extend.selfSelectors.forEach(function (selfSelector) {\r\n                            var info = targetExtend.visibilityInfo();\r\n                            // process the extend as usual\r\n                            newSelector = extendVisitor.extendSelector(matches, selectorPath, selfSelector, extend.isVisible());\r\n                            // but now we create a new extend from it\r\n                            newExtend = new (tree.Extend)(targetExtend.selector, targetExtend.option, 0, targetExtend.fileInfo(), info);\r\n                            newExtend.selfSelectors = newSelector;\r\n                            // add the extend onto the list of extends for that selector\r\n                            newSelector[newSelector.length - 1].extendList = [newExtend];\r\n                            // record that we need to add it.\r\n                            extendsToAdd.push(newExtend);\r\n                            newExtend.ruleset = targetExtend.ruleset;\r\n                            // remember its parents for circular references\r\n                            newExtend.parent_ids = newExtend.parent_ids.concat(targetExtend.parent_ids, extend.parent_ids);\r\n                            // only process the selector once.. if we have :extend(.a,.b) then multiple\r\n                            // extends will look at the same selector path, so when extending\r\n                            // we know that any others will be duplicates in terms of what is added to the css\r\n                            if (targetExtend.firstExtendOnThisSelectorPath) {\r\n                                newExtend.firstExtendOnThisSelectorPath = true;\r\n                                targetExtend.ruleset.paths.push(newSelector);\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n            if (extendsToAdd.length) {\r\n                // try to detect circular references to stop a stack overflow.\r\n                // may no longer be needed.\r\n                this.extendChainCount++;\r\n                if (iterationCount > 100) {\r\n                    var selectorOne = '{unable to calculate}';\r\n                    var selectorTwo = '{unable to calculate}';\r\n                    try {\r\n                        selectorOne = extendsToAdd[0].selfSelectors[0].toCSS();\r\n                        selectorTwo = extendsToAdd[0].selector.toCSS();\r\n                    }\r\n                    catch (e) { }\r\n                    throw { message: \"extend circular reference detected. One of the circular extends is currently:\" + selectorOne + \":extend(\" + selectorTwo + \")\" };\r\n                }\r\n                // now process the new extends on the existing rules so that we can handle a extending b extending c extending\r\n                // d extending e...\r\n                return extendsToAdd.concat(extendVisitor.doExtendChaining(extendsToAdd, extendsListTarget, iterationCount + 1));\r\n            }\r\n            else {\r\n                return extendsToAdd;\r\n            }\r\n        };\r\n        ProcessExtendsVisitor.prototype.visitDeclaration = function (ruleNode, visitArgs) {\r\n            visitArgs.visitDeeper = false;\r\n        };\r\n        ProcessExtendsVisitor.prototype.visitMixinDefinition = function (mixinDefinitionNode, visitArgs) {\r\n            visitArgs.visitDeeper = false;\r\n        };\r\n        ProcessExtendsVisitor.prototype.visitSelector = function (selectorNode, visitArgs) {\r\n            visitArgs.visitDeeper = false;\r\n        };\r\n        ProcessExtendsVisitor.prototype.visitRuleset = function (rulesetNode, visitArgs) {\r\n            if (rulesetNode.root) {\r\n                return;\r\n            }\r\n            var matches;\r\n            var pathIndex;\r\n            var extendIndex;\r\n            var allExtends = this.allExtendsStack[this.allExtendsStack.length - 1];\r\n            var selectorsToAdd = [];\r\n            var extendVisitor = this;\r\n            var selectorPath;\r\n            // look at each selector path in the ruleset, find any extend matches and then copy, find and replace\r\n            for (extendIndex = 0; extendIndex < allExtends.length; extendIndex++) {\r\n                for (pathIndex = 0; pathIndex < rulesetNode.paths.length; pathIndex++) {\r\n                    selectorPath = rulesetNode.paths[pathIndex];\r\n                    // extending extends happens initially, before the main pass\r\n                    if (rulesetNode.extendOnEveryPath) {\r\n                        continue;\r\n                    }\r\n                    var extendList = selectorPath[selectorPath.length - 1].extendList;\r\n                    if (extendList && extendList.length) {\r\n                        continue;\r\n                    }\r\n                    matches = this.findMatch(allExtends[extendIndex], selectorPath);\r\n                    if (matches.length) {\r\n                        allExtends[extendIndex].hasFoundMatches = true;\r\n                        allExtends[extendIndex].selfSelectors.forEach(function (selfSelector) {\r\n                            var extendedSelectors;\r\n                            extendedSelectors = extendVisitor.extendSelector(matches, selectorPath, selfSelector, allExtends[extendIndex].isVisible());\r\n                            selectorsToAdd.push(extendedSelectors);\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n            rulesetNode.paths = rulesetNode.paths.concat(selectorsToAdd);\r\n        };\r\n        ProcessExtendsVisitor.prototype.findMatch = function (extend, haystackSelectorPath) {\r\n            //\r\n            // look through the haystack selector path to try and find the needle - extend.selector\r\n            // returns an array of selector matches that can then be replaced\r\n            //\r\n            var haystackSelectorIndex;\r\n            var hackstackSelector;\r\n            var hackstackElementIndex;\r\n            var haystackElement;\r\n            var targetCombinator;\r\n            var i;\r\n            var extendVisitor = this;\r\n            var needleElements = extend.selector.elements;\r\n            var potentialMatches = [];\r\n            var potentialMatch;\r\n            var matches = [];\r\n            // loop through the haystack elements\r\n            for (haystackSelectorIndex = 0; haystackSelectorIndex < haystackSelectorPath.length; haystackSelectorIndex++) {\r\n                hackstackSelector = haystackSelectorPath[haystackSelectorIndex];\r\n                for (hackstackElementIndex = 0; hackstackElementIndex < hackstackSelector.elements.length; hackstackElementIndex++) {\r\n                    haystackElement = hackstackSelector.elements[hackstackElementIndex];\r\n                    // if we allow elements before our match we can add a potential match every time. otherwise only at the first element.\r\n                    if (extend.allowBefore || (haystackSelectorIndex === 0 && hackstackElementIndex === 0)) {\r\n                        potentialMatches.push({ pathIndex: haystackSelectorIndex, index: hackstackElementIndex, matched: 0,\r\n                            initialCombinator: haystackElement.combinator });\r\n                    }\r\n                    for (i = 0; i < potentialMatches.length; i++) {\r\n                        potentialMatch = potentialMatches[i];\r\n                        // selectors add \" \" onto the first element. When we use & it joins the selectors together, but if we don't\r\n                        // then each selector in haystackSelectorPath has a space before it added in the toCSS phase. so we need to\r\n                        // work out what the resulting combinator will be\r\n                        targetCombinator = haystackElement.combinator.value;\r\n                        if (targetCombinator === '' && hackstackElementIndex === 0) {\r\n                            targetCombinator = ' ';\r\n                        }\r\n                        // if we don't match, null our match to indicate failure\r\n                        if (!extendVisitor.isElementValuesEqual(needleElements[potentialMatch.matched].value, haystackElement.value) ||\r\n                            (potentialMatch.matched > 0 && needleElements[potentialMatch.matched].combinator.value !== targetCombinator)) {\r\n                            potentialMatch = null;\r\n                        }\r\n                        else {\r\n                            potentialMatch.matched++;\r\n                        }\r\n                        // if we are still valid and have finished, test whether we have elements after and whether these are allowed\r\n                        if (potentialMatch) {\r\n                            potentialMatch.finished = potentialMatch.matched === needleElements.length;\r\n                            if (potentialMatch.finished &&\r\n                                (!extend.allowAfter &&\r\n                                    (hackstackElementIndex + 1 < hackstackSelector.elements.length || haystackSelectorIndex + 1 < haystackSelectorPath.length))) {\r\n                                potentialMatch = null;\r\n                            }\r\n                        }\r\n                        // if null we remove, if not, we are still valid, so either push as a valid match or continue\r\n                        if (potentialMatch) {\r\n                            if (potentialMatch.finished) {\r\n                                potentialMatch.length = needleElements.length;\r\n                                potentialMatch.endPathIndex = haystackSelectorIndex;\r\n                                potentialMatch.endPathElementIndex = hackstackElementIndex + 1; // index after end of match\r\n                                potentialMatches.length = 0; // we don't allow matches to overlap, so start matching again\r\n                                matches.push(potentialMatch);\r\n                            }\r\n                        }\r\n                        else {\r\n                            potentialMatches.splice(i, 1);\r\n                            i--;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return matches;\r\n        };\r\n        ProcessExtendsVisitor.prototype.isElementValuesEqual = function (elementValue1, elementValue2) {\r\n            if (typeof elementValue1 === 'string' || typeof elementValue2 === 'string') {\r\n                return elementValue1 === elementValue2;\r\n            }\r\n            if (elementValue1 instanceof tree.Attribute) {\r\n                if (elementValue1.op !== elementValue2.op || elementValue1.key !== elementValue2.key) {\r\n                    return false;\r\n                }\r\n                if (!elementValue1.value || !elementValue2.value) {\r\n                    if (elementValue1.value || elementValue2.value) {\r\n                        return false;\r\n                    }\r\n                    return true;\r\n                }\r\n                elementValue1 = elementValue1.value.value || elementValue1.value;\r\n                elementValue2 = elementValue2.value.value || elementValue2.value;\r\n                return elementValue1 === elementValue2;\r\n            }\r\n            elementValue1 = elementValue1.value;\r\n            elementValue2 = elementValue2.value;\r\n            if (elementValue1 instanceof tree.Selector) {\r\n                if (!(elementValue2 instanceof tree.Selector) || elementValue1.elements.length !== elementValue2.elements.length) {\r\n                    return false;\r\n                }\r\n                for (var i = 0; i < elementValue1.elements.length; i++) {\r\n                    if (elementValue1.elements[i].combinator.value !== elementValue2.elements[i].combinator.value) {\r\n                        if (i !== 0 || (elementValue1.elements[i].combinator.value || ' ') !== (elementValue2.elements[i].combinator.value || ' ')) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                    if (!this.isElementValuesEqual(elementValue1.elements[i].value, elementValue2.elements[i].value)) {\r\n                        return false;\r\n                    }\r\n                }\r\n                return true;\r\n            }\r\n            return false;\r\n        };\r\n        ProcessExtendsVisitor.prototype.extendSelector = function (matches, selectorPath, replacementSelector, isVisible) {\r\n            // for a set of matches, replace each match with the replacement selector\r\n            var currentSelectorPathIndex = 0, currentSelectorPathElementIndex = 0, path = [], matchIndex, selector, firstElement, match, newElements;\r\n            for (matchIndex = 0; matchIndex < matches.length; matchIndex++) {\r\n                match = matches[matchIndex];\r\n                selector = selectorPath[match.pathIndex];\r\n                firstElement = new tree.Element(match.initialCombinator, replacementSelector.elements[0].value, replacementSelector.elements[0].isVariable, replacementSelector.elements[0].getIndex(), replacementSelector.elements[0].fileInfo());\r\n                if (match.pathIndex > currentSelectorPathIndex && currentSelectorPathElementIndex > 0) {\r\n                    path[path.length - 1].elements = path[path.length - 1]\r\n                        .elements.concat(selectorPath[currentSelectorPathIndex].elements.slice(currentSelectorPathElementIndex));\r\n                    currentSelectorPathElementIndex = 0;\r\n                    currentSelectorPathIndex++;\r\n                }\r\n                newElements = selector.elements\r\n                    .slice(currentSelectorPathElementIndex, match.index)\r\n                    .concat([firstElement])\r\n                    .concat(replacementSelector.elements.slice(1));\r\n                if (currentSelectorPathIndex === match.pathIndex && matchIndex > 0) {\r\n                    path[path.length - 1].elements =\r\n                        path[path.length - 1].elements.concat(newElements);\r\n                }\r\n                else {\r\n                    path = path.concat(selectorPath.slice(currentSelectorPathIndex, match.pathIndex));\r\n                    path.push(new tree.Selector(newElements));\r\n                }\r\n                currentSelectorPathIndex = match.endPathIndex;\r\n                currentSelectorPathElementIndex = match.endPathElementIndex;\r\n                if (currentSelectorPathElementIndex >= selectorPath[currentSelectorPathIndex].elements.length) {\r\n                    currentSelectorPathElementIndex = 0;\r\n                    currentSelectorPathIndex++;\r\n                }\r\n            }\r\n            if (currentSelectorPathIndex < selectorPath.length && currentSelectorPathElementIndex > 0) {\r\n                path[path.length - 1].elements = path[path.length - 1]\r\n                    .elements.concat(selectorPath[currentSelectorPathIndex].elements.slice(currentSelectorPathElementIndex));\r\n                currentSelectorPathIndex++;\r\n            }\r\n            path = path.concat(selectorPath.slice(currentSelectorPathIndex, selectorPath.length));\r\n            path = path.map(function (currentValue) {\r\n                // we can re-use elements here, because the visibility property matters only for selectors\r\n                var derived = currentValue.createDerived(currentValue.elements);\r\n                if (isVisible) {\r\n                    derived.ensureVisibility();\r\n                }\r\n                else {\r\n                    derived.ensureInvisibility();\r\n                }\r\n                return derived;\r\n            });\r\n            return path;\r\n        };\r\n        ProcessExtendsVisitor.prototype.visitMedia = function (mediaNode, visitArgs) {\r\n            var newAllExtends = mediaNode.allExtends.concat(this.allExtendsStack[this.allExtendsStack.length - 1]);\r\n            newAllExtends = newAllExtends.concat(this.doExtendChaining(newAllExtends, mediaNode.allExtends));\r\n            this.allExtendsStack.push(newAllExtends);\r\n        };\r\n        ProcessExtendsVisitor.prototype.visitMediaOut = function (mediaNode) {\r\n            var lastIndex = this.allExtendsStack.length - 1;\r\n            this.allExtendsStack.length = lastIndex;\r\n        };\r\n        ProcessExtendsVisitor.prototype.visitAtRule = function (atRuleNode, visitArgs) {\r\n            var newAllExtends = atRuleNode.allExtends.concat(this.allExtendsStack[this.allExtendsStack.length - 1]);\r\n            newAllExtends = newAllExtends.concat(this.doExtendChaining(newAllExtends, atRuleNode.allExtends));\r\n            this.allExtendsStack.push(newAllExtends);\r\n        };\r\n        ProcessExtendsVisitor.prototype.visitAtRuleOut = function (atRuleNode) {\r\n            var lastIndex = this.allExtendsStack.length - 1;\r\n            this.allExtendsStack.length = lastIndex;\r\n        };\r\n        return ProcessExtendsVisitor;\r\n    }());\n\n    var JoinSelectorVisitor = /** @class */ (function () {\r\n        function JoinSelectorVisitor() {\r\n            this.contexts = [[]];\r\n            this._visitor = new Visitor(this);\r\n        }\r\n        JoinSelectorVisitor.prototype.run = function (root) {\r\n            return this._visitor.visit(root);\r\n        };\r\n        JoinSelectorVisitor.prototype.visitDeclaration = function (declNode, visitArgs) {\r\n            visitArgs.visitDeeper = false;\r\n        };\r\n        JoinSelectorVisitor.prototype.visitMixinDefinition = function (mixinDefinitionNode, visitArgs) {\r\n            visitArgs.visitDeeper = false;\r\n        };\r\n        JoinSelectorVisitor.prototype.visitRuleset = function (rulesetNode, visitArgs) {\r\n            var context = this.contexts[this.contexts.length - 1];\r\n            var paths = [];\r\n            var selectors;\r\n            this.contexts.push(paths);\r\n            if (!rulesetNode.root) {\r\n                selectors = rulesetNode.selectors;\r\n                if (selectors) {\r\n                    selectors = selectors.filter(function (selector) { return selector.getIsOutput(); });\r\n                    rulesetNode.selectors = selectors.length ? selectors : (selectors = null);\r\n                    if (selectors) {\r\n                        rulesetNode.joinSelectors(paths, context, selectors);\r\n                    }\r\n                }\r\n                if (!selectors) {\r\n                    rulesetNode.rules = null;\r\n                }\r\n                rulesetNode.paths = paths;\r\n            }\r\n        };\r\n        JoinSelectorVisitor.prototype.visitRulesetOut = function (rulesetNode) {\r\n            this.contexts.length = this.contexts.length - 1;\r\n        };\r\n        JoinSelectorVisitor.prototype.visitMedia = function (mediaNode, visitArgs) {\r\n            var context = this.contexts[this.contexts.length - 1];\r\n            mediaNode.rules[0].root = (context.length === 0 || context[0].multiMedia);\r\n        };\r\n        JoinSelectorVisitor.prototype.visitAtRule = function (atRuleNode, visitArgs) {\r\n            var context = this.contexts[this.contexts.length - 1];\r\n            if (atRuleNode.rules && atRuleNode.rules.length) {\r\n                atRuleNode.rules[0].root = (atRuleNode.isRooted || context.length === 0 || null);\r\n            }\r\n        };\r\n        return JoinSelectorVisitor;\r\n    }());\n\n    var CSSVisitorUtils = /** @class */ (function () {\r\n        function CSSVisitorUtils(context) {\r\n            this._visitor = new Visitor(this);\r\n            this._context = context;\r\n        }\r\n        CSSVisitorUtils.prototype.containsSilentNonBlockedChild = function (bodyRules) {\r\n            var rule;\r\n            if (!bodyRules) {\r\n                return false;\r\n            }\r\n            for (var r = 0; r < bodyRules.length; r++) {\r\n                rule = bodyRules[r];\r\n                if (rule.isSilent && rule.isSilent(this._context) && !rule.blocksVisibility()) {\r\n                    // the atrule contains something that was referenced (likely by extend)\r\n                    // therefore it needs to be shown in output too\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        };\r\n        CSSVisitorUtils.prototype.keepOnlyVisibleChilds = function (owner) {\r\n            if (owner && owner.rules) {\r\n                owner.rules = owner.rules.filter(function (thing) { return thing.isVisible(); });\r\n            }\r\n        };\r\n        CSSVisitorUtils.prototype.isEmpty = function (owner) {\r\n            return (owner && owner.rules)\r\n                ? (owner.rules.length === 0) : true;\r\n        };\r\n        CSSVisitorUtils.prototype.hasVisibleSelector = function (rulesetNode) {\r\n            return (rulesetNode && rulesetNode.paths)\r\n                ? (rulesetNode.paths.length > 0) : false;\r\n        };\r\n        CSSVisitorUtils.prototype.resolveVisibility = function (node, originalRules) {\r\n            if (!node.blocksVisibility()) {\r\n                if (this.isEmpty(node) && !this.containsSilentNonBlockedChild(originalRules)) {\r\n                    return;\r\n                }\r\n                return node;\r\n            }\r\n            var compiledRulesBody = node.rules[0];\r\n            this.keepOnlyVisibleChilds(compiledRulesBody);\r\n            if (this.isEmpty(compiledRulesBody)) {\r\n                return;\r\n            }\r\n            node.ensureVisibility();\r\n            node.removeVisibilityBlock();\r\n            return node;\r\n        };\r\n        CSSVisitorUtils.prototype.isVisibleRuleset = function (rulesetNode) {\r\n            if (rulesetNode.firstRoot) {\r\n                return true;\r\n            }\r\n            if (this.isEmpty(rulesetNode)) {\r\n                return false;\r\n            }\r\n            if (!rulesetNode.root && !this.hasVisibleSelector(rulesetNode)) {\r\n                return false;\r\n            }\r\n            return true;\r\n        };\r\n        return CSSVisitorUtils;\r\n    }());\r\n    var ToCSSVisitor = function (context) {\r\n        this._visitor = new Visitor(this);\r\n        this._context = context;\r\n        this.utils = new CSSVisitorUtils(context);\r\n    };\r\n    ToCSSVisitor.prototype = {\r\n        isReplacing: true,\r\n        run: function (root) {\r\n            return this._visitor.visit(root);\r\n        },\r\n        visitDeclaration: function (declNode, visitArgs) {\r\n            if (declNode.blocksVisibility() || declNode.variable) {\r\n                return;\r\n            }\r\n            return declNode;\r\n        },\r\n        visitMixinDefinition: function (mixinNode, visitArgs) {\r\n            // mixin definitions do not get eval'd - this means they keep state\r\n            // so we have to clear that state here so it isn't used if toCSS is called twice\r\n            mixinNode.frames = [];\r\n        },\r\n        visitExtend: function (extendNode, visitArgs) {\r\n        },\r\n        visitComment: function (commentNode, visitArgs) {\r\n            if (commentNode.blocksVisibility() || commentNode.isSilent(this._context)) {\r\n                return;\r\n            }\r\n            return commentNode;\r\n        },\r\n        visitMedia: function (mediaNode, visitArgs) {\r\n            var originalRules = mediaNode.rules[0].rules;\r\n            mediaNode.accept(this._visitor);\r\n            visitArgs.visitDeeper = false;\r\n            return this.utils.resolveVisibility(mediaNode, originalRules);\r\n        },\r\n        visitImport: function (importNode, visitArgs) {\r\n            if (importNode.blocksVisibility()) {\r\n                return;\r\n            }\r\n            return importNode;\r\n        },\r\n        visitAtRule: function (atRuleNode, visitArgs) {\r\n            if (atRuleNode.rules && atRuleNode.rules.length) {\r\n                return this.visitAtRuleWithBody(atRuleNode, visitArgs);\r\n            }\r\n            else {\r\n                return this.visitAtRuleWithoutBody(atRuleNode, visitArgs);\r\n            }\r\n        },\r\n        visitAnonymous: function (anonymousNode, visitArgs) {\r\n            if (!anonymousNode.blocksVisibility()) {\r\n                anonymousNode.accept(this._visitor);\r\n                return anonymousNode;\r\n            }\r\n        },\r\n        visitAtRuleWithBody: function (atRuleNode, visitArgs) {\r\n            // if there is only one nested ruleset and that one has no path, then it is\r\n            // just fake ruleset\r\n            function hasFakeRuleset(atRuleNode) {\r\n                var bodyRules = atRuleNode.rules;\r\n                return bodyRules.length === 1 && (!bodyRules[0].paths || bodyRules[0].paths.length === 0);\r\n            }\r\n            function getBodyRules(atRuleNode) {\r\n                var nodeRules = atRuleNode.rules;\r\n                if (hasFakeRuleset(atRuleNode)) {\r\n                    return nodeRules[0].rules;\r\n                }\r\n                return nodeRules;\r\n            }\r\n            // it is still true that it is only one ruleset in array\r\n            // this is last such moment\r\n            // process childs\r\n            var originalRules = getBodyRules(atRuleNode);\r\n            atRuleNode.accept(this._visitor);\r\n            visitArgs.visitDeeper = false;\r\n            if (!this.utils.isEmpty(atRuleNode)) {\r\n                this._mergeRules(atRuleNode.rules[0].rules);\r\n            }\r\n            return this.utils.resolveVisibility(atRuleNode, originalRules);\r\n        },\r\n        visitAtRuleWithoutBody: function (atRuleNode, visitArgs) {\r\n            if (atRuleNode.blocksVisibility()) {\r\n                return;\r\n            }\r\n            if (atRuleNode.name === '@charset') {\r\n                // Only output the debug info together with subsequent @charset definitions\r\n                // a comment (or @media statement) before the actual @charset atrule would\r\n                // be considered illegal css as it has to be on the first line\r\n                if (this.charset) {\r\n                    if (atRuleNode.debugInfo) {\r\n                        var comment = new tree.Comment(\"/* \" + atRuleNode.toCSS(this._context).replace(/\\n/g, '') + \" */\\n\");\r\n                        comment.debugInfo = atRuleNode.debugInfo;\r\n                        return this._visitor.visit(comment);\r\n                    }\r\n                    return;\r\n                }\r\n                this.charset = true;\r\n            }\r\n            return atRuleNode;\r\n        },\r\n        checkValidNodes: function (rules, isRoot) {\r\n            if (!rules) {\r\n                return;\r\n            }\r\n            for (var i = 0; i < rules.length; i++) {\r\n                var ruleNode = rules[i];\r\n                if (isRoot && ruleNode instanceof tree.Declaration && !ruleNode.variable) {\r\n                    throw { message: 'Properties must be inside selector blocks. They cannot be in the root',\r\n                        index: ruleNode.getIndex(), filename: ruleNode.fileInfo() && ruleNode.fileInfo().filename };\r\n                }\r\n                if (ruleNode instanceof tree.Call) {\r\n                    throw { message: \"Function '\" + ruleNode.name + \"' did not return a root node\",\r\n                        index: ruleNode.getIndex(), filename: ruleNode.fileInfo() && ruleNode.fileInfo().filename };\r\n                }\r\n                if (ruleNode.type && !ruleNode.allowRoot) {\r\n                    throw { message: ruleNode.type + \" node returned by a function is not valid here\",\r\n                        index: ruleNode.getIndex(), filename: ruleNode.fileInfo() && ruleNode.fileInfo().filename };\r\n                }\r\n            }\r\n        },\r\n        visitRuleset: function (rulesetNode, visitArgs) {\r\n            // at this point rulesets are nested into each other\r\n            var rule;\r\n            var rulesets = [];\r\n            this.checkValidNodes(rulesetNode.rules, rulesetNode.firstRoot);\r\n            if (!rulesetNode.root) {\r\n                // remove invisible paths\r\n                this._compileRulesetPaths(rulesetNode);\r\n                // remove rulesets from this ruleset body and compile them separately\r\n                var nodeRules = rulesetNode.rules;\r\n                var nodeRuleCnt = nodeRules ? nodeRules.length : 0;\r\n                for (var i = 0; i < nodeRuleCnt;) {\r\n                    rule = nodeRules[i];\r\n                    if (rule && rule.rules) {\r\n                        // visit because we are moving them out from being a child\r\n                        rulesets.push(this._visitor.visit(rule));\r\n                        nodeRules.splice(i, 1);\r\n                        nodeRuleCnt--;\r\n                        continue;\r\n                    }\r\n                    i++;\r\n                }\r\n                // accept the visitor to remove rules and refactor itself\r\n                // then we can decide nogw whether we want it or not\r\n                // compile body\r\n                if (nodeRuleCnt > 0) {\r\n                    rulesetNode.accept(this._visitor);\r\n                }\r\n                else {\r\n                    rulesetNode.rules = null;\r\n                }\r\n                visitArgs.visitDeeper = false;\r\n            }\r\n            else { // if (! rulesetNode.root) {\r\n                rulesetNode.accept(this._visitor);\r\n                visitArgs.visitDeeper = false;\r\n            }\r\n            if (rulesetNode.rules) {\r\n                this._mergeRules(rulesetNode.rules);\r\n                this._removeDuplicateRules(rulesetNode.rules);\r\n            }\r\n            // now decide whether we keep the ruleset\r\n            if (this.utils.isVisibleRuleset(rulesetNode)) {\r\n                rulesetNode.ensureVisibility();\r\n                rulesets.splice(0, 0, rulesetNode);\r\n            }\r\n            if (rulesets.length === 1) {\r\n                return rulesets[0];\r\n            }\r\n            return rulesets;\r\n        },\r\n        _compileRulesetPaths: function (rulesetNode) {\r\n            if (rulesetNode.paths) {\r\n                rulesetNode.paths = rulesetNode.paths\r\n                    .filter(function (p) {\r\n                    var i;\r\n                    if (p[0].elements[0].combinator.value === ' ') {\r\n                        p[0].elements[0].combinator = new (tree.Combinator)('');\r\n                    }\r\n                    for (i = 0; i < p.length; i++) {\r\n                        if (p[i].isVisible() && p[i].getIsOutput()) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                    return false;\r\n                });\r\n            }\r\n        },\r\n        _removeDuplicateRules: function (rules) {\r\n            if (!rules) {\r\n                return;\r\n            }\r\n            // remove duplicates\r\n            var ruleCache = {};\r\n            var ruleList;\r\n            var rule;\r\n            var i;\r\n            for (i = rules.length - 1; i >= 0; i--) {\r\n                rule = rules[i];\r\n                if (rule instanceof tree.Declaration) {\r\n                    if (!ruleCache[rule.name]) {\r\n                        ruleCache[rule.name] = rule;\r\n                    }\r\n                    else {\r\n                        ruleList = ruleCache[rule.name];\r\n                        if (ruleList instanceof tree.Declaration) {\r\n                            ruleList = ruleCache[rule.name] = [ruleCache[rule.name].toCSS(this._context)];\r\n                        }\r\n                        var ruleCSS = rule.toCSS(this._context);\r\n                        if (ruleList.indexOf(ruleCSS) !== -1) {\r\n                            rules.splice(i, 1);\r\n                        }\r\n                        else {\r\n                            ruleList.push(ruleCSS);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        _mergeRules: function (rules) {\r\n            if (!rules) {\r\n                return;\r\n            }\r\n            var groups = {};\r\n            var groupsArr = [];\r\n            for (var i = 0; i < rules.length; i++) {\r\n                var rule = rules[i];\r\n                if (rule.merge) {\r\n                    var key = rule.name;\r\n                    groups[key] ? rules.splice(i--, 1) :\r\n                        groupsArr.push(groups[key] = []);\r\n                    groups[key].push(rule);\r\n                }\r\n            }\r\n            groupsArr.forEach(function (group) {\r\n                if (group.length > 0) {\r\n                    var result_1 = group[0];\r\n                    var space_1 = [];\r\n                    var comma_1 = [new tree.Expression(space_1)];\r\n                    group.forEach(function (rule) {\r\n                        if ((rule.merge === '+') && (space_1.length > 0)) {\r\n                            comma_1.push(new tree.Expression(space_1 = []));\r\n                        }\r\n                        space_1.push(rule.value);\r\n                        result_1.important = result_1.important || rule.important;\r\n                    });\r\n                    result_1.value = new tree.Value(comma_1);\r\n                }\r\n            });\r\n        }\r\n    };\n\n    var visitors = {\r\n        Visitor: Visitor,\r\n        ImportVisitor: ImportVisitor,\r\n        MarkVisibleSelectorsVisitor: SetTreeVisibilityVisitor,\r\n        ExtendVisitor: ProcessExtendsVisitor,\r\n        JoinSelectorVisitor: JoinSelectorVisitor,\r\n        ToCSSVisitor: ToCSSVisitor\r\n    };\n\n    // Split the input into chunks.\r\n    function chunker (input, fail) {\r\n        var len = input.length;\r\n        var level = 0;\r\n        var parenLevel = 0;\r\n        var lastOpening;\r\n        var lastOpeningParen;\r\n        var lastMultiComment;\r\n        var lastMultiCommentEndBrace;\r\n        var chunks = [];\r\n        var emitFrom = 0;\r\n        var chunkerCurrentIndex;\r\n        var currentChunkStartIndex;\r\n        var cc;\r\n        var cc2;\r\n        var matched;\r\n        function emitChunk(force) {\r\n            var len = chunkerCurrentIndex - emitFrom;\r\n            if (((len < 512) && !force) || !len) {\r\n                return;\r\n            }\r\n            chunks.push(input.slice(emitFrom, chunkerCurrentIndex + 1));\r\n            emitFrom = chunkerCurrentIndex + 1;\r\n        }\r\n        for (chunkerCurrentIndex = 0; chunkerCurrentIndex < len; chunkerCurrentIndex++) {\r\n            cc = input.charCodeAt(chunkerCurrentIndex);\r\n            if (((cc >= 97) && (cc <= 122)) || (cc < 34)) {\r\n                // a-z or whitespace\r\n                continue;\r\n            }\r\n            switch (cc) {\r\n                case 40: // (\r\n                    parenLevel++;\r\n                    lastOpeningParen = chunkerCurrentIndex;\r\n                    continue;\r\n                case 41: // )\r\n                    if (--parenLevel < 0) {\r\n                        return fail('missing opening `(`', chunkerCurrentIndex);\r\n                    }\r\n                    continue;\r\n                case 59: // ;\r\n                    if (!parenLevel) {\r\n                        emitChunk();\r\n                    }\r\n                    continue;\r\n                case 123: // {\r\n                    level++;\r\n                    lastOpening = chunkerCurrentIndex;\r\n                    continue;\r\n                case 125: // }\r\n                    if (--level < 0) {\r\n                        return fail('missing opening `{`', chunkerCurrentIndex);\r\n                    }\r\n                    if (!level && !parenLevel) {\r\n                        emitChunk();\r\n                    }\r\n                    continue;\r\n                case 92: // \\\r\n                    if (chunkerCurrentIndex < len - 1) {\r\n                        chunkerCurrentIndex++;\r\n                        continue;\r\n                    }\r\n                    return fail('unescaped `\\\\`', chunkerCurrentIndex);\r\n                case 34:\r\n                case 39:\r\n                case 96: // \", ' and `\r\n                    matched = 0;\r\n                    currentChunkStartIndex = chunkerCurrentIndex;\r\n                    for (chunkerCurrentIndex = chunkerCurrentIndex + 1; chunkerCurrentIndex < len; chunkerCurrentIndex++) {\r\n                        cc2 = input.charCodeAt(chunkerCurrentIndex);\r\n                        if (cc2 > 96) {\r\n                            continue;\r\n                        }\r\n                        if (cc2 == cc) {\r\n                            matched = 1;\r\n                            break;\r\n                        }\r\n                        if (cc2 == 92) { // \\\r\n                            if (chunkerCurrentIndex == len - 1) {\r\n                                return fail('unescaped `\\\\`', chunkerCurrentIndex);\r\n                            }\r\n                            chunkerCurrentIndex++;\r\n                        }\r\n                    }\r\n                    if (matched) {\r\n                        continue;\r\n                    }\r\n                    return fail(\"unmatched `\" + String.fromCharCode(cc) + \"`\", currentChunkStartIndex);\r\n                case 47: // /, check for comment\r\n                    if (parenLevel || (chunkerCurrentIndex == len - 1)) {\r\n                        continue;\r\n                    }\r\n                    cc2 = input.charCodeAt(chunkerCurrentIndex + 1);\r\n                    if (cc2 == 47) {\r\n                        // //, find lnfeed\r\n                        for (chunkerCurrentIndex = chunkerCurrentIndex + 2; chunkerCurrentIndex < len; chunkerCurrentIndex++) {\r\n                            cc2 = input.charCodeAt(chunkerCurrentIndex);\r\n                            if ((cc2 <= 13) && ((cc2 == 10) || (cc2 == 13))) {\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    else if (cc2 == 42) {\r\n                        // /*, find */\r\n                        lastMultiComment = currentChunkStartIndex = chunkerCurrentIndex;\r\n                        for (chunkerCurrentIndex = chunkerCurrentIndex + 2; chunkerCurrentIndex < len - 1; chunkerCurrentIndex++) {\r\n                            cc2 = input.charCodeAt(chunkerCurrentIndex);\r\n                            if (cc2 == 125) {\r\n                                lastMultiCommentEndBrace = chunkerCurrentIndex;\r\n                            }\r\n                            if (cc2 != 42) {\r\n                                continue;\r\n                            }\r\n                            if (input.charCodeAt(chunkerCurrentIndex + 1) == 47) {\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (chunkerCurrentIndex == len - 1) {\r\n                            return fail('missing closing `*/`', currentChunkStartIndex);\r\n                        }\r\n                        chunkerCurrentIndex++;\r\n                    }\r\n                    continue;\r\n                case 42: // *, check for unmatched */\r\n                    if ((chunkerCurrentIndex < len - 1) && (input.charCodeAt(chunkerCurrentIndex + 1) == 47)) {\r\n                        return fail('unmatched `/*`', chunkerCurrentIndex);\r\n                    }\r\n                    continue;\r\n            }\r\n        }\r\n        if (level !== 0) {\r\n            if ((lastMultiComment > lastOpening) && (lastMultiCommentEndBrace > lastMultiComment)) {\r\n                return fail('missing closing `}` or `*/`', lastOpening);\r\n            }\r\n            else {\r\n                return fail('missing closing `}`', lastOpening);\r\n            }\r\n        }\r\n        else if (parenLevel !== 0) {\r\n            return fail('missing closing `)`', lastOpeningParen);\r\n        }\r\n        emitChunk(true);\r\n        return chunks;\r\n    }\n\n    var getParserInput = (function () {\r\n        var // Less input string\r\n        input;\r\n        var // current chunk\r\n        j;\r\n        var // holds state for backtracking\r\n        saveStack = [];\r\n        var // furthest index the parser has gone to\r\n        furthest;\r\n        var // if this is furthest we got to, this is the probably cause\r\n        furthestPossibleErrorMessage;\r\n        var // chunkified input\r\n        chunks;\r\n        var // current chunk\r\n        current;\r\n        var // index of current chunk, in `input`\r\n        currentPos;\r\n        var parserInput = {};\r\n        var CHARCODE_SPACE = 32;\r\n        var CHARCODE_TAB = 9;\r\n        var CHARCODE_LF = 10;\r\n        var CHARCODE_CR = 13;\r\n        var CHARCODE_PLUS = 43;\r\n        var CHARCODE_COMMA = 44;\r\n        var CHARCODE_FORWARD_SLASH = 47;\r\n        var CHARCODE_9 = 57;\r\n        function skipWhitespace(length) {\r\n            var oldi = parserInput.i;\r\n            var oldj = j;\r\n            var curr = parserInput.i - currentPos;\r\n            var endIndex = parserInput.i + current.length - curr;\r\n            var mem = (parserInput.i += length);\r\n            var inp = input;\r\n            var c;\r\n            var nextChar;\r\n            var comment;\r\n            for (; parserInput.i < endIndex; parserInput.i++) {\r\n                c = inp.charCodeAt(parserInput.i);\r\n                if (parserInput.autoCommentAbsorb && c === CHARCODE_FORWARD_SLASH) {\r\n                    nextChar = inp.charAt(parserInput.i + 1);\r\n                    if (nextChar === '/') {\r\n                        comment = { index: parserInput.i, isLineComment: true };\r\n                        var nextNewLine = inp.indexOf('\\n', parserInput.i + 2);\r\n                        if (nextNewLine < 0) {\r\n                            nextNewLine = endIndex;\r\n                        }\r\n                        parserInput.i = nextNewLine;\r\n                        comment.text = inp.substr(comment.index, parserInput.i - comment.index);\r\n                        parserInput.commentStore.push(comment);\r\n                        continue;\r\n                    }\r\n                    else if (nextChar === '*') {\r\n                        var nextStarSlash = inp.indexOf('*/', parserInput.i + 2);\r\n                        if (nextStarSlash >= 0) {\r\n                            comment = {\r\n                                index: parserInput.i,\r\n                                text: inp.substr(parserInput.i, nextStarSlash + 2 - parserInput.i),\r\n                                isLineComment: false\r\n                            };\r\n                            parserInput.i += comment.text.length - 1;\r\n                            parserInput.commentStore.push(comment);\r\n                            continue;\r\n                        }\r\n                    }\r\n                    break;\r\n                }\r\n                if ((c !== CHARCODE_SPACE) && (c !== CHARCODE_LF) && (c !== CHARCODE_TAB) && (c !== CHARCODE_CR)) {\r\n                    break;\r\n                }\r\n            }\r\n            current = current.slice(length + parserInput.i - mem + curr);\r\n            currentPos = parserInput.i;\r\n            if (!current.length) {\r\n                if (j < chunks.length - 1) {\r\n                    current = chunks[++j];\r\n                    skipWhitespace(0); // skip space at the beginning of a chunk\r\n                    return true; // things changed\r\n                }\r\n                parserInput.finished = true;\r\n            }\r\n            return oldi !== parserInput.i || oldj !== j;\r\n        }\r\n        parserInput.save = function () {\r\n            currentPos = parserInput.i;\r\n            saveStack.push({ current: current, i: parserInput.i, j: j });\r\n        };\r\n        parserInput.restore = function (possibleErrorMessage) {\r\n            if (parserInput.i > furthest || (parserInput.i === furthest && possibleErrorMessage && !furthestPossibleErrorMessage)) {\r\n                furthest = parserInput.i;\r\n                furthestPossibleErrorMessage = possibleErrorMessage;\r\n            }\r\n            var state = saveStack.pop();\r\n            current = state.current;\r\n            currentPos = parserInput.i = state.i;\r\n            j = state.j;\r\n        };\r\n        parserInput.forget = function () {\r\n            saveStack.pop();\r\n        };\r\n        parserInput.isWhitespace = function (offset) {\r\n            var pos = parserInput.i + (offset || 0);\r\n            var code = input.charCodeAt(pos);\r\n            return (code === CHARCODE_SPACE || code === CHARCODE_CR || code === CHARCODE_TAB || code === CHARCODE_LF);\r\n        };\r\n        // Specialization of $(tok)\r\n        parserInput.$re = function (tok) {\r\n            if (parserInput.i > currentPos) {\r\n                current = current.slice(parserInput.i - currentPos);\r\n                currentPos = parserInput.i;\r\n            }\r\n            var m = tok.exec(current);\r\n            if (!m) {\r\n                return null;\r\n            }\r\n            skipWhitespace(m[0].length);\r\n            if (typeof m === 'string') {\r\n                return m;\r\n            }\r\n            return m.length === 1 ? m[0] : m;\r\n        };\r\n        parserInput.$char = function (tok) {\r\n            if (input.charAt(parserInput.i) !== tok) {\r\n                return null;\r\n            }\r\n            skipWhitespace(1);\r\n            return tok;\r\n        };\r\n        parserInput.$str = function (tok) {\r\n            var tokLength = tok.length;\r\n            // https://jsperf.com/string-startswith/21\r\n            for (var i = 0; i < tokLength; i++) {\r\n                if (input.charAt(parserInput.i + i) !== tok.charAt(i)) {\r\n                    return null;\r\n                }\r\n            }\r\n            skipWhitespace(tokLength);\r\n            return tok;\r\n        };\r\n        parserInput.$quoted = function (loc) {\r\n            var pos = loc || parserInput.i;\r\n            var startChar = input.charAt(pos);\r\n            if (startChar !== '\\'' && startChar !== '\"') {\r\n                return;\r\n            }\r\n            var length = input.length;\r\n            var currentPosition = pos;\r\n            for (var i = 1; i + currentPosition < length; i++) {\r\n                var nextChar = input.charAt(i + currentPosition);\r\n                switch (nextChar) {\r\n                    case '\\\\':\r\n                        i++;\r\n                        continue;\r\n                    case '\\r':\r\n                    case '\\n':\r\n                        break;\r\n                    case startChar:\r\n                        var str = input.substr(currentPosition, i + 1);\r\n                        if (!loc && loc !== 0) {\r\n                            skipWhitespace(i + 1);\r\n                            return str;\r\n                        }\r\n                        return [startChar, str];\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        /**\r\n         * Permissive parsing. Ignores everything except matching {} [] () and quotes\r\n         * until matching token (outside of blocks)\r\n         */\r\n        parserInput.$parseUntil = function (tok) {\r\n            var quote = '';\r\n            var returnVal = null;\r\n            var inComment = false;\r\n            var blockDepth = 0;\r\n            var blockStack = [];\r\n            var parseGroups = [];\r\n            var length = input.length;\r\n            var startPos = parserInput.i;\r\n            var lastPos = parserInput.i;\r\n            var i = parserInput.i;\r\n            var loop = true;\r\n            var testChar;\r\n            if (typeof tok === 'string') {\r\n                testChar = function (char) { return char === tok; };\r\n            }\r\n            else {\r\n                testChar = function (char) { return tok.test(char); };\r\n            }\r\n            do {\r\n                var nextChar = input.charAt(i);\r\n                if (blockDepth === 0 && testChar(nextChar)) {\r\n                    returnVal = input.substr(lastPos, i - lastPos);\r\n                    if (returnVal) {\r\n                        parseGroups.push(returnVal);\r\n                    }\r\n                    else {\r\n                        parseGroups.push(' ');\r\n                    }\r\n                    returnVal = parseGroups;\r\n                    skipWhitespace(i - startPos);\r\n                    loop = false;\r\n                }\r\n                else {\r\n                    if (inComment) {\r\n                        if (nextChar === '*' &&\r\n                            input.charAt(i + 1) === '/') {\r\n                            i++;\r\n                            blockDepth--;\r\n                            inComment = false;\r\n                        }\r\n                        i++;\r\n                        continue;\r\n                    }\r\n                    switch (nextChar) {\r\n                        case '\\\\':\r\n                            i++;\r\n                            nextChar = input.charAt(i);\r\n                            parseGroups.push(input.substr(lastPos, i - lastPos + 1));\r\n                            lastPos = i + 1;\r\n                            break;\r\n                        case '/':\r\n                            if (input.charAt(i + 1) === '*') {\r\n                                i++;\r\n                                inComment = true;\r\n                                blockDepth++;\r\n                            }\r\n                            break;\r\n                        case '\\'':\r\n                        case '\"':\r\n                            quote = parserInput.$quoted(i);\r\n                            if (quote) {\r\n                                parseGroups.push(input.substr(lastPos, i - lastPos), quote);\r\n                                i += quote[1].length - 1;\r\n                                lastPos = i + 1;\r\n                            }\r\n                            else {\r\n                                skipWhitespace(i - startPos);\r\n                                returnVal = nextChar;\r\n                                loop = false;\r\n                            }\r\n                            break;\r\n                        case '{':\r\n                            blockStack.push('}');\r\n                            blockDepth++;\r\n                            break;\r\n                        case '(':\r\n                            blockStack.push(')');\r\n                            blockDepth++;\r\n                            break;\r\n                        case '[':\r\n                            blockStack.push(']');\r\n                            blockDepth++;\r\n                            break;\r\n                        case '}':\r\n                        case ')':\r\n                        case ']':\r\n                            var expected = blockStack.pop();\r\n                            if (nextChar === expected) {\r\n                                blockDepth--;\r\n                            }\r\n                            else {\r\n                                // move the parser to the error and return expected\r\n                                skipWhitespace(i - startPos);\r\n                                returnVal = expected;\r\n                                loop = false;\r\n                            }\r\n                    }\r\n                    i++;\r\n                    if (i > length) {\r\n                        loop = false;\r\n                    }\r\n                }\r\n            } while (loop);\r\n            return returnVal ? returnVal : null;\r\n        };\r\n        parserInput.autoCommentAbsorb = true;\r\n        parserInput.commentStore = [];\r\n        parserInput.finished = false;\r\n        // Same as $(), but don't change the state of the parser,\r\n        // just return the match.\r\n        parserInput.peek = function (tok) {\r\n            if (typeof tok === 'string') {\r\n                // https://jsperf.com/string-startswith/21\r\n                for (var i = 0; i < tok.length; i++) {\r\n                    if (input.charAt(parserInput.i + i) !== tok.charAt(i)) {\r\n                        return false;\r\n                    }\r\n                }\r\n                return true;\r\n            }\r\n            else {\r\n                return tok.test(current);\r\n            }\r\n        };\r\n        // Specialization of peek()\r\n        // TODO remove or change some currentChar calls to peekChar\r\n        parserInput.peekChar = function (tok) { return input.charAt(parserInput.i) === tok; };\r\n        parserInput.currentChar = function () { return input.charAt(parserInput.i); };\r\n        parserInput.prevChar = function () { return input.charAt(parserInput.i - 1); };\r\n        parserInput.getInput = function () { return input; };\r\n        parserInput.peekNotNumeric = function () {\r\n            var c = input.charCodeAt(parserInput.i);\r\n            // Is the first char of the dimension 0-9, '.', '+' or '-'\r\n            return (c > CHARCODE_9 || c < CHARCODE_PLUS) || c === CHARCODE_FORWARD_SLASH || c === CHARCODE_COMMA;\r\n        };\r\n        parserInput.start = function (str, chunkInput, failFunction) {\r\n            input = str;\r\n            parserInput.i = j = currentPos = furthest = 0;\r\n            // chunking apparently makes things quicker (but my tests indicate\r\n            // it might actually make things slower in node at least)\r\n            // and it is a non-perfect parse - it can't recognise\r\n            // unquoted urls, meaning it can't distinguish comments\r\n            // meaning comments with quotes or {}() in them get 'counted'\r\n            // and then lead to parse errors.\r\n            // In addition if the chunking chunks in the wrong place we might\r\n            // not be able to parse a parser statement in one go\r\n            // this is officially deprecated but can be switched on via an option\r\n            // in the case it causes too much performance issues.\r\n            if (chunkInput) {\r\n                chunks = chunker(str, failFunction);\r\n            }\r\n            else {\r\n                chunks = [str];\r\n            }\r\n            current = chunks[0];\r\n            skipWhitespace(0);\r\n        };\r\n        parserInput.end = function () {\r\n            var message;\r\n            var isFinished = parserInput.i >= input.length;\r\n            if (parserInput.i < furthest) {\r\n                message = furthestPossibleErrorMessage;\r\n                parserInput.i = furthest;\r\n            }\r\n            return {\r\n                isFinished: isFinished,\r\n                furthest: parserInput.i,\r\n                furthestPossibleErrorMessage: message,\r\n                furthestReachedEnd: parserInput.i >= input.length - 1,\r\n                furthestChar: input[parserInput.i]\r\n            };\r\n        };\r\n        return parserInput;\r\n    });\n\n    //\r\n    // less.js - parser\r\n    //\r\n    //    A relatively straight-forward predictive parser.\r\n    //    There is no tokenization/lexing stage, the input is parsed\r\n    //    in one sweep.\r\n    //\r\n    //    To make the parser fast enough to run in the browser, several\r\n    //    optimization had to be made:\r\n    //\r\n    //    - Matching and slicing on a huge input is often cause of slowdowns.\r\n    //      The solution is to chunkify the input into smaller strings.\r\n    //      The chunks are stored in the `chunks` var,\r\n    //      `j` holds the current chunk index, and `currentPos` holds\r\n    //      the index of the current chunk in relation to `input`.\r\n    //      This gives us an almost 4x speed-up.\r\n    //\r\n    //    - In many cases, we don't need to match individual tokens;\r\n    //      for example, if a value doesn't hold any variables, operations\r\n    //      or dynamic references, the parser can effectively 'skip' it,\r\n    //      treating it as a literal.\r\n    //      An example would be '1px solid #000' - which evaluates to itself,\r\n    //      we don't need to know what the individual components are.\r\n    //      The drawback, of course is that you don't get the benefits of\r\n    //      syntax-checking on the CSS. This gives us a 50% speed-up in the parser,\r\n    //      and a smaller speed-up in the code-gen.\r\n    //\r\n    //\r\n    //    Token matching is done with the `$` function, which either takes\r\n    //    a terminal string or regexp, or a non-terminal function to call.\r\n    //    It also takes care of moving all the indices forwards.\r\n    //\r\n    var Parser = function Parser(context, imports, fileInfo) {\r\n        var parsers;\r\n        var parserInput = getParserInput();\r\n        function error(msg, type) {\r\n            throw new LessError({\r\n                index: parserInput.i,\r\n                filename: fileInfo.filename,\r\n                type: type || 'Syntax',\r\n                message: msg\r\n            }, imports);\r\n        }\r\n        function expect(arg, msg) {\r\n            // some older browsers return typeof 'function' for RegExp\r\n            var result = (arg instanceof Function) ? arg.call(parsers) : parserInput.$re(arg);\r\n            if (result) {\r\n                return result;\r\n            }\r\n            error(msg || (typeof arg === 'string'\r\n                ? \"expected '\" + arg + \"' got '\" + parserInput.currentChar() + \"'\"\r\n                : 'unexpected token'));\r\n        }\r\n        // Specialization of expect()\r\n        function expectChar(arg, msg) {\r\n            if (parserInput.$char(arg)) {\r\n                return arg;\r\n            }\r\n            error(msg || \"expected '\" + arg + \"' got '\" + parserInput.currentChar() + \"'\");\r\n        }\r\n        function getDebugInfo(index) {\r\n            var filename = fileInfo.filename;\r\n            return {\r\n                lineNumber: getLocation(index, parserInput.getInput()).line + 1,\r\n                fileName: filename\r\n            };\r\n        }\r\n        /**\r\n         *  Used after initial parsing to create nodes on the fly\r\n         *\r\n         *  @param {String} str          - string to parse\r\n         *  @param {Array}  parseList    - array of parsers to run input through e.g. [\"value\", \"important\"]\r\n         *  @param {Number} currentIndex - start number to begin indexing\r\n         *  @param {Object} fileInfo     - fileInfo to attach to created nodes\r\n         */\r\n        function parseNode(str, parseList, currentIndex, fileInfo, callback) {\r\n            var result;\r\n            var returnNodes = [];\r\n            var parser = parserInput;\r\n            try {\r\n                parser.start(str, false, function fail(msg, index) {\r\n                    callback({\r\n                        message: msg,\r\n                        index: index + currentIndex\r\n                    });\r\n                });\r\n                for (var x = 0, p = void 0, i = void 0; (p = parseList[x]); x++) {\r\n                    i = parser.i;\r\n                    result = parsers[p]();\r\n                    if (result) {\r\n                        try {\r\n                            result._index = i + currentIndex;\r\n                            result._fileInfo = fileInfo;\r\n                        }\r\n                        catch (e) { }\r\n                        returnNodes.push(result);\r\n                    }\r\n                    else {\r\n                        returnNodes.push(null);\r\n                    }\r\n                }\r\n                var endInfo = parser.end();\r\n                if (endInfo.isFinished) {\r\n                    callback(null, returnNodes);\r\n                }\r\n                else {\r\n                    callback(true, null);\r\n                }\r\n            }\r\n            catch (e) {\r\n                throw new LessError({\r\n                    index: e.index + currentIndex,\r\n                    message: e.message\r\n                }, imports, fileInfo.filename);\r\n            }\r\n        }\r\n        //\r\n        // The Parser\r\n        //\r\n        return {\r\n            parserInput: parserInput,\r\n            imports: imports,\r\n            fileInfo: fileInfo,\r\n            parseNode: parseNode,\r\n            //\r\n            // Parse an input string into an abstract syntax tree,\r\n            // @param str A string containing 'less' markup\r\n            // @param callback call `callback` when done.\r\n            // @param [additionalData] An optional map which can contains vars - a map (key, value) of variables to apply\r\n            //\r\n            parse: function (str, callback, additionalData) {\r\n                var root;\r\n                var err = null;\r\n                var globalVars;\r\n                var modifyVars;\r\n                var ignored;\r\n                var preText = '';\r\n                // Optionally disable @plugin parsing\r\n                if (additionalData && additionalData.disablePluginRule) {\r\n                    parsers.plugin = function () {\r\n                        var dir = parserInput.$re(/^@plugin?\\s+/);\r\n                        if (dir) {\r\n                            error('@plugin statements are not allowed when disablePluginRule is set to true');\r\n                        }\r\n                    };\r\n                }\r\n                globalVars = (additionalData && additionalData.globalVars) ? Parser.serializeVars(additionalData.globalVars) + \"\\n\" : '';\r\n                modifyVars = (additionalData && additionalData.modifyVars) ? \"\\n\" + Parser.serializeVars(additionalData.modifyVars) : '';\r\n                if (context.pluginManager) {\r\n                    var preProcessors = context.pluginManager.getPreProcessors();\r\n                    for (var i = 0; i < preProcessors.length; i++) {\r\n                        str = preProcessors[i].process(str, { context: context, imports: imports, fileInfo: fileInfo });\r\n                    }\r\n                }\r\n                if (globalVars || (additionalData && additionalData.banner)) {\r\n                    preText = ((additionalData && additionalData.banner) ? additionalData.banner : '') + globalVars;\r\n                    ignored = imports.contentsIgnoredChars;\r\n                    ignored[fileInfo.filename] = ignored[fileInfo.filename] || 0;\r\n                    ignored[fileInfo.filename] += preText.length;\r\n                }\r\n                str = str.replace(/\\r\\n?/g, '\\n');\r\n                // Remove potential UTF Byte Order Mark\r\n                str = preText + str.replace(/^\\uFEFF/, '') + modifyVars;\r\n                imports.contents[fileInfo.filename] = str;\r\n                // Start with the primary rule.\r\n                // The whole syntax tree is held under a Ruleset node,\r\n                // with the `root` property set to true, so no `{}` are\r\n                // output. The callback is called when the input is parsed.\r\n                try {\r\n                    parserInput.start(str, context.chunkInput, function fail(msg, index) {\r\n                        throw new LessError({\r\n                            index: index,\r\n                            type: 'Parse',\r\n                            message: msg,\r\n                            filename: fileInfo.filename\r\n                        }, imports);\r\n                    });\r\n                    tree.Node.prototype.parse = this;\r\n                    root = new tree.Ruleset(null, this.parsers.primary());\r\n                    tree.Node.prototype.rootNode = root;\r\n                    root.root = true;\r\n                    root.firstRoot = true;\r\n                    root.functionRegistry = functionRegistry.inherit();\r\n                }\r\n                catch (e) {\r\n                    return callback(new LessError(e, imports, fileInfo.filename));\r\n                }\r\n                // If `i` is smaller than the `input.length - 1`,\r\n                // it means the parser wasn't able to parse the whole\r\n                // string, so we've got a parsing error.\r\n                //\r\n                // We try to extract a \\n delimited string,\r\n                // showing the line where the parse error occurred.\r\n                // We split it up into two parts (the part which parsed,\r\n                // and the part which didn't), so we can color them differently.\r\n                var endInfo = parserInput.end();\r\n                if (!endInfo.isFinished) {\r\n                    var message = endInfo.furthestPossibleErrorMessage;\r\n                    if (!message) {\r\n                        message = 'Unrecognised input';\r\n                        if (endInfo.furthestChar === '}') {\r\n                            message += '. Possibly missing opening \\'{\\'';\r\n                        }\r\n                        else if (endInfo.furthestChar === ')') {\r\n                            message += '. Possibly missing opening \\'(\\'';\r\n                        }\r\n                        else if (endInfo.furthestReachedEnd) {\r\n                            message += '. Possibly missing something';\r\n                        }\r\n                    }\r\n                    err = new LessError({\r\n                        type: 'Parse',\r\n                        message: message,\r\n                        index: endInfo.furthest,\r\n                        filename: fileInfo.filename\r\n                    }, imports);\r\n                }\r\n                var finish = function (e) {\r\n                    e = err || e || imports.error;\r\n                    if (e) {\r\n                        if (!(e instanceof LessError)) {\r\n                            e = new LessError(e, imports, fileInfo.filename);\r\n                        }\r\n                        return callback(e);\r\n                    }\r\n                    else {\r\n                        return callback(null, root);\r\n                    }\r\n                };\r\n                if (context.processImports !== false) {\r\n                    new visitors.ImportVisitor(imports, finish)\r\n                        .run(root);\r\n                }\r\n                else {\r\n                    return finish();\r\n                }\r\n            },\r\n            //\r\n            // Here in, the parsing rules/functions\r\n            //\r\n            // The basic structure of the syntax tree generated is as follows:\r\n            //\r\n            //   Ruleset ->  Declaration -> Value -> Expression -> Entity\r\n            //\r\n            // Here's some Less code:\r\n            //\r\n            //    .class {\r\n            //      color: #fff;\r\n            //      border: 1px solid #000;\r\n            //      width: @w + 4px;\r\n            //      > .child {...}\r\n            //    }\r\n            //\r\n            // And here's what the parse tree might look like:\r\n            //\r\n            //     Ruleset (Selector '.class', [\r\n            //         Declaration (\"color\",  Value ([Expression [Color #fff]]))\r\n            //         Declaration (\"border\", Value ([Expression [Dimension 1px][Keyword \"solid\"][Color #000]]))\r\n            //         Declaration (\"width\",  Value ([Expression [Operation \" + \" [Variable \"@w\"][Dimension 4px]]]))\r\n            //         Ruleset (Selector [Element '>', '.child'], [...])\r\n            //     ])\r\n            //\r\n            //  In general, most rules will try to parse a token with the `$re()` function, and if the return\r\n            //  value is truly, will return a new node, of the relevant type. Sometimes, we need to check\r\n            //  first, before parsing, that's when we use `peek()`.\r\n            //\r\n            parsers: parsers = {\r\n                //\r\n                // The `primary` rule is the *entry* and *exit* point of the parser.\r\n                // The rules here can appear at any level of the parse tree.\r\n                //\r\n                // The recursive nature of the grammar is an interplay between the `block`\r\n                // rule, which represents `{ ... }`, the `ruleset` rule, and this `primary` rule,\r\n                // as represented by this simplified grammar:\r\n                //\r\n                //     primary  →  (ruleset | declaration)+\r\n                //     ruleset  →  selector+ block\r\n                //     block    →  '{' primary '}'\r\n                //\r\n                // Only at one point is the primary rule not called from the\r\n                // block rule: at the root level.\r\n                //\r\n                primary: function () {\r\n                    var mixin = this.mixin;\r\n                    var root = [];\r\n                    var node;\r\n                    while (true) {\r\n                        while (true) {\r\n                            node = this.comment();\r\n                            if (!node) {\r\n                                break;\r\n                            }\r\n                            root.push(node);\r\n                        }\r\n                        // always process comments before deciding if finished\r\n                        if (parserInput.finished) {\r\n                            break;\r\n                        }\r\n                        if (parserInput.peek('}')) {\r\n                            break;\r\n                        }\r\n                        node = this.extendRule();\r\n                        if (node) {\r\n                            root = root.concat(node);\r\n                            continue;\r\n                        }\r\n                        node = mixin.definition() || this.declaration() || mixin.call(false, false) ||\r\n                            this.ruleset() || this.variableCall() || this.entities.call() || this.atrule();\r\n                        if (node) {\r\n                            root.push(node);\r\n                        }\r\n                        else {\r\n                            var foundSemiColon = false;\r\n                            while (parserInput.$char(';')) {\r\n                                foundSemiColon = true;\r\n                            }\r\n                            if (!foundSemiColon) {\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    return root;\r\n                },\r\n                // comments are collected by the main parsing mechanism and then assigned to nodes\r\n                // where the current structure allows it\r\n                comment: function () {\r\n                    if (parserInput.commentStore.length) {\r\n                        var comment = parserInput.commentStore.shift();\r\n                        return new (tree.Comment)(comment.text, comment.isLineComment, comment.index, fileInfo);\r\n                    }\r\n                },\r\n                //\r\n                // Entities are tokens which can be found inside an Expression\r\n                //\r\n                entities: {\r\n                    mixinLookup: function () {\r\n                        return parsers.mixin.call(true, true);\r\n                    },\r\n                    //\r\n                    // A string, which supports escaping \" and '\r\n                    //\r\n                    //     \"milky way\" 'he\\'s the one!'\r\n                    //\r\n                    quoted: function (forceEscaped) {\r\n                        var str;\r\n                        var index = parserInput.i;\r\n                        var isEscaped = false;\r\n                        parserInput.save();\r\n                        if (parserInput.$char('~')) {\r\n                            isEscaped = true;\r\n                        }\r\n                        else if (forceEscaped) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                        str = parserInput.$quoted();\r\n                        if (!str) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                        parserInput.forget();\r\n                        return new (tree.Quoted)(str.charAt(0), str.substr(1, str.length - 2), isEscaped, index, fileInfo);\r\n                    },\r\n                    //\r\n                    // A catch-all word, such as:\r\n                    //\r\n                    //     black border-collapse\r\n                    //\r\n                    keyword: function () {\r\n                        var k = parserInput.$char('%') || parserInput.$re(/^\\[?(?:[\\w-]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+\\]?/);\r\n                        if (k) {\r\n                            return tree.Color.fromKeyword(k) || new (tree.Keyword)(k);\r\n                        }\r\n                    },\r\n                    //\r\n                    // A function call\r\n                    //\r\n                    //     rgb(255, 0, 255)\r\n                    //\r\n                    // The arguments are parsed with the `entities.arguments` parser.\r\n                    //\r\n                    call: function () {\r\n                        var name;\r\n                        var args;\r\n                        var func;\r\n                        var index = parserInput.i;\r\n                        // http://jsperf.com/case-insensitive-regex-vs-strtolower-then-regex/18\r\n                        if (parserInput.peek(/^url\\(/i)) {\r\n                            return;\r\n                        }\r\n                        parserInput.save();\r\n                        name = parserInput.$re(/^([\\w-]+|%|~|progid:[\\w\\.]+)\\(/);\r\n                        if (!name) {\r\n                            parserInput.forget();\r\n                            return;\r\n                        }\r\n                        name = name[1];\r\n                        func = this.customFuncCall(name);\r\n                        if (func) {\r\n                            args = func.parse();\r\n                            if (args && func.stop) {\r\n                                parserInput.forget();\r\n                                return args;\r\n                            }\r\n                        }\r\n                        args = this.arguments(args);\r\n                        if (!parserInput.$char(')')) {\r\n                            parserInput.restore('Could not parse call arguments or missing \\')\\'');\r\n                            return;\r\n                        }\r\n                        parserInput.forget();\r\n                        return new (tree.Call)(name, args, index, fileInfo);\r\n                    },\r\n                    //\r\n                    // Parsing rules for functions with non-standard args, e.g.:\r\n                    //\r\n                    //     boolean(not(2 > 1))\r\n                    //\r\n                    //     This is a quick prototype, to be modified/improved when\r\n                    //     more custom-parsed funcs come (e.g. `selector(...)`)\r\n                    //\r\n                    customFuncCall: function (name) {\r\n                        /* Ideally the table is to be moved out of here for faster perf.,\r\n                           but it's quite tricky since it relies on all these `parsers`\r\n                           and `expect` available only here */\r\n                        return {\r\n                            alpha: f(parsers.ieAlpha, true),\r\n                            boolean: f(condition),\r\n                            'if': f(condition)\r\n                        }[name.toLowerCase()];\r\n                        function f(parse, stop) {\r\n                            return {\r\n                                parse: parse,\r\n                                stop: stop // when true - stop after parse() and return its result, \r\n                                // otherwise continue for plain args\r\n                            };\r\n                        }\r\n                        function condition() {\r\n                            return [expect(parsers.condition, 'expected condition')];\r\n                        }\r\n                    },\r\n                    arguments: function (prevArgs) {\r\n                        var argsComma = prevArgs || [];\r\n                        var argsSemiColon = [];\r\n                        var isSemiColonSeparated;\r\n                        var value;\r\n                        parserInput.save();\r\n                        while (true) {\r\n                            if (prevArgs) {\r\n                                prevArgs = false;\r\n                            }\r\n                            else {\r\n                                value = parsers.detachedRuleset() || this.assignment() || parsers.expression();\r\n                                if (!value) {\r\n                                    break;\r\n                                }\r\n                                if (value.value && value.value.length == 1) {\r\n                                    value = value.value[0];\r\n                                }\r\n                                argsComma.push(value);\r\n                            }\r\n                            if (parserInput.$char(',')) {\r\n                                continue;\r\n                            }\r\n                            if (parserInput.$char(';') || isSemiColonSeparated) {\r\n                                isSemiColonSeparated = true;\r\n                                value = (argsComma.length < 1) ? argsComma[0]\r\n                                    : new tree.Value(argsComma);\r\n                                argsSemiColon.push(value);\r\n                                argsComma = [];\r\n                            }\r\n                        }\r\n                        parserInput.forget();\r\n                        return isSemiColonSeparated ? argsSemiColon : argsComma;\r\n                    },\r\n                    literal: function () {\r\n                        return this.dimension() ||\r\n                            this.color() ||\r\n                            this.quoted() ||\r\n                            this.unicodeDescriptor();\r\n                    },\r\n                    // Assignments are argument entities for calls.\r\n                    // They are present in ie filter properties as shown below.\r\n                    //\r\n                    //     filter: progid:DXImageTransform.Microsoft.Alpha( *opacity=50* )\r\n                    //\r\n                    assignment: function () {\r\n                        var key;\r\n                        var value;\r\n                        parserInput.save();\r\n                        key = parserInput.$re(/^\\w+(?=\\s?=)/i);\r\n                        if (!key) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                        if (!parserInput.$char('=')) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                        value = parsers.entity();\r\n                        if (value) {\r\n                            parserInput.forget();\r\n                            return new (tree.Assignment)(key, value);\r\n                        }\r\n                        else {\r\n                            parserInput.restore();\r\n                        }\r\n                    },\r\n                    //\r\n                    // Parse url() tokens\r\n                    //\r\n                    // We use a specific rule for urls, because they don't really behave like\r\n                    // standard function calls. The difference is that the argument doesn't have\r\n                    // to be enclosed within a string, so it can't be parsed as an Expression.\r\n                    //\r\n                    url: function () {\r\n                        var value;\r\n                        var index = parserInput.i;\r\n                        parserInput.autoCommentAbsorb = false;\r\n                        if (!parserInput.$str('url(')) {\r\n                            parserInput.autoCommentAbsorb = true;\r\n                            return;\r\n                        }\r\n                        value = this.quoted() || this.variable() || this.property() ||\r\n                            parserInput.$re(/^(?:(?:\\\\[\\(\\)'\"])|[^\\(\\)'\"])+/) || '';\r\n                        parserInput.autoCommentAbsorb = true;\r\n                        expectChar(')');\r\n                        return new (tree.URL)((value.value != null ||\r\n                            value instanceof tree.Variable ||\r\n                            value instanceof tree.Property) ?\r\n                            value : new (tree.Anonymous)(value, index), index, fileInfo);\r\n                    },\r\n                    //\r\n                    // A Variable entity, such as `@fink`, in\r\n                    //\r\n                    //     width: @fink + 2px\r\n                    //\r\n                    // We use a different parser for variable definitions,\r\n                    // see `parsers.variable`.\r\n                    //\r\n                    variable: function () {\r\n                        var ch;\r\n                        var name;\r\n                        var index = parserInput.i;\r\n                        parserInput.save();\r\n                        if (parserInput.currentChar() === '@' && (name = parserInput.$re(/^@@?[\\w-]+/))) {\r\n                            ch = parserInput.currentChar();\r\n                            if (ch === '(' || ch === '[' && !parserInput.prevChar().match(/^\\s/)) {\r\n                                // this may be a VariableCall lookup\r\n                                var result = parsers.variableCall(name);\r\n                                if (result) {\r\n                                    parserInput.forget();\r\n                                    return result;\r\n                                }\r\n                            }\r\n                            parserInput.forget();\r\n                            return new (tree.Variable)(name, index, fileInfo);\r\n                        }\r\n                        parserInput.restore();\r\n                    },\r\n                    // A variable entity using the protective {} e.g. @{var}\r\n                    variableCurly: function () {\r\n                        var curly;\r\n                        var index = parserInput.i;\r\n                        if (parserInput.currentChar() === '@' && (curly = parserInput.$re(/^@\\{([\\w-]+)\\}/))) {\r\n                            return new (tree.Variable)(\"@\" + curly[1], index, fileInfo);\r\n                        }\r\n                    },\r\n                    //\r\n                    // A Property accessor, such as `$color`, in\r\n                    //\r\n                    //     background-color: $color\r\n                    //\r\n                    property: function () {\r\n                        var name;\r\n                        var index = parserInput.i;\r\n                        if (parserInput.currentChar() === '$' && (name = parserInput.$re(/^\\$[\\w-]+/))) {\r\n                            return new (tree.Property)(name, index, fileInfo);\r\n                        }\r\n                    },\r\n                    // A property entity useing the protective {} e.g. ${prop}\r\n                    propertyCurly: function () {\r\n                        var curly;\r\n                        var index = parserInput.i;\r\n                        if (parserInput.currentChar() === '$' && (curly = parserInput.$re(/^\\$\\{([\\w-]+)\\}/))) {\r\n                            return new (tree.Property)(\"$\" + curly[1], index, fileInfo);\r\n                        }\r\n                    },\r\n                    //\r\n                    // A Hexadecimal color\r\n                    //\r\n                    //     #4F3C2F\r\n                    //\r\n                    // `rgb` and `hsl` colors are parsed through the `entities.call` parser.\r\n                    //\r\n                    color: function () {\r\n                        var rgb;\r\n                        parserInput.save();\r\n                        if (parserInput.currentChar() === '#' && (rgb = parserInput.$re(/^#([A-Fa-f0-9]{8}|[A-Fa-f0-9]{6}|[A-Fa-f0-9]{3,4})([\\w.#\\[])?/))) {\r\n                            if (!rgb[2]) {\r\n                                parserInput.forget();\r\n                                return new (tree.Color)(rgb[1], undefined, rgb[0]);\r\n                            }\r\n                        }\r\n                        parserInput.restore();\r\n                    },\r\n                    colorKeyword: function () {\r\n                        parserInput.save();\r\n                        var autoCommentAbsorb = parserInput.autoCommentAbsorb;\r\n                        parserInput.autoCommentAbsorb = false;\r\n                        var k = parserInput.$re(/^[_A-Za-z-][_A-Za-z0-9-]+/);\r\n                        parserInput.autoCommentAbsorb = autoCommentAbsorb;\r\n                        if (!k) {\r\n                            parserInput.forget();\r\n                            return;\r\n                        }\r\n                        parserInput.restore();\r\n                        var color = tree.Color.fromKeyword(k);\r\n                        if (color) {\r\n                            parserInput.$str(k);\r\n                            return color;\r\n                        }\r\n                    },\r\n                    //\r\n                    // A Dimension, that is, a number and a unit\r\n                    //\r\n                    //     0.5em 95%\r\n                    //\r\n                    dimension: function () {\r\n                        if (parserInput.peekNotNumeric()) {\r\n                            return;\r\n                        }\r\n                        var value = parserInput.$re(/^([+-]?\\d*\\.?\\d+)(%|[a-z_]+)?/i);\r\n                        if (value) {\r\n                            return new (tree.Dimension)(value[1], value[2]);\r\n                        }\r\n                    },\r\n                    //\r\n                    // A unicode descriptor, as is used in unicode-range\r\n                    //\r\n                    // U+0??  or U+00A1-00A9\r\n                    //\r\n                    unicodeDescriptor: function () {\r\n                        var ud;\r\n                        ud = parserInput.$re(/^U\\+[0-9a-fA-F?]+(\\-[0-9a-fA-F?]+)?/);\r\n                        if (ud) {\r\n                            return new (tree.UnicodeDescriptor)(ud[0]);\r\n                        }\r\n                    },\r\n                    //\r\n                    // JavaScript code to be evaluated\r\n                    //\r\n                    //     `window.location.href`\r\n                    //\r\n                    javascript: function () {\r\n                        var js;\r\n                        var index = parserInput.i;\r\n                        parserInput.save();\r\n                        var escape = parserInput.$char('~');\r\n                        var jsQuote = parserInput.$char('`');\r\n                        if (!jsQuote) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                        js = parserInput.$re(/^[^`]*`/);\r\n                        if (js) {\r\n                            parserInput.forget();\r\n                            return new (tree.JavaScript)(js.substr(0, js.length - 1), Boolean(escape), index, fileInfo);\r\n                        }\r\n                        parserInput.restore('invalid javascript definition');\r\n                    }\r\n                },\r\n                //\r\n                // The variable part of a variable definition. Used in the `rule` parser\r\n                //\r\n                //     @fink:\r\n                //\r\n                variable: function () {\r\n                    var name;\r\n                    if (parserInput.currentChar() === '@' && (name = parserInput.$re(/^(@[\\w-]+)\\s*:/))) {\r\n                        return name[1];\r\n                    }\r\n                },\r\n                //\r\n                // Call a variable value to retrieve a detached ruleset\r\n                // or a value from a detached ruleset's rules.\r\n                //\r\n                //     @fink();\r\n                //     @fink;\r\n                //     color: @fink[@color];\r\n                //\r\n                variableCall: function (parsedName) {\r\n                    var lookups;\r\n                    var i = parserInput.i;\r\n                    var inValue = !!parsedName;\r\n                    var name = parsedName;\r\n                    parserInput.save();\r\n                    if (name || (parserInput.currentChar() === '@'\r\n                        && (name = parserInput.$re(/^(@[\\w-]+)(\\(\\s*\\))?/)))) {\r\n                        lookups = this.mixin.ruleLookups();\r\n                        if (!lookups && ((inValue && parserInput.$str('()') !== '()') || (name[2] !== '()'))) {\r\n                            parserInput.restore('Missing \\'[...]\\' lookup in variable call');\r\n                            return;\r\n                        }\r\n                        if (!inValue) {\r\n                            name = name[1];\r\n                        }\r\n                        var call = new tree.VariableCall(name, i, fileInfo);\r\n                        if (!inValue && parsers.end()) {\r\n                            parserInput.forget();\r\n                            return call;\r\n                        }\r\n                        else {\r\n                            parserInput.forget();\r\n                            return new tree.NamespaceValue(call, lookups, i, fileInfo);\r\n                        }\r\n                    }\r\n                    parserInput.restore();\r\n                },\r\n                //\r\n                // extend syntax - used to extend selectors\r\n                //\r\n                extend: function (isRule) {\r\n                    var elements;\r\n                    var e;\r\n                    var index = parserInput.i;\r\n                    var option;\r\n                    var extendList;\r\n                    var extend;\r\n                    if (!parserInput.$str(isRule ? '&:extend(' : ':extend(')) {\r\n                        return;\r\n                    }\r\n                    do {\r\n                        option = null;\r\n                        elements = null;\r\n                        while (!(option = parserInput.$re(/^(all)(?=\\s*(\\)|,))/))) {\r\n                            e = this.element();\r\n                            if (!e) {\r\n                                break;\r\n                            }\r\n                            if (elements) {\r\n                                elements.push(e);\r\n                            }\r\n                            else {\r\n                                elements = [e];\r\n                            }\r\n                        }\r\n                        option = option && option[1];\r\n                        if (!elements) {\r\n                            error('Missing target selector for :extend().');\r\n                        }\r\n                        extend = new (tree.Extend)(new (tree.Selector)(elements), option, index, fileInfo);\r\n                        if (extendList) {\r\n                            extendList.push(extend);\r\n                        }\r\n                        else {\r\n                            extendList = [extend];\r\n                        }\r\n                    } while (parserInput.$char(','));\r\n                    expect(/^\\)/);\r\n                    if (isRule) {\r\n                        expect(/^;/);\r\n                    }\r\n                    return extendList;\r\n                },\r\n                //\r\n                // extendRule - used in a rule to extend all the parent selectors\r\n                //\r\n                extendRule: function () {\r\n                    return this.extend(true);\r\n                },\r\n                //\r\n                // Mixins\r\n                //\r\n                mixin: {\r\n                    //\r\n                    // A Mixin call, with an optional argument list\r\n                    //\r\n                    //     #mixins > .square(#fff);\r\n                    //     #mixins.square(#fff);\r\n                    //     .rounded(4px, black);\r\n                    //     .button;\r\n                    //\r\n                    // We can lookup / return a value using the lookup syntax:\r\n                    //\r\n                    //     color: #mixin.square(#fff)[@color];\r\n                    //\r\n                    // The `while` loop is there because mixins can be\r\n                    // namespaced, but we only support the child and descendant\r\n                    // selector for now.\r\n                    //\r\n                    call: function (inValue, getLookup) {\r\n                        var s = parserInput.currentChar();\r\n                        var important = false;\r\n                        var lookups;\r\n                        var index = parserInput.i;\r\n                        var elements;\r\n                        var args;\r\n                        var hasParens;\r\n                        if (s !== '.' && s !== '#') {\r\n                            return;\r\n                        }\r\n                        parserInput.save(); // stop us absorbing part of an invalid selector\r\n                        elements = this.elements();\r\n                        if (elements) {\r\n                            if (parserInput.$char('(')) {\r\n                                args = this.args(true).args;\r\n                                expectChar(')');\r\n                                hasParens = true;\r\n                            }\r\n                            if (getLookup !== false) {\r\n                                lookups = this.ruleLookups();\r\n                            }\r\n                            if (getLookup === true && !lookups) {\r\n                                parserInput.restore();\r\n                                return;\r\n                            }\r\n                            if (inValue && !lookups && !hasParens) {\r\n                                // This isn't a valid in-value mixin call\r\n                                parserInput.restore();\r\n                                return;\r\n                            }\r\n                            if (!inValue && parsers.important()) {\r\n                                important = true;\r\n                            }\r\n                            if (inValue || parsers.end()) {\r\n                                parserInput.forget();\r\n                                var mixin = new (tree.mixin.Call)(elements, args, index, fileInfo, !lookups && important);\r\n                                if (lookups) {\r\n                                    return new tree.NamespaceValue(mixin, lookups);\r\n                                }\r\n                                else {\r\n                                    return mixin;\r\n                                }\r\n                            }\r\n                        }\r\n                        parserInput.restore();\r\n                    },\r\n                    /**\r\n                     * Matching elements for mixins\r\n                     * (Start with . or # and can have > )\r\n                     */\r\n                    elements: function () {\r\n                        var elements;\r\n                        var e;\r\n                        var c;\r\n                        var elem;\r\n                        var elemIndex;\r\n                        var re = /^[#.](?:[\\w-]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+/;\r\n                        while (true) {\r\n                            elemIndex = parserInput.i;\r\n                            e = parserInput.$re(re);\r\n                            if (!e) {\r\n                                break;\r\n                            }\r\n                            elem = new (tree.Element)(c, e, false, elemIndex, fileInfo);\r\n                            if (elements) {\r\n                                elements.push(elem);\r\n                            }\r\n                            else {\r\n                                elements = [elem];\r\n                            }\r\n                            c = parserInput.$char('>');\r\n                        }\r\n                        return elements;\r\n                    },\r\n                    args: function (isCall) {\r\n                        var entities = parsers.entities;\r\n                        var returner = { args: null, variadic: false };\r\n                        var expressions = [];\r\n                        var argsSemiColon = [];\r\n                        var argsComma = [];\r\n                        var isSemiColonSeparated;\r\n                        var expressionContainsNamed;\r\n                        var name;\r\n                        var nameLoop;\r\n                        var value;\r\n                        var arg;\r\n                        var expand;\r\n                        var hasSep = true;\r\n                        parserInput.save();\r\n                        while (true) {\r\n                            if (isCall) {\r\n                                arg = parsers.detachedRuleset() || parsers.expression();\r\n                            }\r\n                            else {\r\n                                parserInput.commentStore.length = 0;\r\n                                if (parserInput.$str('...')) {\r\n                                    returner.variadic = true;\r\n                                    if (parserInput.$char(';') && !isSemiColonSeparated) {\r\n                                        isSemiColonSeparated = true;\r\n                                    }\r\n                                    (isSemiColonSeparated ? argsSemiColon : argsComma)\r\n                                        .push({ variadic: true });\r\n                                    break;\r\n                                }\r\n                                arg = entities.variable() || entities.property() || entities.literal() || entities.keyword() || this.call(true);\r\n                            }\r\n                            if (!arg || !hasSep) {\r\n                                break;\r\n                            }\r\n                            nameLoop = null;\r\n                            if (arg.throwAwayComments) {\r\n                                arg.throwAwayComments();\r\n                            }\r\n                            value = arg;\r\n                            var val = null;\r\n                            if (isCall) {\r\n                                // Variable\r\n                                if (arg.value && arg.value.length == 1) {\r\n                                    val = arg.value[0];\r\n                                }\r\n                            }\r\n                            else {\r\n                                val = arg;\r\n                            }\r\n                            if (val && (val instanceof tree.Variable || val instanceof tree.Property)) {\r\n                                if (parserInput.$char(':')) {\r\n                                    if (expressions.length > 0) {\r\n                                        if (isSemiColonSeparated) {\r\n                                            error('Cannot mix ; and , as delimiter types');\r\n                                        }\r\n                                        expressionContainsNamed = true;\r\n                                    }\r\n                                    value = parsers.detachedRuleset() || parsers.expression();\r\n                                    if (!value) {\r\n                                        if (isCall) {\r\n                                            error('could not understand value for named argument');\r\n                                        }\r\n                                        else {\r\n                                            parserInput.restore();\r\n                                            returner.args = [];\r\n                                            return returner;\r\n                                        }\r\n                                    }\r\n                                    nameLoop = (name = val.name);\r\n                                }\r\n                                else if (parserInput.$str('...')) {\r\n                                    if (!isCall) {\r\n                                        returner.variadic = true;\r\n                                        if (parserInput.$char(';') && !isSemiColonSeparated) {\r\n                                            isSemiColonSeparated = true;\r\n                                        }\r\n                                        (isSemiColonSeparated ? argsSemiColon : argsComma)\r\n                                            .push({ name: arg.name, variadic: true });\r\n                                        break;\r\n                                    }\r\n                                    else {\r\n                                        expand = true;\r\n                                    }\r\n                                }\r\n                                else if (!isCall) {\r\n                                    name = nameLoop = val.name;\r\n                                    value = null;\r\n                                }\r\n                            }\r\n                            if (value) {\r\n                                expressions.push(value);\r\n                            }\r\n                            argsComma.push({ name: nameLoop, value: value, expand: expand });\r\n                            if (parserInput.$char(',')) {\r\n                                hasSep = true;\r\n                                continue;\r\n                            }\r\n                            hasSep = parserInput.$char(';') === ';';\r\n                            if (hasSep || isSemiColonSeparated) {\r\n                                if (expressionContainsNamed) {\r\n                                    error('Cannot mix ; and , as delimiter types');\r\n                                }\r\n                                isSemiColonSeparated = true;\r\n                                if (expressions.length > 1) {\r\n                                    value = new (tree.Value)(expressions);\r\n                                }\r\n                                argsSemiColon.push({ name: name, value: value, expand: expand });\r\n                                name = null;\r\n                                expressions = [];\r\n                                expressionContainsNamed = false;\r\n                            }\r\n                        }\r\n                        parserInput.forget();\r\n                        returner.args = isSemiColonSeparated ? argsSemiColon : argsComma;\r\n                        return returner;\r\n                    },\r\n                    //\r\n                    // A Mixin definition, with a list of parameters\r\n                    //\r\n                    //     .rounded (@radius: 2px, @color) {\r\n                    //        ...\r\n                    //     }\r\n                    //\r\n                    // Until we have a finer grained state-machine, we have to\r\n                    // do a look-ahead, to make sure we don't have a mixin call.\r\n                    // See the `rule` function for more information.\r\n                    //\r\n                    // We start by matching `.rounded (`, and then proceed on to\r\n                    // the argument list, which has optional default values.\r\n                    // We store the parameters in `params`, with a `value` key,\r\n                    // if there is a value, such as in the case of `@radius`.\r\n                    //\r\n                    // Once we've got our params list, and a closing `)`, we parse\r\n                    // the `{...}` block.\r\n                    //\r\n                    definition: function () {\r\n                        var name;\r\n                        var params = [];\r\n                        var match;\r\n                        var ruleset;\r\n                        var cond;\r\n                        var variadic = false;\r\n                        if ((parserInput.currentChar() !== '.' && parserInput.currentChar() !== '#') ||\r\n                            parserInput.peek(/^[^{]*\\}/)) {\r\n                            return;\r\n                        }\r\n                        parserInput.save();\r\n                        match = parserInput.$re(/^([#.](?:[\\w-]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+)\\s*\\(/);\r\n                        if (match) {\r\n                            name = match[1];\r\n                            var argInfo = this.args(false);\r\n                            params = argInfo.args;\r\n                            variadic = argInfo.variadic;\r\n                            // .mixincall(\"@{a}\");\r\n                            // looks a bit like a mixin definition..\r\n                            // also\r\n                            // .mixincall(@a: {rule: set;});\r\n                            // so we have to be nice and restore\r\n                            if (!parserInput.$char(')')) {\r\n                                parserInput.restore('Missing closing \\')\\'');\r\n                                return;\r\n                            }\r\n                            parserInput.commentStore.length = 0;\r\n                            if (parserInput.$str('when')) { // Guard\r\n                                cond = expect(parsers.conditions, 'expected condition');\r\n                            }\r\n                            ruleset = parsers.block();\r\n                            if (ruleset) {\r\n                                parserInput.forget();\r\n                                return new (tree.mixin.Definition)(name, params, ruleset, cond, variadic);\r\n                            }\r\n                            else {\r\n                                parserInput.restore();\r\n                            }\r\n                        }\r\n                        else {\r\n                            parserInput.restore();\r\n                        }\r\n                    },\r\n                    ruleLookups: function () {\r\n                        var rule;\r\n                        var lookups = [];\r\n                        if (parserInput.currentChar() !== '[') {\r\n                            return;\r\n                        }\r\n                        while (true) {\r\n                            parserInput.save();\r\n                            rule = this.lookupValue();\r\n                            if (!rule && rule !== '') {\r\n                                parserInput.restore();\r\n                                break;\r\n                            }\r\n                            lookups.push(rule);\r\n                            parserInput.forget();\r\n                        }\r\n                        if (lookups.length > 0) {\r\n                            return lookups;\r\n                        }\r\n                    },\r\n                    lookupValue: function () {\r\n                        parserInput.save();\r\n                        if (!parserInput.$char('[')) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                        var name = parserInput.$re(/^(?:[@$]{0,2})[_a-zA-Z0-9-]*/);\r\n                        if (!parserInput.$char(']')) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                        if (name || name === '') {\r\n                            parserInput.forget();\r\n                            return name;\r\n                        }\r\n                        parserInput.restore();\r\n                    }\r\n                },\r\n                //\r\n                // Entities are the smallest recognized token,\r\n                // and can be found inside a rule's value.\r\n                //\r\n                entity: function () {\r\n                    var entities = this.entities;\r\n                    return this.comment() || entities.literal() || entities.variable() || entities.url() ||\r\n                        entities.property() || entities.call() || entities.keyword() || this.mixin.call(true) ||\r\n                        entities.javascript();\r\n                },\r\n                //\r\n                // A Declaration terminator. Note that we use `peek()` to check for '}',\r\n                // because the `block` rule will be expecting it, but we still need to make sure\r\n                // it's there, if ';' was omitted.\r\n                //\r\n                end: function () {\r\n                    return parserInput.$char(';') || parserInput.peek('}');\r\n                },\r\n                //\r\n                // IE's alpha function\r\n                //\r\n                //     alpha(opacity=88)\r\n                //\r\n                ieAlpha: function () {\r\n                    var value;\r\n                    // http://jsperf.com/case-insensitive-regex-vs-strtolower-then-regex/18\r\n                    if (!parserInput.$re(/^opacity=/i)) {\r\n                        return;\r\n                    }\r\n                    value = parserInput.$re(/^\\d+/);\r\n                    if (!value) {\r\n                        value = expect(parsers.entities.variable, 'Could not parse alpha');\r\n                        value = \"@{\" + value.name.slice(1) + \"}\";\r\n                    }\r\n                    expectChar(')');\r\n                    return new tree.Quoted('', \"alpha(opacity=\" + value + \")\");\r\n                },\r\n                //\r\n                // A Selector Element\r\n                //\r\n                //     div\r\n                //     + h1\r\n                //     #socks\r\n                //     input[type=\"text\"]\r\n                //\r\n                // Elements are the building blocks for Selectors,\r\n                // they are made out of a `Combinator` (see combinator rule),\r\n                // and an element name, such as a tag a class, or `*`.\r\n                //\r\n                element: function () {\r\n                    var e;\r\n                    var c;\r\n                    var v;\r\n                    var index = parserInput.i;\r\n                    c = this.combinator();\r\n                    e = parserInput.$re(/^(?:\\d+\\.\\d+|\\d+)%/) ||\r\n                        parserInput.$re(/^(?:[.#]?|:*)(?:[\\w-]|[^\\x00-\\x9f]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+/) ||\r\n                        parserInput.$char('*') || parserInput.$char('&') || this.attribute() ||\r\n                        parserInput.$re(/^\\([^&()@]+\\)/) || parserInput.$re(/^[\\.#:](?=@)/) ||\r\n                        this.entities.variableCurly();\r\n                    if (!e) {\r\n                        parserInput.save();\r\n                        if (parserInput.$char('(')) {\r\n                            if ((v = this.selector(false)) && parserInput.$char(')')) {\r\n                                e = new (tree.Paren)(v);\r\n                                parserInput.forget();\r\n                            }\r\n                            else {\r\n                                parserInput.restore('Missing closing \\')\\'');\r\n                            }\r\n                        }\r\n                        else {\r\n                            parserInput.forget();\r\n                        }\r\n                    }\r\n                    if (e) {\r\n                        return new (tree.Element)(c, e, e instanceof tree.Variable, index, fileInfo);\r\n                    }\r\n                },\r\n                //\r\n                // Combinators combine elements together, in a Selector.\r\n                //\r\n                // Because our parser isn't white-space sensitive, special care\r\n                // has to be taken, when parsing the descendant combinator, ` `,\r\n                // as it's an empty space. We have to check the previous character\r\n                // in the input, to see if it's a ` ` character. More info on how\r\n                // we deal with this in *combinator.js*.\r\n                //\r\n                combinator: function () {\r\n                    var c = parserInput.currentChar();\r\n                    if (c === '/') {\r\n                        parserInput.save();\r\n                        var slashedCombinator = parserInput.$re(/^\\/[a-z]+\\//i);\r\n                        if (slashedCombinator) {\r\n                            parserInput.forget();\r\n                            return new (tree.Combinator)(slashedCombinator);\r\n                        }\r\n                        parserInput.restore();\r\n                    }\r\n                    if (c === '>' || c === '+' || c === '~' || c === '|' || c === '^') {\r\n                        parserInput.i++;\r\n                        if (c === '^' && parserInput.currentChar() === '^') {\r\n                            c = '^^';\r\n                            parserInput.i++;\r\n                        }\r\n                        while (parserInput.isWhitespace()) {\r\n                            parserInput.i++;\r\n                        }\r\n                        return new (tree.Combinator)(c);\r\n                    }\r\n                    else if (parserInput.isWhitespace(-1)) {\r\n                        return new (tree.Combinator)(' ');\r\n                    }\r\n                    else {\r\n                        return new (tree.Combinator)(null);\r\n                    }\r\n                },\r\n                //\r\n                // A CSS Selector\r\n                // with less extensions e.g. the ability to extend and guard\r\n                //\r\n                //     .class > div + h1\r\n                //     li a:hover\r\n                //\r\n                // Selectors are made out of one or more Elements, see above.\r\n                //\r\n                selector: function (isLess) {\r\n                    var index = parserInput.i;\r\n                    var elements;\r\n                    var extendList;\r\n                    var c;\r\n                    var e;\r\n                    var allExtends;\r\n                    var when;\r\n                    var condition;\r\n                    isLess = isLess !== false;\r\n                    while ((isLess && (extendList = this.extend())) || (isLess && (when = parserInput.$str('when'))) || (e = this.element())) {\r\n                        if (when) {\r\n                            condition = expect(this.conditions, 'expected condition');\r\n                        }\r\n                        else if (condition) {\r\n                            error('CSS guard can only be used at the end of selector');\r\n                        }\r\n                        else if (extendList) {\r\n                            if (allExtends) {\r\n                                allExtends = allExtends.concat(extendList);\r\n                            }\r\n                            else {\r\n                                allExtends = extendList;\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (allExtends) {\r\n                                error('Extend can only be used at the end of selector');\r\n                            }\r\n                            c = parserInput.currentChar();\r\n                            if (elements) {\r\n                                elements.push(e);\r\n                            }\r\n                            else {\r\n                                elements = [e];\r\n                            }\r\n                            e = null;\r\n                        }\r\n                        if (c === '{' || c === '}' || c === ';' || c === ',' || c === ')') {\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (elements) {\r\n                        return new (tree.Selector)(elements, allExtends, condition, index, fileInfo);\r\n                    }\r\n                    if (allExtends) {\r\n                        error('Extend must be used to extend a selector, it cannot be used on its own');\r\n                    }\r\n                },\r\n                selectors: function () {\r\n                    var s;\r\n                    var selectors;\r\n                    while (true) {\r\n                        s = this.selector();\r\n                        if (!s) {\r\n                            break;\r\n                        }\r\n                        if (selectors) {\r\n                            selectors.push(s);\r\n                        }\r\n                        else {\r\n                            selectors = [s];\r\n                        }\r\n                        parserInput.commentStore.length = 0;\r\n                        if (s.condition && selectors.length > 1) {\r\n                            error(\"Guards are only currently allowed on a single selector.\");\r\n                        }\r\n                        if (!parserInput.$char(',')) {\r\n                            break;\r\n                        }\r\n                        if (s.condition) {\r\n                            error(\"Guards are only currently allowed on a single selector.\");\r\n                        }\r\n                        parserInput.commentStore.length = 0;\r\n                    }\r\n                    return selectors;\r\n                },\r\n                attribute: function () {\r\n                    if (!parserInput.$char('[')) {\r\n                        return;\r\n                    }\r\n                    var entities = this.entities;\r\n                    var key;\r\n                    var val;\r\n                    var op;\r\n                    //\r\n                    // case-insensitive flag\r\n                    // e.g. [attr operator value i]\r\n                    //\r\n                    var cif;\r\n                    if (!(key = entities.variableCurly())) {\r\n                        key = expect(/^(?:[_A-Za-z0-9-\\*]*\\|)?(?:[_A-Za-z0-9-]|\\\\.)+/);\r\n                    }\r\n                    op = parserInput.$re(/^[|~*$^]?=/);\r\n                    if (op) {\r\n                        val = entities.quoted() || parserInput.$re(/^[0-9]+%/) || parserInput.$re(/^[\\w-]+/) || entities.variableCurly();\r\n                        if (val) {\r\n                            cif = parserInput.$re(/^[iIsS]/);\r\n                        }\r\n                    }\r\n                    expectChar(']');\r\n                    return new (tree.Attribute)(key, op, val, cif);\r\n                },\r\n                //\r\n                // The `block` rule is used by `ruleset` and `mixin.definition`.\r\n                // It's a wrapper around the `primary` rule, with added `{}`.\r\n                //\r\n                block: function () {\r\n                    var content;\r\n                    if (parserInput.$char('{') && (content = this.primary()) && parserInput.$char('}')) {\r\n                        return content;\r\n                    }\r\n                },\r\n                blockRuleset: function () {\r\n                    var block = this.block();\r\n                    if (block) {\r\n                        block = new tree.Ruleset(null, block);\r\n                    }\r\n                    return block;\r\n                },\r\n                detachedRuleset: function () {\r\n                    var argInfo;\r\n                    var params;\r\n                    var variadic;\r\n                    parserInput.save();\r\n                    if (parserInput.$re(/^[.#]\\(/)) {\r\n                        /**\r\n                         * DR args currently only implemented for each() function, and not\r\n                         * yet settable as `@dr: #(@arg) {}`\r\n                         * This should be done when DRs are merged with mixins.\r\n                         * See: https://github.com/less/less-meta/issues/16\r\n                         */\r\n                        argInfo = this.mixin.args(false);\r\n                        params = argInfo.args;\r\n                        variadic = argInfo.variadic;\r\n                        if (!parserInput.$char(')')) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                    }\r\n                    var blockRuleset = this.blockRuleset();\r\n                    if (blockRuleset) {\r\n                        parserInput.forget();\r\n                        if (params) {\r\n                            return new tree.mixin.Definition(null, params, blockRuleset, null, variadic);\r\n                        }\r\n                        return new tree.DetachedRuleset(blockRuleset);\r\n                    }\r\n                    parserInput.restore();\r\n                },\r\n                //\r\n                // div, .class, body > p {...}\r\n                //\r\n                ruleset: function () {\r\n                    var selectors;\r\n                    var rules;\r\n                    var debugInfo;\r\n                    parserInput.save();\r\n                    if (context.dumpLineNumbers) {\r\n                        debugInfo = getDebugInfo(parserInput.i);\r\n                    }\r\n                    selectors = this.selectors();\r\n                    if (selectors && (rules = this.block())) {\r\n                        parserInput.forget();\r\n                        var ruleset = new (tree.Ruleset)(selectors, rules, context.strictImports);\r\n                        if (context.dumpLineNumbers) {\r\n                            ruleset.debugInfo = debugInfo;\r\n                        }\r\n                        return ruleset;\r\n                    }\r\n                    else {\r\n                        parserInput.restore();\r\n                    }\r\n                },\r\n                declaration: function () {\r\n                    var name;\r\n                    var value;\r\n                    var index = parserInput.i;\r\n                    var hasDR;\r\n                    var c = parserInput.currentChar();\r\n                    var important;\r\n                    var merge;\r\n                    var isVariable;\r\n                    if (c === '.' || c === '#' || c === '&' || c === ':') {\r\n                        return;\r\n                    }\r\n                    parserInput.save();\r\n                    name = this.variable() || this.ruleProperty();\r\n                    if (name) {\r\n                        isVariable = typeof name === 'string';\r\n                        if (isVariable) {\r\n                            value = this.detachedRuleset();\r\n                            if (value) {\r\n                                hasDR = true;\r\n                            }\r\n                        }\r\n                        parserInput.commentStore.length = 0;\r\n                        if (!value) {\r\n                            // a name returned by this.ruleProperty() is always an array of the form:\r\n                            // [string-1, ..., string-n, \"\"] or [string-1, ..., string-n, \"+\"]\r\n                            // where each item is a tree.Keyword or tree.Variable\r\n                            merge = !isVariable && name.length > 1 && name.pop().value;\r\n                            // Custom property values get permissive parsing\r\n                            if (name[0].value && name[0].value.slice(0, 2) === '--') {\r\n                                value = this.permissiveValue();\r\n                            }\r\n                            // Try to store values as anonymous\r\n                            // If we need the value later we'll re-parse it in ruleset.parseValue\r\n                            else {\r\n                                value = this.anonymousValue();\r\n                            }\r\n                            if (value) {\r\n                                parserInput.forget();\r\n                                // anonymous values absorb the end ';' which is required for them to work\r\n                                return new (tree.Declaration)(name, value, false, merge, index, fileInfo);\r\n                            }\r\n                            if (!value) {\r\n                                value = this.value();\r\n                            }\r\n                            if (value) {\r\n                                important = this.important();\r\n                            }\r\n                            else if (isVariable) {\r\n                                // As a last resort, try permissiveValue\r\n                                value = this.permissiveValue();\r\n                            }\r\n                        }\r\n                        if (value && (this.end() || hasDR)) {\r\n                            parserInput.forget();\r\n                            return new (tree.Declaration)(name, value, important, merge, index, fileInfo);\r\n                        }\r\n                        else {\r\n                            parserInput.restore();\r\n                        }\r\n                    }\r\n                    else {\r\n                        parserInput.restore();\r\n                    }\r\n                },\r\n                anonymousValue: function () {\r\n                    var index = parserInput.i;\r\n                    var match = parserInput.$re(/^([^.#@\\$+\\/'\"*`(;{}-]*);/);\r\n                    if (match) {\r\n                        return new (tree.Anonymous)(match[1], index);\r\n                    }\r\n                },\r\n                /**\r\n                 * Used for custom properties, at-rules, and variables (as fallback)\r\n                 * Parses almost anything inside of {} [] () \"\" blocks\r\n                 * until it reaches outer-most tokens.\r\n                 *\r\n                 * First, it will try to parse comments and entities to reach\r\n                 * the end. This is mostly like the Expression parser except no\r\n                 * math is allowed.\r\n                 */\r\n                permissiveValue: function (untilTokens) {\r\n                    var i;\r\n                    var e;\r\n                    var done;\r\n                    var value;\r\n                    var tok = untilTokens || ';';\r\n                    var index = parserInput.i;\r\n                    var result = [];\r\n                    function testCurrentChar() {\r\n                        var char = parserInput.currentChar();\r\n                        if (typeof tok === 'string') {\r\n                            return char === tok;\r\n                        }\r\n                        else {\r\n                            return tok.test(char);\r\n                        }\r\n                    }\r\n                    if (testCurrentChar()) {\r\n                        return;\r\n                    }\r\n                    value = [];\r\n                    do {\r\n                        e = this.comment();\r\n                        if (e) {\r\n                            value.push(e);\r\n                            continue;\r\n                        }\r\n                        e = this.entity();\r\n                        if (e) {\r\n                            value.push(e);\r\n                        }\r\n                    } while (e);\r\n                    done = testCurrentChar();\r\n                    if (value.length > 0) {\r\n                        value = new (tree.Expression)(value);\r\n                        if (done) {\r\n                            return value;\r\n                        }\r\n                        else {\r\n                            result.push(value);\r\n                        }\r\n                        // Preserve space before $parseUntil as it will not\r\n                        if (parserInput.prevChar() === ' ') {\r\n                            result.push(new tree.Anonymous(' ', index));\r\n                        }\r\n                    }\r\n                    parserInput.save();\r\n                    value = parserInput.$parseUntil(tok);\r\n                    if (value) {\r\n                        if (typeof value === 'string') {\r\n                            error(\"Expected '\" + value + \"'\", 'Parse');\r\n                        }\r\n                        if (value.length === 1 && value[0] === ' ') {\r\n                            parserInput.forget();\r\n                            return new tree.Anonymous('', index);\r\n                        }\r\n                        var item = void 0;\r\n                        for (i = 0; i < value.length; i++) {\r\n                            item = value[i];\r\n                            if (Array.isArray(item)) {\r\n                                // Treat actual quotes as normal quoted values\r\n                                result.push(new tree.Quoted(item[0], item[1], true, index, fileInfo));\r\n                            }\r\n                            else {\r\n                                if (i === value.length - 1) {\r\n                                    item = item.trim();\r\n                                }\r\n                                // Treat like quoted values, but replace vars like unquoted expressions\r\n                                var quote = new tree.Quoted('\\'', item, true, index, fileInfo);\r\n                                quote.variableRegex = /@([\\w-]+)/g;\r\n                                quote.propRegex = /\\$([\\w-]+)/g;\r\n                                result.push(quote);\r\n                            }\r\n                        }\r\n                        parserInput.forget();\r\n                        return new tree.Expression(result, true);\r\n                    }\r\n                    parserInput.restore();\r\n                },\r\n                //\r\n                // An @import atrule\r\n                //\r\n                //     @import \"lib\";\r\n                //\r\n                // Depending on our environment, importing is done differently:\r\n                // In the browser, it's an XHR request, in Node, it would be a\r\n                // file-system operation. The function used for importing is\r\n                // stored in `import`, which we pass to the Import constructor.\r\n                //\r\n                'import': function () {\r\n                    var path;\r\n                    var features;\r\n                    var index = parserInput.i;\r\n                    var dir = parserInput.$re(/^@import\\s+/);\r\n                    if (dir) {\r\n                        var options = (dir ? this.importOptions() : null) || {};\r\n                        if ((path = this.entities.quoted() || this.entities.url())) {\r\n                            features = this.mediaFeatures();\r\n                            if (!parserInput.$char(';')) {\r\n                                parserInput.i = index;\r\n                                error('missing semi-colon or unrecognised media features on import');\r\n                            }\r\n                            features = features && new (tree.Value)(features);\r\n                            return new (tree.Import)(path, features, options, index, fileInfo);\r\n                        }\r\n                        else {\r\n                            parserInput.i = index;\r\n                            error('malformed import statement');\r\n                        }\r\n                    }\r\n                },\r\n                importOptions: function () {\r\n                    var o;\r\n                    var options = {};\r\n                    var optionName;\r\n                    var value;\r\n                    // list of options, surrounded by parens\r\n                    if (!parserInput.$char('(')) {\r\n                        return null;\r\n                    }\r\n                    do {\r\n                        o = this.importOption();\r\n                        if (o) {\r\n                            optionName = o;\r\n                            value = true;\r\n                            switch (optionName) {\r\n                                case 'css':\r\n                                    optionName = 'less';\r\n                                    value = false;\r\n                                    break;\r\n                                case 'once':\r\n                                    optionName = 'multiple';\r\n                                    value = false;\r\n                                    break;\r\n                            }\r\n                            options[optionName] = value;\r\n                            if (!parserInput.$char(',')) {\r\n                                break;\r\n                            }\r\n                        }\r\n                    } while (o);\r\n                    expectChar(')');\r\n                    return options;\r\n                },\r\n                importOption: function () {\r\n                    var opt = parserInput.$re(/^(less|css|multiple|once|inline|reference|optional)/);\r\n                    if (opt) {\r\n                        return opt[1];\r\n                    }\r\n                },\r\n                mediaFeature: function () {\r\n                    var entities = this.entities;\r\n                    var nodes = [];\r\n                    var e;\r\n                    var p;\r\n                    parserInput.save();\r\n                    do {\r\n                        e = entities.keyword() || entities.variable() || entities.mixinLookup();\r\n                        if (e) {\r\n                            nodes.push(e);\r\n                        }\r\n                        else if (parserInput.$char('(')) {\r\n                            p = this.property();\r\n                            e = this.value();\r\n                            if (parserInput.$char(')')) {\r\n                                if (p && e) {\r\n                                    nodes.push(new (tree.Paren)(new (tree.Declaration)(p, e, null, null, parserInput.i, fileInfo, true)));\r\n                                }\r\n                                else if (e) {\r\n                                    nodes.push(new (tree.Paren)(e));\r\n                                }\r\n                                else {\r\n                                    error('badly formed media feature definition');\r\n                                }\r\n                            }\r\n                            else {\r\n                                error('Missing closing \\')\\'', 'Parse');\r\n                            }\r\n                        }\r\n                    } while (e);\r\n                    parserInput.forget();\r\n                    if (nodes.length > 0) {\r\n                        return new (tree.Expression)(nodes);\r\n                    }\r\n                },\r\n                mediaFeatures: function () {\r\n                    var entities = this.entities;\r\n                    var features = [];\r\n                    var e;\r\n                    do {\r\n                        e = this.mediaFeature();\r\n                        if (e) {\r\n                            features.push(e);\r\n                            if (!parserInput.$char(',')) {\r\n                                break;\r\n                            }\r\n                        }\r\n                        else {\r\n                            e = entities.variable() || entities.mixinLookup();\r\n                            if (e) {\r\n                                features.push(e);\r\n                                if (!parserInput.$char(',')) {\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                    } while (e);\r\n                    return features.length > 0 ? features : null;\r\n                },\r\n                media: function () {\r\n                    var features;\r\n                    var rules;\r\n                    var media;\r\n                    var debugInfo;\r\n                    var index = parserInput.i;\r\n                    if (context.dumpLineNumbers) {\r\n                        debugInfo = getDebugInfo(index);\r\n                    }\r\n                    parserInput.save();\r\n                    if (parserInput.$str('@media')) {\r\n                        features = this.mediaFeatures();\r\n                        rules = this.block();\r\n                        if (!rules) {\r\n                            error('media definitions require block statements after any features');\r\n                        }\r\n                        parserInput.forget();\r\n                        media = new (tree.Media)(rules, features, index, fileInfo);\r\n                        if (context.dumpLineNumbers) {\r\n                            media.debugInfo = debugInfo;\r\n                        }\r\n                        return media;\r\n                    }\r\n                    parserInput.restore();\r\n                },\r\n                //\r\n                // A @plugin directive, used to import plugins dynamically.\r\n                //\r\n                //     @plugin (args) \"lib\";\r\n                //\r\n                plugin: function () {\r\n                    var path;\r\n                    var args;\r\n                    var options;\r\n                    var index = parserInput.i;\r\n                    var dir = parserInput.$re(/^@plugin\\s+/);\r\n                    if (dir) {\r\n                        args = this.pluginArgs();\r\n                        if (args) {\r\n                            options = {\r\n                                pluginArgs: args,\r\n                                isPlugin: true\r\n                            };\r\n                        }\r\n                        else {\r\n                            options = { isPlugin: true };\r\n                        }\r\n                        if ((path = this.entities.quoted() || this.entities.url())) {\r\n                            if (!parserInput.$char(';')) {\r\n                                parserInput.i = index;\r\n                                error('missing semi-colon on @plugin');\r\n                            }\r\n                            return new (tree.Import)(path, null, options, index, fileInfo);\r\n                        }\r\n                        else {\r\n                            parserInput.i = index;\r\n                            error('malformed @plugin statement');\r\n                        }\r\n                    }\r\n                },\r\n                pluginArgs: function () {\r\n                    // list of options, surrounded by parens\r\n                    parserInput.save();\r\n                    if (!parserInput.$char('(')) {\r\n                        parserInput.restore();\r\n                        return null;\r\n                    }\r\n                    var args = parserInput.$re(/^\\s*([^\\);]+)\\)\\s*/);\r\n                    if (args[1]) {\r\n                        parserInput.forget();\r\n                        return args[1].trim();\r\n                    }\r\n                    else {\r\n                        parserInput.restore();\r\n                        return null;\r\n                    }\r\n                },\r\n                //\r\n                // A CSS AtRule\r\n                //\r\n                //     @charset \"utf-8\";\r\n                //\r\n                atrule: function () {\r\n                    var index = parserInput.i;\r\n                    var name;\r\n                    var value;\r\n                    var rules;\r\n                    var nonVendorSpecificName;\r\n                    var hasIdentifier;\r\n                    var hasExpression;\r\n                    var hasUnknown;\r\n                    var hasBlock = true;\r\n                    var isRooted = true;\r\n                    if (parserInput.currentChar() !== '@') {\r\n                        return;\r\n                    }\r\n                    value = this['import']() || this.plugin() || this.media();\r\n                    if (value) {\r\n                        return value;\r\n                    }\r\n                    parserInput.save();\r\n                    name = parserInput.$re(/^@[a-z-]+/);\r\n                    if (!name) {\r\n                        return;\r\n                    }\r\n                    nonVendorSpecificName = name;\r\n                    if (name.charAt(1) == '-' && name.indexOf('-', 2) > 0) {\r\n                        nonVendorSpecificName = \"@\" + name.slice(name.indexOf('-', 2) + 1);\r\n                    }\r\n                    switch (nonVendorSpecificName) {\r\n                        case '@charset':\r\n                            hasIdentifier = true;\r\n                            hasBlock = false;\r\n                            break;\r\n                        case '@namespace':\r\n                            hasExpression = true;\r\n                            hasBlock = false;\r\n                            break;\r\n                        case '@keyframes':\r\n                        case '@counter-style':\r\n                            hasIdentifier = true;\r\n                            break;\r\n                        case '@document':\r\n                        case '@supports':\r\n                            hasUnknown = true;\r\n                            isRooted = false;\r\n                            break;\r\n                        default:\r\n                            hasUnknown = true;\r\n                            break;\r\n                    }\r\n                    parserInput.commentStore.length = 0;\r\n                    if (hasIdentifier) {\r\n                        value = this.entity();\r\n                        if (!value) {\r\n                            error(\"expected \" + name + \" identifier\");\r\n                        }\r\n                    }\r\n                    else if (hasExpression) {\r\n                        value = this.expression();\r\n                        if (!value) {\r\n                            error(\"expected \" + name + \" expression\");\r\n                        }\r\n                    }\r\n                    else if (hasUnknown) {\r\n                        value = this.permissiveValue(/^[{;]/);\r\n                        hasBlock = (parserInput.currentChar() === '{');\r\n                        if (!value) {\r\n                            if (!hasBlock && parserInput.currentChar() !== ';') {\r\n                                error(name + \" rule is missing block or ending semi-colon\");\r\n                            }\r\n                        }\r\n                        else if (!value.value) {\r\n                            value = null;\r\n                        }\r\n                    }\r\n                    if (hasBlock) {\r\n                        rules = this.blockRuleset();\r\n                    }\r\n                    if (rules || (!hasBlock && value && parserInput.$char(';'))) {\r\n                        parserInput.forget();\r\n                        return new (tree.AtRule)(name, value, rules, index, fileInfo, context.dumpLineNumbers ? getDebugInfo(index) : null, isRooted);\r\n                    }\r\n                    parserInput.restore('at-rule options not recognised');\r\n                },\r\n                //\r\n                // A Value is a comma-delimited list of Expressions\r\n                //\r\n                //     font-family: Baskerville, Georgia, serif;\r\n                //\r\n                // In a Rule, a Value represents everything after the `:`,\r\n                // and before the `;`.\r\n                //\r\n                value: function () {\r\n                    var e;\r\n                    var expressions = [];\r\n                    var index = parserInput.i;\r\n                    do {\r\n                        e = this.expression();\r\n                        if (e) {\r\n                            expressions.push(e);\r\n                            if (!parserInput.$char(',')) {\r\n                                break;\r\n                            }\r\n                        }\r\n                    } while (e);\r\n                    if (expressions.length > 0) {\r\n                        return new (tree.Value)(expressions, index);\r\n                    }\r\n                },\r\n                important: function () {\r\n                    if (parserInput.currentChar() === '!') {\r\n                        return parserInput.$re(/^! *important/);\r\n                    }\r\n                },\r\n                sub: function () {\r\n                    var a;\r\n                    var e;\r\n                    parserInput.save();\r\n                    if (parserInput.$char('(')) {\r\n                        a = this.addition();\r\n                        if (a && parserInput.$char(')')) {\r\n                            parserInput.forget();\r\n                            e = new (tree.Expression)([a]);\r\n                            e.parens = true;\r\n                            return e;\r\n                        }\r\n                        parserInput.restore('Expected \\')\\'');\r\n                        return;\r\n                    }\r\n                    parserInput.restore();\r\n                },\r\n                multiplication: function () {\r\n                    var m;\r\n                    var a;\r\n                    var op;\r\n                    var operation;\r\n                    var isSpaced;\r\n                    m = this.operand();\r\n                    if (m) {\r\n                        isSpaced = parserInput.isWhitespace(-1);\r\n                        while (true) {\r\n                            if (parserInput.peek(/^\\/[*\\/]/)) {\r\n                                break;\r\n                            }\r\n                            parserInput.save();\r\n                            op = parserInput.$char('/') || parserInput.$char('*') || parserInput.$str('./');\r\n                            if (!op) {\r\n                                parserInput.forget();\r\n                                break;\r\n                            }\r\n                            a = this.operand();\r\n                            if (!a) {\r\n                                parserInput.restore();\r\n                                break;\r\n                            }\r\n                            parserInput.forget();\r\n                            m.parensInOp = true;\r\n                            a.parensInOp = true;\r\n                            operation = new (tree.Operation)(op, [operation || m, a], isSpaced);\r\n                            isSpaced = parserInput.isWhitespace(-1);\r\n                        }\r\n                        return operation || m;\r\n                    }\r\n                },\r\n                addition: function () {\r\n                    var m;\r\n                    var a;\r\n                    var op;\r\n                    var operation;\r\n                    var isSpaced;\r\n                    m = this.multiplication();\r\n                    if (m) {\r\n                        isSpaced = parserInput.isWhitespace(-1);\r\n                        while (true) {\r\n                            op = parserInput.$re(/^[-+]\\s+/) || (!isSpaced && (parserInput.$char('+') || parserInput.$char('-')));\r\n                            if (!op) {\r\n                                break;\r\n                            }\r\n                            a = this.multiplication();\r\n                            if (!a) {\r\n                                break;\r\n                            }\r\n                            m.parensInOp = true;\r\n                            a.parensInOp = true;\r\n                            operation = new (tree.Operation)(op, [operation || m, a], isSpaced);\r\n                            isSpaced = parserInput.isWhitespace(-1);\r\n                        }\r\n                        return operation || m;\r\n                    }\r\n                },\r\n                conditions: function () {\r\n                    var a;\r\n                    var b;\r\n                    var index = parserInput.i;\r\n                    var condition;\r\n                    a = this.condition(true);\r\n                    if (a) {\r\n                        while (true) {\r\n                            if (!parserInput.peek(/^,\\s*(not\\s*)?\\(/) || !parserInput.$char(',')) {\r\n                                break;\r\n                            }\r\n                            b = this.condition(true);\r\n                            if (!b) {\r\n                                break;\r\n                            }\r\n                            condition = new (tree.Condition)('or', condition || a, b, index);\r\n                        }\r\n                        return condition || a;\r\n                    }\r\n                },\r\n                condition: function (needsParens) {\r\n                    var result;\r\n                    var logical;\r\n                    var next;\r\n                    function or() {\r\n                        return parserInput.$str('or');\r\n                    }\r\n                    result = this.conditionAnd(needsParens);\r\n                    if (!result) {\r\n                        return;\r\n                    }\r\n                    logical = or();\r\n                    if (logical) {\r\n                        next = this.condition(needsParens);\r\n                        if (next) {\r\n                            result = new (tree.Condition)(logical, result, next);\r\n                        }\r\n                        else {\r\n                            return;\r\n                        }\r\n                    }\r\n                    return result;\r\n                },\r\n                conditionAnd: function (needsParens) {\r\n                    var result;\r\n                    var logical;\r\n                    var next;\r\n                    var self = this;\r\n                    function insideCondition() {\r\n                        var cond = self.negatedCondition(needsParens) || self.parenthesisCondition(needsParens);\r\n                        if (!cond && !needsParens) {\r\n                            return self.atomicCondition(needsParens);\r\n                        }\r\n                        return cond;\r\n                    }\r\n                    function and() {\r\n                        return parserInput.$str('and');\r\n                    }\r\n                    result = insideCondition();\r\n                    if (!result) {\r\n                        return;\r\n                    }\r\n                    logical = and();\r\n                    if (logical) {\r\n                        next = this.conditionAnd(needsParens);\r\n                        if (next) {\r\n                            result = new (tree.Condition)(logical, result, next);\r\n                        }\r\n                        else {\r\n                            return;\r\n                        }\r\n                    }\r\n                    return result;\r\n                },\r\n                negatedCondition: function (needsParens) {\r\n                    if (parserInput.$str('not')) {\r\n                        var result = this.parenthesisCondition(needsParens);\r\n                        if (result) {\r\n                            result.negate = !result.negate;\r\n                        }\r\n                        return result;\r\n                    }\r\n                },\r\n                parenthesisCondition: function (needsParens) {\r\n                    function tryConditionFollowedByParenthesis(me) {\r\n                        var body;\r\n                        parserInput.save();\r\n                        body = me.condition(needsParens);\r\n                        if (!body) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                        if (!parserInput.$char(')')) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                        parserInput.forget();\r\n                        return body;\r\n                    }\r\n                    var body;\r\n                    parserInput.save();\r\n                    if (!parserInput.$str('(')) {\r\n                        parserInput.restore();\r\n                        return;\r\n                    }\r\n                    body = tryConditionFollowedByParenthesis(this);\r\n                    if (body) {\r\n                        parserInput.forget();\r\n                        return body;\r\n                    }\r\n                    body = this.atomicCondition(needsParens);\r\n                    if (!body) {\r\n                        parserInput.restore();\r\n                        return;\r\n                    }\r\n                    if (!parserInput.$char(')')) {\r\n                        parserInput.restore(\"expected ')' got '\" + parserInput.currentChar() + \"'\");\r\n                        return;\r\n                    }\r\n                    parserInput.forget();\r\n                    return body;\r\n                },\r\n                atomicCondition: function (needsParens) {\r\n                    var entities = this.entities;\r\n                    var index = parserInput.i;\r\n                    var a;\r\n                    var b;\r\n                    var c;\r\n                    var op;\r\n                    function cond() {\r\n                        return this.addition() || entities.keyword() || entities.quoted() || entities.mixinLookup();\r\n                    }\r\n                    cond = cond.bind(this);\r\n                    a = cond();\r\n                    if (a) {\r\n                        if (parserInput.$char('>')) {\r\n                            if (parserInput.$char('=')) {\r\n                                op = '>=';\r\n                            }\r\n                            else {\r\n                                op = '>';\r\n                            }\r\n                        }\r\n                        else if (parserInput.$char('<')) {\r\n                            if (parserInput.$char('=')) {\r\n                                op = '<=';\r\n                            }\r\n                            else {\r\n                                op = '<';\r\n                            }\r\n                        }\r\n                        else if (parserInput.$char('=')) {\r\n                            if (parserInput.$char('>')) {\r\n                                op = '=>';\r\n                            }\r\n                            else if (parserInput.$char('<')) {\r\n                                op = '=<';\r\n                            }\r\n                            else {\r\n                                op = '=';\r\n                            }\r\n                        }\r\n                        if (op) {\r\n                            b = cond();\r\n                            if (b) {\r\n                                c = new (tree.Condition)(op, a, b, index, false);\r\n                            }\r\n                            else {\r\n                                error('expected expression');\r\n                            }\r\n                        }\r\n                        else {\r\n                            c = new (tree.Condition)('=', a, new (tree.Keyword)('true'), index, false);\r\n                        }\r\n                        return c;\r\n                    }\r\n                },\r\n                //\r\n                // An operand is anything that can be part of an operation,\r\n                // such as a Color, or a Variable\r\n                //\r\n                operand: function () {\r\n                    var entities = this.entities;\r\n                    var negate;\r\n                    if (parserInput.peek(/^-[@\\$\\(]/)) {\r\n                        negate = parserInput.$char('-');\r\n                    }\r\n                    var o = this.sub() || entities.dimension() ||\r\n                        entities.color() || entities.variable() ||\r\n                        entities.property() || entities.call() ||\r\n                        entities.quoted(true) || entities.colorKeyword() ||\r\n                        entities.mixinLookup();\r\n                    if (negate) {\r\n                        o.parensInOp = true;\r\n                        o = new (tree.Negative)(o);\r\n                    }\r\n                    return o;\r\n                },\r\n                //\r\n                // Expressions either represent mathematical operations,\r\n                // or white-space delimited Entities.\r\n                //\r\n                //     1px solid black\r\n                //     @var * 2\r\n                //\r\n                expression: function () {\r\n                    var entities = [];\r\n                    var e;\r\n                    var delim;\r\n                    var index = parserInput.i;\r\n                    do {\r\n                        e = this.comment();\r\n                        if (e) {\r\n                            entities.push(e);\r\n                            continue;\r\n                        }\r\n                        e = this.addition() || this.entity();\r\n                        if (e instanceof tree.Comment) {\r\n                            e = null;\r\n                        }\r\n                        if (e) {\r\n                            entities.push(e);\r\n                            // operations do not allow keyword \"/\" dimension (e.g. small/20px) so we support that here\r\n                            if (!parserInput.peek(/^\\/[\\/*]/)) {\r\n                                delim = parserInput.$char('/');\r\n                                if (delim) {\r\n                                    entities.push(new (tree.Anonymous)(delim, index));\r\n                                }\r\n                            }\r\n                        }\r\n                    } while (e);\r\n                    if (entities.length > 0) {\r\n                        return new (tree.Expression)(entities);\r\n                    }\r\n                },\r\n                property: function () {\r\n                    var name = parserInput.$re(/^(\\*?-?[_a-zA-Z0-9-]+)\\s*:/);\r\n                    if (name) {\r\n                        return name[1];\r\n                    }\r\n                },\r\n                ruleProperty: function () {\r\n                    var name = [];\r\n                    var index = [];\r\n                    var s;\r\n                    var k;\r\n                    parserInput.save();\r\n                    var simpleProperty = parserInput.$re(/^([_a-zA-Z0-9-]+)\\s*:/);\r\n                    if (simpleProperty) {\r\n                        name = [new (tree.Keyword)(simpleProperty[1])];\r\n                        parserInput.forget();\r\n                        return name;\r\n                    }\r\n                    function match(re) {\r\n                        var i = parserInput.i;\r\n                        var chunk = parserInput.$re(re);\r\n                        if (chunk) {\r\n                            index.push(i);\r\n                            return name.push(chunk[1]);\r\n                        }\r\n                    }\r\n                    match(/^(\\*?)/);\r\n                    while (true) {\r\n                        if (!match(/^((?:[\\w-]+)|(?:[@\\$]\\{[\\w-]+\\}))/)) {\r\n                            break;\r\n                        }\r\n                    }\r\n                    if ((name.length > 1) && match(/^((?:\\+_|\\+)?)\\s*:/)) {\r\n                        parserInput.forget();\r\n                        // at last, we have the complete match now. move forward,\r\n                        // convert name particles to tree objects and return:\r\n                        if (name[0] === '') {\r\n                            name.shift();\r\n                            index.shift();\r\n                        }\r\n                        for (k = 0; k < name.length; k++) {\r\n                            s = name[k];\r\n                            name[k] = (s.charAt(0) !== '@' && s.charAt(0) !== '$') ?\r\n                                new (tree.Keyword)(s) :\r\n                                (s.charAt(0) === '@' ?\r\n                                    new (tree.Variable)(\"@\" + s.slice(2, -1), index[k], fileInfo) :\r\n                                    new (tree.Property)(\"$\" + s.slice(2, -1), index[k], fileInfo));\r\n                        }\r\n                        return name;\r\n                    }\r\n                    parserInput.restore();\r\n                }\r\n            }\r\n        };\r\n    };\r\n    Parser.serializeVars = function (vars) {\r\n        var s = '';\r\n        for (var name_1 in vars) {\r\n            if (Object.hasOwnProperty.call(vars, name_1)) {\r\n                var value = vars[name_1];\r\n                s += ((name_1[0] === '@') ? '' : '@') + name_1 + \": \" + value + ((String(value).slice(-1) === ';') ? '' : ';');\r\n            }\r\n        }\r\n        return s;\r\n    };\n\n    function boolean(condition) {\r\n        return condition ? Keyword.True : Keyword.False;\r\n    }\r\n    /**\r\n     * Functions with evalArgs set to false are sent context\r\n     * as the first argument.\r\n     */\r\n    function If(context, condition, trueValue, falseValue) {\r\n        return condition.eval(context) ? trueValue.eval(context)\r\n            : (falseValue ? falseValue.eval(context) : new Anonymous);\r\n    }\r\n    If.evalArgs = false;\r\n    function isdefined(context, variable) {\r\n        try {\r\n            variable.eval(context);\r\n            return Keyword.True;\r\n        }\r\n        catch (e) {\r\n            return Keyword.False;\r\n        }\r\n    }\r\n    isdefined.evalArgs = false;\r\n    var boolean$1 = { isdefined: isdefined, boolean: boolean, 'if': If };\n\n    var colorFunctions;\r\n    function clamp(val) {\r\n        return Math.min(1, Math.max(0, val));\r\n    }\r\n    function hsla(origColor, hsl) {\r\n        var color = colorFunctions.hsla(hsl.h, hsl.s, hsl.l, hsl.a);\r\n        if (color) {\r\n            if (origColor.value &&\r\n                /^(rgb|hsl)/.test(origColor.value)) {\r\n                color.value = origColor.value;\r\n            }\r\n            else {\r\n                color.value = 'rgb';\r\n            }\r\n            return color;\r\n        }\r\n    }\r\n    function toHSL(color) {\r\n        if (color.toHSL) {\r\n            return color.toHSL();\r\n        }\r\n        else {\r\n            throw new Error('Argument cannot be evaluated to a color');\r\n        }\r\n    }\r\n    function toHSV(color) {\r\n        if (color.toHSV) {\r\n            return color.toHSV();\r\n        }\r\n        else {\r\n            throw new Error('Argument cannot be evaluated to a color');\r\n        }\r\n    }\r\n    function number$1(n) {\r\n        if (n instanceof Dimension) {\r\n            return parseFloat(n.unit.is('%') ? n.value / 100 : n.value);\r\n        }\r\n        else if (typeof n === 'number') {\r\n            return n;\r\n        }\r\n        else {\r\n            throw {\r\n                type: 'Argument',\r\n                message: 'color functions take numbers as parameters'\r\n            };\r\n        }\r\n    }\r\n    function scaled(n, size) {\r\n        if (n instanceof Dimension && n.unit.is('%')) {\r\n            return parseFloat(n.value * size / 100);\r\n        }\r\n        else {\r\n            return number$1(n);\r\n        }\r\n    }\r\n    colorFunctions = {\r\n        rgb: function (r, g, b) {\r\n            var a = 1;\r\n            /**\r\n             * Comma-less syntax\r\n             *   e.g. rgb(0 128 255 / 50%)\r\n             */\r\n            if (r instanceof Expression) {\r\n                var val = r.value;\r\n                r = val[0];\r\n                g = val[1];\r\n                b = val[2];\r\n                /**\r\n                 * @todo - should this be normalized in\r\n                 *   function caller? Or parsed differently?\r\n                 */\r\n                if (b instanceof Operation) {\r\n                    var op = b;\r\n                    b = op.operands[0];\r\n                    a = op.operands[1];\r\n                }\r\n            }\r\n            var color = colorFunctions.rgba(r, g, b, a);\r\n            if (color) {\r\n                color.value = 'rgb';\r\n                return color;\r\n            }\r\n        },\r\n        rgba: function (r, g, b, a) {\r\n            try {\r\n                if (r instanceof Color) {\r\n                    if (g) {\r\n                        a = number$1(g);\r\n                    }\r\n                    else {\r\n                        a = r.alpha;\r\n                    }\r\n                    return new Color(r.rgb, a, 'rgba');\r\n                }\r\n                var rgb = [r, g, b].map(function (c) { return scaled(c, 255); });\r\n                a = number$1(a);\r\n                return new Color(rgb, a, 'rgba');\r\n            }\r\n            catch (e) { }\r\n        },\r\n        hsl: function (h, s, l) {\r\n            var a = 1;\r\n            if (h instanceof Expression) {\r\n                var val = h.value;\r\n                h = val[0];\r\n                s = val[1];\r\n                l = val[2];\r\n                if (l instanceof Operation) {\r\n                    var op = l;\r\n                    l = op.operands[0];\r\n                    a = op.operands[1];\r\n                }\r\n            }\r\n            var color = colorFunctions.hsla(h, s, l, a);\r\n            if (color) {\r\n                color.value = 'hsl';\r\n                return color;\r\n            }\r\n        },\r\n        hsla: function (h, s, l, a) {\r\n            try {\r\n                if (h instanceof Color) {\r\n                    if (s) {\r\n                        a = number$1(s);\r\n                    }\r\n                    else {\r\n                        a = h.alpha;\r\n                    }\r\n                    return new Color(h.rgb, a, 'hsla');\r\n                }\r\n                var m1_1;\r\n                var m2_1;\r\n                function hue(h) {\r\n                    h = h < 0 ? h + 1 : (h > 1 ? h - 1 : h);\r\n                    if (h * 6 < 1) {\r\n                        return m1_1 + (m2_1 - m1_1) * h * 6;\r\n                    }\r\n                    else if (h * 2 < 1) {\r\n                        return m2_1;\r\n                    }\r\n                    else if (h * 3 < 2) {\r\n                        return m1_1 + (m2_1 - m1_1) * (2 / 3 - h) * 6;\r\n                    }\r\n                    else {\r\n                        return m1_1;\r\n                    }\r\n                }\r\n                h = (number$1(h) % 360) / 360;\r\n                s = clamp(number$1(s));\r\n                l = clamp(number$1(l));\r\n                a = clamp(number$1(a));\r\n                m2_1 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\r\n                m1_1 = l * 2 - m2_1;\r\n                var rgb = [\r\n                    hue(h + 1 / 3) * 255,\r\n                    hue(h) * 255,\r\n                    hue(h - 1 / 3) * 255\r\n                ];\r\n                a = number$1(a);\r\n                return new Color(rgb, a, 'hsla');\r\n            }\r\n            catch (e) { }\r\n        },\r\n        hsv: function (h, s, v) {\r\n            return colorFunctions.hsva(h, s, v, 1.0);\r\n        },\r\n        hsva: function (h, s, v, a) {\r\n            h = ((number$1(h) % 360) / 360) * 360;\r\n            s = number$1(s);\r\n            v = number$1(v);\r\n            a = number$1(a);\r\n            var i;\r\n            var f;\r\n            i = Math.floor((h / 60) % 6);\r\n            f = (h / 60) - i;\r\n            var vs = [v,\r\n                v * (1 - s),\r\n                v * (1 - f * s),\r\n                v * (1 - (1 - f) * s)];\r\n            var perm = [[0, 3, 1],\r\n                [2, 0, 1],\r\n                [1, 0, 3],\r\n                [1, 2, 0],\r\n                [3, 1, 0],\r\n                [0, 1, 2]];\r\n            return colorFunctions.rgba(vs[perm[i][0]] * 255, vs[perm[i][1]] * 255, vs[perm[i][2]] * 255, a);\r\n        },\r\n        hue: function (color) {\r\n            return new Dimension(toHSL(color).h);\r\n        },\r\n        saturation: function (color) {\r\n            return new Dimension(toHSL(color).s * 100, '%');\r\n        },\r\n        lightness: function (color) {\r\n            return new Dimension(toHSL(color).l * 100, '%');\r\n        },\r\n        hsvhue: function (color) {\r\n            return new Dimension(toHSV(color).h);\r\n        },\r\n        hsvsaturation: function (color) {\r\n            return new Dimension(toHSV(color).s * 100, '%');\r\n        },\r\n        hsvvalue: function (color) {\r\n            return new Dimension(toHSV(color).v * 100, '%');\r\n        },\r\n        red: function (color) {\r\n            return new Dimension(color.rgb[0]);\r\n        },\r\n        green: function (color) {\r\n            return new Dimension(color.rgb[1]);\r\n        },\r\n        blue: function (color) {\r\n            return new Dimension(color.rgb[2]);\r\n        },\r\n        alpha: function (color) {\r\n            return new Dimension(toHSL(color).a);\r\n        },\r\n        luma: function (color) {\r\n            return new Dimension(color.luma() * color.alpha * 100, '%');\r\n        },\r\n        luminance: function (color) {\r\n            var luminance = (0.2126 * color.rgb[0] / 255) +\r\n                (0.7152 * color.rgb[1] / 255) +\r\n                (0.0722 * color.rgb[2] / 255);\r\n            return new Dimension(luminance * color.alpha * 100, '%');\r\n        },\r\n        saturate: function (color, amount, method) {\r\n            // filter: saturate(3.2);\r\n            // should be kept as is, so check for color\r\n            if (!color.rgb) {\r\n                return null;\r\n            }\r\n            var hsl = toHSL(color);\r\n            if (typeof method !== 'undefined' && method.value === 'relative') {\r\n                hsl.s += hsl.s * amount.value / 100;\r\n            }\r\n            else {\r\n                hsl.s += amount.value / 100;\r\n            }\r\n            hsl.s = clamp(hsl.s);\r\n            return hsla(color, hsl);\r\n        },\r\n        desaturate: function (color, amount, method) {\r\n            var hsl = toHSL(color);\r\n            if (typeof method !== 'undefined' && method.value === 'relative') {\r\n                hsl.s -= hsl.s * amount.value / 100;\r\n            }\r\n            else {\r\n                hsl.s -= amount.value / 100;\r\n            }\r\n            hsl.s = clamp(hsl.s);\r\n            return hsla(color, hsl);\r\n        },\r\n        lighten: function (color, amount, method) {\r\n            var hsl = toHSL(color);\r\n            if (typeof method !== 'undefined' && method.value === 'relative') {\r\n                hsl.l += hsl.l * amount.value / 100;\r\n            }\r\n            else {\r\n                hsl.l += amount.value / 100;\r\n            }\r\n            hsl.l = clamp(hsl.l);\r\n            return hsla(color, hsl);\r\n        },\r\n        darken: function (color, amount, method) {\r\n            var hsl = toHSL(color);\r\n            if (typeof method !== 'undefined' && method.value === 'relative') {\r\n                hsl.l -= hsl.l * amount.value / 100;\r\n            }\r\n            else {\r\n                hsl.l -= amount.value / 100;\r\n            }\r\n            hsl.l = clamp(hsl.l);\r\n            return hsla(color, hsl);\r\n        },\r\n        fadein: function (color, amount, method) {\r\n            var hsl = toHSL(color);\r\n            if (typeof method !== 'undefined' && method.value === 'relative') {\r\n                hsl.a += hsl.a * amount.value / 100;\r\n            }\r\n            else {\r\n                hsl.a += amount.value / 100;\r\n            }\r\n            hsl.a = clamp(hsl.a);\r\n            return hsla(color, hsl);\r\n        },\r\n        fadeout: function (color, amount, method) {\r\n            var hsl = toHSL(color);\r\n            if (typeof method !== 'undefined' && method.value === 'relative') {\r\n                hsl.a -= hsl.a * amount.value / 100;\r\n            }\r\n            else {\r\n                hsl.a -= amount.value / 100;\r\n            }\r\n            hsl.a = clamp(hsl.a);\r\n            return hsla(color, hsl);\r\n        },\r\n        fade: function (color, amount) {\r\n            var hsl = toHSL(color);\r\n            hsl.a = amount.value / 100;\r\n            hsl.a = clamp(hsl.a);\r\n            return hsla(color, hsl);\r\n        },\r\n        spin: function (color, amount) {\r\n            var hsl = toHSL(color);\r\n            var hue = (hsl.h + amount.value) % 360;\r\n            hsl.h = hue < 0 ? 360 + hue : hue;\r\n            return hsla(color, hsl);\r\n        },\r\n        //\r\n        // Copyright (c) 2006-2009 Hampton Catlin, Natalie Weizenbaum, and Chris Eppstein\r\n        // http://sass-lang.com\r\n        //\r\n        mix: function (color1, color2, weight) {\r\n            if (!weight) {\r\n                weight = new Dimension(50);\r\n            }\r\n            var p = weight.value / 100.0;\r\n            var w = p * 2 - 1;\r\n            var a = toHSL(color1).a - toHSL(color2).a;\r\n            var w1 = (((w * a == -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\r\n            var w2 = 1 - w1;\r\n            var rgb = [color1.rgb[0] * w1 + color2.rgb[0] * w2,\r\n                color1.rgb[1] * w1 + color2.rgb[1] * w2,\r\n                color1.rgb[2] * w1 + color2.rgb[2] * w2];\r\n            var alpha = color1.alpha * p + color2.alpha * (1 - p);\r\n            return new Color(rgb, alpha);\r\n        },\r\n        greyscale: function (color) {\r\n            return colorFunctions.desaturate(color, new Dimension(100));\r\n        },\r\n        contrast: function (color, dark, light, threshold) {\r\n            // filter: contrast(3.2);\r\n            // should be kept as is, so check for color\r\n            if (!color.rgb) {\r\n                return null;\r\n            }\r\n            if (typeof light === 'undefined') {\r\n                light = colorFunctions.rgba(255, 255, 255, 1.0);\r\n            }\r\n            if (typeof dark === 'undefined') {\r\n                dark = colorFunctions.rgba(0, 0, 0, 1.0);\r\n            }\r\n            // Figure out which is actually light and dark:\r\n            if (dark.luma() > light.luma()) {\r\n                var t = light;\r\n                light = dark;\r\n                dark = t;\r\n            }\r\n            if (typeof threshold === 'undefined') {\r\n                threshold = 0.43;\r\n            }\r\n            else {\r\n                threshold = number$1(threshold);\r\n            }\r\n            if (color.luma() < threshold) {\r\n                return light;\r\n            }\r\n            else {\r\n                return dark;\r\n            }\r\n        },\r\n        // Changes made in 2.7.0 - Reverted in 3.0.0\r\n        // contrast: function (color, color1, color2, threshold) {\r\n        //     // Return which of `color1` and `color2` has the greatest contrast with `color`\r\n        //     // according to the standard WCAG contrast ratio calculation.\r\n        //     // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\r\n        //     // The threshold param is no longer used, in line with SASS.\r\n        //     // filter: contrast(3.2);\r\n        //     // should be kept as is, so check for color\r\n        //     if (!color.rgb) {\r\n        //         return null;\r\n        //     }\r\n        //     if (typeof color1 === 'undefined') {\r\n        //         color1 = colorFunctions.rgba(0, 0, 0, 1.0);\r\n        //     }\r\n        //     if (typeof color2 === 'undefined') {\r\n        //         color2 = colorFunctions.rgba(255, 255, 255, 1.0);\r\n        //     }\r\n        //     var contrast1, contrast2;\r\n        //     var luma = color.luma();\r\n        //     var luma1 = color1.luma();\r\n        //     var luma2 = color2.luma();\r\n        //     // Calculate contrast ratios for each color\r\n        //     if (luma > luma1) {\r\n        //         contrast1 = (luma + 0.05) / (luma1 + 0.05);\r\n        //     } else {\r\n        //         contrast1 = (luma1 + 0.05) / (luma + 0.05);\r\n        //     }\r\n        //     if (luma > luma2) {\r\n        //         contrast2 = (luma + 0.05) / (luma2 + 0.05);\r\n        //     } else {\r\n        //         contrast2 = (luma2 + 0.05) / (luma + 0.05);\r\n        //     }\r\n        //     if (contrast1 > contrast2) {\r\n        //         return color1;\r\n        //     } else {\r\n        //         return color2;\r\n        //     }\r\n        // },\r\n        argb: function (color) {\r\n            return new Anonymous(color.toARGB());\r\n        },\r\n        color: function (c) {\r\n            if ((c instanceof Quoted) &&\r\n                (/^#([A-Fa-f0-9]{8}|[A-Fa-f0-9]{6}|[A-Fa-f0-9]{3,4})$/i.test(c.value))) {\r\n                var val = c.value.slice(1);\r\n                return new Color(val, undefined, \"#\" + val);\r\n            }\r\n            if ((c instanceof Color) || (c = Color.fromKeyword(c.value))) {\r\n                c.value = undefined;\r\n                return c;\r\n            }\r\n            throw {\r\n                type: 'Argument',\r\n                message: 'argument must be a color keyword or 3|4|6|8 digit hex e.g. #FFF'\r\n            };\r\n        },\r\n        tint: function (color, amount) {\r\n            return colorFunctions.mix(colorFunctions.rgb(255, 255, 255), color, amount);\r\n        },\r\n        shade: function (color, amount) {\r\n            return colorFunctions.mix(colorFunctions.rgb(0, 0, 0), color, amount);\r\n        }\r\n    };\r\n    var color = colorFunctions;\n\n    // Color Blending\r\n    // ref: http://www.w3.org/TR/compositing-1\r\n    function colorBlend(mode, color1, color2) {\r\n        var ab = color1.alpha; // result\r\n        var // backdrop\r\n        cb;\r\n        var as = color2.alpha;\r\n        var // source\r\n        cs;\r\n        var ar;\r\n        var cr;\r\n        var r = [];\r\n        ar = as + ab * (1 - as);\r\n        for (var i = 0; i < 3; i++) {\r\n            cb = color1.rgb[i] / 255;\r\n            cs = color2.rgb[i] / 255;\r\n            cr = mode(cb, cs);\r\n            if (ar) {\r\n                cr = (as * cs + ab * (cb -\r\n                    as * (cb + cs - cr))) / ar;\r\n            }\r\n            r[i] = cr * 255;\r\n        }\r\n        return new Color(r, ar);\r\n    }\r\n    var colorBlendModeFunctions = {\r\n        multiply: function (cb, cs) {\r\n            return cb * cs;\r\n        },\r\n        screen: function (cb, cs) {\r\n            return cb + cs - cb * cs;\r\n        },\r\n        overlay: function (cb, cs) {\r\n            cb *= 2;\r\n            return (cb <= 1) ?\r\n                colorBlendModeFunctions.multiply(cb, cs) :\r\n                colorBlendModeFunctions.screen(cb - 1, cs);\r\n        },\r\n        softlight: function (cb, cs) {\r\n            var d = 1;\r\n            var e = cb;\r\n            if (cs > 0.5) {\r\n                e = 1;\r\n                d = (cb > 0.25) ? Math.sqrt(cb)\r\n                    : ((16 * cb - 12) * cb + 4) * cb;\r\n            }\r\n            return cb - (1 - 2 * cs) * e * (d - cb);\r\n        },\r\n        hardlight: function (cb, cs) {\r\n            return colorBlendModeFunctions.overlay(cs, cb);\r\n        },\r\n        difference: function (cb, cs) {\r\n            return Math.abs(cb - cs);\r\n        },\r\n        exclusion: function (cb, cs) {\r\n            return cb + cs - 2 * cb * cs;\r\n        },\r\n        // non-w3c functions:\r\n        average: function (cb, cs) {\r\n            return (cb + cs) / 2;\r\n        },\r\n        negation: function (cb, cs) {\r\n            return 1 - Math.abs(cb + cs - 1);\r\n        }\r\n    };\r\n    for (var f$1 in colorBlendModeFunctions) {\r\n        if (colorBlendModeFunctions.hasOwnProperty(f$1)) {\r\n            colorBlend[f$1] = colorBlend.bind(null, colorBlendModeFunctions[f$1]);\r\n        }\r\n    }\n\n    var dataUri = (function (environment) {\r\n        var fallback = function (functionThis, node) { return new URL(node, functionThis.index, functionThis.currentFileInfo).eval(functionThis.context); };\r\n        return { 'data-uri': function (mimetypeNode, filePathNode) {\r\n                if (!filePathNode) {\r\n                    filePathNode = mimetypeNode;\r\n                    mimetypeNode = null;\r\n                }\r\n                var mimetype = mimetypeNode && mimetypeNode.value;\r\n                var filePath = filePathNode.value;\r\n                var currentFileInfo = this.currentFileInfo;\r\n                var currentDirectory = currentFileInfo.rewriteUrls ?\r\n                    currentFileInfo.currentDirectory : currentFileInfo.entryPath;\r\n                var fragmentStart = filePath.indexOf('#');\r\n                var fragment = '';\r\n                if (fragmentStart !== -1) {\r\n                    fragment = filePath.slice(fragmentStart);\r\n                    filePath = filePath.slice(0, fragmentStart);\r\n                }\r\n                var context = clone(this.context);\r\n                context.rawBuffer = true;\r\n                var fileManager = environment.getFileManager(filePath, currentDirectory, context, environment, true);\r\n                if (!fileManager) {\r\n                    return fallback(this, filePathNode);\r\n                }\r\n                var useBase64 = false;\r\n                // detect the mimetype if not given\r\n                if (!mimetypeNode) {\r\n                    mimetype = environment.mimeLookup(filePath);\r\n                    if (mimetype === 'image/svg+xml') {\r\n                        useBase64 = false;\r\n                    }\r\n                    else {\r\n                        // use base 64 unless it's an ASCII or UTF-8 format\r\n                        var charset = environment.charsetLookup(mimetype);\r\n                        useBase64 = ['US-ASCII', 'UTF-8'].indexOf(charset) < 0;\r\n                    }\r\n                    if (useBase64) {\r\n                        mimetype += ';base64';\r\n                    }\r\n                }\r\n                else {\r\n                    useBase64 = /;base64$/.test(mimetype);\r\n                }\r\n                var fileSync = fileManager.loadFileSync(filePath, currentDirectory, context, environment);\r\n                if (!fileSync.contents) {\r\n                    logger$1.warn(\"Skipped data-uri embedding of \" + filePath + \" because file not found\");\r\n                    return fallback(this, filePathNode || mimetypeNode);\r\n                }\r\n                var buf = fileSync.contents;\r\n                if (useBase64 && !environment.encodeBase64) {\r\n                    return fallback(this, filePathNode);\r\n                }\r\n                buf = useBase64 ? environment.encodeBase64(buf) : encodeURIComponent(buf);\r\n                var uri = \"data:\" + mimetype + \",\" + buf + fragment;\r\n                return new URL(new Quoted(\"\\\"\" + uri + \"\\\"\", uri, false, this.index, this.currentFileInfo), this.index, this.currentFileInfo);\r\n            } };\r\n    });\n\n    var getItemsFromNode = function (node) {\r\n        // handle non-array values as an array of length 1\r\n        // return 'undefined' if index is invalid\r\n        var items = Array.isArray(node.value) ?\r\n            node.value : Array(node);\r\n        return items;\r\n    };\r\n    var list = {\r\n        _SELF: function (n) {\r\n            return n;\r\n        },\r\n        '~': function () {\r\n            var expr = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                expr[_i] = arguments[_i];\r\n            }\r\n            if (expr.length === 1) {\r\n                return expr[0];\r\n            }\r\n            return new Value(expr);\r\n        },\r\n        extract: function (values, index) {\r\n            // (1-based index)\r\n            index = index.value - 1;\r\n            return getItemsFromNode(values)[index];\r\n        },\r\n        length: function (values) {\r\n            return new Dimension(getItemsFromNode(values).length);\r\n        },\r\n        /**\r\n         * Creates a Less list of incremental values.\r\n         * Modeled after Lodash's range function, also exists natively in PHP\r\n         *\r\n         * @param {Dimension} [start=1]\r\n         * @param {Dimension} end  - e.g. 10 or 10px - unit is added to output\r\n         * @param {Dimension} [step=1]\r\n         */\r\n        range: function (start, end, step) {\r\n            var from;\r\n            var to;\r\n            var stepValue = 1;\r\n            var list = [];\r\n            if (end) {\r\n                to = end;\r\n                from = start.value;\r\n                if (step) {\r\n                    stepValue = step.value;\r\n                }\r\n            }\r\n            else {\r\n                from = 1;\r\n                to = start;\r\n            }\r\n            for (var i = from; i <= to.value; i += stepValue) {\r\n                list.push(new Dimension(i, to.unit));\r\n            }\r\n            return new Expression(list);\r\n        },\r\n        each: function (list, rs) {\r\n            var _this = this;\r\n            var rules = [];\r\n            var newRules;\r\n            var iterator;\r\n            var tryEval = function (val) {\r\n                if (val instanceof Node) {\r\n                    return val.eval(_this.context);\r\n                }\r\n                return val;\r\n            };\r\n            if (list.value && !(list instanceof Quoted)) {\r\n                if (Array.isArray(list.value)) {\r\n                    iterator = list.value.map(tryEval);\r\n                }\r\n                else {\r\n                    iterator = [tryEval(list.value)];\r\n                }\r\n            }\r\n            else if (list.ruleset) {\r\n                iterator = tryEval(list.ruleset).rules;\r\n            }\r\n            else if (list.rules) {\r\n                iterator = list.rules.map(tryEval);\r\n            }\r\n            else if (Array.isArray(list)) {\r\n                iterator = list.map(tryEval);\r\n            }\r\n            else {\r\n                iterator = [tryEval(list)];\r\n            }\r\n            var valueName = '@value';\r\n            var keyName = '@key';\r\n            var indexName = '@index';\r\n            if (rs.params) {\r\n                valueName = rs.params[0] && rs.params[0].name;\r\n                keyName = rs.params[1] && rs.params[1].name;\r\n                indexName = rs.params[2] && rs.params[2].name;\r\n                rs = rs.rules;\r\n            }\r\n            else {\r\n                rs = rs.ruleset;\r\n            }\r\n            for (var i = 0; i < iterator.length; i++) {\r\n                var key = void 0;\r\n                var value = void 0;\r\n                var item = iterator[i];\r\n                if (item instanceof Declaration) {\r\n                    key = typeof item.name === 'string' ? item.name : item.name[0].value;\r\n                    value = item.value;\r\n                }\r\n                else {\r\n                    key = new Dimension(i + 1);\r\n                    value = item;\r\n                }\r\n                if (item instanceof Comment) {\r\n                    continue;\r\n                }\r\n                newRules = rs.rules.slice(0);\r\n                if (valueName) {\r\n                    newRules.push(new Declaration(valueName, value, false, false, this.index, this.currentFileInfo));\r\n                }\r\n                if (indexName) {\r\n                    newRules.push(new Declaration(indexName, new Dimension(i + 1), false, false, this.index, this.currentFileInfo));\r\n                }\r\n                if (keyName) {\r\n                    newRules.push(new Declaration(keyName, key, false, false, this.index, this.currentFileInfo));\r\n                }\r\n                rules.push(new Ruleset([new (Selector)([new Element(\"\", '&')])], newRules, rs.strictImports, rs.visibilityInfo()));\r\n            }\r\n            return new Ruleset([new (Selector)([new Element(\"\", '&')])], rules, rs.strictImports, rs.visibilityInfo()).eval(this.context);\r\n        }\r\n    };\n\n    var MathHelper = function (fn, unit, n) {\r\n        if (!(n instanceof Dimension)) {\r\n            throw { type: 'Argument', message: 'argument must be a number' };\r\n        }\r\n        if (unit == null) {\r\n            unit = n.unit;\r\n        }\r\n        else {\r\n            n = n.unify();\r\n        }\r\n        return new Dimension(fn(parseFloat(n.value)), unit);\r\n    };\n\n    var mathFunctions = {\r\n        // name,  unit\r\n        ceil: null,\r\n        floor: null,\r\n        sqrt: null,\r\n        abs: null,\r\n        tan: '',\r\n        sin: '',\r\n        cos: '',\r\n        atan: 'rad',\r\n        asin: 'rad',\r\n        acos: 'rad'\r\n    };\r\n    for (var f in mathFunctions) {\r\n        if (mathFunctions.hasOwnProperty(f)) {\r\n            mathFunctions[f] = MathHelper.bind(null, Math[f], mathFunctions[f]);\r\n        }\r\n    }\r\n    mathFunctions.round = function (n, f) {\r\n        var fraction = typeof f === 'undefined' ? 0 : f.value;\r\n        return MathHelper(function (num) { return num.toFixed(fraction); }, null, n);\r\n    };\n\n    var minMax = function (isMin, args) {\r\n        args = Array.prototype.slice.call(args);\r\n        switch (args.length) {\r\n            case 0: throw { type: 'Argument', message: 'one or more arguments required' };\r\n        }\r\n        var i; // key is the unit.toString() for unified Dimension values,\r\n        var j;\r\n        var current;\r\n        var currentUnified;\r\n        var referenceUnified;\r\n        var unit;\r\n        var unitStatic;\r\n        var unitClone;\r\n        var // elems only contains original argument values.\r\n        order = [];\r\n        var values = {};\r\n        // value is the index into the order array.\r\n        for (i = 0; i < args.length; i++) {\r\n            current = args[i];\r\n            if (!(current instanceof Dimension)) {\r\n                if (Array.isArray(args[i].value)) {\r\n                    Array.prototype.push.apply(args, Array.prototype.slice.call(args[i].value));\r\n                }\r\n                continue;\r\n            }\r\n            currentUnified = current.unit.toString() === '' && unitClone !== undefined ? new Dimension(current.value, unitClone).unify() : current.unify();\r\n            unit = currentUnified.unit.toString() === '' && unitStatic !== undefined ? unitStatic : currentUnified.unit.toString();\r\n            unitStatic = unit !== '' && unitStatic === undefined || unit !== '' && order[0].unify().unit.toString() === '' ? unit : unitStatic;\r\n            unitClone = unit !== '' && unitClone === undefined ? current.unit.toString() : unitClone;\r\n            j = values[''] !== undefined && unit !== '' && unit === unitStatic ? values[''] : values[unit];\r\n            if (j === undefined) {\r\n                if (unitStatic !== undefined && unit !== unitStatic) {\r\n                    throw { type: 'Argument', message: 'incompatible types' };\r\n                }\r\n                values[unit] = order.length;\r\n                order.push(current);\r\n                continue;\r\n            }\r\n            referenceUnified = order[j].unit.toString() === '' && unitClone !== undefined ? new Dimension(order[j].value, unitClone).unify() : order[j].unify();\r\n            if (isMin && currentUnified.value < referenceUnified.value ||\r\n                !isMin && currentUnified.value > referenceUnified.value) {\r\n                order[j] = current;\r\n            }\r\n        }\r\n        if (order.length == 1) {\r\n            return order[0];\r\n        }\r\n        args = order.map(function (a) { return a.toCSS(this.context); }).join(this.context.compress ? ',' : ', ');\r\n        return new Anonymous((isMin ? 'min' : 'max') + \"(\" + args + \")\");\r\n    };\r\n    var number = {\r\n        min: function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            try {\r\n                return minMax(true, args);\r\n            }\r\n            catch (e) { }\r\n        },\r\n        max: function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            try {\r\n                return minMax(false, args);\r\n            }\r\n            catch (e) { }\r\n        },\r\n        convert: function (val, unit) {\r\n            return val.convertTo(unit.value);\r\n        },\r\n        pi: function () {\r\n            return new Dimension(Math.PI);\r\n        },\r\n        mod: function (a, b) {\r\n            return new Dimension(a.value % b.value, a.unit);\r\n        },\r\n        pow: function (x, y) {\r\n            if (typeof x === 'number' && typeof y === 'number') {\r\n                x = new Dimension(x);\r\n                y = new Dimension(y);\r\n            }\r\n            else if (!(x instanceof Dimension) || !(y instanceof Dimension)) {\r\n                throw { type: 'Argument', message: 'arguments must be numbers' };\r\n            }\r\n            return new Dimension(Math.pow(x.value, y.value), x.unit);\r\n        },\r\n        percentage: function (n) {\r\n            var result = MathHelper(function (num) { return num * 100; }, '%', n);\r\n            return result;\r\n        }\r\n    };\n\n    var string = {\r\n        e: function (str) {\r\n            return new Quoted('\"', str instanceof JavaScript ? str.evaluated : str.value, true);\r\n        },\r\n        escape: function (str) {\r\n            return new Anonymous(encodeURI(str.value).replace(/=/g, '%3D').replace(/:/g, '%3A').replace(/#/g, '%23').replace(/;/g, '%3B')\r\n                .replace(/\\(/g, '%28').replace(/\\)/g, '%29'));\r\n        },\r\n        replace: function (string, pattern, replacement, flags) {\r\n            var result = string.value;\r\n            replacement = (replacement.type === 'Quoted') ?\r\n                replacement.value : replacement.toCSS();\r\n            result = result.replace(new RegExp(pattern.value, flags ? flags.value : ''), replacement);\r\n            return new Quoted(string.quote || '', result, string.escaped);\r\n        },\r\n        '%': function (string /* arg, arg, ... */) {\r\n            var args = Array.prototype.slice.call(arguments, 1);\r\n            var result = string.value;\r\n            var _loop_1 = function (i) {\r\n                /* jshint loopfunc:true */\r\n                result = result.replace(/%[sda]/i, function (token) {\r\n                    var value = ((args[i].type === 'Quoted') &&\r\n                        token.match(/s/i)) ? args[i].value : args[i].toCSS();\r\n                    return token.match(/[A-Z]$/) ? encodeURIComponent(value) : value;\r\n                });\r\n            };\r\n            for (var i = 0; i < args.length; i++) {\r\n                _loop_1(i);\r\n            }\r\n            result = result.replace(/%%/g, '%');\r\n            return new Quoted(string.quote || '', result, string.escaped);\r\n        }\r\n    };\n\n    var svg = (function (environment) {\r\n        return { 'svg-gradient': function (direction) {\r\n                var stops;\r\n                var gradientDirectionSvg;\r\n                var gradientType = 'linear';\r\n                var rectangleDimension = 'x=\"0\" y=\"0\" width=\"1\" height=\"1\"';\r\n                var renderEnv = { compress: false };\r\n                var returner;\r\n                var directionValue = direction.toCSS(renderEnv);\r\n                var i;\r\n                var color;\r\n                var position;\r\n                var positionValue;\r\n                var alpha;\r\n                function throwArgumentDescriptor() {\r\n                    throw { type: 'Argument',\r\n                        message: 'svg-gradient expects direction, start_color [start_position], [color position,]...,' +\r\n                            ' end_color [end_position] or direction, color list' };\r\n                }\r\n                if (arguments.length == 2) {\r\n                    if (arguments[1].value.length < 2) {\r\n                        throwArgumentDescriptor();\r\n                    }\r\n                    stops = arguments[1].value;\r\n                }\r\n                else if (arguments.length < 3) {\r\n                    throwArgumentDescriptor();\r\n                }\r\n                else {\r\n                    stops = Array.prototype.slice.call(arguments, 1);\r\n                }\r\n                switch (directionValue) {\r\n                    case 'to bottom':\r\n                        gradientDirectionSvg = 'x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\"';\r\n                        break;\r\n                    case 'to right':\r\n                        gradientDirectionSvg = 'x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"';\r\n                        break;\r\n                    case 'to bottom right':\r\n                        gradientDirectionSvg = 'x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\"';\r\n                        break;\r\n                    case 'to top right':\r\n                        gradientDirectionSvg = 'x1=\"0%\" y1=\"100%\" x2=\"100%\" y2=\"0%\"';\r\n                        break;\r\n                    case 'ellipse':\r\n                    case 'ellipse at center':\r\n                        gradientType = 'radial';\r\n                        gradientDirectionSvg = 'cx=\"50%\" cy=\"50%\" r=\"75%\"';\r\n                        rectangleDimension = 'x=\"-50\" y=\"-50\" width=\"101\" height=\"101\"';\r\n                        break;\r\n                    default:\r\n                        throw { type: 'Argument', message: 'svg-gradient direction must be \\'to bottom\\', \\'to right\\',' +\r\n                                ' \\'to bottom right\\', \\'to top right\\' or \\'ellipse at center\\'' };\r\n                }\r\n                returner = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 1 1\\\"><\" + gradientType + \"Gradient id=\\\"g\\\" \" + gradientDirectionSvg + \">\";\r\n                for (i = 0; i < stops.length; i += 1) {\r\n                    if (stops[i] instanceof Expression) {\r\n                        color = stops[i].value[0];\r\n                        position = stops[i].value[1];\r\n                    }\r\n                    else {\r\n                        color = stops[i];\r\n                        position = undefined;\r\n                    }\r\n                    if (!(color instanceof Color) || (!((i === 0 || i + 1 === stops.length) && position === undefined) && !(position instanceof Dimension))) {\r\n                        throwArgumentDescriptor();\r\n                    }\r\n                    positionValue = position ? position.toCSS(renderEnv) : i === 0 ? '0%' : '100%';\r\n                    alpha = color.alpha;\r\n                    returner += \"<stop offset=\\\"\" + positionValue + \"\\\" stop-color=\\\"\" + color.toRGB() + \"\\\"\" + (alpha < 1 ? \" stop-opacity=\\\"\" + alpha + \"\\\"\" : '') + \"/>\";\r\n                }\r\n                returner += \"</\" + gradientType + \"Gradient><rect \" + rectangleDimension + \" fill=\\\"url(#g)\\\" /></svg>\";\r\n                returner = encodeURIComponent(returner);\r\n                returner = \"data:image/svg+xml,\" + returner;\r\n                return new URL(new Quoted(\"'\" + returner + \"'\", returner, false, this.index, this.currentFileInfo), this.index, this.currentFileInfo);\r\n            } };\r\n    });\n\n    var isa = function (n, Type) { return (n instanceof Type) ? Keyword.True : Keyword.False; };\r\n    var isunit = function (n, unit) {\r\n        if (unit === undefined) {\r\n            throw { type: 'Argument', message: 'missing the required second argument to isunit.' };\r\n        }\r\n        unit = typeof unit.value === 'string' ? unit.value : unit;\r\n        if (typeof unit !== 'string') {\r\n            throw { type: 'Argument', message: 'Second argument to isunit should be a unit or a string.' };\r\n        }\r\n        return (n instanceof Dimension) && n.unit.is(unit) ? Keyword.True : Keyword.False;\r\n    };\r\n    var types = {\r\n        isruleset: function (n) {\r\n            return isa(n, DetachedRuleset);\r\n        },\r\n        iscolor: function (n) {\r\n            return isa(n, Color);\r\n        },\r\n        isnumber: function (n) {\r\n            return isa(n, Dimension);\r\n        },\r\n        isstring: function (n) {\r\n            return isa(n, Quoted);\r\n        },\r\n        iskeyword: function (n) {\r\n            return isa(n, Keyword);\r\n        },\r\n        isurl: function (n) {\r\n            return isa(n, URL);\r\n        },\r\n        ispixel: function (n) {\r\n            return isunit(n, 'px');\r\n        },\r\n        ispercentage: function (n) {\r\n            return isunit(n, '%');\r\n        },\r\n        isem: function (n) {\r\n            return isunit(n, 'em');\r\n        },\r\n        isunit: isunit,\r\n        unit: function (val, unit) {\r\n            if (!(val instanceof Dimension)) {\r\n                throw { type: 'Argument',\r\n                    message: \"the first argument to unit must be a number\" + (val instanceof Operation ? '. Have you forgotten parenthesis?' : '') };\r\n            }\r\n            if (unit) {\r\n                if (unit instanceof Keyword) {\r\n                    unit = unit.value;\r\n                }\r\n                else {\r\n                    unit = unit.toCSS();\r\n                }\r\n            }\r\n            else {\r\n                unit = '';\r\n            }\r\n            return new Dimension(val.value, unit);\r\n        },\r\n        'get-unit': function (n) {\r\n            return new Anonymous(n.unit);\r\n        }\r\n    };\n\n    var functions = (function (environment) {\r\n        var functions = { functionRegistry: functionRegistry, functionCaller: functionCaller };\r\n        // register functions\r\n        functionRegistry.addMultiple(boolean$1);\r\n        functionRegistry.add('default', defaultFunc.eval.bind(defaultFunc));\r\n        functionRegistry.addMultiple(color);\r\n        functionRegistry.addMultiple(colorBlend);\r\n        functionRegistry.addMultiple(dataUri(environment));\r\n        functionRegistry.addMultiple(list);\r\n        functionRegistry.addMultiple(mathFunctions);\r\n        functionRegistry.addMultiple(number);\r\n        functionRegistry.addMultiple(string);\r\n        functionRegistry.addMultiple(svg());\r\n        functionRegistry.addMultiple(types);\r\n        return functions;\r\n    });\n\n    function transformTree (root, options) {\r\n        options = options || {};\r\n        var evaldRoot;\r\n        var variables = options.variables;\r\n        var evalEnv = new contexts.Eval(options);\r\n        //\r\n        // Allows setting variables with a hash, so:\r\n        //\r\n        //   `{ color: new tree.Color('#f01') }` will become:\r\n        //\r\n        //   new tree.Declaration('@color',\r\n        //     new tree.Value([\r\n        //       new tree.Expression([\r\n        //         new tree.Color('#f01')\r\n        //       ])\r\n        //     ])\r\n        //   )\r\n        //\r\n        if (typeof variables === 'object' && !Array.isArray(variables)) {\r\n            variables = Object.keys(variables).map(function (k) {\r\n                var value = variables[k];\r\n                if (!(value instanceof tree.Value)) {\r\n                    if (!(value instanceof tree.Expression)) {\r\n                        value = new tree.Expression([value]);\r\n                    }\r\n                    value = new tree.Value([value]);\r\n                }\r\n                return new tree.Declaration(\"@\" + k, value, false, null, 0);\r\n            });\r\n            evalEnv.frames = [new tree.Ruleset(null, variables)];\r\n        }\r\n        var visitors$1 = [\r\n            new visitors.JoinSelectorVisitor(),\r\n            new visitors.MarkVisibleSelectorsVisitor(true),\r\n            new visitors.ExtendVisitor(),\r\n            new visitors.ToCSSVisitor({ compress: Boolean(options.compress) })\r\n        ];\r\n        var preEvalVisitors = [];\r\n        var v;\r\n        var visitorIterator;\r\n        /**\r\n         * first() / get() allows visitors to be added while visiting\r\n         *\r\n         * @todo Add scoping for visitors just like functions for @plugin; right now they're global\r\n         */\r\n        if (options.pluginManager) {\r\n            visitorIterator = options.pluginManager.visitor();\r\n            for (var i = 0; i < 2; i++) {\r\n                visitorIterator.first();\r\n                while ((v = visitorIterator.get())) {\r\n                    if (v.isPreEvalVisitor) {\r\n                        if (i === 0 || preEvalVisitors.indexOf(v) === -1) {\r\n                            preEvalVisitors.push(v);\r\n                            v.run(root);\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (i === 0 || visitors$1.indexOf(v) === -1) {\r\n                            if (v.isPreVisitor) {\r\n                                visitors$1.unshift(v);\r\n                            }\r\n                            else {\r\n                                visitors$1.push(v);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        evaldRoot = root.eval(evalEnv);\r\n        for (var i = 0; i < visitors$1.length; i++) {\r\n            visitors$1[i].run(evaldRoot);\r\n        }\r\n        // Run any remaining visitors added after eval pass\r\n        if (options.pluginManager) {\r\n            visitorIterator.first();\r\n            while ((v = visitorIterator.get())) {\r\n                if (visitors$1.indexOf(v) === -1 && preEvalVisitors.indexOf(v) === -1) {\r\n                    v.run(evaldRoot);\r\n                }\r\n            }\r\n        }\r\n        return evaldRoot;\r\n    }\n\n    /**\r\n     * Plugin Manager\r\n     */\r\n    var PluginManager = /** @class */ (function () {\r\n        function PluginManager(less) {\r\n            this.less = less;\r\n            this.visitors = [];\r\n            this.preProcessors = [];\r\n            this.postProcessors = [];\r\n            this.installedPlugins = [];\r\n            this.fileManagers = [];\r\n            this.iterator = -1;\r\n            this.pluginCache = {};\r\n            this.Loader = new less.PluginLoader(less);\r\n        }\r\n        /**\r\n         * Adds all the plugins in the array\r\n         * @param {Array} plugins\r\n         */\r\n        PluginManager.prototype.addPlugins = function (plugins) {\r\n            if (plugins) {\r\n                for (var i = 0; i < plugins.length; i++) {\r\n                    this.addPlugin(plugins[i]);\r\n                }\r\n            }\r\n        };\r\n        /**\r\n         *\r\n         * @param plugin\r\n         * @param {String} filename\r\n         */\r\n        PluginManager.prototype.addPlugin = function (plugin, filename, functionRegistry) {\r\n            this.installedPlugins.push(plugin);\r\n            if (filename) {\r\n                this.pluginCache[filename] = plugin;\r\n            }\r\n            if (plugin.install) {\r\n                plugin.install(this.less, this, functionRegistry || this.less.functions.functionRegistry);\r\n            }\r\n        };\r\n        /**\r\n         *\r\n         * @param filename\r\n         */\r\n        PluginManager.prototype.get = function (filename) {\r\n            return this.pluginCache[filename];\r\n        };\r\n        /**\r\n         * Adds a visitor. The visitor object has options on itself to determine\r\n         * when it should run.\r\n         * @param visitor\r\n         */\r\n        PluginManager.prototype.addVisitor = function (visitor) {\r\n            this.visitors.push(visitor);\r\n        };\r\n        /**\r\n         * Adds a pre processor object\r\n         * @param {object} preProcessor\r\n         * @param {number} priority - guidelines 1 = before import, 1000 = import, 2000 = after import\r\n         */\r\n        PluginManager.prototype.addPreProcessor = function (preProcessor, priority) {\r\n            var indexToInsertAt;\r\n            for (indexToInsertAt = 0; indexToInsertAt < this.preProcessors.length; indexToInsertAt++) {\r\n                if (this.preProcessors[indexToInsertAt].priority >= priority) {\r\n                    break;\r\n                }\r\n            }\r\n            this.preProcessors.splice(indexToInsertAt, 0, { preProcessor: preProcessor, priority: priority });\r\n        };\r\n        /**\r\n         * Adds a post processor object\r\n         * @param {object} postProcessor\r\n         * @param {number} priority - guidelines 1 = before compression, 1000 = compression, 2000 = after compression\r\n         */\r\n        PluginManager.prototype.addPostProcessor = function (postProcessor, priority) {\r\n            var indexToInsertAt;\r\n            for (indexToInsertAt = 0; indexToInsertAt < this.postProcessors.length; indexToInsertAt++) {\r\n                if (this.postProcessors[indexToInsertAt].priority >= priority) {\r\n                    break;\r\n                }\r\n            }\r\n            this.postProcessors.splice(indexToInsertAt, 0, { postProcessor: postProcessor, priority: priority });\r\n        };\r\n        /**\r\n         *\r\n         * @param manager\r\n         */\r\n        PluginManager.prototype.addFileManager = function (manager) {\r\n            this.fileManagers.push(manager);\r\n        };\r\n        /**\r\n         *\r\n         * @returns {Array}\r\n         * @private\r\n         */\r\n        PluginManager.prototype.getPreProcessors = function () {\r\n            var preProcessors = [];\r\n            for (var i = 0; i < this.preProcessors.length; i++) {\r\n                preProcessors.push(this.preProcessors[i].preProcessor);\r\n            }\r\n            return preProcessors;\r\n        };\r\n        /**\r\n         *\r\n         * @returns {Array}\r\n         * @private\r\n         */\r\n        PluginManager.prototype.getPostProcessors = function () {\r\n            var postProcessors = [];\r\n            for (var i = 0; i < this.postProcessors.length; i++) {\r\n                postProcessors.push(this.postProcessors[i].postProcessor);\r\n            }\r\n            return postProcessors;\r\n        };\r\n        /**\r\n         *\r\n         * @returns {Array}\r\n         * @private\r\n         */\r\n        PluginManager.prototype.getVisitors = function () {\r\n            return this.visitors;\r\n        };\r\n        PluginManager.prototype.visitor = function () {\r\n            var self = this;\r\n            return {\r\n                first: function () {\r\n                    self.iterator = -1;\r\n                    return self.visitors[self.iterator];\r\n                },\r\n                get: function () {\r\n                    self.iterator += 1;\r\n                    return self.visitors[self.iterator];\r\n                }\r\n            };\r\n        };\r\n        /**\r\n         *\r\n         * @returns {Array}\r\n         * @private\r\n         */\r\n        PluginManager.prototype.getFileManagers = function () {\r\n            return this.fileManagers;\r\n        };\r\n        return PluginManager;\r\n    }());\r\n    var pm;\r\n    var PluginManagerFactory = function (less, newFactory) {\r\n        if (newFactory || !pm) {\r\n            pm = new PluginManager(less);\r\n        }\r\n        return pm;\r\n    };\n\n    function SourceMapOutput (environment) {\r\n        var SourceMapOutput = /** @class */ (function () {\r\n            function SourceMapOutput(options) {\r\n                this._css = [];\r\n                this._rootNode = options.rootNode;\r\n                this._contentsMap = options.contentsMap;\r\n                this._contentsIgnoredCharsMap = options.contentsIgnoredCharsMap;\r\n                if (options.sourceMapFilename) {\r\n                    this._sourceMapFilename = options.sourceMapFilename.replace(/\\\\/g, '/');\r\n                }\r\n                this._outputFilename = options.outputFilename;\r\n                this.sourceMapURL = options.sourceMapURL;\r\n                if (options.sourceMapBasepath) {\r\n                    this._sourceMapBasepath = options.sourceMapBasepath.replace(/\\\\/g, '/');\r\n                }\r\n                if (options.sourceMapRootpath) {\r\n                    this._sourceMapRootpath = options.sourceMapRootpath.replace(/\\\\/g, '/');\r\n                    if (this._sourceMapRootpath.charAt(this._sourceMapRootpath.length - 1) !== '/') {\r\n                        this._sourceMapRootpath += '/';\r\n                    }\r\n                }\r\n                else {\r\n                    this._sourceMapRootpath = '';\r\n                }\r\n                this._outputSourceFiles = options.outputSourceFiles;\r\n                this._sourceMapGeneratorConstructor = environment.getSourceMapGenerator();\r\n                this._lineNumber = 0;\r\n                this._column = 0;\r\n            }\r\n            SourceMapOutput.prototype.removeBasepath = function (path) {\r\n                if (this._sourceMapBasepath && path.indexOf(this._sourceMapBasepath) === 0) {\r\n                    path = path.substring(this._sourceMapBasepath.length);\r\n                    if (path.charAt(0) === '\\\\' || path.charAt(0) === '/') {\r\n                        path = path.substring(1);\r\n                    }\r\n                }\r\n                return path;\r\n            };\r\n            SourceMapOutput.prototype.normalizeFilename = function (filename) {\r\n                filename = filename.replace(/\\\\/g, '/');\r\n                filename = this.removeBasepath(filename);\r\n                return (this._sourceMapRootpath || '') + filename;\r\n            };\r\n            SourceMapOutput.prototype.add = function (chunk, fileInfo, index, mapLines) {\r\n                // ignore adding empty strings\r\n                if (!chunk) {\r\n                    return;\r\n                }\r\n                var lines, sourceLines, columns, sourceColumns, i;\r\n                if (fileInfo && fileInfo.filename) {\r\n                    var inputSource = this._contentsMap[fileInfo.filename];\r\n                    // remove vars/banner added to the top of the file\r\n                    if (this._contentsIgnoredCharsMap[fileInfo.filename]) {\r\n                        // adjust the index\r\n                        index -= this._contentsIgnoredCharsMap[fileInfo.filename];\r\n                        if (index < 0) {\r\n                            index = 0;\r\n                        }\r\n                        // adjust the source\r\n                        inputSource = inputSource.slice(this._contentsIgnoredCharsMap[fileInfo.filename]);\r\n                    }\r\n                    /**\r\n                     * ignore empty content, or failsafe\r\n                     * if contents map is incorrect\r\n                     */\r\n                    if (inputSource === undefined) {\r\n                        this._css.push(chunk);\r\n                        return;\r\n                    }\r\n                    inputSource = inputSource.substring(0, index);\r\n                    sourceLines = inputSource.split('\\n');\r\n                    sourceColumns = sourceLines[sourceLines.length - 1];\r\n                }\r\n                lines = chunk.split('\\n');\r\n                columns = lines[lines.length - 1];\r\n                if (fileInfo && fileInfo.filename) {\r\n                    if (!mapLines) {\r\n                        this._sourceMapGenerator.addMapping({ generated: { line: this._lineNumber + 1, column: this._column },\r\n                            original: { line: sourceLines.length, column: sourceColumns.length },\r\n                            source: this.normalizeFilename(fileInfo.filename) });\r\n                    }\r\n                    else {\r\n                        for (i = 0; i < lines.length; i++) {\r\n                            this._sourceMapGenerator.addMapping({ generated: { line: this._lineNumber + i + 1, column: i === 0 ? this._column : 0 },\r\n                                original: { line: sourceLines.length + i, column: i === 0 ? sourceColumns.length : 0 },\r\n                                source: this.normalizeFilename(fileInfo.filename) });\r\n                        }\r\n                    }\r\n                }\r\n                if (lines.length === 1) {\r\n                    this._column += columns.length;\r\n                }\r\n                else {\r\n                    this._lineNumber += lines.length - 1;\r\n                    this._column = columns.length;\r\n                }\r\n                this._css.push(chunk);\r\n            };\r\n            SourceMapOutput.prototype.isEmpty = function () {\r\n                return this._css.length === 0;\r\n            };\r\n            SourceMapOutput.prototype.toCSS = function (context) {\r\n                this._sourceMapGenerator = new this._sourceMapGeneratorConstructor({ file: this._outputFilename, sourceRoot: null });\r\n                if (this._outputSourceFiles) {\r\n                    for (var filename in this._contentsMap) {\r\n                        if (this._contentsMap.hasOwnProperty(filename)) {\r\n                            var source = this._contentsMap[filename];\r\n                            if (this._contentsIgnoredCharsMap[filename]) {\r\n                                source = source.slice(this._contentsIgnoredCharsMap[filename]);\r\n                            }\r\n                            this._sourceMapGenerator.setSourceContent(this.normalizeFilename(filename), source);\r\n                        }\r\n                    }\r\n                }\r\n                this._rootNode.genCSS(context, this);\r\n                if (this._css.length > 0) {\r\n                    var sourceMapURL = void 0;\r\n                    var sourceMapContent = JSON.stringify(this._sourceMapGenerator.toJSON());\r\n                    if (this.sourceMapURL) {\r\n                        sourceMapURL = this.sourceMapURL;\r\n                    }\r\n                    else if (this._sourceMapFilename) {\r\n                        sourceMapURL = this._sourceMapFilename;\r\n                    }\r\n                    this.sourceMapURL = sourceMapURL;\r\n                    this.sourceMap = sourceMapContent;\r\n                }\r\n                return this._css.join('');\r\n            };\r\n            return SourceMapOutput;\r\n        }());\r\n        return SourceMapOutput;\r\n    }\n\n    function SourceMapBuilder (SourceMapOutput, environment) {\r\n        var SourceMapBuilder = /** @class */ (function () {\r\n            function SourceMapBuilder(options) {\r\n                this.options = options;\r\n            }\r\n            SourceMapBuilder.prototype.toCSS = function (rootNode, options, imports) {\r\n                var sourceMapOutput = new SourceMapOutput({\r\n                    contentsIgnoredCharsMap: imports.contentsIgnoredChars,\r\n                    rootNode: rootNode,\r\n                    contentsMap: imports.contents,\r\n                    sourceMapFilename: this.options.sourceMapFilename,\r\n                    sourceMapURL: this.options.sourceMapURL,\r\n                    outputFilename: this.options.sourceMapOutputFilename,\r\n                    sourceMapBasepath: this.options.sourceMapBasepath,\r\n                    sourceMapRootpath: this.options.sourceMapRootpath,\r\n                    outputSourceFiles: this.options.outputSourceFiles,\r\n                    sourceMapGenerator: this.options.sourceMapGenerator,\r\n                    sourceMapFileInline: this.options.sourceMapFileInline,\r\n                    disableSourcemapAnnotation: this.options.disableSourcemapAnnotation\r\n                });\r\n                var css = sourceMapOutput.toCSS(options);\r\n                this.sourceMap = sourceMapOutput.sourceMap;\r\n                this.sourceMapURL = sourceMapOutput.sourceMapURL;\r\n                if (this.options.sourceMapInputFilename) {\r\n                    this.sourceMapInputFilename = sourceMapOutput.normalizeFilename(this.options.sourceMapInputFilename);\r\n                }\r\n                if (this.options.sourceMapBasepath !== undefined && this.sourceMapURL !== undefined) {\r\n                    this.sourceMapURL = sourceMapOutput.removeBasepath(this.sourceMapURL);\r\n                }\r\n                return css + this.getCSSAppendage();\r\n            };\r\n            SourceMapBuilder.prototype.getCSSAppendage = function () {\r\n                var sourceMapURL = this.sourceMapURL;\r\n                if (this.options.sourceMapFileInline) {\r\n                    if (this.sourceMap === undefined) {\r\n                        return '';\r\n                    }\r\n                    sourceMapURL = \"data:application/json;base64,\" + environment.encodeBase64(this.sourceMap);\r\n                }\r\n                if (this.options.disableSourcemapAnnotation) {\r\n                    return '';\r\n                }\r\n                if (sourceMapURL) {\r\n                    return \"/*# sourceMappingURL=\" + sourceMapURL + \" */\";\r\n                }\r\n                return '';\r\n            };\r\n            SourceMapBuilder.prototype.getExternalSourceMap = function () {\r\n                return this.sourceMap;\r\n            };\r\n            SourceMapBuilder.prototype.setExternalSourceMap = function (sourceMap) {\r\n                this.sourceMap = sourceMap;\r\n            };\r\n            SourceMapBuilder.prototype.isInline = function () {\r\n                return this.options.sourceMapFileInline;\r\n            };\r\n            SourceMapBuilder.prototype.getSourceMapURL = function () {\r\n                return this.sourceMapURL;\r\n            };\r\n            SourceMapBuilder.prototype.getOutputFilename = function () {\r\n                return this.options.sourceMapOutputFilename;\r\n            };\r\n            SourceMapBuilder.prototype.getInputFilename = function () {\r\n                return this.sourceMapInputFilename;\r\n            };\r\n            return SourceMapBuilder;\r\n        }());\r\n        return SourceMapBuilder;\r\n    }\n\n    function ParseTree (SourceMapBuilder) {\r\n        var ParseTree = /** @class */ (function () {\r\n            function ParseTree(root, imports) {\r\n                this.root = root;\r\n                this.imports = imports;\r\n            }\r\n            ParseTree.prototype.toCSS = function (options) {\r\n                var evaldRoot;\r\n                var result = {};\r\n                var sourceMapBuilder;\r\n                try {\r\n                    evaldRoot = transformTree(this.root, options);\r\n                }\r\n                catch (e) {\r\n                    throw new LessError(e, this.imports);\r\n                }\r\n                try {\r\n                    var compress = Boolean(options.compress);\r\n                    if (compress) {\r\n                        logger$1.warn('The compress option has been deprecated. ' +\r\n                            'We recommend you use a dedicated css minifier, for instance see less-plugin-clean-css.');\r\n                    }\r\n                    var toCSSOptions = {\r\n                        compress: compress,\r\n                        dumpLineNumbers: options.dumpLineNumbers,\r\n                        strictUnits: Boolean(options.strictUnits),\r\n                        numPrecision: 8\r\n                    };\r\n                    if (options.sourceMap) {\r\n                        sourceMapBuilder = new SourceMapBuilder(options.sourceMap);\r\n                        result.css = sourceMapBuilder.toCSS(evaldRoot, toCSSOptions, this.imports);\r\n                    }\r\n                    else {\r\n                        result.css = evaldRoot.toCSS(toCSSOptions);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    throw new LessError(e, this.imports);\r\n                }\r\n                if (options.pluginManager) {\r\n                    var postProcessors = options.pluginManager.getPostProcessors();\r\n                    for (var i = 0; i < postProcessors.length; i++) {\r\n                        result.css = postProcessors[i].process(result.css, { sourceMap: sourceMapBuilder, options: options, imports: this.imports });\r\n                    }\r\n                }\r\n                if (options.sourceMap) {\r\n                    result.map = sourceMapBuilder.getExternalSourceMap();\r\n                }\r\n                result.imports = [];\r\n                for (var file in this.imports.files) {\r\n                    if (this.imports.files.hasOwnProperty(file) && file !== this.imports.rootFilename) {\r\n                        result.imports.push(file);\r\n                    }\r\n                }\r\n                return result;\r\n            };\r\n            return ParseTree;\r\n        }());\r\n        return ParseTree;\r\n    }\n\n    function ImportManager (environment) {\r\n        // FileInfo = {\r\n        //  'rewriteUrls' - option - whether to adjust URL's to be relative\r\n        //  'filename' - full resolved filename of current file\r\n        //  'rootpath' - path to append to normal URLs for this node\r\n        //  'currentDirectory' - path to the current file, absolute\r\n        //  'rootFilename' - filename of the base file\r\n        //  'entryPath' - absolute path to the entry file\r\n        //  'reference' - whether the file should not be output and only output parts that are referenced\r\n        var ImportManager = /** @class */ (function () {\r\n            function ImportManager(less, context, rootFileInfo) {\r\n                this.less = less;\r\n                this.rootFilename = rootFileInfo.filename;\r\n                this.paths = context.paths || []; // Search paths, when importing\r\n                this.contents = {}; // map - filename to contents of all the files\r\n                this.contentsIgnoredChars = {}; // map - filename to lines at the beginning of each file to ignore\r\n                this.mime = context.mime;\r\n                this.error = null;\r\n                this.context = context;\r\n                // Deprecated? Unused outside of here, could be useful.\r\n                this.queue = []; // Files which haven't been imported yet\r\n                this.files = {}; // Holds the imported parse trees.\r\n            }\r\n            /**\r\n             * Add an import to be imported\r\n             * @param path - the raw path\r\n             * @param tryAppendExtension - whether to try appending a file extension (.less or .js if the path has no extension)\r\n             * @param currentFileInfo - the current file info (used for instance to work out relative paths)\r\n             * @param importOptions - import options\r\n             * @param callback - callback for when it is imported\r\n             */\r\n            ImportManager.prototype.push = function (path, tryAppendExtension, currentFileInfo, importOptions, callback) {\r\n                var importManager = this, pluginLoader = this.context.pluginManager.Loader;\r\n                this.queue.push(path);\r\n                var fileParsedFunc = function (e, root, fullPath) {\r\n                    importManager.queue.splice(importManager.queue.indexOf(path), 1); // Remove the path from the queue\r\n                    var importedEqualsRoot = fullPath === importManager.rootFilename;\r\n                    if (importOptions.optional && e) {\r\n                        callback(null, { rules: [] }, false, null);\r\n                        logger$1.info(\"The file \" + fullPath + \" was skipped because it was not found and the import was marked optional.\");\r\n                    }\r\n                    else {\r\n                        // Inline imports aren't cached here.\r\n                        // If we start to cache them, please make sure they won't conflict with non-inline imports of the\r\n                        // same name as they used to do before this comment and the condition below have been added.\r\n                        if (!importManager.files[fullPath] && !importOptions.inline) {\r\n                            importManager.files[fullPath] = { root: root, options: importOptions };\r\n                        }\r\n                        if (e && !importManager.error) {\r\n                            importManager.error = e;\r\n                        }\r\n                        callback(e, root, importedEqualsRoot, fullPath);\r\n                    }\r\n                };\r\n                var newFileInfo = {\r\n                    rewriteUrls: this.context.rewriteUrls,\r\n                    entryPath: currentFileInfo.entryPath,\r\n                    rootpath: currentFileInfo.rootpath,\r\n                    rootFilename: currentFileInfo.rootFilename\r\n                };\r\n                var fileManager = environment.getFileManager(path, currentFileInfo.currentDirectory, this.context, environment);\r\n                if (!fileManager) {\r\n                    fileParsedFunc({ message: \"Could not find a file-manager for \" + path });\r\n                    return;\r\n                }\r\n                var loadFileCallback = function (loadedFile) {\r\n                    var plugin;\r\n                    var resolvedFilename = loadedFile.filename;\r\n                    var contents = loadedFile.contents.replace(/^\\uFEFF/, '');\r\n                    // Pass on an updated rootpath if path of imported file is relative and file\r\n                    // is in a (sub|sup) directory\r\n                    //\r\n                    // Examples:\r\n                    // - If path of imported file is 'module/nav/nav.less' and rootpath is 'less/',\r\n                    //   then rootpath should become 'less/module/nav/'\r\n                    // - If path of imported file is '../mixins.less' and rootpath is 'less/',\r\n                    //   then rootpath should become 'less/../'\r\n                    newFileInfo.currentDirectory = fileManager.getPath(resolvedFilename);\r\n                    if (newFileInfo.rewriteUrls) {\r\n                        newFileInfo.rootpath = fileManager.join((importManager.context.rootpath || ''), fileManager.pathDiff(newFileInfo.currentDirectory, newFileInfo.entryPath));\r\n                        if (!fileManager.isPathAbsolute(newFileInfo.rootpath) && fileManager.alwaysMakePathsAbsolute()) {\r\n                            newFileInfo.rootpath = fileManager.join(newFileInfo.entryPath, newFileInfo.rootpath);\r\n                        }\r\n                    }\r\n                    newFileInfo.filename = resolvedFilename;\r\n                    var newEnv = new contexts.Parse(importManager.context);\r\n                    newEnv.processImports = false;\r\n                    importManager.contents[resolvedFilename] = contents;\r\n                    if (currentFileInfo.reference || importOptions.reference) {\r\n                        newFileInfo.reference = true;\r\n                    }\r\n                    if (importOptions.isPlugin) {\r\n                        plugin = pluginLoader.evalPlugin(contents, newEnv, importManager, importOptions.pluginArgs, newFileInfo);\r\n                        if (plugin instanceof LessError) {\r\n                            fileParsedFunc(plugin, null, resolvedFilename);\r\n                        }\r\n                        else {\r\n                            fileParsedFunc(null, plugin, resolvedFilename);\r\n                        }\r\n                    }\r\n                    else if (importOptions.inline) {\r\n                        fileParsedFunc(null, contents, resolvedFilename);\r\n                    }\r\n                    else {\r\n                        // import (multiple) parse trees apparently get altered and can't be cached.\r\n                        // TODO: investigate why this is\r\n                        if (importManager.files[resolvedFilename]\r\n                            && !importManager.files[resolvedFilename].options.multiple\r\n                            && !importOptions.multiple) {\r\n                            fileParsedFunc(null, importManager.files[resolvedFilename].root, resolvedFilename);\r\n                        }\r\n                        else {\r\n                            new Parser(newEnv, importManager, newFileInfo).parse(contents, function (e, root) {\r\n                                fileParsedFunc(e, root, resolvedFilename);\r\n                            });\r\n                        }\r\n                    }\r\n                };\r\n                var loadedFile;\r\n                var promise;\r\n                var context = clone(this.context);\r\n                if (tryAppendExtension) {\r\n                    context.ext = importOptions.isPlugin ? '.js' : '.less';\r\n                }\r\n                if (importOptions.isPlugin) {\r\n                    context.mime = 'application/javascript';\r\n                    if (context.syncImport) {\r\n                        loadedFile = pluginLoader.loadPluginSync(path, currentFileInfo.currentDirectory, context, environment, fileManager);\r\n                    }\r\n                    else {\r\n                        promise = pluginLoader.loadPlugin(path, currentFileInfo.currentDirectory, context, environment, fileManager);\r\n                    }\r\n                }\r\n                else {\r\n                    if (context.syncImport) {\r\n                        loadedFile = fileManager.loadFileSync(path, currentFileInfo.currentDirectory, context, environment);\r\n                    }\r\n                    else {\r\n                        promise = fileManager.loadFile(path, currentFileInfo.currentDirectory, context, environment, function (err, loadedFile) {\r\n                            if (err) {\r\n                                fileParsedFunc(err);\r\n                            }\r\n                            else {\r\n                                loadFileCallback(loadedFile);\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                if (loadedFile) {\r\n                    if (!loadedFile.filename) {\r\n                        fileParsedFunc(loadedFile);\r\n                    }\r\n                    else {\r\n                        loadFileCallback(loadedFile);\r\n                    }\r\n                }\r\n                else if (promise) {\r\n                    promise.then(loadFileCallback, fileParsedFunc);\r\n                }\r\n            };\r\n            return ImportManager;\r\n        }());\r\n        return ImportManager;\r\n    }\n\n    function Parse (environment, ParseTree, ImportManager) {\r\n        var parse = function (input, options, callback) {\r\n            if (typeof options === 'function') {\r\n                callback = options;\r\n                options = copyOptions(this.options, {});\r\n            }\r\n            else {\r\n                options = copyOptions(this.options, options || {});\r\n            }\r\n            if (!callback) {\r\n                var self_1 = this;\r\n                return new Promise(function (resolve, reject) {\r\n                    parse.call(self_1, input, options, function (err, output) {\r\n                        if (err) {\r\n                            reject(err);\r\n                        }\r\n                        else {\r\n                            resolve(output);\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n            else {\r\n                var context_1;\r\n                var rootFileInfo = void 0;\r\n                var pluginManager_1 = new PluginManagerFactory(this, !options.reUsePluginManager);\r\n                options.pluginManager = pluginManager_1;\r\n                context_1 = new contexts.Parse(options);\r\n                if (options.rootFileInfo) {\r\n                    rootFileInfo = options.rootFileInfo;\r\n                }\r\n                else {\r\n                    var filename = options.filename || 'input';\r\n                    var entryPath = filename.replace(/[^\\/\\\\]*$/, '');\r\n                    rootFileInfo = {\r\n                        filename: filename,\r\n                        rewriteUrls: context_1.rewriteUrls,\r\n                        rootpath: context_1.rootpath || '',\r\n                        currentDirectory: entryPath,\r\n                        entryPath: entryPath,\r\n                        rootFilename: filename\r\n                    };\r\n                    // add in a missing trailing slash\r\n                    if (rootFileInfo.rootpath && rootFileInfo.rootpath.slice(-1) !== '/') {\r\n                        rootFileInfo.rootpath += '/';\r\n                    }\r\n                }\r\n                var imports_1 = new ImportManager(this, context_1, rootFileInfo);\r\n                this.importManager = imports_1;\r\n                // TODO: allow the plugins to be just a list of paths or names\r\n                // Do an async plugin queue like lessc\r\n                if (options.plugins) {\r\n                    options.plugins.forEach(function (plugin) {\r\n                        var evalResult, contents;\r\n                        if (plugin.fileContent) {\r\n                            contents = plugin.fileContent.replace(/^\\uFEFF/, '');\r\n                            evalResult = pluginManager_1.Loader.evalPlugin(contents, context_1, imports_1, plugin.options, plugin.filename);\r\n                            if (evalResult instanceof LessError) {\r\n                                return callback(evalResult);\r\n                            }\r\n                        }\r\n                        else {\r\n                            pluginManager_1.addPlugin(plugin);\r\n                        }\r\n                    });\r\n                }\r\n                new Parser(context_1, imports_1, rootFileInfo)\r\n                    .parse(input, function (e, root) {\r\n                    if (e) {\r\n                        return callback(e);\r\n                    }\r\n                    callback(null, root, imports_1, options);\r\n                }, options);\r\n            }\r\n        };\r\n        return parse;\r\n    }\n\n    function Render (environment, ParseTree, ImportManager) {\r\n        var render = function (input, options, callback) {\r\n            if (typeof options === 'function') {\r\n                callback = options;\r\n                options = copyOptions(this.options, {});\r\n            }\r\n            else {\r\n                options = copyOptions(this.options, options || {});\r\n            }\r\n            if (!callback) {\r\n                var self_1 = this;\r\n                return new Promise(function (resolve, reject) {\r\n                    render.call(self_1, input, options, function (err, output) {\r\n                        if (err) {\r\n                            reject(err);\r\n                        }\r\n                        else {\r\n                            resolve(output);\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n            else {\r\n                this.parse(input, options, function (err, root, imports, options) {\r\n                    if (err) {\r\n                        return callback(err);\r\n                    }\r\n                    var result;\r\n                    try {\r\n                        var parseTree = new ParseTree(root, imports);\r\n                        result = parseTree.toCSS(options);\r\n                    }\r\n                    catch (err) {\r\n                        return callback(err);\r\n                    }\r\n                    callback(null, result);\r\n                });\r\n            }\r\n        };\r\n        return render;\r\n    }\n\n    var version = \"4.1.3\";\n\n    function parseNodeVersion(version) {\n      var match = version.match(/^v(\\d{1,2})\\.(\\d{1,2})\\.(\\d{1,2})(?:-([0-9A-Za-z-.]+))?(?:\\+([0-9A-Za-z-.]+))?$/); // eslint-disable-line max-len\n      if (!match) {\n        throw new Error('Unable to parse: ' + version);\n      }\n\n      var res = {\n        major: parseInt(match[1], 10),\n        minor: parseInt(match[2], 10),\n        patch: parseInt(match[3], 10),\n        pre: match[4] || '',\n        build: match[5] || '',\n      };\n\n      return res;\n    }\n\n    var parseNodeVersion_1 = parseNodeVersion;\n\n    function lessRoot (environment, fileManagers) {\r\n        var sourceMapOutput, sourceMapBuilder, parseTree, importManager;\r\n        environment = new Environment(environment, fileManagers);\r\n        sourceMapOutput = SourceMapOutput(environment);\r\n        sourceMapBuilder = SourceMapBuilder(sourceMapOutput, environment);\r\n        parseTree = ParseTree(sourceMapBuilder);\r\n        importManager = ImportManager(environment);\r\n        var render = Render(environment, parseTree);\r\n        var parse = Parse(environment, parseTree, importManager);\r\n        var v = parseNodeVersion_1(\"v\" + version);\r\n        var initial = {\r\n            version: [v.major, v.minor, v.patch],\r\n            data: data,\r\n            tree: tree,\r\n            Environment: Environment,\r\n            AbstractFileManager: AbstractFileManager,\r\n            AbstractPluginLoader: AbstractPluginLoader,\r\n            environment: environment,\r\n            visitors: visitors,\r\n            Parser: Parser,\r\n            functions: functions(environment),\r\n            contexts: contexts,\r\n            SourceMapOutput: sourceMapOutput,\r\n            SourceMapBuilder: sourceMapBuilder,\r\n            ParseTree: parseTree,\r\n            ImportManager: importManager,\r\n            render: render,\r\n            parse: parse,\r\n            LessError: LessError,\r\n            transformTree: transformTree,\r\n            utils: utils,\r\n            PluginManager: PluginManagerFactory,\r\n            logger: logger$1\r\n        };\r\n        // Create a public API\r\n        var ctor = function (t) {\r\n            return function () {\r\n                var obj = Object.create(t.prototype);\r\n                t.apply(obj, Array.prototype.slice.call(arguments, 0));\r\n                return obj;\r\n            };\r\n        };\r\n        var t;\r\n        var api = Object.create(initial);\r\n        for (var n in initial.tree) {\r\n            /* eslint guard-for-in: 0 */\r\n            t = initial.tree[n];\r\n            if (typeof t === 'function') {\r\n                api[n.toLowerCase()] = ctor(t);\r\n            }\r\n            else {\r\n                api[n] = Object.create(null);\r\n                for (var o in t) {\r\n                    /* eslint guard-for-in: 0 */\r\n                    api[n][o.toLowerCase()] = ctor(t[o]);\r\n                }\r\n            }\r\n        }\r\n        /**\r\n         * Some of the functions assume a `this` context of the API object,\r\n         * which causes it to fail when wrapped for ES6 imports.\r\n         *\r\n         * An assumed `this` should be removed in the future.\r\n         */\r\n        initial.parse = initial.parse.bind(api);\r\n        initial.render = initial.render.bind(api);\r\n        return api;\r\n    }\n\n    /* global window, XMLHttpRequest */\r\n    var options$1;\r\n    var logger;\r\n    var fileCache = {};\r\n    // TODOS - move log somewhere. pathDiff and doing something similar in node. use pathDiff in the other browser file for the initial load\r\n    var FileManager = function () { };\r\n    FileManager.prototype = Object.assign(new AbstractFileManager(), {\r\n        alwaysMakePathsAbsolute: function () {\r\n            return true;\r\n        },\r\n        join: function (basePath, laterPath) {\r\n            if (!basePath) {\r\n                return laterPath;\r\n            }\r\n            return this.extractUrlParts(laterPath, basePath).path;\r\n        },\r\n        doXHR: function (url, type, callback, errback) {\r\n            var xhr = new XMLHttpRequest();\r\n            var async = options$1.isFileProtocol ? options$1.fileAsync : true;\r\n            if (typeof xhr.overrideMimeType === 'function') {\r\n                xhr.overrideMimeType('text/css');\r\n            }\r\n            logger.debug(\"XHR: Getting '\" + url + \"'\");\r\n            xhr.open('GET', url, async);\r\n            xhr.setRequestHeader('Accept', type || 'text/x-less, text/css; q=0.9, */*; q=0.5');\r\n            xhr.send(null);\r\n            function handleResponse(xhr, callback, errback) {\r\n                if (xhr.status >= 200 && xhr.status < 300) {\r\n                    callback(xhr.responseText, xhr.getResponseHeader('Last-Modified'));\r\n                }\r\n                else if (typeof errback === 'function') {\r\n                    errback(xhr.status, url);\r\n                }\r\n            }\r\n            if (options$1.isFileProtocol && !options$1.fileAsync) {\r\n                if (xhr.status === 0 || (xhr.status >= 200 && xhr.status < 300)) {\r\n                    callback(xhr.responseText);\r\n                }\r\n                else {\r\n                    errback(xhr.status, url);\r\n                }\r\n            }\r\n            else if (async) {\r\n                xhr.onreadystatechange = function () {\r\n                    if (xhr.readyState == 4) {\r\n                        handleResponse(xhr, callback, errback);\r\n                    }\r\n                };\r\n            }\r\n            else {\r\n                handleResponse(xhr, callback, errback);\r\n            }\r\n        },\r\n        supports: function () {\r\n            return true;\r\n        },\r\n        clearFileCache: function () {\r\n            fileCache = {};\r\n        },\r\n        loadFile: function (filename, currentDirectory, options, environment) {\r\n            // TODO: Add prefix support like less-node?\r\n            // What about multiple paths?\r\n            if (currentDirectory && !this.isPathAbsolute(filename)) {\r\n                filename = currentDirectory + filename;\r\n            }\r\n            filename = options.ext ? this.tryAppendExtension(filename, options.ext) : filename;\r\n            options = options || {};\r\n            // sheet may be set to the stylesheet for the initial load or a collection of properties including\r\n            // some context variables for imports\r\n            var hrefParts = this.extractUrlParts(filename, window.location.href);\r\n            var href = hrefParts.url;\r\n            var self = this;\r\n            return new Promise(function (resolve, reject) {\r\n                if (options.useFileCache && fileCache[href]) {\r\n                    try {\r\n                        var lessText = fileCache[href];\r\n                        return resolve({ contents: lessText, filename: href, webInfo: { lastModified: new Date() } });\r\n                    }\r\n                    catch (e) {\r\n                        return reject({ filename: href, message: \"Error loading file \" + href + \" error was \" + e.message });\r\n                    }\r\n                }\r\n                self.doXHR(href, options.mime, function doXHRCallback(data, lastModified) {\r\n                    // per file cache\r\n                    fileCache[href] = data;\r\n                    // Use remote copy (re-parse)\r\n                    resolve({ contents: data, filename: href, webInfo: { lastModified: lastModified } });\r\n                }, function doXHRError(status, url) {\r\n                    reject({ type: 'File', message: \"'\" + url + \"' wasn't found (\" + status + \")\", href: href });\r\n                });\r\n            });\r\n        }\r\n    });\r\n    var FM = (function (opts, log) {\r\n        options$1 = opts;\r\n        logger = log;\r\n        return FileManager;\r\n    });\n\n    // TODO: Add tests for browser @plugin\r\n    /**\r\n     * Browser Plugin Loader\r\n     */\r\n    var PluginLoader = function (less) {\r\n        this.less = less;\r\n        // Should we shim this.require for browser? Probably not?\r\n    };\r\n    PluginLoader.prototype = Object.assign(new AbstractPluginLoader(), {\r\n        loadPlugin: function (filename, basePath, context, environment, fileManager) {\r\n            return new Promise(function (fulfill, reject) {\r\n                fileManager.loadFile(filename, basePath, context, environment)\r\n                    .then(fulfill).catch(reject);\r\n            });\r\n        }\r\n    });\n\n    var LogListener = (function (less, options) {\r\n        var logLevel_debug = 4;\r\n        var logLevel_info = 3;\r\n        var logLevel_warn = 2;\r\n        var logLevel_error = 1;\r\n        // The amount of logging in the javascript console.\r\n        // 3 - Debug, information and errors\r\n        // 2 - Information and errors\r\n        // 1 - Errors\r\n        // 0 - None\r\n        // Defaults to 2\r\n        options.logLevel = typeof options.logLevel !== 'undefined' ? options.logLevel : (options.env === 'development' ? logLevel_info : logLevel_error);\r\n        if (!options.loggers) {\r\n            options.loggers = [{\r\n                    debug: function (msg) {\r\n                        if (options.logLevel >= logLevel_debug) {\r\n                            console.log(msg);\r\n                        }\r\n                    },\r\n                    info: function (msg) {\r\n                        if (options.logLevel >= logLevel_info) {\r\n                            console.log(msg);\r\n                        }\r\n                    },\r\n                    warn: function (msg) {\r\n                        if (options.logLevel >= logLevel_warn) {\r\n                            console.warn(msg);\r\n                        }\r\n                    },\r\n                    error: function (msg) {\r\n                        if (options.logLevel >= logLevel_error) {\r\n                            console.error(msg);\r\n                        }\r\n                    }\r\n                }];\r\n        }\r\n        for (var i = 0; i < options.loggers.length; i++) {\r\n            less.logger.addListener(options.loggers[i]);\r\n        }\r\n    });\n\n    var ErrorReporting = (function (window, less, options) {\r\n        function errorHTML(e, rootHref) {\r\n            var id = \"less-error-message:\" + extractId(rootHref || '');\r\n            var template = '<li><label>{line}</label><pre class=\"{class}\">{content}</pre></li>';\r\n            var elem = window.document.createElement('div');\r\n            var timer;\r\n            var content;\r\n            var errors = [];\r\n            var filename = e.filename || rootHref;\r\n            var filenameNoPath = filename.match(/([^\\/]+(\\?.*)?)$/)[1];\r\n            elem.id = id;\r\n            elem.className = 'less-error-message';\r\n            content = \"<h3>\" + (e.type || 'Syntax') + \"Error: \" + (e.message || 'There is an error in your .less file') +\r\n                (\"</h3><p>in <a href=\\\"\" + filename + \"\\\">\" + filenameNoPath + \"</a> \");\r\n            var errorline = function (e, i, classname) {\r\n                if (e.extract[i] !== undefined) {\r\n                    errors.push(template.replace(/\\{line\\}/, (parseInt(e.line, 10) || 0) + (i - 1))\r\n                        .replace(/\\{class\\}/, classname)\r\n                        .replace(/\\{content\\}/, e.extract[i]));\r\n                }\r\n            };\r\n            if (e.line) {\r\n                errorline(e, 0, '');\r\n                errorline(e, 1, 'line');\r\n                errorline(e, 2, '');\r\n                content += \"on line \" + e.line + \", column \" + (e.column + 1) + \":</p><ul>\" + errors.join('') + \"</ul>\";\r\n            }\r\n            if (e.stack && (e.extract || options.logLevel >= 4)) {\r\n                content += \"<br/>Stack Trace</br />\" + e.stack.split('\\n').slice(1).join('<br/>');\r\n            }\r\n            elem.innerHTML = content;\r\n            // CSS for error messages\r\n            browser.createCSS(window.document, [\r\n                '.less-error-message ul, .less-error-message li {',\r\n                'list-style-type: none;',\r\n                'margin-right: 15px;',\r\n                'padding: 4px 0;',\r\n                'margin: 0;',\r\n                '}',\r\n                '.less-error-message label {',\r\n                'font-size: 12px;',\r\n                'margin-right: 15px;',\r\n                'padding: 4px 0;',\r\n                'color: #cc7777;',\r\n                '}',\r\n                '.less-error-message pre {',\r\n                'color: #dd6666;',\r\n                'padding: 4px 0;',\r\n                'margin: 0;',\r\n                'display: inline-block;',\r\n                '}',\r\n                '.less-error-message pre.line {',\r\n                'color: #ff0000;',\r\n                '}',\r\n                '.less-error-message h3 {',\r\n                'font-size: 20px;',\r\n                'font-weight: bold;',\r\n                'padding: 15px 0 5px 0;',\r\n                'margin: 0;',\r\n                '}',\r\n                '.less-error-message a {',\r\n                'color: #10a',\r\n                '}',\r\n                '.less-error-message .error {',\r\n                'color: red;',\r\n                'font-weight: bold;',\r\n                'padding-bottom: 2px;',\r\n                'border-bottom: 1px dashed red;',\r\n                '}'\r\n            ].join('\\n'), { title: 'error-message' });\r\n            elem.style.cssText = [\r\n                'font-family: Arial, sans-serif',\r\n                'border: 1px solid #e00',\r\n                'background-color: #eee',\r\n                'border-radius: 5px',\r\n                '-webkit-border-radius: 5px',\r\n                '-moz-border-radius: 5px',\r\n                'color: #e00',\r\n                'padding: 15px',\r\n                'margin-bottom: 15px'\r\n            ].join(';');\r\n            if (options.env === 'development') {\r\n                timer = setInterval(function () {\r\n                    var document = window.document;\r\n                    var body = document.body;\r\n                    if (body) {\r\n                        if (document.getElementById(id)) {\r\n                            body.replaceChild(elem, document.getElementById(id));\r\n                        }\r\n                        else {\r\n                            body.insertBefore(elem, body.firstChild);\r\n                        }\r\n                        clearInterval(timer);\r\n                    }\r\n                }, 10);\r\n            }\r\n        }\r\n        function removeErrorHTML(path) {\r\n            var node = window.document.getElementById(\"less-error-message:\" + extractId(path));\r\n            if (node) {\r\n                node.parentNode.removeChild(node);\r\n            }\r\n        }\r\n        function removeError(path) {\r\n            if (!options.errorReporting || options.errorReporting === 'html') {\r\n                removeErrorHTML(path);\r\n            }\r\n            else if (options.errorReporting === 'console') ;\r\n            else if (typeof options.errorReporting === 'function') {\r\n                options.errorReporting('remove', path);\r\n            }\r\n        }\r\n        function errorConsole(e, rootHref) {\r\n            var template = '{line} {content}';\r\n            var filename = e.filename || rootHref;\r\n            var errors = [];\r\n            var content = (e.type || 'Syntax') + \"Error: \" + (e.message || 'There is an error in your .less file') + \" in \" + filename;\r\n            var errorline = function (e, i, classname) {\r\n                if (e.extract[i] !== undefined) {\r\n                    errors.push(template.replace(/\\{line\\}/, (parseInt(e.line, 10) || 0) + (i - 1))\r\n                        .replace(/\\{class\\}/, classname)\r\n                        .replace(/\\{content\\}/, e.extract[i]));\r\n                }\r\n            };\r\n            if (e.line) {\r\n                errorline(e, 0, '');\r\n                errorline(e, 1, 'line');\r\n                errorline(e, 2, '');\r\n                content += \" on line \" + e.line + \", column \" + (e.column + 1) + \":\\n\" + errors.join('\\n');\r\n            }\r\n            if (e.stack && (e.extract || options.logLevel >= 4)) {\r\n                content += \"\\nStack Trace\\n\" + e.stack;\r\n            }\r\n            less.logger.error(content);\r\n        }\r\n        function error(e, rootHref) {\r\n            if (!options.errorReporting || options.errorReporting === 'html') {\r\n                errorHTML(e, rootHref);\r\n            }\r\n            else if (options.errorReporting === 'console') {\r\n                errorConsole(e, rootHref);\r\n            }\r\n            else if (typeof options.errorReporting === 'function') {\r\n                options.errorReporting('add', e, rootHref);\r\n            }\r\n        }\r\n        return {\r\n            add: error,\r\n            remove: removeError\r\n        };\r\n    });\n\n    // Cache system is a bit outdated and could do with work\r\n    var Cache = (function (window, options, logger) {\r\n        var cache = null;\r\n        if (options.env !== 'development') {\r\n            try {\r\n                cache = (typeof window.localStorage === 'undefined') ? null : window.localStorage;\r\n            }\r\n            catch (_) { }\r\n        }\r\n        return {\r\n            setCSS: function (path, lastModified, modifyVars, styles) {\r\n                if (cache) {\r\n                    logger.info(\"saving \" + path + \" to cache.\");\r\n                    try {\r\n                        cache.setItem(path, styles);\r\n                        cache.setItem(path + \":timestamp\", lastModified);\r\n                        if (modifyVars) {\r\n                            cache.setItem(path + \":vars\", JSON.stringify(modifyVars));\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        // TODO - could do with adding more robust error handling\r\n                        logger.error(\"failed to save \\\"\" + path + \"\\\" to local storage for caching.\");\r\n                    }\r\n                }\r\n            },\r\n            getCSS: function (path, webInfo, modifyVars) {\r\n                var css = cache && cache.getItem(path);\r\n                var timestamp = cache && cache.getItem(path + \":timestamp\");\r\n                var vars = cache && cache.getItem(path + \":vars\");\r\n                modifyVars = modifyVars || {};\r\n                vars = vars || \"{}\"; // if not set, treat as the JSON representation of an empty object\r\n                if (timestamp && webInfo.lastModified &&\r\n                    (new Date(webInfo.lastModified).valueOf() ===\r\n                        new Date(timestamp).valueOf()) &&\r\n                    JSON.stringify(modifyVars) === vars) {\r\n                    // Use local copy\r\n                    return css;\r\n                }\r\n            }\r\n        };\r\n    });\n\n    var ImageSize = (function () {\r\n        function imageSize() {\r\n            throw {\r\n                type: 'Runtime',\r\n                message: 'Image size functions are not supported in browser version of less'\r\n            };\r\n        }\r\n        var imageFunctions = {\r\n            'image-size': function (filePathNode) {\r\n                imageSize();\r\n                return -1;\r\n            },\r\n            'image-width': function (filePathNode) {\r\n                imageSize();\r\n                return -1;\r\n            },\r\n            'image-height': function (filePathNode) {\r\n                imageSize();\r\n                return -1;\r\n            }\r\n        };\r\n        functionRegistry.addMultiple(imageFunctions);\r\n    });\n\n    //\r\n    var root = (function (window, options) {\r\n        var document = window.document;\r\n        var less = lessRoot();\r\n        less.options = options;\r\n        var environment = less.environment;\r\n        var FileManager = FM(options, less.logger);\r\n        var fileManager = new FileManager();\r\n        environment.addFileManager(fileManager);\r\n        less.FileManager = FileManager;\r\n        less.PluginLoader = PluginLoader;\r\n        LogListener(less, options);\r\n        var errors = ErrorReporting(window, less, options);\r\n        var cache = less.cache = options.cache || Cache(window, options, less.logger);\r\n        ImageSize(less.environment);\r\n        // Setup user functions - Deprecate?\r\n        if (options.functions) {\r\n            less.functions.functionRegistry.addMultiple(options.functions);\r\n        }\r\n        var typePattern = /^text\\/(x-)?less$/;\r\n        function clone(obj) {\r\n            var cloned = {};\r\n            for (var prop in obj) {\r\n                if (obj.hasOwnProperty(prop)) {\r\n                    cloned[prop] = obj[prop];\r\n                }\r\n            }\r\n            return cloned;\r\n        }\r\n        // only really needed for phantom\r\n        function bind(func, thisArg) {\r\n            var curryArgs = Array.prototype.slice.call(arguments, 2);\r\n            return function () {\r\n                var args = curryArgs.concat(Array.prototype.slice.call(arguments, 0));\r\n                return func.apply(thisArg, args);\r\n            };\r\n        }\r\n        function loadStyles(modifyVars) {\r\n            var styles = document.getElementsByTagName('style');\r\n            var style;\r\n            for (var i = 0; i < styles.length; i++) {\r\n                style = styles[i];\r\n                if (style.type.match(typePattern)) {\r\n                    var instanceOptions = clone(options);\r\n                    instanceOptions.modifyVars = modifyVars;\r\n                    var lessText = style.innerHTML || '';\r\n                    instanceOptions.filename = document.location.href.replace(/#.*$/, '');\r\n                    /* jshint loopfunc:true */\r\n                    // use closure to store current style\r\n                    less.render(lessText, instanceOptions, bind(function (style, e, result) {\r\n                        if (e) {\r\n                            errors.add(e, 'inline');\r\n                        }\r\n                        else {\r\n                            style.type = 'text/css';\r\n                            if (style.styleSheet) {\r\n                                style.styleSheet.cssText = result.css;\r\n                            }\r\n                            else {\r\n                                style.innerHTML = result.css;\r\n                            }\r\n                        }\r\n                    }, null, style));\r\n                }\r\n            }\r\n        }\r\n        function loadStyleSheet(sheet, callback, reload, remaining, modifyVars) {\r\n            var instanceOptions = clone(options);\r\n            addDataAttr(instanceOptions, sheet);\r\n            instanceOptions.mime = sheet.type;\r\n            if (modifyVars) {\r\n                instanceOptions.modifyVars = modifyVars;\r\n            }\r\n            function loadInitialFileCallback(loadedFile) {\r\n                var data = loadedFile.contents;\r\n                var path = loadedFile.filename;\r\n                var webInfo = loadedFile.webInfo;\r\n                var newFileInfo = {\r\n                    currentDirectory: fileManager.getPath(path),\r\n                    filename: path,\r\n                    rootFilename: path,\r\n                    rewriteUrls: instanceOptions.rewriteUrls\r\n                };\r\n                newFileInfo.entryPath = newFileInfo.currentDirectory;\r\n                newFileInfo.rootpath = instanceOptions.rootpath || newFileInfo.currentDirectory;\r\n                if (webInfo) {\r\n                    webInfo.remaining = remaining;\r\n                    var css = cache.getCSS(path, webInfo, instanceOptions.modifyVars);\r\n                    if (!reload && css) {\r\n                        webInfo.local = true;\r\n                        callback(null, css, data, sheet, webInfo, path);\r\n                        return;\r\n                    }\r\n                }\r\n                // TODO add tests around how this behaves when reloading\r\n                errors.remove(path);\r\n                instanceOptions.rootFileInfo = newFileInfo;\r\n                less.render(data, instanceOptions, function (e, result) {\r\n                    if (e) {\r\n                        e.href = path;\r\n                        callback(e);\r\n                    }\r\n                    else {\r\n                        cache.setCSS(sheet.href, webInfo.lastModified, instanceOptions.modifyVars, result.css);\r\n                        callback(null, result.css, data, sheet, webInfo, path);\r\n                    }\r\n                });\r\n            }\r\n            fileManager.loadFile(sheet.href, null, instanceOptions, environment)\r\n                .then(function (loadedFile) {\r\n                loadInitialFileCallback(loadedFile);\r\n            }).catch(function (err) {\r\n                console.log(err);\r\n                callback(err);\r\n            });\r\n        }\r\n        function loadStyleSheets(callback, reload, modifyVars) {\r\n            for (var i = 0; i < less.sheets.length; i++) {\r\n                loadStyleSheet(less.sheets[i], callback, reload, less.sheets.length - (i + 1), modifyVars);\r\n            }\r\n        }\r\n        function initRunningMode() {\r\n            if (less.env === 'development') {\r\n                less.watchTimer = setInterval(function () {\r\n                    if (less.watchMode) {\r\n                        fileManager.clearFileCache();\r\n                        loadStyleSheets(function (e, css, _, sheet, webInfo) {\r\n                            if (e) {\r\n                                errors.add(e, e.href || sheet.href);\r\n                            }\r\n                            else if (css) {\r\n                                browser.createCSS(window.document, css, sheet);\r\n                            }\r\n                        });\r\n                    }\r\n                }, options.poll);\r\n            }\r\n        }\r\n        //\r\n        // Watch mode\r\n        //\r\n        less.watch = function () {\r\n            if (!less.watchMode) {\r\n                less.env = 'development';\r\n                initRunningMode();\r\n            }\r\n            this.watchMode = true;\r\n            return true;\r\n        };\r\n        less.unwatch = function () { clearInterval(less.watchTimer); this.watchMode = false; return false; };\r\n        //\r\n        // Synchronously get all <link> tags with the 'rel' attribute set to\r\n        // \"stylesheet/less\".\r\n        //\r\n        less.registerStylesheetsImmediately = function () {\r\n            var links = document.getElementsByTagName('link');\r\n            less.sheets = [];\r\n            for (var i = 0; i < links.length; i++) {\r\n                if (links[i].rel === 'stylesheet/less' || (links[i].rel.match(/stylesheet/) &&\r\n                    (links[i].type.match(typePattern)))) {\r\n                    less.sheets.push(links[i]);\r\n                }\r\n            }\r\n        };\r\n        //\r\n        // Asynchronously get all <link> tags with the 'rel' attribute set to\r\n        // \"stylesheet/less\", returning a Promise.\r\n        //\r\n        less.registerStylesheets = function () { return new Promise(function (resolve, reject) {\r\n            less.registerStylesheetsImmediately();\r\n            resolve();\r\n        }); };\r\n        //\r\n        // With this function, it's possible to alter variables and re-render\r\n        // CSS without reloading less-files\r\n        //\r\n        less.modifyVars = function (record) { return less.refresh(true, record, false); };\r\n        less.refresh = function (reload, modifyVars, clearFileCache) {\r\n            if ((reload || clearFileCache) && clearFileCache !== false) {\r\n                fileManager.clearFileCache();\r\n            }\r\n            return new Promise(function (resolve, reject) {\r\n                var startTime;\r\n                var endTime;\r\n                var totalMilliseconds;\r\n                var remainingSheets;\r\n                startTime = endTime = new Date();\r\n                // Set counter for remaining unprocessed sheets\r\n                remainingSheets = less.sheets.length;\r\n                if (remainingSheets === 0) {\r\n                    endTime = new Date();\r\n                    totalMilliseconds = endTime - startTime;\r\n                    less.logger.info('Less has finished and no sheets were loaded.');\r\n                    resolve({\r\n                        startTime: startTime,\r\n                        endTime: endTime,\r\n                        totalMilliseconds: totalMilliseconds,\r\n                        sheets: less.sheets.length\r\n                    });\r\n                }\r\n                else {\r\n                    // Relies on less.sheets array, callback seems to be guaranteed to be called for every element of the array\r\n                    loadStyleSheets(function (e, css, _, sheet, webInfo) {\r\n                        if (e) {\r\n                            errors.add(e, e.href || sheet.href);\r\n                            reject(e);\r\n                            return;\r\n                        }\r\n                        if (webInfo.local) {\r\n                            less.logger.info(\"Loading \" + sheet.href + \" from cache.\");\r\n                        }\r\n                        else {\r\n                            less.logger.info(\"Rendered \" + sheet.href + \" successfully.\");\r\n                        }\r\n                        browser.createCSS(window.document, css, sheet);\r\n                        less.logger.info(\"CSS for \" + sheet.href + \" generated in \" + (new Date() - endTime) + \"ms\");\r\n                        // Count completed sheet\r\n                        remainingSheets--;\r\n                        // Check if the last remaining sheet was processed and then call the promise\r\n                        if (remainingSheets === 0) {\r\n                            totalMilliseconds = new Date() - startTime;\r\n                            less.logger.info(\"Less has finished. CSS generated in \" + totalMilliseconds + \"ms\");\r\n                            resolve({\r\n                                startTime: startTime,\r\n                                endTime: endTime,\r\n                                totalMilliseconds: totalMilliseconds,\r\n                                sheets: less.sheets.length\r\n                            });\r\n                        }\r\n                        endTime = new Date();\r\n                    }, reload, modifyVars);\r\n                }\r\n                loadStyles(modifyVars);\r\n            });\r\n        };\r\n        less.refreshStyles = loadStyles;\r\n        return less;\r\n    });\n\n    /**\r\n     * Kicks off less and compiles any stylesheets\r\n     * used in the browser distributed version of less\r\n     * to kick-start less using the browser api\r\n     */\r\n    var options = defaultOptions();\r\n    if (window.less) {\r\n        for (var key in window.less) {\r\n            if (window.less.hasOwnProperty(key)) {\r\n                options[key] = window.less[key];\r\n            }\r\n        }\r\n    }\r\n    addDefaultOptions(window, options);\r\n    options.plugins = options.plugins || [];\r\n    if (window.LESS_PLUGINS) {\r\n        options.plugins = options.plugins.concat(window.LESS_PLUGINS);\r\n    }\r\n    var less = root(window, options);\r\n    window.less = less;\r\n    var css;\r\n    var head;\r\n    var style;\r\n    // Always restore page visibility\r\n    function resolveOrReject(data) {\r\n        if (data.filename) {\r\n            console.warn(data);\r\n        }\r\n        if (!options.async) {\r\n            head.removeChild(style);\r\n        }\r\n    }\r\n    if (options.onReady) {\r\n        if (/!watch/.test(window.location.hash)) {\r\n            less.watch();\r\n        }\r\n        // Simulate synchronous stylesheet loading by hiding page rendering\r\n        if (!options.async) {\r\n            css = 'body { display: none !important }';\r\n            head = document.head || document.getElementsByTagName('head')[0];\r\n            style = document.createElement('style');\r\n            style.type = 'text/css';\r\n            if (style.styleSheet) {\r\n                style.styleSheet.cssText = css;\r\n            }\r\n            else {\r\n                style.appendChild(document.createTextNode(css));\r\n            }\r\n            head.appendChild(style);\r\n        }\r\n        less.registerStylesheetsImmediately();\r\n        less.pageLoadFinished = less.refresh(less.env === 'development').then(resolveOrReject, resolveOrReject);\r\n    }\n\n    return less;\n\n})));\n"],"names":["module","exports","extractId","href","replace","addDataAttr","options","tag","opt","dataset","hasOwnProperty","JSON","parse","_","browser","document","styles","sheet","id","title","oldStyleNode","getElementById","keepOldStyleNode","styleNode","createElement","setAttribute","media","styleSheet","appendChild","createTextNode","childNodes","length","firstChild","nodeValue","head","getElementsByTagName","nextEl","nextSibling","parentNode","insertBefore","removeChild","cssText","e","Error","window","scripts","currentScript","logger$1","error","msg","this","_fireEvent","warn","info","debug","addListener","listener","_listeners","push","removeListener","i","splice","type","logFunction","Environment","externalEnvironment","fileManagers","requiredFunctions","functions","concat","propName","environmentFunc","bind","prototype","getFileManager","filename","currentDirectory","environment","isSync","pluginManager","getFileManagers","fileManager","addFileManager","clearFileManagers","colors","unitConversions","duration","angle","Math","PI","data","Node","parent","visibilityBlocks","undefined","nodeVisible","rootNode","parsed","Object","defineProperty","get","fileInfo","enumerable","configurable","getIndex","setParent","nodes","set","node","Array","isArray","forEach","_index","_fileInfo","isRulesetLike","toCSS","context","strs","genCSS","add","chunk","index","isEmpty","join","output","value","accept","visitor","visit","eval","_operate","op","a","b","fround","precision","numPrecision","Number","toFixed","compare","numericCompare","blocksVisibility","addVisibilityBlock","removeVisibilityBlock","ensureVisibility","ensureInvisibility","isVisible","visibilityInfo","copyVisibilityInfo","Color","rgb","originalForm","self","match","map","c","parseInt","alpha","split","clamp$1","v","max","min","toHex","round","toString","assign","luma","r","g","pow","doNotCompress","color","colorFunction","compress","args","indexOf","toHSL","h","s","l","toRGB","splitcolor","operate","other","d","toHSV","toARGB","x","fromKeyword","keyword","key","toLowerCase","slice","Paren","_noSpaceCombinators","Combinator","emptyOrWhitespace","trim","spaceOrEmpty","Element","combinator","isVariable","currentFileInfo","clone","firstSelector","charAt","Math$1","ALWAYS","PARENS_DIVISION","PARENS","RewriteUrls","getType","payload","call","copy","target","constructor","getPrototypeOf","il","arguments","k","j","jl","__spreadArrays","getOwnPropertyNames","getOwnPropertySymbols","reduce","carry","props","includes","newVal","originalObject","includeNonenumerable","propType","propertyIsEnumerable","writable","assignProp","nonenumerable","getLocation","inputStream","n","line","column","copyArray","arr","obj","cloned","prop","defaults","obj1","obj2","newObj","_defaults","defaults_1","copyOptions","opts","strictMath","math","relativeUrls","rewriteUrls","flattenArray","result","length_1","utils","freeze","__proto__","merge","anonymousFunc","LessError","fileContentMap","currentFilename","message","stack","input","contents","loc","col","callLine","lines","found","func","Function","lineAdjust","callExtract","extract","create","F","stylize","str","errorTxt","substr","Selector","elements","extendList","condition","evaldCondition","getElements","mixinElements_","visitArray","createDerived","newSelector","mediaEmpty","els","parseNode","err","imports","createEmptySelectors","el","sels","olen","len","mixinElements","shift","isJustParentSelector","extend","getIsOutput","Value","Keyword","True","False","Anonymous","mapLines","rulesetLike","allowRoot","Boolean","MATH$1","Declaration","name","important","inline","variable","asComment","ctx","debugInfo","lineNumber","fileName","asMediaQuery","filenameWithProtocol","test","lineSeparator","dumpLineNumbers","lastRule","prevMath","evaldValue","mathBypass","evalName","importantScope","importantResult","pop","makeImportant","Comment","isLineComment","isSilent","isCompressed","contexts","copyFromOriginal","original","destination","propertiesToCopy","parseCopyProperties","Parse","paths","evalCopyProperties","isPathRelative","path","isPathLocalRelative","Eval","frames","enterCalc","calcStack","inCalc","exitCalc","inParenthesis","parensStack","outOfParenthesis","mathOn","isMathOn","pathRequiresRewrite","rewritePath","rootpath","newPath","normalizePath","segment","segments","reverse","functionRegistry","makeRegistry","base","_data","addMultiple","_this","keys","getLocalFunctions","inherit","defaultFunc","value_","error_","reset","Ruleset","selectors","rules","strictImports","_lookups","_variables","_properties","isRuleset","selCnt","selector","hasVariable","hasOnePassingSelector","toParseSelectors","rule","subRule","ruleset","originalRuleset","root","firstRoot","allowImports","ctxFrames","unshift","ctxSelectors","evalImports","rsRules","evalFirst","mediaBlockCount","mediaBlocks","filter","apply","resetCache","bubbleSelectors","importRules","matchArgs","matchCondition","lastSelector","_rulesets","variables","hash","vars","name_1","properties","name_2","decl","parseValue","property","lastDeclaration","toParse","transformDeclaration","nodes_1","rulesets","filtRules","prependRule","find","foundMixins","debugInfo$1","ruleNodes","tabLevel","sep","tabRuleStr","tabSetStr","charsetNodeIndex","importNodeIndex","isCharset","pathCnt","pathSubCnt","currentLastRule","joinSelectors","joinSelector","createParenthesis","elementsToPak","originalElement","replacementParen","insideParent","createSelector","containedElement","element","addReplacementIntoPath","beginningPath","addPath","replacedElement","originalSelector","newSelectorPath","newJoinedSelector","parentEl","restOfPath","addAllReplacementsIntoPath","addPaths","mergeElementsOnToSelectors","sel","deriveSelector","deriveFrom","newPaths","replaceParentSelector","inSelector","currentElements","newSelectors","selectorsMultiplied","maybeSelector","hadParentSelector","nestedSelector","replaced","nestedPaths","replacedNewSelectors","concatenated","AtRule","isRooted","outputRuleset","mediaPathBackup","mediaBlocksBackup","mediaPath","ruleCnt","DetachedRuleset","callEval","Unit","numerator","denominator","backupUnit","sort","strictUnits","returnStr","is","unitString","toUpperCase","isLength","RegExp","isSingular","callback","usedUnits","group","mapUnit","groupName","atomicUnit","cancel","counter","count","Dimension","unit","parseFloat","isNaN","toColor","strValue","String","convertTo","unify","conversions","targetUnit","applyUnit","derivedConversions","MATH","Operation","operands","isSpaced","Expression","noSpacing","returnValue","parens","doubleParen","parensInOp","throwAwayComments","functionCaller","isValid","evalArgs","commentFilter","item","subNodes","to","from","pack","ar","__spreadArray","Call","calc","currentMathContext","funcCaller","columnNumber","Variable","evaluating","frame","fun","Property","mergeRules","less","visitors","ToCSSVisitor","_mergeRules","vArr","Attribute","cif","Quoted","content","escaped","quote","variableRegex","propRegex","containsVariables","that","iterativeReplace","regexp","replacementFnc","evaluatedValue","URL","val","isEvald","urlArgs","Media","features","evalTop","evalNested","multiMedia","permute","fragment","rest","Import","css","pathValue","getPath","isPlugin","reference","isVariableImport","evalForImport","evalPath","doEval","registry","skip","importedFilename","newImport","JsEvalNode","evaluateJavaScript","expression","evalContext","javascriptEnabled","jsify","toJS","JavaScript","string","Assignment","Condition","negate","lvalue","rvalue","UnicodeDescriptor","Negative","Extend","option","object_id","next_id","parent_ids","allowBefore","allowAfter","findSelfSelectors","selectorElements","selfElements","selfSelectors","VariableCall","detachedRuleset","NamespaceValue","ruleCall","lookups","substring","Definition","params","variadic","arity","optionalParameters","required","p","evalParams","mixinEnv","evaldArguments","varargs","arg","isNamedFound","argIndex","argsLength","evalCall","_arguments","mixinFrames","allArgsCnt","requiredArgsCnt","MixinCall","mixins","mixin","mixinPath","argValue","m","f","isRecursive","isOneFound","candidate","defaultResult","noArgumentsFilter","candidates","conditionResult","calcDefGroup","namespace","expand","format","newRules","_setVisibilityToReplacement","replacement","tree","AbstractFileManager","lastIndexOf","tryAppendExtension","ext","tryAppendLessExtension","supportsSync","alwaysMakePathsAbsolute","isPathAbsolute","basePath","laterPath","pathDiff","url","baseUrl","urlDirectories","baseUrlDirectories","urlParts","extractUrlParts","baseUrlParts","diff","hostPart","directories","urlPartsRegex","returner","rawDirectories","rawPath","fileUrl","AbstractPluginLoader","require","evalPlugin","pluginOptions","pluginObj","localModule","shortname","FileManager","trySetOptions","use","loader","validatePlugin","minVersion","compareVersion","addPlugin","plugin","setOptions","version","versionToString","aVersion","bVersion","versionString","printUsage","plugins","_visitArgs","visitDeeper","_hasIndexed","_noop","indexNodeTypes","ticker","child","typeIndex","Visitor","implementation","_implementation","_visitInCache","_visitOutCache","nodeTypeIndex","fnName","impl","funcOut","visitArgs","newNode","isReplacing","cnt","nonReplacing","out","evald","flatten","nestedCnt","nestedItem","ImportSequencer","onSequencerEmpty","variableImports","_onSequencerEmpty","_currentDepth","addImport","importSequencer","importItem","isReady","tryRun","addVariableImport","variableImport","ImportVisitor","importer","finish","_visitor","_importer","_finish","importCount","onceFileDetectionMap","recursionDetector","_sequencer","run","isFinished","visitImport","importNode","inlineCSS","importParent","processImportNode","evaldImportNode","multiple","importMultiple","onImported","sequencedOnImported","importedAtRoot","fullPath","importVisitor","isOptional","optional","duplicateImport","oldContext","visitDeclaration","declNode","visitDeclarationOut","visitAtRule","atRuleNode","visitAtRuleOut","visitMixinDefinition","mixinDefinitionNode","visitMixinDefinitionOut","visitRuleset","rulesetNode","visitRulesetOut","visitMedia","mediaNode","visitMediaOut","SetTreeVisibilityVisitor","visible","ExtendFinderVisitor","allExtendsStack","allExtends","allSelectorsExtendList","extendOnEveryPath","selectorPath","selExtendList","allSelectorsExtend","foundExtends","firstExtendOnThisSelectorPath","ProcessExtendsVisitor","extendFinder","extendIndices","doExtendChaining","newRoot","checkExtendsForNonMatched","indices","hasFoundMatches","extendsList","extendsListTarget","iterationCount","extendIndex","targetExtendIndex","matches","targetExtend","newExtend","extendsToAdd","extendVisitor","findMatch","selfSelector","extendSelector","extendChainCount","selectorOne","selectorTwo","ruleNode","visitSelector","selectorNode","pathIndex","selectorsToAdd","extendedSelectors","haystackSelectorPath","haystackSelectorIndex","hackstackSelector","hackstackElementIndex","haystackElement","targetCombinator","potentialMatch","needleElements","potentialMatches","matched","initialCombinator","isElementValuesEqual","finished","endPathIndex","endPathElementIndex","elementValue1","elementValue2","replacementSelector","matchIndex","firstElement","newElements","currentSelectorPathIndex","currentSelectorPathElementIndex","currentValue","derived","newAllExtends","lastIndex","JoinSelectorVisitor","CSSVisitorUtils","_context","containsSilentNonBlockedChild","bodyRules","keepOnlyVisibleChilds","owner","thing","hasVisibleSelector","resolveVisibility","originalRules","compiledRulesBody","isVisibleRuleset","mixinNode","visitExtend","extendNode","visitComment","commentNode","visitAtRuleWithBody","visitAtRuleWithoutBody","visitAnonymous","anonymousNode","nodeRules","hasFakeRuleset","getBodyRules","charset","comment","checkValidNodes","isRoot","_compileRulesetPaths","nodeRuleCnt","_removeDuplicateRules","ruleList","ruleCache","ruleCSS","groups","groupsArr","result_1","space_1","comma_1","MarkVisibleSelectorsVisitor","ExtendVisitor","getParserInput","furthest","furthestPossibleErrorMessage","chunks","current","currentPos","saveStack","parserInput","skipWhitespace","nextChar","oldi","oldj","curr","endIndex","mem","inp","charCodeAt","autoCommentAbsorb","nextNewLine","text","commentStore","nextStarSlash","save","restore","possibleErrorMessage","state","forget","isWhitespace","offset","pos","code","$re","tok","exec","$char","$str","tokLength","$quoted","startChar","currentPosition","$parseUntil","testChar","returnVal","inComment","blockDepth","blockStack","parseGroups","startPos","lastPos","loop","char","expected","peek","peekChar","currentChar","prevChar","getInput","peekNotNumeric","start","chunkInput","failFunction","fail","lastOpening","lastOpeningParen","lastMultiComment","lastMultiCommentEndBrace","chunkerCurrentIndex","currentChunkStartIndex","cc","cc2","level","parenLevel","emitFrom","emitChunk","force","fromCharCode","chunker","end","furthestReachedEnd","furthestChar","Parser","parsers","expect","expectChar","getDebugInfo","parseList","currentIndex","returnNodes","parser","additionalData","globalVars","modifyVars","ignored","preText","disablePluginRule","serializeVars","preProcessors","getPreProcessors","process","banner","contentsIgnoredChars","primary","endInfo","processImports","extendRule","definition","declaration","variableCall","entities","atrule","foundSemiColon","mixinLookup","quoted","forceEscaped","isEscaped","customFuncCall","stop","ieAlpha","boolean","prevArgs","isSemiColonSeparated","argsComma","argsSemiColon","assignment","literal","dimension","unicodeDescriptor","entity","ch","variableCurly","curly","propertyCurly","colorKeyword","ud","javascript","js","escape","parsedName","inValue","ruleLookups","isRule","getLookup","hasParens","elem","elemIndex","re","isCall","expressionContainsNamed","nameLoop","expressions","hasSep","cond","argInfo","conditions","block","lookupValue","attribute","slashedCombinator","isLess","when","blockRuleset","hasDR","ruleProperty","permissiveValue","anonymousValue","untilTokens","done","testCurrentChar","dir","importOptions","mediaFeatures","o","optionName","importOption","mediaFeature","pluginArgs","nonVendorSpecificName","hasIdentifier","hasExpression","hasUnknown","hasBlock","sub","addition","multiplication","operation","operand","needsParens","logical","next","conditionAnd","negatedCondition","parenthesisCondition","atomicCondition","body","me","tryConditionFollowedByParenthesis","delim","simpleProperty","If","trueValue","falseValue","isdefined","colorFunctions","boolean$1","clamp","hsla","origColor","hsl","number$1","rgba","size","m1_1","m2_1","hue","hsv","hsva","vs","floor","perm","saturation","lightness","hsvhue","hsvsaturation","hsvvalue","red","green","blue","luminance","saturate","amount","method","desaturate","lighten","darken","fadein","fadeout","fade","spin","mix","color1","color2","weight","w","w1","w2","greyscale","contrast","dark","light","threshold","t","argb","tint","shade","colorBlend","mode","cb","cs","cr","ab","as","colorBlendModeFunctions","multiply","screen","overlay","softlight","sqrt","hardlight","difference","abs","exclusion","average","negation","f$1","getItemsFromNode","list","_SELF","expr","_i","values","range","step","stepValue","each","rs","iterator","tryEval","valueName","keyName","indexName","MathHelper","fn","mathFunctions","ceil","tan","sin","cos","atan","asin","acos","fraction","num","minMax","isMin","currentUnified","referenceUnified","unitStatic","unitClone","order","number","convert","pi","mod","y","percentage","evaluated","encodeURI","pattern","flags","_loop_1","token","encodeURIComponent","isa","Type","isunit","types","isruleset","iscolor","isnumber","isstring","iskeyword","isurl","ispixel","ispercentage","isem","fallback","functionThis","mimetypeNode","filePathNode","mimetype","filePath","entryPath","fragmentStart","rawBuffer","useBase64","mimeLookup","charsetLookup","fileSync","loadFileSync","buf","encodeBase64","uri","dataUri","direction","stops","gradientDirectionSvg","position","positionValue","gradientType","rectangleDimension","renderEnv","directionValue","throwArgumentDescriptor","transformTree","evaldRoot","evalEnv","visitorIterator","visitors$1","preEvalVisitors","first","isPreEvalVisitor","isPreVisitor","pm","PluginManager","postProcessors","installedPlugins","pluginCache","Loader","PluginLoader","addPlugins","install","addVisitor","addPreProcessor","preProcessor","priority","indexToInsertAt","addPostProcessor","postProcessor","manager","getPostProcessors","getVisitors","PluginManagerFactory","newFactory","options$1","logger","parseNodeVersion_1","major","minor","patch","pre","build","lessRoot","sourceMapOutput","sourceMapBuilder","parseTree","importManager","SourceMapBuilder","ParseTree","toCSSOptions","sourceMap","file","getExternalSourceMap","files","rootFilename","SourceMapOutput","contentsIgnoredCharsMap","contentsMap","sourceMapFilename","sourceMapURL","outputFilename","sourceMapOutputFilename","sourceMapBasepath","sourceMapRootpath","outputSourceFiles","sourceMapGenerator","sourceMapFileInline","disableSourcemapAnnotation","sourceMapInputFilename","normalizeFilename","removeBasepath","getCSSAppendage","setExternalSourceMap","isInline","getSourceMapURL","getOutputFilename","getInputFilename","_css","_rootNode","_contentsMap","_contentsIgnoredCharsMap","_sourceMapFilename","_outputFilename","_sourceMapBasepath","_sourceMapRootpath","_outputSourceFiles","_sourceMapGeneratorConstructor","getSourceMapGenerator","_lineNumber","_column","sourceLines","columns","sourceColumns","inputSource","_sourceMapGenerator","addMapping","generated","source","sourceRoot","setSourceContent","sourceMapContent","stringify","toJSON","ImportManager","rootFileInfo","mime","queue","pluginLoader","fileParsedFunc","importedEqualsRoot","newFileInfo","loadedFile","promise","loadFileCallback","resolvedFilename","newEnv","syncImport","loadPluginSync","loadPlugin","loadFile","then","render","self_1","Promise","resolve","reject","Render","context_1","pluginManager_1","reUsePluginManager","imports_1","evalResult","fileContent","initial","ctor","api","fileCache","doXHR","errback","xhr","XMLHttpRequest","async","isFileProtocol","fileAsync","handleResponse","status","responseText","getResponseHeader","overrideMimeType","open","setRequestHeader","send","onreadystatechange","readyState","supports","clearFileCache","location","useFileCache","lessText","webInfo","lastModified","Date","FM","log","fulfill","catch","ErrorReporting","rootHref","errorReporting","errors","errorline","classname","logLevel","errorConsole","timer","filenameNoPath","className","innerHTML","style","env","setInterval","replaceChild","clearInterval","errorHTML","remove","removeErrorHTML","depends","lint","insecure","protocol","poll","hostname","port","onReady","addDefaultOptions","LESS_PLUGINS","loggers","console","LogListener","cache","localStorage","setCSS","setItem","getCSS","getItem","timestamp","valueOf","Cache","imageSize","imageFunctions","ImageSize","typePattern","thisArg","curryArgs","loadStyles","instanceOptions","loadStyleSheet","reload","remaining","local","loadInitialFileCallback","loadStyleSheets","sheets","watch","watchMode","watchTimer","unwatch","registerStylesheetsImmediately","links","rel","registerStylesheets","record","refresh","startTime","endTime","totalMilliseconds","remainingSheets","refreshStyles","resolveOrReject","pageLoadFinished","factory"],"sourceRoot":""}